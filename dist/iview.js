/*!
{
  "copywrite": "",
  "date": "2019-02-20T21:10:26.900Z",
  "describe": "",
  "description": "A high quality UI components Library with Vue.js",
  "file": "iview.js",
  "hash": "96b15cfd5846450a6870",
  "license": "MIT",
  "version": "3.0.0-alpha.8"
}
*/
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("vue"), require("@fortawesome/pro-solid-svg-icons"), require("@fortawesome/pro-regular-svg-icons"), require("@fortawesome/pro-light-svg-icons"), require("@fortawesome/fontawesome-svg-core"), require("@fortawesome/vue-fontawesome"));
	else if(typeof define === 'function' && define.amd)
		define("iview", ["vue", "@fortawesome/pro-solid-svg-icons", "@fortawesome/pro-regular-svg-icons", "@fortawesome/pro-light-svg-icons", "@fortawesome/fontawesome-svg-core", "@fortawesome/vue-fontawesome"], factory);
	else if(typeof exports === 'object')
		exports["iview"] = factory(require("vue"), require("@fortawesome/pro-solid-svg-icons"), require("@fortawesome/pro-regular-svg-icons"), require("@fortawesome/pro-light-svg-icons"), require("@fortawesome/fontawesome-svg-core"), require("@fortawesome/vue-fontawesome"));
	else
		root["iview"] = factory(root["vue"], root["@fortawesome/pro-solid-svg-icons"], root["@fortawesome/pro-regular-svg-icons"], root["@fortawesome/pro-light-svg-icons"], root["@fortawesome/fontawesome-svg-core"], root["@fortawesome/vue-fontawesome"]);
})((function () {
  'use strict';

  if (typeof self !== 'undefined') {
    return self;
  }

  if (typeof window !== 'undefined') {
    return window;
  }

  if (typeof global !== 'undefined') {
    return global;
  }

  return Function('return this')();
}()), function(__WEBPACK_EXTERNAL_MODULE__5__, __WEBPACK_EXTERNAL_MODULE__378__, __WEBPACK_EXTERNAL_MODULE__379__, __WEBPACK_EXTERNAL_MODULE__380__, __WEBPACK_EXTERNAL_MODULE__436__, __WEBPACK_EXTERNAL_MODULE__437__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 428);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * js-logger - http://github.com/jonnyreeves/js-logger
 * Jonny Reeves, http://jonnyreeves.co.uk/
 * js-logger may be freely distributed under the MIT license.
 */
(function (global) {
	"use strict";

	// Top level module for the global, static logger instance.
	var Logger = { };

	// For those that are at home that are keeping score.
	Logger.VERSION = "1.6.0";

	// Function which handles all incoming log messages.
	var logHandler;

	// Map of ContextualLogger instances by name; used by Logger.get() to return the same named instance.
	var contextualLoggersByNameMap = {};

	// Polyfill for ES5's Function.bind.
	var bind = function(scope, func) {
		return function() {
			return func.apply(scope, arguments);
		};
	};

	// Super exciting object merger-matron 9000 adding another 100 bytes to your download.
	var merge = function () {
		var args = arguments, target = args[0], key, i;
		for (i = 1; i < args.length; i++) {
			for (key in args[i]) {
				if (!(key in target) && args[i].hasOwnProperty(key)) {
					target[key] = args[i][key];
				}
			}
		}
		return target;
	};

	// Helper to define a logging level object; helps with optimisation.
	var defineLogLevel = function(value, name) {
		return { value: value, name: name };
	};

	// Predefined logging levels.
	Logger.TRACE = defineLogLevel(1, 'TRACE');
	Logger.DEBUG = defineLogLevel(2, 'DEBUG');
	Logger.INFO = defineLogLevel(3, 'INFO');
	Logger.TIME = defineLogLevel(4, 'TIME');
	Logger.WARN = defineLogLevel(5, 'WARN');
	Logger.ERROR = defineLogLevel(8, 'ERROR');
	Logger.OFF = defineLogLevel(99, 'OFF');

	// Inner class which performs the bulk of the work; ContextualLogger instances can be configured independently
	// of each other.
	var ContextualLogger = function(defaultContext) {
		this.context = defaultContext;
		this.setLevel(defaultContext.filterLevel);
		this.log = this.info;  // Convenience alias.
	};

	ContextualLogger.prototype = {
		// Changes the current logging level for the logging instance.
		setLevel: function (newLevel) {
			// Ensure the supplied Level object looks valid.
			if (newLevel && "value" in newLevel) {
				this.context.filterLevel = newLevel;
			}
		},
		
		// Gets the current logging level for the logging instance
		getLevel: function () {
			return this.context.filterLevel;
		},

		// Is the logger configured to output messages at the supplied level?
		enabledFor: function (lvl) {
			var filterLevel = this.context.filterLevel;
			return lvl.value >= filterLevel.value;
		},

		trace: function () {
			this.invoke(Logger.TRACE, arguments);
		},

		debug: function () {
			this.invoke(Logger.DEBUG, arguments);
		},

		info: function () {
			this.invoke(Logger.INFO, arguments);
		},

		warn: function () {
			this.invoke(Logger.WARN, arguments);
		},

		error: function () {
			this.invoke(Logger.ERROR, arguments);
		},

		time: function (label) {
			if (typeof label === 'string' && label.length > 0) {
				this.invoke(Logger.TIME, [ label, 'start' ]);
			}
		},

		timeEnd: function (label) {
			if (typeof label === 'string' && label.length > 0) {
				this.invoke(Logger.TIME, [ label, 'end' ]);
			}
		},

		// Invokes the logger callback if it's not being filtered.
		invoke: function (level, msgArgs) {
			if (logHandler && this.enabledFor(level)) {
				logHandler(msgArgs, merge({ level: level }, this.context));
			}
		}
	};

	// Protected instance which all calls to the to level `Logger` module will be routed through.
	var globalLogger = new ContextualLogger({ filterLevel: Logger.OFF });

	// Configure the global Logger instance.
	(function() {
		// Shortcut for optimisers.
		var L = Logger;

		L.enabledFor = bind(globalLogger, globalLogger.enabledFor);
		L.trace = bind(globalLogger, globalLogger.trace);
		L.debug = bind(globalLogger, globalLogger.debug);
		L.time = bind(globalLogger, globalLogger.time);
		L.timeEnd = bind(globalLogger, globalLogger.timeEnd);
		L.info = bind(globalLogger, globalLogger.info);
		L.warn = bind(globalLogger, globalLogger.warn);
		L.error = bind(globalLogger, globalLogger.error);

		// Don't forget the convenience alias!
		L.log = L.info;
	}());

	// Set the global logging handler.  The supplied function should expect two arguments, the first being an arguments
	// object with the supplied log messages and the second being a context object which contains a hash of stateful
	// parameters which the logging function can consume.
	Logger.setHandler = function (func) {
		logHandler = func;
	};

	// Sets the global logging filter level which applies to *all* previously registered, and future Logger instances.
	// (note that named loggers (retrieved via `Logger.get`) can be configured independently if required).
	Logger.setLevel = function(level) {
		// Set the globalLogger's level.
		globalLogger.setLevel(level);

		// Apply this level to all registered contextual loggers.
		for (var key in contextualLoggersByNameMap) {
			if (contextualLoggersByNameMap.hasOwnProperty(key)) {
				contextualLoggersByNameMap[key].setLevel(level);
			}
		}
	};

	// Gets the global logging filter level
	Logger.getLevel = function() {
		return globalLogger.getLevel();
	};

	// Retrieve a ContextualLogger instance.  Note that named loggers automatically inherit the global logger's level,
	// default context and log handler.
	Logger.get = function (name) {
		// All logger instances are cached so they can be configured ahead of use.
		return contextualLoggersByNameMap[name] ||
			(contextualLoggersByNameMap[name] = new ContextualLogger(merge({ name: name }, globalLogger.context)));
	};

	// CreateDefaultHandler returns a handler function which can be passed to `Logger.setHandler()` which will
	// write to the window's console object (if present); the optional options object can be used to customise the
	// formatter used to format each log message.
	Logger.createDefaultHandler = function (options) {
		options = options || {};

		options.formatter = options.formatter || function defaultMessageFormatter(messages, context) {
			// Prepend the logger's name to the log message for easy identification.
			if (context.name) {
				messages.unshift("[" + context.name + "]");
			}
		};

		// Map of timestamps by timer labels used to track `#time` and `#timeEnd()` invocations in environments
		// that don't offer a native console method.
		var timerStartTimeByLabelMap = {};

		// Support for IE8+ (and other, slightly more sane environments)
		var invokeConsoleMethod = function (hdlr, messages) {
			Function.prototype.apply.call(hdlr, console, messages);
		};

		// Check for the presence of a logger.
		if (typeof console === "undefined") {
			return function () { /* no console */ };
		}

		return function(messages, context) {
			// Convert arguments object to Array.
			messages = Array.prototype.slice.call(messages);

			var hdlr = console.log;
			var timerLabel;

			if (context.level === Logger.TIME) {
				timerLabel = (context.name ? '[' + context.name + '] ' : '') + messages[0];

				if (messages[1] === 'start') {
					if (console.time) {
						console.time(timerLabel);
					}
					else {
						timerStartTimeByLabelMap[timerLabel] = new Date().getTime();
					}
				}
				else {
					if (console.timeEnd) {
						console.timeEnd(timerLabel);
					}
					else {
						invokeConsoleMethod(hdlr, [ timerLabel + ': ' +
							(new Date().getTime() - timerStartTimeByLabelMap[timerLabel]) + 'ms' ]);
					}
				}
			}
			else {
				// Delegate through to custom warn/error loggers if present on the console.
				if (context.level === Logger.WARN && console.warn) {
					hdlr = console.warn;
				} else if (context.level === Logger.ERROR && console.error) {
					hdlr = console.error;
				} else if (context.level === Logger.INFO && console.info) {
					hdlr = console.info;
				} else if (context.level === Logger.DEBUG && console.debug) {
					hdlr = console.debug;
				} else if (context.level === Logger.TRACE && console.trace) {
					hdlr = console.trace;
				}

				options.formatter(messages, context);
				invokeConsoleMethod(hdlr, messages);
			}
		};
	};

	// Configure and example a Default implementation which writes to the `window.console` (if present).  The
	// `options` hash can be used to configure the default logLevel and provide a custom message formatter.
	Logger.useDefaults = function(options) {
		Logger.setLevel(options && options.defaultLevel || Logger.DEBUG);
		Logger.setHandler(Logger.createDefaultHandler(options));
	};

	// Export to popular environments boilerplate.
	if (true) {
		!(__WEBPACK_AMD_DEFINE_FACTORY__ = (Logger),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	}
	else {}
}(this));


/***/ }),
/* 1 */
/***/ (function(module, exports) {

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

module.exports = _interopRequireDefault;

/***/ }),
/* 2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return normalizeComponent; });
/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

function normalizeComponent (
  scriptExports,
  render,
  staticRenderFns,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier, /* server only */
  shadowMode /* vue-cli only */
) {
  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // render functions
  if (render) {
    options.render = render
    options.staticRenderFns = staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = 'data-v-' + scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = shadowMode
      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }
      : injectStyles
  }

  if (hook) {
    if (options.functional) {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functioal component in vue file
      var originalRender = options.render
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return originalRender(h, context)
      }
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    }
  }

  return {
    exports: scriptExports,
    options: options
  }
}


/***/ }),
/* 3 */
/***/ (function(module, exports) {

function _newArrowCheck(innerThis, boundThis) {
  if (innerThis !== boundThis) {
    throw new TypeError("Cannot instantiate an arrow function");
  }
}

module.exports = _newArrowCheck;

/***/ }),
/* 4 */
/***/ (function(module, exports) {

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

module.exports = _defineProperty;

/***/ }),
/* 5 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE__5__;

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.oneOf = oneOf;
exports.camelcaseToHyphen = camelcaseToHyphen;
exports.getScrollBarSize = getScrollBarSize;
exports.getStyle = getStyle;
exports.firstUpperCase = firstUpperCase;
exports.warnProp = warnProp;
exports.deepCopy = deepCopy;
exports.scrollTop = scrollTop;
exports.findComponentUpward = findComponentUpward;
exports.findComponentDownward = findComponentDownward;
exports.findComponentsDownward = findComponentsDownward;
exports.findComponentsUpward = findComponentsUpward;
exports.findBrothersComponents = findBrothersComponents;
exports.hasClass = hasClass;
exports.addClass = addClass;
exports.removeClass = removeClass;
exports.setMatchMedia = setMatchMedia;
exports.dimensionMap = exports.MutationObserver = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _vue = _interopRequireDefault(__webpack_require__(5));

var _noop = _interopRequireDefault(__webpack_require__(13));

var logger = __webpack_require__(0).get("iview:utils:assist");

var isServer = _vue.default.prototype.$isServer; // 判断参数是否是其中之一

function oneOf(value, validList) {
  for (var i = 0; i < validList.length; i += 1) {
    if (value === validList[i]) {
      return true;
    }
  }

  return false;
}

function camelcaseToHyphen(str) {
  return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();
} // For Modal scrollBar hidden


var cached;

function getScrollBarSize(fresh) {
  if (isServer) {
    return 0;
  }

  if (fresh || cached === undefined) {
    var inner = document.createElement('div');
    inner.style.width = '100%';
    inner.style.height = '200px';
    var outer = document.createElement('div');
    var outerStyle = outer.style;
    outerStyle.position = 'absolute';
    outerStyle.top = '0';
    outerStyle.left = '0';
    outerStyle.pointerEvents = 'none';
    outerStyle.visibility = 'hidden';
    outerStyle.width = '200px';
    outerStyle.height = '150px';
    outerStyle.overflow = 'hidden';
    outer.appendChild(inner);
    document.body.appendChild(outer);
    var widthContained = inner.offsetWidth;
    outer.style.overflow = 'scroll';
    var widthScroll = inner.offsetWidth;

    if (widthContained === widthScroll) {
      widthScroll = outer.clientWidth;
    }

    document.body.removeChild(outer);
    cached = widthContained - widthScroll;
  }

  return cached;
} // watch DOM change


var MutationObserver = isServer ? false : window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver || false;
exports.MutationObserver = MutationObserver;
var SPECIAL_CHARS_REGEXP = /([:_-]+(.))/g;
var MOZ_HACK_REGEXP = /^moz([A-Z])/;

function camelCase(name) {
  var _this = this;

  return name.replace(SPECIAL_CHARS_REGEXP, function (_, separator, letter, offset) {
    (0, _newArrowCheck2.default)(this, _this);
    return offset ? letter.toUpperCase() : letter;
  }.bind(this)).replace(MOZ_HACK_REGEXP, 'Moz$1');
} // getStyle


function getStyle(element, style) {
  var styleName = style;

  if (!element || !styleName) {
    return null;
  }

  styleName = camelCase(styleName);

  if (styleName === 'float') {
    styleName = 'cssFloat';
  }

  try {
    var computed = document.defaultView.getComputedStyle(element, '');
    return element.style[styleName] || computed ? computed[styleName] : null;
  } catch (e) {
    return element.style[styleName];
  }
} // firstUpperCase


function firstUpperCase(str) {
  return str.toString()[0].toUpperCase() + str.toString().slice(1);
}

// Warn
function warnProp(component, prop, cType, wType) {
  var correctType = firstUpperCase(cType);
  var wrongType = firstUpperCase(wType);
  /* eslint-disable-next-line no-console */

  console.error("[iView warn]: Invalid prop: type check failed for prop ".concat(prop, ". Expected ").concat(correctType, ", got ").concat(wrongType, ". (found in component: ").concat(component, ")"));
}

function typeOf(obj) {
  var toString = Object.prototype.toString;
  var map = {
    '[object Boolean]': 'boolean',
    '[object Number]': 'number',
    '[object String]': 'string',
    '[object Function]': 'function',
    '[object Array]': 'array',
    '[object Date]': 'date',
    '[object RegExp]': 'regExp',
    '[object Undefined]': 'undefined',
    '[object Null]': 'null',
    '[object Object]': 'object'
  };
  return map[toString.call(obj)];
} // deepCopy


function deepCopy(data) {
  var t = typeOf(data);
  var o;

  if (t === 'array') {
    o = [];
  } else if (t === 'object') {
    o = {};
  } else {
    return data;
  }

  if (t === 'array') {
    for (var i = 0; i < data.length; i += 1) {
      o.push(deepCopy(data[i]));
    }
  } else if (t === 'object') {
    /* eslint-disable-next-line guard-for-in,no-restricted-syntax */
    for (var _i in data) {
      o[_i] = deepCopy(data[_i]);
    }
  }

  return o;
}

// scrollTop animation
function scrollTop(el) {
  var from = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  var to = arguments.length > 2 ? arguments[2] : undefined;
  var duration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 500;

  if (!window.requestAnimationFrame) {
    window.requestAnimationFrame = window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame || function requestAnimationFrame(callback) {
      return window.setTimeout(callback, 1000 / 60);
    };
  }

  var difference = Math.abs(from - to);
  var step = Math.ceil(difference / duration * 50);

  function scroll(start, end, scrollStep) {
    var _this2 = this;

    if (start === end) {
      return;
    }

    var d = start + scrollStep > end ? end : start + scrollStep;

    if (start > end) {
      d = start - scrollStep < end ? end : start - scrollStep;
    }

    if (el === window) {
      window.scrollTo(d, d);
    } else {
      el.scrollTop = d;
    }

    window.requestAnimationFrame(function () {
      (0, _newArrowCheck2.default)(this, _this2);
      return scroll(d, end, scrollStep);
    }.bind(this));
  }

  scroll(from, to, step);
} // Find components upward


function findComponentUpward(context, componentName, names) {
  var componentNames = names;

  if (typeof componentName === 'string') {
    componentNames = [componentName];
  } else {
    componentNames = componentName;
  }

  var parent = context.$parent;
  var optionName = parent.$options.name;

  while (parent && (!optionName || componentNames.indexOf(optionName) < 0)) {
    parent = parent.$parent;

    if (parent) {
      optionName = parent.$options.name;
    }
  }

  return parent;
}

// Find component downward
function findComponentDownward(context, componentName) {
  var childrens = context.$children;
  var children = null;

  if (childrens.length) {
    /* eslint-disable-next-line no-restricted-syntax */
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
      for (var _iterator = childrens[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var child = _step.value;
        var name = child.$options.name;

        if (name === componentName) {
          children = child;
          break;
        } else {
          children = findComponentDownward(child, componentName);

          if (children) {
            break;
          }
        }
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
  }

  return children;
} // Find components downward


function findComponentsDownward(context, componentName) {
  var _this3 = this;

  return context.$children.reduce(function (components, child) {
    (0, _newArrowCheck2.default)(this, _this3);

    if (child.$options.name === componentName) {
      components.push(child);
    }

    var foundChilds = findComponentsDownward(child, componentName);
    return components.concat(foundChilds);
  }.bind(this), []);
} // Find components upward


function findComponentsUpward(context, componentName) {
  var parents = [];
  var parent = context.$parent;

  if (parent) {
    if (parent.$options.name === componentName) {
      parents.push(parent);
    }

    return parents.concat(findComponentsUpward(parent, componentName));
  }

  return [];
} // Find brothers components


function findBrothersComponents(context, componentName) {
  var _this4 = this;

  var exceptMe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
  var res = context.$parent.$children.filter(function (item) {
    (0, _newArrowCheck2.default)(this, _this4);
    return item.$options.name === componentName;
  }.bind(this));
  /* eslint-disable-next-line no-underscore-dangle */

  var index = res.findIndex(function (item) {
    (0, _newArrowCheck2.default)(this, _this4);
    return item._uid === context._uid;
  }.bind(this));

  if (exceptMe) {
    res.splice(index, 1);
  }

  return res;
}
/* istanbul ignore next */


var trim = function trim(string) {
  return (string || '').replace(/^[\s\uFEFF]+|[\s\uFEFF]+$/g, '');
};
/* istanbul ignore next */


function hasClass(el, cls) {
  if (!el || !cls) {
    return false;
  }

  if (cls.indexOf(' ') !== -1) {
    throw new Error('className should not contain space.');
  }

  if (el.classList) {
    return el.classList.contains(cls);
  }

  return " ".concat(el.className, " ").indexOf(" ".concat(cls, " ")) > -1;
}
/* istanbul ignore next */


function addClass(el, cls) {
  if (!el) {
    return;
  }

  var curClass = el.className;
  var classes = (cls || '').split(' ');

  for (var i = 0, j = classes.length; i < j; i += 1) {
    var clsName = classes[i];

    if (!clsName) {
      /* eslint-disable-next-line no-continue */
      continue;
    }

    if (el.classList) {
      el.classList.add(clsName);
    } else if (!hasClass(el, clsName)) {
      curClass += " ".concat(clsName);
    }
  }

  if (!el.classList) {
    el.className = curClass;
  }
}
/* istanbul ignore next */


function removeClass(el, cls) {
  if (!el || !cls) {
    return;
  }

  var classes = cls.split(' ');
  var curClass = " ".concat(el.className, " ");

  for (var i = 0, j = classes.length; i < j; i += 1) {
    var clsName = classes[i];

    if (!clsName) {
      /* eslint-disable-next-line no-continue */
      continue;
    }

    if (el.classList) {
      el.classList.remove(clsName);
    } else if (hasClass(el, clsName)) {
      curClass = curClass.replace(" ".concat(clsName, " "), ' ');
    }
  }

  if (!el.classList) {
    el.className = trim(curClass);
  }
}

var dimensionMap = {
  lg: '1200px',
  md: '992px',
  sm: '768px',
  xl: '1600px',
  xs: '480px'
};
exports.dimensionMap = dimensionMap;

function setMatchMedia() {
  var _this5 = this;

  if (typeof window !== 'undefined') {
    var matchMediaPolyfill = function matchMediaPolyfill(mediaQuery) {
      (0, _newArrowCheck2.default)(this, _this5);
      return {
        matches: false,
        media: mediaQuery,
        off: _noop.default,
        on: _noop.default
      };
    }.bind(this);

    window.matchMedia = window.matchMedia || matchMediaPolyfill;
  }
}

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = not;

var logger = __webpack_require__(0).get("iview:Assets:not");

function not(value) {
  return !value;
}

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _vue = _interopRequireDefault(__webpack_require__(5));

var _not = _interopRequireDefault(__webpack_require__(7));

var logger = __webpack_require__(0).get("iview:locale:lang");

var isServer = _vue.default.prototype.$isServer;

function _default(lang) {
  if ((0, _not.default)(isServer)) {
    if (typeof iview !== 'undefined') {
      if ((0, _not.default)('langs' in iview)) {
        iview.langs = {};
      }

      iview.langs[lang.i.locale] = lang;
    }
  }
}

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(15));

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _not = _interopRequireDefault(__webpack_require__(7));

var logger = __webpack_require__(0).get("iview:mixins:emitter");

function _broadcast(componentName, eventName, params) {
  var _this = this;

  /* eslint-disable-next-line babel/no-invalid-this */
  this.$children.forEach(function (child) {
    (0, _newArrowCheck2.default)(this, _this);
    var name = child.$options.name;

    if (name === componentName) {
      child.$emit.apply(child, (0, _toConsumableArray2.default)([eventName].concat(params)));
    } else {
      // Todo If params is an empty array, the received will be undefined
      _broadcast.apply(child, [componentName, eventName].concat([params]));
    }
  }.bind(this));
}

var _default = {
  methods: {
    broadcast: function broadcast(componentName, eventName, params) {
      _broadcast.call(this, componentName, eventName, params);
    },
    dispatch: function dispatch(componentName, eventName, params) {
      var parent = this.$parent || this.$root;
      var optName = parent.$options.name;

      while (parent && ((0, _not.default)(optName) || optName !== componentName)) {
        parent = parent.$parent;

        if (parent) {
          optName = parent.$options.name;
        }
      }

      if (parent) {
        var _parent;

        (_parent = parent).$emit.apply(_parent, (0, _toConsumableArray2.default)([eventName].concat(params)));
      }
    }
  }
};
exports.default = _default;

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _locale = __webpack_require__(383);

var logger = __webpack_require__(0).get("iview:mixins:locale");

var _default = {
  methods: {
    t: function t() {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _locale.t.apply(this, args);
    }
  }
};
exports.default = _default;

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

var defineProperty = __webpack_require__(4);

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      defineProperty(target, key, source[key]);
    });
  }

  return target;
}

module.exports = _objectSpread;

/***/ }),
/* 12 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _icon_vue_vue_type_template_id_bbbaab2a___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(281);
/* harmony import */ var _icon_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(59);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _icon_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _icon_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _icon_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _icon_vue_vue_type_template_id_bbbaab2a___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _icon_vue_vue_type_template_id_bbbaab2a___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 13 */
/***/ (function(module, exports) {

/**
 * This method returns `undefined`.
 *
 * @static
 * @memberOf _
 * @since 2.3.0
 * @category Util
 * @example
 *
 * _.times(2, _.noop);
 * // => [undefined, undefined]
 */
function noop() {
  // No operation performed.
}

module.exports = noop;


/***/ }),
/* 14 */
/***/ (function(module, exports) {

/**
 * This method returns a new empty array.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Array} Returns the new empty array.
 * @example
 *
 * var arrays = _.times(2, _.stubArray);
 *
 * console.log(arrays);
 * // => [[], []]
 *
 * console.log(arrays[0] === arrays[1]);
 * // => false
 */
function stubArray() {
  return [];
}

module.exports = stubArray;


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

var arrayWithoutHoles = __webpack_require__(464);

var iterableToArray = __webpack_require__(465);

var nonIterableSpread = __webpack_require__(466);

function _toConsumableArray(arr) {
  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();
}

module.exports = _toConsumableArray;

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _iterator = __webpack_require__(543);

var _iterator2 = _interopRequireDefault(_iterator);

var _symbol = __webpack_require__(555);

var _symbol2 = _interopRequireDefault(_symbol);

var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
  return typeof obj === "undefined" ? "undefined" : _typeof(obj);
} : function (obj) {
  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
};

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TYPE_VALUE_RESOLVER_MAP = exports.RANGE_SEPARATOR = exports.DEFAULT_FORMATS = exports.formatDateLabels = exports.initTimeDate = exports.nextMonth = exports.prevMonth = exports.siblingMonth = exports.getFirstDayOfMonth = exports.getDayCountOfMonth = exports.parseDate = exports.formatDate = exports.isInRange = exports.clearHours = exports.toDate = void 0;

var _slicedToArray2 = _interopRequireDefault(__webpack_require__(20));

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _construct2 = _interopRequireDefault(__webpack_require__(517));

var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(15));

var _date = _interopRequireDefault(__webpack_require__(519));

var _this = void 0;

var logger = __webpack_require__(0).get("iview:components:date-picker:util");

var toDate = function _toDate(date) {
  var dateClone = new Date(date); // IE patch start (#1422)

  if (Number.isNaN(dateClone.getTime()) && typeof date === 'string') {
    dateClone = date.split('-').map(Number);
    dateClone[1] += 1;
    dateClone = (0, _construct2.default)(Date, (0, _toConsumableArray2.default)(dateClone));
  } // IE patch end


  if (Number.isNaN(dateClone.getTime())) {
    return null;
  }

  return dateClone;
};

exports.toDate = toDate;

var clearHours = function _clearHours(time) {
  var cloneDate = new Date(time);
  cloneDate.setHours(0, 0, 0, 0);
  return cloneDate.getTime();
};

exports.clearHours = clearHours;

var isInRange = function isInRange(time, a, b) {
  (0, _newArrowCheck2.default)(this, _this);

  if (!a || !b) {
    return false;
  }

  var _sort = [a, b].sort(),
      _sort2 = (0, _slicedToArray2.default)(_sort, 2),
      start = _sort2[0],
      end = _sort2[1];

  return time >= start && time <= end;
}.bind(void 0);

exports.isInRange = isInRange;

var formatDate = function _formatDate(date, format) {
  var realDate = toDate(date);

  if (!realDate) {
    return '';
  }

  return _date.default.format(realDate, format || 'yyyy-MM-dd');
};

exports.formatDate = formatDate;

var parseDate = function _parseDate(string, format) {
  return _date.default.parse(string, format || 'yyyy-MM-dd');
};

exports.parseDate = parseDate;

var getDayCountOfMonth = function _getDayCountOfMonth(year, month) {
  return new Date(year, month + 1, 0).getDate();
};

exports.getDayCountOfMonth = getDayCountOfMonth;

var getFirstDayOfMonth = function _getFirstDayOfMonth(date) {
  var temp = new Date(date.getTime());
  temp.setDate(1);
  return temp.getDay();
};

exports.getFirstDayOfMonth = getFirstDayOfMonth;

var siblingMonth = function _siblingMonth(src, diff) {
  var temp = new Date(src); // lets copy it so we don't change the original

  var newMonth = temp.getMonth() + diff;
  var newMonthDayCount = getDayCountOfMonth(temp.getFullYear(), newMonth);

  if (newMonthDayCount < temp.getDate()) {
    temp.setDate(newMonthDayCount);
  }

  temp.setMonth(newMonth);
  return temp;
};

exports.siblingMonth = siblingMonth;

var prevMonth = function _prevMonth(src) {
  return siblingMonth(src, -1);
};

exports.prevMonth = prevMonth;

var nextMonth = function _nextMonth(src) {
  return siblingMonth(src, 1);
};

exports.nextMonth = nextMonth;

var initTimeDate = function _initTimeDate() {
  var date = new Date();
  date.setHours(0);
  date.setMinutes(0);
  date.setSeconds(0);
  return date;
};

exports.initTimeDate = initTimeDate;

var formatDateLabels = function iife() {
  var _this2 = this;

  /*
      Formats:
      yyyy - 4 digit year
      m - month, numeric, 1 - 12
      mm - month, numeric, 01 - 12
      mmm - month, 3 letters, as in `toLocaleDateString`
      Mmm - month, 3 letters, capitalize the return from `toLocaleDateString`
      mmmm - month, full name, as in `toLocaleDateString`
      Mmmm - month, full name, capitalize the return from `toLocaleDateString`
    */
  var formats = {
    m: function m(date) {
      (0, _newArrowCheck2.default)(this, _this2);
      return date.getMonth() + 1;
    }.bind(this),
    mm: function mm(date) {
      (0, _newArrowCheck2.default)(this, _this2);
      return "0".concat(date.getMonth() + 1).slice(-2);
    }.bind(this),
    mmm: function mmm(date, locale) {
      (0, _newArrowCheck2.default)(this, _this2);
      var monthName = date.toLocaleDateString(locale, {
        month: 'long'
      });
      return monthName.slice(0, 3);
    }.bind(this),
    Mmm: function Mmm(date, locale) {
      (0, _newArrowCheck2.default)(this, _this2);
      var monthName = date.toLocaleDateString(locale, {
        month: 'long'
      });
      return (monthName[0].toUpperCase() + monthName.slice(1).toLowerCase()).slice(0, 3);
    }.bind(this),
    mmmm: function mmmm(date, locale) {
      (0, _newArrowCheck2.default)(this, _this2);
      return date.toLocaleDateString(locale, {
        month: 'long'
      });
    }.bind(this),
    Mmmm: function Mmmm(date, locale) {
      (0, _newArrowCheck2.default)(this, _this2);
      var monthName = date.toLocaleDateString(locale, {
        month: 'long'
      });
      return monthName[0].toUpperCase() + monthName.slice(1).toLowerCase();
    }.bind(this),
    yyyy: function yyyy(date) {
      (0, _newArrowCheck2.default)(this, _this2);
      return date.getFullYear();
    }.bind(this)
  };
  var formatRegex = new RegExp(['yyyy', 'Mmmm', 'mmmm', 'Mmm', 'mmm', 'mm', 'm'].join('|'), 'g');
  return function _formatDateLabels(locale, format, date) {
    var _this3 = this;

    var componetsRegex = /(\[[^\]]+])([^[\]]+)(\[[^\]]+])/;
    var components = format.match(componetsRegex).slice(1);
    var separator = components[1];
    var labels = [components[0], components[2]].map(function (component) {
      var _this4 = this;

      (0, _newArrowCheck2.default)(this, _this3);
      var label = component.replace(/\[[^\]]+]/, function (str) {
        var _this5 = this;

        (0, _newArrowCheck2.default)(this, _this4);
        return str.slice(1, -1).replace(formatRegex, function (match) {
          (0, _newArrowCheck2.default)(this, _this5);
          return formats[match](date, locale);
        }.bind(this));
      }.bind(this));
      return {
        label: label,
        type: component.indexOf('yy') !== -1 ? 'year' : 'month'
      };
    }.bind(this));
    return {
      labels: labels,
      separator: separator
    };
  };
}(); // Parsers and Formaters


exports.formatDateLabels = formatDateLabels;
var DEFAULT_FORMATS = {
  date: 'yyyy-MM-dd',
  daterange: 'yyyy-MM-dd',
  datetime: 'yyyy-MM-dd HH:mm:ss',
  datetimerange: 'yyyy-MM-dd HH:mm:ss',
  month: 'yyyy-MM',
  time: 'HH:mm:ss',
  timerange: 'HH:mm:ss',
  year: 'yyyy'
};
exports.DEFAULT_FORMATS = DEFAULT_FORMATS;
var RANGE_SEPARATOR = ' - ';
exports.RANGE_SEPARATOR = RANGE_SEPARATOR;

var DATE_FORMATTER = function _DATE_FORMATTER(value, format) {
  return formatDate(value, format);
};

var DATE_PARSER = function _DATE_PARSER(text, format) {
  return parseDate(text, format);
};

var RANGE_FORMATTER = function _RANGE_FORMATTER(value, format) {
  if (Array.isArray(value) && value.length === 2) {
    var start = value[0];
    var end = value[1];

    if (start && end) {
      return formatDate(start, format) + RANGE_SEPARATOR + formatDate(end, format);
    }
  } else if (!Array.isArray(value) && value instanceof Date) {
    return formatDate(value, format);
  }

  return '';
};

var RANGE_PARSER = function _RANGE_PARSER(text, format) {
  var array = Array.isArray(text) ? text : text.split(RANGE_SEPARATOR);

  if (array.length === 2) {
    var range1 = array[0];
    var range2 = array[1];
    return [range1 instanceof Date ? range1 : parseDate(range1, format), range2 instanceof Date ? range2 : parseDate(range2, format)];
  }

  return [];
};

var TYPE_VALUE_RESOLVER_MAP = {
  date: {
    formatter: DATE_FORMATTER,
    parser: DATE_PARSER
  },
  daterange: {
    formatter: RANGE_FORMATTER,
    parser: RANGE_PARSER
  },
  datetime: {
    formatter: DATE_FORMATTER,
    parser: DATE_PARSER
  },
  datetimerange: {
    formatter: RANGE_FORMATTER,
    parser: RANGE_PARSER
  },
  default: {
    formatter: function formatter(value) {
      if (!value) {
        return '';
      }

      return "".concat(value);
    },
    parser: function parser(text) {
      if (text === undefined || text === '') {
        return null;
      }

      return text;
    }
  },
  month: {
    formatter: DATE_FORMATTER,
    parser: DATE_PARSER
  },
  multiple: {
    formatter: function formatter(value, format) {
      var _this6 = this;

      (0, _newArrowCheck2.default)(this, _this);
      return value.filter(Boolean).map(function (date) {
        (0, _newArrowCheck2.default)(this, _this6);
        return formatDate(date, format);
      }.bind(this)).join(',');
    }.bind(void 0),
    parser: function parser(value, format) {
      var _this7 = this;

      (0, _newArrowCheck2.default)(this, _this);
      var values = typeof value === 'string' ? value.split(',') : value;
      return values.map(function (val) {
        (0, _newArrowCheck2.default)(this, _this7);
        var valueItem = val;

        if (valueItem instanceof Date) {
          return valueItem;
        }

        if (typeof valueItem === 'string') {
          valueItem = valueItem.trim();
        } else if (typeof valueItem !== 'number' && !valueItem) {
          valueItem = '';
        }

        return parseDate(valueItem, format);
      }.bind(this));
    }.bind(void 0)
  },
  number: {
    formatter: function formatter(value) {
      if (!value) {
        return '';
      }

      return "".concat(value);
    },
    parser: function parser(text) {
      var result = Number(text);

      if (!Number.isNaN(text)) {
        return result;
      }

      return null;
    }
  },
  time: {
    formatter: DATE_FORMATTER,
    parser: DATE_PARSER
  },
  timerange: {
    formatter: RANGE_FORMATTER,
    parser: RANGE_PARSER
  },
  year: {
    formatter: DATE_FORMATTER,
    parser: DATE_PARSER
  }
};
exports.TYPE_VALUE_RESOLVER_MAP = TYPE_VALUE_RESOLVER_MAP;

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.off = exports.on = void 0;

var _vue = _interopRequireDefault(__webpack_require__(5));

var logger = __webpack_require__(0).get("iview:utils:dom");

var isServer = _vue.default.prototype.$isServer;
/* istanbul ignore next */

var on = function iife() {
  if (!isServer && document.addEventListener) {
    return function addEvent(element, event, handler) {
      if (element && event && handler) {
        element.addEventListener(event, handler, false);
      }
    };
  }

  return function addEvent(element, event, handler) {
    if (element && event && handler) {
      element.attachEvent("on".concat(event), handler);
    }
  };
}();
/* istanbul ignore next */


exports.on = on;

var off = function iife() {
  if (!isServer && document.removeEventListener) {
    return function removeEvent(element, event, handler) {
      if (element && event) {
        element.removeEventListener(event, handler, false);
      }
    };
  }

  return function removeEvent(element, event, handler) {
    if (element && event) {
      element.detachEvent("on".concat(event), handler);
    }
  };
}();

exports.off = off;

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireWildcard = __webpack_require__(35);

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function get() {
    return _icon.default;
  }
});
Object.defineProperty(exports, "getIconAsHTML", {
  enumerable: true,
  get: function get() {
    return _icon.getIconAsHTML;
  }
});
Object.defineProperty(exports, "isOneOfIconNames", {
  enumerable: true,
  get: function get() {
    return _icon.isOneOfIconNames;
  }
});
Object.defineProperty(exports, "isOneOfIconWeights", {
  enumerable: true,
  get: function get() {
    return _icon.isOneOfIconWeights;
  }
});

var _icon = _interopRequireWildcard(__webpack_require__(12));

var logger = __webpack_require__(0).get("iview:components:icon:index");

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

var arrayWithHoles = __webpack_require__(461);

var iterableToArrayLimit = __webpack_require__(462);

var nonIterableRest = __webpack_require__(463);

function _slicedToArray(arr, i) {
  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();
}

module.exports = _slicedToArray;

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectSpread2 = _interopRequireDefault(__webpack_require__(11));

var _not = _interopRequireDefault(__webpack_require__(7));

var logger = __webpack_require__(0).get("iview:directives:transfer-dom");

var EMPTY_STRING = '';
var TRUE = 'true';
var V_TRANSFER_DOM = 'v-transfer-dom';
/**
 * Get target DOM Node.
 *
 * @param {(Node|string|boolean)} [node=document.body] - DOM Node, CSS selector, or Boolean.
 * @returns {Node} The target that the el will be appended to.
 */

function getTarget() {
  var node = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document.body;

  if (node === true) {
    return document.body;
  }

  return node instanceof window.Node ? node : document.querySelector(node);
}

var _default = {
  componentUpdated: function componentUpdated(el, _ref) {
    var value = _ref.value;

    if (el.dataset && el.dataset.transfer !== TRUE) {
      return;
    } // need to make sure children are done updating (vs. `update`)


    if ((0, _not.default)(el.__transferDomData)) {
      return;
    } // homes.get(el)


    var _el$__transferDomData = el.__transferDomData,
        hasMovedOut = _el$__transferDomData.hasMovedOut,
        home = _el$__transferDomData.home,
        parentNode = _el$__transferDomData.parentNode; // recall where home is

    if ((0, _not.default)(hasMovedOut) && value) {
      // remove from document and leave placeholder
      parentNode.replaceChild(home, el); // append to target

      getTarget(value).appendChild(el);
      el.__transferDomData = (0, _objectSpread2.default)({}, el.__transferDomData, {
        hasMovedOut: true,
        target: getTarget(value)
      });
    } else if (hasMovedOut && value === false) {
      // previously moved, coming back home
      parentNode.replaceChild(el, home);
      el.__transferDomData = (0, _objectSpread2.default)({}, el.__transferDomData, {
        hasMovedOut: false,
        target: getTarget(value)
      });
    } else if (value) {
      // already moved, going somewhere else
      getTarget(value).appendChild(el);
    }
  },
  inserted: function inserted(el, _ref2
  /* , vnode */
  ) {
    var value = _ref2.value;

    if (el.dataset && el.dataset.transfer !== TRUE) {
      return;
    }

    el.className = el.className ? "".concat(el.className, " ").concat(V_TRANSFER_DOM) : V_TRANSFER_DOM;
    var parentNode = el.parentNode;

    if ((0, _not.default)(parentNode)) {
      return;
    }

    var home = document.createComment(EMPTY_STRING);
    var hasMovedOut = false;

    if (value !== false) {
      parentNode.replaceChild(home, el); // moving out, el is no longer in the document

      getTarget(value).appendChild(el); // moving into new place

      hasMovedOut = true;
    }

    if ((0, _not.default)(el.__transferDomData)) {
      el.__transferDomData = {
        hasMovedOut: hasMovedOut,
        home: home,
        parentNode: parentNode,
        target: getTarget(value)
      };
    }
  },
  unbind: function unbind(el) {
    if (el.dataset && el.dataset.transfer !== TRUE) {
      return;
    }

    el.className = el.className.replace(V_TRANSFER_DOM, EMPTY_STRING);

    if ((0, _not.default)(el.__transferDomData)) {
      return;
    }

    if (el.__transferDomData.hasMovedOut === true && el.__transferDomData.parentNode) {
      el.__transferDomData.parentNode.appendChild(el);
    }

    el.__transferDomData = null;
  }
};
exports.default = _default;

/***/ }),
/* 22 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _button_vue_vue_type_template_id_717367fe___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(293);
/* harmony import */ var _button_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(85);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _button_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _button_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _button_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _button_vue_vue_type_template_id_717367fe___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _button_vue_vue_type_template_id_717367fe___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 23 */
/***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/*!
{
  "copywrite": "Copyright (c) 2018-present",
  "date": "2019-01-21T12:39:36.944Z",
  "describe": "",
  "description": "Vue directive to react on clicks outside an element.",
  "file": "v-click-outside-x.min.js",
  "hash": "ef8b7b3c24168423686e",
  "license": "MIT",
  "version": "3.7.1"
}
*/
!function(e,t){ true?module.exports=t():undefined}(function(){"use strict";return"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:Function("return this")()}(),function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){u(e,t,n[t])})}return e}function u(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(t,"__esModule",{value:!0}),t.install=function(e){e.directive("click-outside",s)},t.directive=void 0;var i=Object.create(null),c=Object.create(null),f=[i,c],l=function(e,t,n){var r=n.target,o=function(t){var o=t.el;if(o!==r&&!o.contains(r)){var u=t.binding;u.modifiers.stop&&n.stopPropagation(),u.modifiers.prevent&&n.preventDefault(),u.value.call(e,n)}};Object.keys(t).forEach(function(e){return t[e].forEach(o)})},a=function(e){l(this,i,e)},d=function(e){l(this,c,e)},p=function(e){return e?a:d},s=Object.defineProperties({},{$_captureInstances:{value:i},$_nonCaptureInstances:{value:c},$_onCaptureEvent:{value:a},$_onNonCaptureEvent:{value:d},bind:{value:function(e,t){if("function"!=typeof t.value)throw new TypeError("Binding value must be a function.");var n=t.arg||"click",u=o({},t,{arg:n,modifiers:o({},{capture:!1,prevent:!1,stop:!1},t.modifiers)}),f=u.modifiers.capture,l=f?i:c;Array.isArray(l[n])||(l[n]=[]),1===l[n].push({el:e,binding:u})&&"object"===("undefined"==typeof document?"undefined":r(document))&&document&&document.addEventListener(n,p(f),f)}},unbind:{value:function(e){var t=function(t){return t.el!==e};f.forEach(function(e){var n=Object.keys(e);if(n.length){var o=e===i;n.forEach(function(n){var u=e[n].filter(t);u.length?e[n]=u:("object"===("undefined"==typeof document?"undefined":r(document))&&document&&document.removeEventListener(n,p(o),o),delete e[n])})}})}},version:{enumerable:!0,value:"3.7.1"}});t.directive=s}])});

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(255)))

/***/ }),
/* 25 */
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

var baseGet = __webpack_require__(581);

/**
 * Gets the value at `path` of `object`. If the resolved value is
 * `undefined`, the `defaultValue` is returned in its place.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
 * @returns {*} Returns the resolved value.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.get(object, 'a[0].b.c');
 * // => 3
 *
 * _.get(object, ['a', '0', 'b', 'c']);
 * // => 3
 *
 * _.get(object, 'a.b.c', 'default');
 * // => 'default'
 */
function get(object, path, defaultValue) {
  var result = object == null ? undefined : baseGet(object, path);
  return result === undefined ? defaultValue : result;
}

module.exports = get;


/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _assign = __webpack_require__(534);

var _assign2 = _interopRequireDefault(_assign);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _assign2.default || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

/***/ }),
/* 28 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _dropdown_vue_vue_type_template_id_efcf2562___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(353);
/* harmony import */ var _dropdown_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(65);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _dropdown_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _dropdown_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _dropdown_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _dropdown_vue_vue_type_template_id_efcf2562___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _dropdown_vue_vue_type_template_id_efcf2562___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.changeColor = changeColor;
exports.clamp = clamp;
exports.getIncrement = getIncrement;
exports.getTouches = getTouches;
exports.toRGBAString = toRGBAString;
exports.isValidHex = isValidHex;
exports.simpleCheckForValidColor = simpleCheckForValidColor;

var _isNil = _interopRequireDefault(__webpack_require__(258));

var _tinycolor = _interopRequireDefault(__webpack_require__(387));

var _assist = __webpack_require__(6);

var logger = __webpack_require__(0).get("iview:components:color-picker:utils");

function setAlpha(data, alpha) {
  var color = (0, _tinycolor.default)(data);
  var _a = color._a;

  if ((0, _isNil.default)(_a)) {
    color.setAlpha(alpha || 1);
  }

  return color;
}

function getColor(data, colorData) {
  var alpha = colorData && colorData.a;

  if (colorData) {
    // hsl is better than hex between conversions
    if (colorData.hsl) {
      return setAlpha(colorData.hsl, alpha);
    }

    if (colorData.hex && colorData.hex.length > 0) {
      return setAlpha(colorData.hex, alpha);
    }
  }

  return setAlpha(colorData, alpha);
}

function changeColor(data, oldHue) {
  var colorData = data === '' ? '#2d8cf0' : data;
  var color = getColor(data, colorData);
  var hsl = color.toHsl();
  var hsv = color.toHsv();

  if (hsl.s === 0) {
    hsl.h = colorData.h || colorData.hsl && colorData.hsl.h || oldHue || 0;
    hsv.h = hsl.h;
  } // when the hsv.v is less than 0.0164 (base on test)
  // because of possible loss of precision
  // the result of hue and saturation would be miscalculated


  if (hsv.v < 0.0164) {
    hsv.h = colorData.h || colorData.hsv && colorData.hsv.h || 0;
    hsv.s = colorData.s || colorData.hsv && colorData.hsv.s || 0;
  }

  if (hsl.l < 0.01) {
    hsl.h = colorData.h || colorData.hsl && colorData.hsl.h || 0;
    hsl.s = colorData.s || colorData.hsl && colorData.hsl.s || 0;
  }

  return {
    a: colorData.a || color.getAlpha(),
    hex: color.toHexString().toUpperCase(),
    hsl: hsl,
    hsv: hsv,
    oldHue: colorData.h || oldHue || hsl.h,
    rgba: color.toRgb(),
    source: colorData.source
  };
}

function clamp(value, min, max) {
  if (value < min) {
    return min;
  }

  if (value > max) {
    return max;
  }

  return value;
}

function getIncrement(key, keys, increment) {
  return (0, _assist.oneOf)(key, keys) ? increment : 0;
}

function getTouches(e, prop) {
  return e.touches ? e.touches[0][prop] : 0;
}

function toRGBAString(rgba) {
  var r = rgba.r,
      g = rgba.g,
      b = rgba.b,
      a = rgba.a;
  return "rgba(".concat([r, g, b, a].join(','), ")");
}

function isValidHex(hex) {
  return (0, _tinycolor.default)(hex).isValid();
}

function checkIteratee(data, counts, letter) {
  var checked = counts.checked,
      passed = counts.passed;
  var value = data[letter];

  if (value) {
    checked += 1;

    if (Number.isFinite(value)) {
      passed += 1;
    }
  }

  return {
    checked: checked,
    passed: passed
  };
}

var keysToCheck = ['r', 'g', 'b', 'a', 'h', 's', 'l', 'v'];

function simpleCheckForValidColor(data) {
  var results = keysToCheck.reduce(checkIteratee.bind(null, data), {
    checked: 0,
    passed: 0
  });
  return results.checked === results.passed ? data : undefined;
}

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(31);
var createDesc = __webpack_require__(50);
module.exports = __webpack_require__(32) ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(49);
var IE8_DOM_DEFINE = __webpack_require__(400);
var toPrimitive = __webpack_require__(267);
var dP = Object.defineProperty;

exports.f = __webpack_require__(32) ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__(42)(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = __webpack_require__(403);
var defined = __webpack_require__(268);
module.exports = function (it) {
  return IObject(defined(it));
};


/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__(271)('wks');
var uid = __webpack_require__(53);
var Symbol = __webpack_require__(23).Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;


/***/ }),
/* 35 */
/***/ (function(module, exports) {

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  } else {
    var newObj = {};

    if (obj != null) {
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};

          if (desc.get || desc.set) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
    }

    newObj.default = obj;
    return newObj;
  }
}

module.exports = _interopRequireWildcard;

/***/ }),
/* 36 */
/***/ (function(module, exports) {

function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    module.exports = _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    module.exports = _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

module.exports = _typeof;

/***/ }),
/* 37 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _input_vue_vue_type_template_id_4ffe882a___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(287);
/* harmony import */ var _input_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(73);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _input_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _input_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _input_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _input_vue_vue_type_template_id_4ffe882a___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _input_vue_vue_type_template_id_4ffe882a___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 38 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _checkbox_vue_vue_type_template_id_bb1543fa___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(301);
/* harmony import */ var _checkbox_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(101);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _checkbox_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _checkbox_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _checkbox_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _checkbox_vue_vue_type_template_id_bb1543fa___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _checkbox_vue_vue_type_template_id_bb1543fa___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var logger = __webpack_require__(0).get("iview:components:color-picker:prefixMixin");

var _default = {
  data: function data() {
    return {
      iconPrefixCls: 'ivu-icon',
      inputPrefixCls: 'ivu-input',
      prefixCls: 'ivu-color-picker',
      transferPrefixCls: 'ivu-transfer'
    };
  }
};
exports.default = _default;

/***/ }),
/* 40 */
/***/ (function(module, exports) {

var core = module.exports = { version: '2.5.7' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),
/* 41 */
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),
/* 42 */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};


/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

var eq = __webpack_require__(454);

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

module.exports = assocIndexOf;


/***/ }),
/* 44 */
/***/ (function(module, exports) {

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

module.exports = isArray;


/***/ }),
/* 45 */
/***/ (function(module, exports) {

/**
 * This method returns a new empty object.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Object} Returns the new empty object.
 * @example
 *
 * var objects = _.times(2, _.stubObject);
 *
 * console.log(objects);
 * // => [{}, {}]
 *
 * console.log(objects[0] === objects[1]);
 * // => false
 */
function stubObject() {
  return {};
}

module.exports = stubObject;


/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var logger = __webpack_require__(0).get("iview:components:date-picker:time-mixins");

var _default2 = {
  props: {
    disabledHours: {
      default: function _default() {
        return [];
      },
      type: Array
    },
    disabledMinutes: {
      default: function _default() {
        return [];
      },
      type: Array
    },
    disabledSeconds: {
      default: function _default() {
        return [];
      },
      type: Array
    },
    hideDisabledOptions: {
      default: false,
      type: Boolean
    }
  }
};
exports.default = _default2;

/***/ }),
/* 47 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _confirm_vue_vue_type_template_id_fdee765a___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(368);
/* harmony import */ var _confirm_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(137);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _confirm_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _confirm_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _confirm_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _confirm_vue_vue_type_template_id_fdee765a___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _confirm_vue_vue_type_template_id_fdee765a___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var logger = __webpack_require__(0).get("iview:components:date-picker:panel:panel-mixin");

var prefixCls = 'ivu-picker-panel';
var datePrefixCls = 'ivu-date-picker';
var _default = {
  methods: {
    handleClear: function handleClear() {
      var _this = this;

      this.dates = this.dates.map(function () {
        (0, _newArrowCheck2.default)(this, _this);
        return null;
      }.bind(this));
      this.rangeState = {};
      this.$emit('on-pick', this.dates);
      this.handleConfirm(); //  if (this.showTime) this.$refs.timePicker.handleClear();
    },
    handleConfirm: function handleConfirm(visible, type) {
      this.$emit('on-pick', this.dates, visible, type || this.type);
    },
    handlePickClear: function handlePickClear() {
      this.resetView();
      this.$emit('on-pick-clear');
    },
    handlePickClick: function handlePickClick() {
      this.$emit('on-pick-click');
    },
    handlePickSuccess: function handlePickSuccess() {
      this.resetView();
      this.$emit('on-pick-success');
    },
    handleShortcutClick: function handleShortcutClick(shortcut) {
      if (shortcut.value) {
        this.$emit('on-pick', shortcut.value());
      }

      if (shortcut.onClick) {
        shortcut.onClick(this);
      }
    },
    iconBtnCls: function iconBtnCls(direction) {
      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
      return ["".concat(prefixCls, "-icon-btn"), "".concat(datePrefixCls, "-").concat(direction, "-btn"), "".concat(datePrefixCls, "-").concat(direction, "-btn-arrow").concat(type)];
    },
    onToggleVisibility: function onToggleVisibility(open) {
      var _this$$refs = this.$refs,
          timeSpinner = _this$$refs.timeSpinner,
          timeSpinnerEnd = _this$$refs.timeSpinnerEnd;

      if (open && timeSpinner) {
        timeSpinner.updateScroll();
      }

      if (open && timeSpinnerEnd) {
        timeSpinnerEnd.updateScroll();
      }
    },
    resetView: function resetView() {
      var _this2 = this;

      setTimeout(function () {
        (0, _newArrowCheck2.default)(this, _this2);
        this.currentView = this.selectionMode;
      }.bind(this), 500 // 500ms so the dropdown can close before changing
      );
    }
  },
  props: {
    confirm: {
      default: false,
      type: Boolean
    }
  }
};
exports.default = _default;

/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(41);
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};


/***/ }),
/* 50 */
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = __webpack_require__(402);
var enumBugKeys = __webpack_require__(272);

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};


/***/ }),
/* 52 */
/***/ (function(module, exports) {

module.exports = true;


/***/ }),
/* 53 */
/***/ (function(module, exports) {

var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};


/***/ }),
/* 54 */
/***/ (function(module, exports) {

exports.f = {}.propertyIsEnumerable;


/***/ }),
/* 55 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_affix_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(56);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_affix_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_affix_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_affix_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_affix_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_affix_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _dom = __webpack_require__(18);

var logger = __webpack_require__(0).get("iview:components:affix:affix.vue");

var prefixCls = 'ivu-affix';

function getScroll(target, top) {
  var prop = top ? 'pageYOffset' : 'pageXOffset';
  var method = top ? 'scrollTop' : 'scrollLeft';
  var ret = target[prop];

  if (typeof ret !== 'number') {
    ret = window.document.documentElement[method];
  }

  return ret;
}

function getOffset(element) {
  var rect = element.getBoundingClientRect();
  var scrollTop = getScroll(window, true);
  var scrollLeft = getScroll(window);
  var docEl = window.document.body;
  var clientTop = docEl.clientTop || 0;
  var clientLeft = docEl.clientLeft || 0;
  return {
    top: rect.top + scrollTop - clientTop,
    left: rect.left + scrollLeft - clientLeft
  };
}

var _default = {
  name: 'Affix',
  props: {
    offsetBottom: {
      default: undefined,
      type: Number
    },
    offsetTop: {
      default: 0,
      type: Number
    }
  },
  data: function data() {
    return {
      affix: false,
      slot: false,
      slotStyle: {},
      styles: {}
    };
  },
  computed: {
    classes: function classes() {
      return [(0, _defineProperty2.default)({}, "".concat(prefixCls), this.affix)];
    },
    offsetType: function offsetType() {
      var type = 'top';

      if (this.offsetBottom >= 0) {
        type = 'bottom';
      }

      return type;
    }
  },
  mounted: function mounted() {
    //            window.addEventListener('scroll', this.handleScroll, false);
    //            window.addEventListener('resize', this.handleScroll, false);
    (0, _dom.on)(window, 'scroll', this.handleScroll);
    (0, _dom.on)(window, 'resize', this.handleScroll);
  },
  beforeDestroy: function beforeDestroy() {
    //            window.removeEventListener('scroll', this.handleScroll, false);
    //            window.removeEventListener('resize', this.handleScroll, false);
    (0, _dom.off)(window, 'scroll', this.handleScroll);
    (0, _dom.off)(window, 'resize', this.handleScroll);
  },
  methods: {
    handleScroll: function handleScroll() {
      var affix = this.affix;
      var scrollTop = getScroll(window, true);
      var elOffset = getOffset(this.$el);
      var windowHeight = window.innerHeight;
      var elHeight = this.$el.getElementsByTagName('div')[0].offsetHeight; // Fixed Top

      if (elOffset.top - this.offsetTop < scrollTop && this.offsetType === 'top' && !affix) {
        this.affix = true;
        this.slotStyle = {
          height: "".concat(this.$refs.point.clientHeight, "px"),
          width: "".concat(this.$refs.point.clientWidth, "px")
        };
        this.slot = true;
        this.styles = {
          left: "".concat(elOffset.left, "px"),
          top: "".concat(this.offsetTop, "px"),
          width: "".concat(this.$el.offsetWidth, "px")
        };
        this.$emit('on-change', true);
      } else if (elOffset.top - this.offsetTop > scrollTop && this.offsetType === 'top' && affix) {
        this.slot = false;
        this.slotStyle = {};
        this.affix = false;
        this.styles = null;
        this.$emit('on-change', false);
      } // Fixed Bottom


      if (elOffset.top + this.offsetBottom + elHeight > scrollTop + windowHeight && this.offsetType === 'bottom' && !affix) {
        this.affix = true;
        this.styles = {
          bottom: "".concat(this.offsetBottom, "px"),
          left: "".concat(elOffset.left, "px"),
          width: "".concat(this.$el.offsetWidth, "px")
        };
        this.$emit('on-change', true);
      } else if (elOffset.top + this.offsetBottom + elHeight < scrollTop + windowHeight && this.offsetType === 'bottom' && affix) {
        this.affix = false;
        this.styles = null;
        this.$emit('on-change', false);
      }
    }
  }
};
exports.default = _default;

/***/ }),
/* 57 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_alert_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(58);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_alert_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_alert_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_alert_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_alert_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_alert_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

var _interopRequireWildcard = __webpack_require__(35);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _icon = _interopRequireWildcard(__webpack_require__(19));

var _isOneOf = _interopRequireDefault(__webpack_require__(256));

var _Object$create;

var logger = __webpack_require__(0).get("iview:components:alert:alert.vue");

var prefixCls = 'byx-alert';
var EMPTY_STRING = '';
var DEFAULT = 'default';
var SUCCESS = 'success';
var INFO = 'info';
var WARNING = 'warning';
var DANGER = 'danger';
var UPDATE = 'update';
var TIP = 'tip';
var TYPES = Object.freeze([DEFAULT, SUCCESS, INFO, WARNING, DANGER, UPDATE, TIP]);
var LARGE = 'large';
var LIGHT = 'light';
var SOLID = 'solid';
var ICON_TYPE_MAP = Object.create(null, (_Object$create = {}, (0, _defineProperty2.default)(_Object$create, SUCCESS, {
  enumerable: true,
  value: 'thumbs-up'
}), (0, _defineProperty2.default)(_Object$create, INFO, {
  enumerable: true,
  value: 'info-circle'
}), (0, _defineProperty2.default)(_Object$create, WARNING, {
  enumerable: true,
  value: 'exclamation-circle'
}), (0, _defineProperty2.default)(_Object$create, DANGER, {
  enumerable: true,
  value: 'exclamation-triangle'
}), (0, _defineProperty2.default)(_Object$create, UPDATE, {
  enumerable: true,
  value: 'star'
}), (0, _defineProperty2.default)(_Object$create, TIP, {
  enumerable: true,
  value: 'lightbulb-exclamation'
}), _Object$create));
var _default = {
  name: 'Alert',
  components: {
    Icon: _icon.default
  },
  props: {
    closable: {
      default: false,
      type: Boolean
    },
    iconWeight: {
      default: undefined,
      type: String,
      validator: _icon.isOneOfIconWeights
    },
    showIcon: {
      default: false,
      type: Boolean
    },
    size: {
      default: undefined,
      type: String,
      validator: function validator(value) {
        return value === LARGE;
      }
    },
    condensed: {
      default: false,
      type: Boolean
    },
    type: {
      default: DEFAULT,
      validator: function validator(value) {
        return (0, _isOneOf.default)(value, TYPES);
      }
    }
  },
  data: function data() {
    return {
      closed: false,
      desc: false
    };
  },
  computed: {
    baseClasses: function baseClasses() {
      var prefix = this.prefixConstructor(EMPTY_STRING);
      var classes = this.classesConstructor(prefix, false);
      classes.push("".concat(prefix, "-").concat(this.type));
      return classes;
    },
    iconClasses: function iconClasses() {
      var prefix = this.prefixConstructor('icon');
      var classes = this.classesConstructor(prefix, false);

      if (this.size === LARGE) {
        classes.push("".concat(prefix, "-large"));
      }

      return classes;
    },
    messageClasses: function messageClasses() {
      return this.classesConstructor('message');
    },
    actionClasses: function actionClasses() {
      return this.classesConstructor('action');
    },
    closeClasses: function closeClasses() {
      return this.classesConstructor('close');
    },
    hasAction: function hasAction() {
      return Boolean(this.$slots.action);
    },
    hasHeader: function hasHeader() {
      return Boolean(this.$slots.header);
    },
    iconType: function iconType() {
      return ICON_TYPE_MAP[this.type] || EMPTY_STRING;
    },
    iconWeightData: function iconWeightData() {
      return this.iconWeight || this.standardWeight;
    },
    standardWeight: function standardWeight() {
      return this.size === LARGE ? LIGHT : SOLID;
    }
  },
  methods: {
    close: function close(event) {
      this.closed = true;
      this.$emit('on-close', event);
    },

    /**
     * Generates a new prefix based on the component prefix and a suffix.
     *
     * @param {string} suffix - Add this to the prefix.
     *
     * @returns {string} - Prefix based on custom String.
     */
    prefixConstructor: function prefixConstructor(suffix) {
      return suffix === EMPTY_STRING ? prefixCls : "".concat(prefixCls, "-").concat(suffix);
    },

    /**
     * Generates a classname based on the prefix.
     * Adds any extra classes based on props.
     *
     * @param {string} suffix - Used to generate the prefix.
     * @param {boolean} generatePrefix - Set to false if you pass in the whole prefix as suffix.
     *
     * @returns {Array} - All classes with the prefix.
     */
    classesConstructor: function classesConstructor(suffix) {
      var generatePrefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      var prefix = generatePrefix ? this.prefixConstructor(suffix) : suffix;
      var classes = [prefix];

      if (this.condensed) {
        classes.push("".concat(prefix, "-condensed"));
      }

      return classes;
    }
  }
};
exports.default = _default;

/***/ }),
/* 59 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_icon_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_icon_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_icon_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_icon_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_icon_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_icon_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isOneOfIconWeights = isOneOfIconWeights;
exports.isOneOfIconNames = isOneOfIconNames;
exports.default = exports.getIconAsHTML = void 0;

var _objectSpread2 = _interopRequireDefault(__webpack_require__(11));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _vue = _interopRequireDefault(__webpack_require__(5));

var _findKey = _interopRequireDefault(__webpack_require__(442));

var _memoize = _interopRequireDefault(__webpack_require__(450));

var _proSolidSvgIcons = __webpack_require__(378);

var _proRegularSvgIcons = __webpack_require__(379);

var _proLightSvgIcons = __webpack_require__(380);

var _isOneOf = _interopRequireDefault(__webpack_require__(256));

var _Object$create;

var logger = __webpack_require__(0).get("iview:components:icon:icon.vue");

var SOLID = 'solid';
var REGULAR = 'regular';
var LIGHT = 'light';
var ICON_WEIGHTS = Object.freeze([SOLID, REGULAR, LIGHT]);

function isOneOfIconWeights(value) {
  return (0, _isOneOf.default)(value, ICON_WEIGHTS);
}

var FAS = 'fas';
var FAR = 'far';
var FAL = 'fal';
var ICON_LIBRARIES = Object.freeze([_proSolidSvgIcons.fas, _proRegularSvgIcons.far, _proLightSvgIcons.fal]);

function isOneOfIconNames(value) {
  var isIconName = function isIconName(_ref) {
    var iconName = _ref.iconName;
    return iconName === value;
  };

  return ICON_LIBRARIES.some(function libraryIteratee(library) {
    return Boolean((0, _findKey.default)(library, isIconName));
  });
}

var WEIGHT_MAP = Object.create(null, (_Object$create = {}, (0, _defineProperty2.default)(_Object$create, SOLID, {
  enumerable: true,
  value: FAS
}), (0, _defineProperty2.default)(_Object$create, REGULAR, {
  enumerable: true,
  value: FAR
}), (0, _defineProperty2.default)(_Object$create, LIGHT, {
  enumerable: true,
  value: FAL
}), _Object$create));
var vueObject = {
  name: 'Icon',
  props: {
    fw: {
      default: false,
      type: Boolean
    },
    type: {
      required: true,
      type: String,
      validator: isOneOfIconNames
    },
    weight: {
      default: REGULAR,
      type: String,
      validator: isOneOfIconWeights
    }
  },
  computed: {
    icon: function icon() {
      var weightClass = WEIGHT_MAP[this.weight] || WEIGHT_MAP[REGULAR];
      var definition = [weightClass];

      if (this.type) {
        definition.push(this.type);
      }

      return definition;
    }
  }
};
var el = document.createElement('div');

var createHTML = function createHTML() {
  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return new _vue.default((0, _objectSpread2.default)({}, vueObject, {
    propsData: (0, _objectSpread2.default)({}, props)
  })).$mount(el).$el.outerHTML;
};

var getIconAsHTML = (0, _memoize.default)(createHTML);
exports.getIconAsHTML = getIconAsHTML;
var _default = vueObject;
exports.default = _default;

/***/ }),
/* 61 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_auto_complete_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_auto_complete_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_auto_complete_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_auto_complete_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_auto_complete_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_auto_complete_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _select = _interopRequireDefault(__webpack_require__(257));

var _option = _interopRequireDefault(__webpack_require__(261));

var _input = _interopRequireDefault(__webpack_require__(37));

var _assist = __webpack_require__(6);

var _emitter = _interopRequireDefault(__webpack_require__(9));

var _this = void 0;

var logger = __webpack_require__(0).get("iview:components:auto-complete:auto-complete.vue");

var _default2 = {
  name: 'AutoComplete',
  components: {
    iInput: _input.default,
    iOption: _option.default,
    iSelect: _select.default
  },
  mixins: [_emitter.default],
  props: {
    clearable: {
      default: false,
      type: Boolean
    },
    data: {
      default: function _default() {
        (0, _newArrowCheck2.default)(this, _this);
        return [];
      }.bind(void 0),
      type: Array
    },
    disabled: {
      default: false,
      type: Boolean
    },
    elementId: {
      default: undefined,
      type: String
    },
    filterMethod: {
      default: false,
      type: [Function, Boolean]
    },
    icon: {
      default: undefined,
      type: String
    },
    label: {
      default: '',
      type: [String, Number]
    },
    name: {
      default: undefined,
      type: String
    },
    placeholder: {
      default: undefined,
      type: String
    },
    placement: {
      default: 'bottom',
      type: String,
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['top', 'bottom']);
      }
    },
    size: {
      default: undefined,
      type: String,
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['small', 'large', 'default']);
      }
    },
    transfer: {
      default: false,
      type: Boolean
    },
    value: {
      default: '',
      type: [String, Number]
    }
  },
  data: function data() {
    return {
      currentValue: this.value,
      disableEmitChange: false // for Form reset

    };
  },
  computed: {
    filteredData: function filteredData() {
      var _this2 = this;

      if (this.filterMethod) {
        return this.data.filter(function (item) {
          (0, _newArrowCheck2.default)(this, _this2);
          return this.filterMethod(this.currentValue, item);
        }.bind(this));
      }

      return this.data;
    },
    inputIcon: function inputIcon() {
      var iconName = '';

      if (this.clearable && this.currentValue) {
        iconName = 'ios-close';
      } else if (this.icon) {
        iconName = this.icon;
      }

      return iconName;
    }
  },
  watch: {
    currentValue: function currentValue(val) {
      this.$refs.select.query = val;
      this.$emit('input', val);

      if (this.disableEmitChange) {
        this.disableEmitChange = false;
        return;
      }

      this.$emit('on-change', val);
      this.dispatch('FormItem', 'on-form-change', val);
    },
    value: function value(val) {
      if (this.currentValue !== val) {
        this.disableEmitChange = true;
      }

      this.currentValue = val;
    }
  },
  methods: {
    handleBlur: function handleBlur(event) {
      this.$emit('on-blur', event);
    },
    handleChange: function handleChange(val) {
      this.currentValue = val;
      this.$refs.input.blur();
      this.$emit('on-select', val);
    },
    handleClear: function handleClear() {
      if (!this.clearable) {
        return;
      }

      this.currentValue = '';
      this.$refs.select.reset();
    },
    handleFocus: function handleFocus(event) {
      this.$emit('on-focus', event);
    },
    remoteMethod: function remoteMethod(query) {
      this.$emit('on-search', query);
    }
  }
};
exports.default = _default2;

/***/ }),
/* 63 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_select_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(64);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_select_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_select_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_select_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_select_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_select_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _slicedToArray2 = _interopRequireDefault(__webpack_require__(20));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _objectSpread3 = _interopRequireDefault(__webpack_require__(11));

var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(15));

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _vClickOutsideX = __webpack_require__(24);

var _dropdown = _interopRequireDefault(__webpack_require__(28));

var _transferDom = _interopRequireDefault(__webpack_require__(21));

var _assist = __webpack_require__(6);

var _emitter = _interopRequireDefault(__webpack_require__(9));

var _locale = _interopRequireDefault(__webpack_require__(10));

var _selectHead = _interopRequireDefault(__webpack_require__(479));

var _functionalOptions = _interopRequireDefault(__webpack_require__(480));

var _this = void 0;

var logger = __webpack_require__(0).get("iview:components:select:select.vue");

var prefixCls = 'byx-select';
var optionRegexp = /^i-option$|^Option$/i;
var optionGroupRegexp = /option-?group/i;

var _findChild = function findChild(instance, checkFn) {
  (0, _newArrowCheck2.default)(this, _this);
  var match = checkFn(instance);

  if (match) {
    return instance;
  }

  for (var i = 0, l = instance.$children.length; i < l; i += 1) {
    var child = instance.$children[i];
    match = _findChild(child, checkFn);

    if (match) {
      return match;
    }
  }

  return undefined;
}.bind(void 0);

var _findOptionsInVNode = function findOptionsInVNode(node) {
  var _this2 = this;

  (0, _newArrowCheck2.default)(this, _this);
  var opts = node.componentOptions;

  if (opts && opts.tag.match(optionRegexp)) {
    return [node];
  }

  if (!node.children && (!opts || !opts.children)) {
    return [];
  }

  var children = [].concat((0, _toConsumableArray2.default)(node.children || []), (0, _toConsumableArray2.default)(opts && opts.children || []));
  var options = children.reduce(function (arr, el) {
    (0, _newArrowCheck2.default)(this, _this2);
    return [].concat((0, _toConsumableArray2.default)(arr), (0, _toConsumableArray2.default)(_findOptionsInVNode(el)));
  }.bind(this), []).filter(Boolean);
  return options.length > 0 ? options : [];
}.bind(void 0);

var extractOptions = function extractOptions(options) {
  var _this3 = this;

  (0, _newArrowCheck2.default)(this, _this);
  return options.reduce(function (opts, slotEntry) {
    (0, _newArrowCheck2.default)(this, _this3);
    return opts.concat(_findOptionsInVNode(slotEntry));
  }.bind(this), []);
}.bind(void 0);

var applyProp = function applyProp(node, propName, value) {
  (0, _newArrowCheck2.default)(this, _this);
  return (0, _objectSpread3.default)({}, node, {
    componentOptions: (0, _objectSpread3.default)({}, node.componentOptions, {
      propsData: (0, _objectSpread3.default)({}, node.componentOptions.propsData, (0, _defineProperty2.default)({}, propName, value))
    })
  });
}.bind(void 0);

var getNestedProperty = function getNestedProperty(obj, path) {
  var _this4 = this;

  (0, _newArrowCheck2.default)(this, _this);
  var keys = path.split('.');
  return keys.reduce(function (o, key) {
    (0, _newArrowCheck2.default)(this, _this4);
    return o && o[key] || null;
  }.bind(this), obj);
}.bind(void 0);

var getOptionLabel = function getOptionLabel(option) {
  var _this5 = this;

  (0, _newArrowCheck2.default)(this, _this);

  if (option.componentOptions.propsData.label) {
    return option.componentOptions.propsData.label;
  }

  var textContent = (option.componentOptions.children || []).reduce(function (str, child) {
    (0, _newArrowCheck2.default)(this, _this5);
    return str + (child.text || '');
  }.bind(this), '');
  var innerHTML = getNestedProperty(option, 'data.domProps.innerHTML');
  return textContent || (typeof innerHTML === 'string' ? innerHTML : '');
}.bind(void 0);

var ANIMATION_TIMEOUT = 300;
var _default = {
  name: 'ISelect',
  components: {
    Drop: _dropdown.default,
    FunctionalOptions: _functionalOptions.default,
    SelectHead: _selectHead.default
  },
  directives: {
    clickOutside: _vClickOutsideX.directive,
    TransferDom: _transferDom.default
  },
  mixins: [_emitter.default, _locale.default],
  props: {
    // Use for AutoComplete
    autoComplete: {
      default: false,
      type: Boolean
    },
    clearable: {
      default: false,
      type: Boolean
    },
    disabled: {
      default: false,
      type: Boolean
    },
    elementId: {
      default: undefined,
      type: String
    },
    filterable: {
      default: false,
      type: Boolean
    },
    filterMethod: {
      default: undefined,
      type: Function
    },
    // 使用时，也得设置 value 才行
    label: {
      default: '',
      type: [String, Number, Array]
    },
    labelInValue: {
      default: false,
      type: Boolean
    },
    loading: {
      default: false,
      type: Boolean
    },
    loadingText: {
      default: undefined,
      type: String
    },
    multiple: {
      default: false,
      type: Boolean
    },
    name: {
      default: undefined,
      type: String
    },
    notFoundText: {
      default: undefined,
      type: String
    },
    placeholder: {
      default: undefined,
      type: String
    },
    placement: {
      default: 'bottom',
      type: String,
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['top', 'bottom']);
      }
    },
    remoteMethod: {
      default: undefined,
      type: Function
    },
    size: {
      default: 'default',
      type: String,
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['small', 'large', 'default']);
      }
    },
    transfer: {
      default: false,
      type: Boolean
    },
    value: {
      default: '',
      type: [String, Number, Array]
    }
  },
  data: function data() {
    return {
      caretPosition: -1,
      dropDownWidth: 0,
      focusIndex: -1,
      hasExpectedValue: false,
      hasMouseHoverHead: false,
      initialLabel: this.label,
      isFocused: false,
      lastRemoteQuery: '',
      prefixCls: prefixCls,
      preventRemoteCall: false,
      query: '',
      slotOptions: this.$slots.default,
      unchangedQuery: true,
      values: [],
      visible: false
    };
  },
  computed: {
    canBeCleared: function canBeCleared() {
      var uiStateMatch = this.hasMouseHoverHead || this.active;
      var qualifiesForClear = !this.multiple && this.clearable;
      return uiStateMatch && qualifiesForClear && this.reset; // we return a function
    },
    classes: function classes() {
      var _ref;

      return ["".concat(prefixCls), (_ref = {}, (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-visible"), this.visible), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-disabled"), this.disabled), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-multiple"), this.multiple), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-single"), !this.multiple), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-show-clear"), this.showCloseIcon), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-").concat(this.size), !!this.size), _ref)];
    },
    dropdownCls: function dropdownCls() {
      var _ref2;

      return _ref2 = {}, (0, _defineProperty2.default)(_ref2, "".concat(prefixCls, "-dropdown-transfer"), this.transfer), (0, _defineProperty2.default)(_ref2, "".concat(prefixCls, "-multiple"), this.multiple && this.transfer), (0, _defineProperty2.default)(_ref2, 'ivu-auto-complete', this.autoComplete), _ref2;
    },
    dropVisible: function dropVisible() {
      var status = true;
      var noOptions = !this.selectOptions || this.selectOptions.length === 0;

      if (!this.loading && this.remote && this.query === '' && noOptions) {
        status = false;
      }

      if (this.autoComplete && noOptions) {
        status = false;
      }

      return this.visible && status;
    },
    flatOptions: function flatOptions() {
      return extractOptions(this.selectOptions);
    },
    localeLoadingText: function localeLoadingText() {
      if (typeof this.loadingText === 'undefined') {
        return this.t('i.select.loading');
      }

      return this.loadingText;
    },
    localeNotFoundText: function localeNotFoundText() {
      if (typeof this.notFoundText === 'undefined') {
        return this.t('i.select.noMatch');
      }

      return this.notFoundText;
    },
    publicValue: function publicValue() {
      var _this6 = this;

      if (this.labelInValue) {
        return this.multiple ? this.values : this.values[0];
      }

      return this.multiple ? this.values.map(function (option) {
        (0, _newArrowCheck2.default)(this, _this6);
        return option.value;
      }.bind(this)) : (this.values[0] || {}).value;
    },
    queryStringMatchesSelectedOption: function queryStringMatchesSelectedOption() {
      var _this7 = this;

      var selectedOptions = this.values[0];

      if (!selectedOptions) {
        return false;
      }

      var _map = [this.query, selectedOptions.label].map(function (str) {
        (0, _newArrowCheck2.default)(this, _this7);
        return (str || '').trim();
      }.bind(this)),
          _map2 = (0, _slicedToArray2.default)(_map, 2),
          query = _map2[0],
          label = _map2[1];

      return !this.multiple && this.unchangedQuery && query === label;
    },
    remote: function remote() {
      return typeof this.remoteMethod === 'function';
    },
    selectionCls: function selectionCls() {
      var _ref3;

      return _ref3 = {}, (0, _defineProperty2.default)(_ref3, "".concat(prefixCls, "-selection"), !this.autoComplete), (0, _defineProperty2.default)(_ref3, "".concat(prefixCls, "-selection-focused"), this.isFocused), _ref3;
    },
    selectOptions: function selectOptions() {
      var _this8 = this;

      var selectOptions = [];
      var slotOptions = this.slotOptions || [];
      var optionCounter = -1;
      var currentIndex = this.focusIndex;
      var selectedValues = this.values.filter(Boolean).map(function (_ref4) {
        var value = _ref4.value;
        (0, _newArrowCheck2.default)(this, _this8);
        return value;
      }.bind(this));

      if (this.autoComplete) {
        var _copyChildren = function copyChildren(node, fn) {
          var _this9 = this;

          (0, _newArrowCheck2.default)(this, _this8);
          return (0, _objectSpread3.default)({}, node, {
            children: (node.children || []).map(fn).map(function (child) {
              (0, _newArrowCheck2.default)(this, _this9);
              return _copyChildren(child, fn);
            }.bind(this))
          });
        }.bind(this);

        var autoCompleteOptions = extractOptions(slotOptions);
        var selectedSlotOption = autoCompleteOptions[currentIndex];
        return slotOptions.map(function (node) {
          var _this10 = this;

          (0, _newArrowCheck2.default)(this, _this8);

          if (node === selectedSlotOption || getNestedProperty(node, 'componentOptions.propsData.value') === this.value) {
            return applyProp(node, 'isFocused', true);
          }

          return _copyChildren(node, function (child) {
            (0, _newArrowCheck2.default)(this, _this10);

            if (child !== selectedSlotOption) {
              return child;
            }

            return applyProp(child, 'isFocused', true);
          }.bind(this));
        }.bind(this));
      }

      var hasDefaultSelected = slotOptions.some(function (option) {
        (0, _newArrowCheck2.default)(this, _this8);
        return this.query === option.key;
      }.bind(this));
      /* eslint-disable-next-line no-restricted-syntax */

      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = slotOptions[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var option = _step.value;
          var cOptions = option.componentOptions;

          if (!cOptions) {
            /* eslint-disable-next-line no-continue */
            continue;
          }

          if (cOptions.tag.match(optionGroupRegexp)) {
            var children = cOptions.children; // remove filtered children

            if (this.filterable) {
              children = children.filter(function (_ref5) {
                var componentOptions = _ref5.componentOptions;
                (0, _newArrowCheck2.default)(this, _this8);
                return this.validateOption(componentOptions);
              }.bind(this));
            }
            /* eslint-disable-next-line no-loop-func */


            cOptions.children = children.map(function (opt) {
              (0, _newArrowCheck2.default)(this, _this8);
              optionCounter += 1;
              return this.processOption(opt, selectedValues, optionCounter === currentIndex);
            }.bind(this)); // keep the group if it still has children

            if (cOptions.children.length > 0) {
              selectOptions.push((0, _objectSpread3.default)({}, option));
            }
          } else {
            // ignore option if not passing filter
            if (!hasDefaultSelected) {
              var optionPassesFilter = this.filterable ? this.validateOption(cOptions) : option;

              if (!optionPassesFilter) {
                /* eslint-disable-next-line no-continue */
                continue;
              }
            }

            optionCounter += 1;
            selectOptions.push(this.processOption(option, selectedValues, optionCounter === currentIndex));
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      return selectOptions;
    },
    selectTabindex: function selectTabindex() {
      return this.disabled || this.filterable ? -1 : 0;
    },
    showNotFoundLabel: function showNotFoundLabel() {
      var loading = this.loading,
          remote = this.remote,
          selectOptions = this.selectOptions;
      return selectOptions && selectOptions.length === 0 && (!remote || remote && !loading);
    },
    transitionName: function transitionName() {
      return this.placement === 'bottom' ? 'slide-up' : 'slide-down';
    }
  },
  watch: {
    dropVisible: function dropVisible(open) {
      this.broadcast('Drop', open ? 'on-update-popper' : 'on-destroy-popper');
    },
    focusIndex: function focusIndex(index) {
      var _this11 = this;

      if (index < 0 || this.autoComplete) {
        return;
      } // update scroll


      var optionValue = this.flatOptions[index].componentOptions.propsData.value;

      var optionInstance = _findChild(this, function (_ref6) {
        var $options = _ref6.$options;
        (0, _newArrowCheck2.default)(this, _this11);
        return $options.componentName === 'select-item' && $options.propsData.value === optionValue;
      }.bind(this));

      var bottomOverflowDistance = optionInstance.$el.getBoundingClientRect().bottom - this.$refs.dropdown.$el.getBoundingClientRect().bottom;
      var topOverflowDistance = optionInstance.$el.getBoundingClientRect().top - this.$refs.dropdown.$el.getBoundingClientRect().top;

      if (bottomOverflowDistance > 0) {
        this.$refs.dropdown.$el.scrollTop += bottomOverflowDistance;
      }

      if (topOverflowDistance < 0) {
        this.$refs.dropdown.$el.scrollTop += topOverflowDistance;
      }
    },
    isFocused: function isFocused(focused) {
      var el = this.filterable ? this.$el.querySelector('input[type="text"]') : this.$el;
      el[this.isFocused ? 'focus' : 'blur'](); // restore query value in filterable single selects

      var _this$values = (0, _slicedToArray2.default)(this.values, 1),
          selectedOption = _this$values[0];

      if (selectedOption && this.filterable && !this.multiple && !focused) {
        var selectedLabel = String(selectedOption.label || selectedOption.value).trim();

        if (selectedLabel && this.query !== selectedLabel) {
          this.preventRemoteCall = true;
          this.query = selectedLabel;
        }
      }
    },
    loading: function loading(state) {
      if (state === false) {
        this.updateSlotOptions();
      }
    },
    query: function query(_query) {
      var _this12 = this;

      this.$emit('on-query-change', _query);
      var remoteMethod = this.remoteMethod,
          lastRemoteQuery = this.lastRemoteQuery;
      var hasValidQuery = _query !== '' && (_query !== lastRemoteQuery || !lastRemoteQuery);
      var shouldCallRemoteMethod = remoteMethod && hasValidQuery && !this.preventRemoteCall;
      this.preventRemoteCall = false; // remove the flag

      if (shouldCallRemoteMethod) {
        this.focusIndex = -1;
        var promise = this.remoteMethod(_query);
        this.initialLabel = '';

        if (promise && promise.then) {
          promise.then(function (options) {
            (0, _newArrowCheck2.default)(this, _this12);

            if (options) {
              this.options = options;
            }

            return null;
          }.bind(this)).catch(function (error) {
            (0, _newArrowCheck2.default)(this, _this12);
            throw error;
          }.bind(this));
        }
      }

      if (_query !== '' && this.remote) {
        this.lastRemoteQuery = _query;
      }
    },
    selectOptions: function selectOptions() {
      if (this.hasExpectedValue && this.selectOptions.length > 0) {
        if (this.values.length === 0) {
          this.values = this.getInitialValue();
        }

        this.values = this.values.map(this.getOptionData).filter(Boolean);
        this.hasExpectedValue = false;
      }

      if (this.slotOptions && this.slotOptions.length === 0) {
        this.query = '';
      }
    },
    value: function value(_value) {
      var _this13 = this;

      var getInitialValue = this.getInitialValue,
          getOptionData = this.getOptionData,
          publicValue = this.publicValue;
      this.checkUpdateStatus();

      if (_value === '') {
        this.values = [];
      } else if (JSON.stringify(_value) !== JSON.stringify(publicValue)) {
        this.$nextTick(function () {
          (0, _newArrowCheck2.default)(this, _this13);
          this.values = getInitialValue().map(getOptionData).filter(Boolean);
        }.bind(this));
      }
    },
    values: function values(now, before) {
      var _this14 = this;

      var newValue = JSON.stringify(now);
      var oldValue = JSON.stringify(before);
      var vModelValue; // v-model is always just the value, event with labelInValue === true

      if (this.publicValue && this.labelInValue) {
        vModelValue = this.multiple ? this.publicValue.map(function (_ref7) {
          var value = _ref7.value;
          (0, _newArrowCheck2.default)(this, _this14);
          return value;
        }.bind(this)) : this.publicValue.value;
      } else {
        vModelValue = this.publicValue;
      }

      var shouldEmitInput = newValue !== oldValue && vModelValue !== this.value;

      if (shouldEmitInput) {
        this.$emit('input', vModelValue); // to update v-model

        this.$emit('on-change', this.publicValue);
        this.dispatch('FormItem', 'on-form-change', this.publicValue);
      }
    },
    visible: function visible(state) {
      this.$emit('on-open-change', state);
    }
  },
  mounted: function mounted() {
    var _this15 = this;

    this.$on('on-select-selected', this.onOptionClick); // set the initial values if there are any

    if (!this.remote && this.selectOptions.length > 0) {
      this.values = this.getInitialValue().map(function (value) {
        (0, _newArrowCheck2.default)(this, _this15);

        if (typeof value !== 'number' && !value) {
          return null;
        }

        return this.getOptionData(value);
      }.bind(this)).filter(Boolean);
    }

    this.checkUpdateStatus();
  },
  methods: {
    checkUpdateStatus: function checkUpdateStatus() {
      if (this.getInitialValue().length > 0 && this.selectOptions.length === 0) {
        this.hasExpectedValue = true;
      }
    },
    clearSingleSelect: function clearSingleSelect() {
      // PUBLIC API
      this.$emit('on-clear');
      this.hideMenu();

      if (this.clearable) {
        this.reset();
      }
    },
    getInitialValue: function getInitialValue() {
      var _this16 = this;

      var multiple = this.multiple,
          remote = this.remote,
          value = this.value;
      var initialValue = Array.isArray(value) ? value : [value];

      if (!multiple && (typeof initialValue[0] === 'undefined' || String(initialValue[0]).trim() === '' && !Number.isFinite(initialValue[0]))) {
        initialValue = [];
      }

      if (remote && !multiple && value) {
        var data = this.getOptionData(value);
        this.query = data ? data.label : String(value);
      }

      return initialValue.filter(function (item) {
        (0, _newArrowCheck2.default)(this, _this16);
        return Boolean(item) || item === 0;
      }.bind(this));
    },
    getOptionData: function getOptionData(value) {
      var _this17 = this;

      var option = this.flatOptions.find(function (_ref8) {
        var componentOptions = _ref8.componentOptions;
        (0, _newArrowCheck2.default)(this, _this17);
        return componentOptions.propsData.value === value;
      }.bind(this));

      if (!option) {
        return null;
      }

      var label = getOptionLabel(option);
      return {
        label: label,
        value: value
      };
    },
    handleKeydown: function handleKeydown(e) {
      var key = e.key;

      if ((0, _assist.oneOf)(key, ['Backspace', 'Delete'])) {
        return; // so we don't call preventDefault
      }

      if (this.visible) {
        e.preventDefault();

        if (key === 'Tab') {
          e.stopPropagation();
        } // Esc slide-up


        if ((0, _assist.oneOf)(key, ['Esc', 'Escape'])) {
          e.stopPropagation();
          this.hideMenu();
        } // next


        if ((0, _assist.oneOf)(key, ['Up', 'ArrowUp'])) {
          this.navigateOptions(-1);
        } // prev


        if ((0, _assist.oneOf)(key, ['Down', 'ArrowDown'])) {
          this.navigateOptions(1);
        } // enter


        if (key === 'Enter') {
          if (this.focusIndex === -1) {
            this.hideMenu();
            return;
          }

          var optionComponent = this.flatOptions[this.focusIndex];
          var option = this.getOptionData(optionComponent.componentOptions.propsData.value);
          this.onOptionClick(option);
        }
      } else {
        var keysThatCanOpenSelect = ['Up', 'ArrowUp', 'Down', 'ArrowDown'];

        if (keysThatCanOpenSelect.includes(key)) {
          this.toggleMenu(null, true);
        }
      }
    },
    hideMenu: function hideMenu() {
      var _this18 = this;

      this.toggleMenu(null, false);
      setTimeout(function () {
        (0, _newArrowCheck2.default)(this, _this18);
        this.unchangedQuery = true;
      }.bind(this), ANIMATION_TIMEOUT);
    },
    navigateOptions: function navigateOptions(direction) {
      var optionsLength = this.flatOptions.length - 1;
      var index = this.focusIndex + direction;

      if (index < 0) {
        index = optionsLength;
      }

      if (index > optionsLength) {
        index = 0;
      } // find nearest option in case of disabled options in between


      if (direction > 0) {
        var nearestActiveOption = -1;

        for (var i = 0; i < this.flatOptions.length; i += 1) {
          var optionIsActive = !this.flatOptions[i].componentOptions.propsData.disabled;

          if (optionIsActive) {
            nearestActiveOption = i;
          }

          if (nearestActiveOption >= index) {
            break;
          }
        }

        index = nearestActiveOption;
      } else {
        var _nearestActiveOption = this.flatOptions.length;

        for (var _i = optionsLength; _i >= 0; _i -= 1) {
          var _optionIsActive = !this.flatOptions[_i].componentOptions.propsData.disabled;

          if (_optionIsActive) {
            _nearestActiveOption = _i;
          }

          if (_nearestActiveOption <= index) {
            break;
          }
        }

        index = _nearestActiveOption;
      }

      this.focusIndex = index;
    },
    onClickOutside: function onClickOutside(event) {
      var _this19 = this;

      if (this.visible) {
        if (event.type === 'mousedown') {
          event.preventDefault();
          return;
        }

        if (this.transfer) {
          var $el = this.$refs.dropdown.$el;

          if ($el === event.target || $el.contains(event.target)) {
            return;
          }
        }

        if (this.filterable) {
          var input = this.$el.querySelector('input[type="text"]');
          this.caretPosition = input.selectionStart;
          this.$nextTick(function () {
            (0, _newArrowCheck2.default)(this, _this19);
            var caretPosition = this.caretPosition === -1 ? input.value.length : this.caretPosition;
            input.setSelectionRange(caretPosition, caretPosition);
          }.bind(this));
        }

        if (!this.autoComplete) {
          event.stopPropagation();
        }

        event.preventDefault();
        this.hideMenu();
        this.isFocused = true;
      } else {
        this.caretPosition = -1;
        this.isFocused = false;
      }
    },
    onKeydown: function onKeydown(event) {
      var key = event.key;

      if ((0, _assist.oneOf)(key, ['Esc', 'Escape'])) {
        this.handleKeydown(event);
      } else if (key === 'Enter') {
        this.handleKeydown(event);
      } else if ((0, _assist.oneOf)(key, ['Up', 'ArrowUp'])) {
        event.preventDefault();
        this.handleKeydown(event);
      } else if ((0, _assist.oneOf)(key, ['Down', 'ArrowDown'])) {
        event.preventDefault();
        this.handleKeydown(event);
      } else if (key === 'Tab') {
        this.handleKeydown(event);
      } else if ((0, _assist.oneOf)(key, ['Backspace', 'Delete'])) {
        this.handleKeydown(event);
      }
    },
    onOptionClick: function onOptionClick(option) {
      var _this20 = this;

      if (this.multiple) {
        // keep the query for remote select
        if (this.remote) {
          this.lastRemoteQuery = this.lastRemoteQuery || this.query;
        } else {
          this.lastRemoteQuery = '';
        }

        var valueIsSelected = this.values.find(function (_ref9) {
          var value = _ref9.value;
          (0, _newArrowCheck2.default)(this, _this20);
          return value === option.value;
        }.bind(this));

        if (valueIsSelected) {
          this.values = this.values.filter(function (_ref10) {
            var value = _ref10.value;
            (0, _newArrowCheck2.default)(this, _this20);
            return value !== option.value;
          }.bind(this));
        } else {
          this.values = this.values.concat(option);
        }

        this.isFocused = true; // so we put back focus after clicking with mouse on option elements
      } else {
        this.query = String(option.label).trim();
        this.values = [option];
        this.lastRemoteQuery = '';
        this.hideMenu();
      }

      this.focusIndex = this.flatOptions.findIndex(function (opt) {
        (0, _newArrowCheck2.default)(this, _this20);

        if (!opt || !opt.componentOptions) {
          return false;
        }

        return opt.componentOptions.propsData.value === option.value;
      }.bind(this));

      if (this.filterable) {
        var inputField = this.$el.querySelector('input[type="text"]');

        if (!this.autoComplete) {
          this.$nextTick(function () {
            (0, _newArrowCheck2.default)(this, _this20);
            return inputField.focus();
          }.bind(this));
        }
      }

      this.broadcast('Drop', 'on-update-popper');
    },
    onQueryChange: function onQueryChange(query) {
      if (query.length > 0 && query !== this.query) {
        this.visible = true;
      }

      this.query = query;
      this.unchangedQuery = this.visible;
    },
    processOption: function processOption(option, values, isFocused) {
      if (!option.componentOptions) {
        return option;
      }

      var optionValue = option.componentOptions.propsData.value;
      var disabled = option.componentOptions.propsData.disabled;
      var isSelected = values.includes(optionValue);
      var propsData = (0, _objectSpread3.default)({}, option.componentOptions.propsData, {
        disabled: typeof disabled === 'undefined' ? false : disabled !== false,
        isFocused: isFocused,
        selected: isSelected
      });
      return (0, _objectSpread3.default)({}, option, {
        componentOptions: (0, _objectSpread3.default)({}, option.componentOptions, {
          propsData: propsData
        })
      });
    },
    reset: function reset() {
      this.query = '';
      this.focusIndex = -1;
      this.unchangedQuery = true;
      this.values = [];
    },
    setQuery: function setQuery(query) {
      // PUBLIC API
      if (query) {
        this.onQueryChange(query);
        return;
      }

      if (query === null) {
        this.onQueryChange('');
        this.values = [];
      }
    },
    toggleHeaderFocus: function toggleHeaderFocus(_ref11) {
      var type = _ref11.type;

      if (this.disabled) {
        return;
      }

      this.isFocused = type === 'focus';
    },
    toggleMenu: function toggleMenu(e, force) {
      if (this.disabled) {
        return;
      }

      this.visible = typeof force !== 'undefined' ? force : !this.visible;

      if (this.visible) {
        this.dropDownWidth = this.$el.getBoundingClientRect().width;
        this.broadcast('Drop', 'on-update-popper');
      }
    },
    updateSlotOptions: function updateSlotOptions() {
      this.slotOptions = this.$slots.default;
    },
    validateOption: function validateOption(_ref12) {
      var _this21 = this;

      var children = _ref12.children,
          elm = _ref12.elm,
          propsData = _ref12.propsData;

      if (this.queryStringMatchesSelectedOption) {
        return true;
      }

      var value = propsData.value;
      var label = propsData.label || '';
      var textContent = elm && elm.textContent.trim() || (children || []).reduce(function (str, node) {
        (0, _newArrowCheck2.default)(this, _this21);
        var nodeText = node.elm ? node.elm.textContent.trim() : node.text;
        return "".concat(str, " ").concat(nodeText);
      }.bind(this), '') || '';
      var stringValues = JSON.stringify([value, label, textContent.trim()]);
      var query = this.query.toLowerCase().trim();
      return stringValues.toLowerCase().includes(query);
    }
  }
};
exports.default = _default;

/***/ }),
/* 65 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_dropdown_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(66);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_dropdown_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_dropdown_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_dropdown_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_dropdown_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_dropdown_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _vue = _interopRequireDefault(__webpack_require__(5));

var _noop = _interopRequireDefault(__webpack_require__(13));

var _assist = __webpack_require__(6);

var logger = __webpack_require__(0).get("iview:components:select:dropdown.vue");

var isServer = _vue.default.prototype.$isServer;
var Popper = isServer ? _noop.default : __webpack_require__(382);
var _default = {
  name: 'Drop',
  props: {
    className: {
      default: undefined,
      type: String
    },
    placement: {
      default: 'bottom-start',
      type: String
    }
  },
  data: function data() {
    return {
      popper: null,
      popperStatus: false,
      width: ''
    };
  },
  computed: {
    styles: function styles() {
      var style = {};

      if (this.width) {
        style.width = "".concat(this.width, "px");
      }

      return style;
    }
  },
  created: function created() {
    this.$on('on-update-popper', this.update);
    this.$on('on-destroy-popper', this.destroy);
  },
  beforeDestroy: function beforeDestroy() {
    if (this.popper) {
      this.popper.destroy();
    }
  },
  methods: {
    destroy: function destroy() {
      var _this = this;

      if (this.popper) {
        setTimeout(function () {
          (0, _newArrowCheck2.default)(this, _this);

          if (this.popper && !this.popperStatus) {
            this.popper.destroy();
            this.popper = null;
          }

          this.popperStatus = false;
        }.bind(this), 300);
      }
    },
    resetTransformOrigin: function resetTransformOrigin() {
      // 不判断，Select 会报错，不知道为什么
      if (!this.popper) {
        return;
      }

      var xPlacement = this.popper.popper.getAttribute('x-placement');
      var placementStart = xPlacement.split('-')[0];
      var placementEnd = xPlacement.split('-')[1];
      var leftOrRight = xPlacement === 'left' || xPlacement === 'right';

      if (!leftOrRight) {
        this.popper.popper.style.transformOrigin = placementStart === 'bottom' || placementStart !== 'top' && placementEnd === 'start' ? 'center top' : 'center bottom';
      }
    },
    update: function update() {
      var _this2 = this;

      if (isServer) {
        return;
      }

      if (this.popper) {
        this.$nextTick(function () {
          (0, _newArrowCheck2.default)(this, _this2);
          this.popper.update();
          this.popperStatus = true;
        }.bind(this));
      } else {
        this.$nextTick(function () {
          var _this3 = this;

          (0, _newArrowCheck2.default)(this, _this2);
          this.popper = new Popper(this.$parent.$refs.reference, this.$el, {
            modifiers: {
              computeStyle: {
                gpuAcceleration: false
              },
              preventOverflow: {
                boundariesElement: 'window'
              }
            },
            onCreate: function onCreate() {
              (0, _newArrowCheck2.default)(this, _this3);
              this.resetTransformOrigin();
              this.$nextTick(this.popper.update());
            }.bind(this),
            onUpdate: function onUpdate() {
              (0, _newArrowCheck2.default)(this, _this3);
              this.resetTransformOrigin();
            }.bind(this),
            placement: this.placement
          });
        }.bind(this));
      } // set a height for parent is Modal and Select's width is 100%


      if (this.$parent.$options.name === 'ISelect') {
        this.width = parseInt((0, _assist.getStyle)(this.$parent.$el, 'width'), 10);
      }
    }
  }
};
exports.default = _default;

/***/ }),
/* 67 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_select_head_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(68);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_select_head_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_select_head_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_select_head_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_select_head_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_select_head_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _slicedToArray2 = _interopRequireDefault(__webpack_require__(20));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _stubArray = _interopRequireDefault(__webpack_require__(14));

var _icon = _interopRequireDefault(__webpack_require__(19));

var _emitter = _interopRequireDefault(__webpack_require__(9));

var _locale = _interopRequireDefault(__webpack_require__(10));

var _assist = __webpack_require__(6);

var logger = __webpack_require__(0).get("iview:components:select:select-head.vue");

var prefixCls = 'byx-select';
var _default = {
  name: 'ISelectHead',
  components: {
    Icon: _icon.default
  },
  mixins: [_emitter.default, _locale.default],
  props: {
    clearable: {
      default: false,
      type: [Function, Boolean]
    },
    disabled: {
      default: false,
      type: Boolean
    },
    filterable: {
      default: false,
      type: Boolean
    },
    initialLabel: {
      default: undefined,
      type: [String, Number, Array]
    },
    inputElementId: {
      default: undefined,
      type: String
    },
    multiple: {
      default: false,
      type: Boolean
    },
    placeholder: {
      default: undefined,
      type: String
    },
    queryProp: {
      default: '',
      type: String
    },
    remote: {
      default: false,
      type: Boolean
    },
    values: {
      default: _stubArray.default,
      type: Array
    }
  },
  data: function data() {
    return {
      inputLength: 20,
      prefixCls: prefixCls,
      preventRemoteCall: false,
      query: '',
      remoteInitialLabel: this.initialLabel
    };
  },
  computed: {
    iconClasses: function iconClasses() {
      return ["".concat(prefixCls, "-arrow")];
    },
    inputStyle: function inputStyle() {
      var style = {};

      if (this.multiple) {
        if (this.showPlaceholder) {
          style.width = '100%';
        } else {
          style.width = "".concat(this.inputLength, "px");
        }
      }

      return style;
    },
    localePlaceholder: function localePlaceholder() {
      if (this.placeholder === undefined) {
        return this.t('i.select.placeholder');
      }

      return this.placeholder;
    },
    resetSelect: function resetSelect() {
      return !this.showPlaceholder && this.clearable;
    },
    selectedMultiple: function selectedMultiple() {
      return this.multiple ? this.values : [];
    },
    selectedSingle: function selectedSingle() {
      var selected = this.values[0];
      return selected ? selected.label : this.remoteInitialLabel || '';
    },
    showPlaceholder: function showPlaceholder() {
      var status = false;

      if (!this.multiple) {
        var value = this.values[0];

        if (typeof value === 'undefined' || String(value).trim() === '') {
          status = !this.remoteInitialLabel;
        }
      } else if (!this.values.length > 0) {
        status = true;
      }

      return status;
    },
    singleDisplayClasses: function singleDisplayClasses() {
      var _ref;

      var filterable = this.filterable,
          multiple = this.multiple,
          showPlaceholder = this.showPlaceholder;
      return [(_ref = {}, (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-placeholder"), showPlaceholder && !filterable), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-selected-value"), !showPlaceholder && !multiple && !filterable), _ref)];
    },
    singleDisplayValue: function singleDisplayValue() {
      if (this.multiple && this.values.length > 0 || this.filterable) {
        return '';
      }

      return "".concat(this.selectedSingle) || this.localePlaceholder;
    }
  },
  watch: {
    query: function query(val) {
      if (this.preventRemoteCall) {
        this.preventRemoteCall = false;
        return;
      }

      this.$emit('on-query-change', val);
    },
    queryProp: function queryProp(query) {
      if (query !== this.query) {
        this.query = query;
      }
    },
    values: function values(_ref2) {
      var _this = this;

      var _ref3 = (0, _slicedToArray2.default)(_ref2, 1),
          value = _ref3[0];

      if (!this.filterable) {
        return;
      }

      this.preventRemoteCall = true;

      if (this.multiple) {
        this.query = '';
        this.preventRemoteCall = false; // this should be after the query change setter above

        return;
      } // #982


      if (typeof value === 'undefined' || value === '' || value === null) {
        if (!this.query) {
          this.query = '';
        }
      } else {
        this.query = value.label;
      }

      this.$nextTick(function () {
        (0, _newArrowCheck2.default)(this, _this);
        this.preventRemoteCall = false;
      }.bind(this)); // this should be after the query change setter above
    }
  },
  methods: {
    handleInputDelete: function handleInputDelete() {
      if (this.multiple && this.selectedMultiple.length && this.query === '') {
        this.removeTag(this.selectedMultiple[this.selectedMultiple.length - 1]);
      }
    },
    onClear: function onClear() {
      this.$emit('on-clear');
    },
    onHeaderClick: function onHeaderClick(e) {
      if (this.filterable && e.target === this.$el) {
        this.$refs.input.focus();
      }
    },
    onInputFocus: function onInputFocus(e) {
      this.$emit(e.type === 'focus' ? 'on-input-focus' : 'on-input-blur');
    },
    onKeydown: function onKeydown(event) {
      if ((0, _assist.oneOf)(event.key, ['Backspace', 'Delete'])) {
        this.handleInputDelete(event);
      }

      this.resetInputState(event);
    },
    removeTag: function removeTag(value) {
      if (this.disabled) {
        return;
      }

      this.dispatch('ISelect', 'on-select-selected', value);
    },
    resetInputState: function resetInputState() {
      this.inputLength = this.$refs.input.value.length * 12 + 20;
    }
  }
};
exports.default = _default;

/***/ }),
/* 69 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_functional_options_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(70);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_functional_options_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_functional_options_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_functional_options_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_functional_options_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_functional_options_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _noop = _interopRequireDefault(__webpack_require__(13));

var _stubArray = _interopRequireDefault(__webpack_require__(14));

var logger = __webpack_require__(0).get("iview:components:select:functional-options.vue");

var _default = {
  functional: true,
  props: {
    options: {
      default: _stubArray.default,
      type: Array
    },
    slotOptions: {
      default: _stubArray.default,
      type: Array
    },
    slotUpdateHook: {
      default: _noop.default,
      type: Function
    }
  },
  render: function render(h, _ref) {
    var props = _ref.props,
        parent = _ref.parent;

    // to detect changes in the $slot children/options we do this hack
    // so we can trigger the parents computed properties and have everything reactive
    // although $slot.default is not
    if (props.slotOptions !== parent.$slots.default) {
      props.slotUpdateHook();
    }

    return props.options;
  }
};
exports.default = _default;

/***/ }),
/* 71 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_option_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(72);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_option_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_option_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_option_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_option_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_option_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _emitter = _interopRequireDefault(__webpack_require__(9));

var _assist = __webpack_require__(6);

var logger = __webpack_require__(0).get("iview:components:select:option.vue");

var prefixCls = 'byx-select-item';
var _default = {
  name: 'IOption',
  componentName: 'select-item',
  mixins: [_emitter.default],
  props: {
    disabled: {
      default: false,
      type: Boolean
    },
    isFocused: {
      default: false,
      type: Boolean
    },
    label: {
      default: undefined,
      type: [String, Number]
    },
    postIconName: {
      default: '',
      type: String
    },
    preIconName: {
      default: '',
      type: String
    },
    selected: {
      default: false,
      type: Boolean
    },
    value: {
      required: true,
      type: [String, Number]
    }
  },
  data: function data() {
    return {
      autoComplete: false,
      // the slot value (textContent)
      searchLabel: ''
    };
  },
  computed: {
    classes: function classes() {
      var _ref;

      return ["".concat(prefixCls), (_ref = {}, (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-disabled"), this.disabled), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-selected"), this.selected && !this.autoComplete), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-focus"), this.isFocused), _ref)];
    },
    hasDefaultSlot: function hasDefaultSlot() {
      return Boolean(this.$slots.default);
    },
    optionLabel: function optionLabel() {
      return this.label || this.$el && this.$el.textContent.trim();
    },
    showLabel: function showLabel() {
      return this.label ? this.label : this.value;
    }
  },
  mounted: function mounted() {
    var Select = (0, _assist.findComponentUpward)(this, 'ISelect');

    if (Select) {
      this.autoComplete = Select.autoComplete;
    }
  },
  methods: {
    select: function select() {
      if (this.disabled) {
        return;
      }

      this.dispatch('ISelect', 'on-select-selected', {
        label: this.optionLabel,
        value: this.value
      });
      this.$emit('on-select-selected', {
        label: this.optionLabel,
        value: this.value
      });
    }
  }
};
exports.default = _default;

/***/ }),
/* 73 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_input_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(74);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_input_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_input_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_input_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_input_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_input_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _assist = __webpack_require__(6);

var _calcTextareaHeight = _interopRequireDefault(__webpack_require__(481));

var _emitter = _interopRequireDefault(__webpack_require__(9));

var logger = __webpack_require__(0).get("iview:components:input:input.vue");

var prefixCls = 'ivu-input';
var _default = {
  name: 'Input',
  mixins: [_emitter.default],
  props: {
    autocomplete: {
      default: 'off',
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['on', 'off']);
      }
    },
    autofocus: {
      default: false,
      type: Boolean
    },
    autosize: {
      default: false,
      type: [Boolean, Object]
    },
    clearable: {
      default: false,
      type: Boolean
    },
    disabled: {
      default: false,
      type: Boolean
    },
    elementId: {
      default: undefined,
      type: String
    },
    icon: {
      default: undefined,
      type: String
    },
    maxlength: {
      default: undefined,
      type: Number
    },
    name: {
      default: undefined,
      type: String
    },
    number: {
      default: false,
      type: Boolean
    },
    placeholder: {
      default: '',
      type: String
    },
    readonly: {
      default: false,
      type: Boolean
    },
    rows: {
      default: 2,
      type: Number
    },
    size: {
      default: undefined,
      type: String,
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['small', 'large', 'default']);
      }
    },
    spellcheck: {
      default: false,
      type: Boolean
    },
    type: {
      default: 'text',
      type: String,
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['text', 'textarea', 'password', 'url', 'email', 'date']);
      }
    },
    value: {
      default: '',
      type: [String, Number]
    },
    wrap: {
      default: 'soft',
      type: String,
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['hard', 'soft']);
      }
    }
  },
  data: function data() {
    return {
      append: true,
      currentValue: this.value,
      prefixCls: prefixCls,
      prepend: true,
      slotReady: false,
      textareaStyles: {}
    };
  },
  computed: {
    inputClasses: function inputClasses() {
      var _ref;

      return ["".concat(prefixCls), (_ref = {}, (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-").concat(this.size), !!this.size), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-disabled"), this.disabled), _ref)];
    },
    textareaClasses: function textareaClasses() {
      return ["".concat(prefixCls), (0, _defineProperty2.default)({}, "".concat(prefixCls, "-disabled"), this.disabled)];
    },
    wrapClasses: function wrapClasses() {
      var _ref3;

      return ["".concat(prefixCls, "-wrapper"), (_ref3 = {}, (0, _defineProperty2.default)(_ref3, "".concat(prefixCls, "-wrapper-").concat(this.size), !!this.size), (0, _defineProperty2.default)(_ref3, "".concat(prefixCls, "-type"), this.type), (0, _defineProperty2.default)(_ref3, "".concat(prefixCls, "-group"), this.prepend || this.append), (0, _defineProperty2.default)(_ref3, "".concat(prefixCls, "-group-").concat(this.size), (this.prepend || this.append) && !!this.size), (0, _defineProperty2.default)(_ref3, "".concat(prefixCls, "-group-with-prepend"), this.prepend), (0, _defineProperty2.default)(_ref3, "".concat(prefixCls, "-group-with-append"), this.append), (0, _defineProperty2.default)(_ref3, "".concat(prefixCls, "-hide-icon"), this.append), _ref3)];
    }
  },
  watch: {
    value: function value(val) {
      this.setCurrentValue(val);
    }
  },
  mounted: function mounted() {
    if (this.type !== 'textarea') {
      this.prepend = this.$slots.prepend !== undefined;
      this.append = this.$slots.append !== undefined;
    } else {
      this.prepend = false;
      this.append = false;
    }

    this.slotReady = true;
    this.resizeTextarea();
  },
  methods: {
    blur: function blur() {
      if (this.type === 'textarea') {
        this.$refs.textarea.blur();
      } else {
        this.$refs.input.blur();
      }
    },
    focus: function focus() {
      if (this.type === 'textarea') {
        this.$refs.textarea.focus();
      } else {
        this.$refs.input.focus();
      }
    },
    handleBlur: function handleBlur(event) {
      this.$emit('on-blur', event);

      if (!(0, _assist.findComponentUpward)(this, ['DatePicker', 'TimePicker', 'Cascader', 'Search'])) {
        this.dispatch('FormItem', 'on-form-blur', this.currentValue);
      }
    },
    handleChange: function handleChange(event) {
      this.$emit('on-input-change', event);
    },
    handleClear: function handleClear() {
      var e = {
        target: {
          value: ''
        }
      };
      this.$emit('input', '');
      this.setCurrentValue('');
      this.$emit('on-change', e);
    },
    handleEnter: function handleEnter(event) {
      this.$emit('on-enter', event);
    },
    handleFocus: function handleFocus(event) {
      this.$emit('on-focus', event);
    },
    handleIconClick: function handleIconClick(event) {
      this.$emit('on-click', event);
    },
    handleInput: function handleInput(event) {
      var value = event.target.value;

      if (this.number) {
        value = Number.isNaN(Number(value)) ? value : Number(value);
      }

      this.$emit('input', value);
      this.setCurrentValue(value);
      this.$emit('on-change', event);
    },
    handleKeydown: function handleKeydown(event) {
      this.$emit('on-keydown', event);
    },
    handleKeypress: function handleKeypress(event) {
      this.$emit('on-keypress', event);
    },
    handleKeyup: function handleKeyup(event) {
      this.$emit('on-keyup', event);
    },
    onKeyup: function onKeyup(event) {
      if (event.key === 'Enter') {
        this.handleEnter(event);
      } else {
        this.handleKeyup(event);
      }
    },
    resizeTextarea: function resizeTextarea() {
      var autosize = this.autosize;

      if (!autosize || this.type !== 'textarea') {
        return;
      }

      var minRows = autosize.minRows;
      var maxRows = autosize.maxRows;
      this.textareaStyles = (0, _calcTextareaHeight.default)(this.$refs.textarea, minRows, maxRows);
    },
    setCurrentValue: function setCurrentValue(value) {
      var _this = this;

      if (value === this.currentValue) {
        return;
      }

      this.$nextTick(function () {
        (0, _newArrowCheck2.default)(this, _this);
        this.resizeTextarea();
      }.bind(this));
      this.currentValue = value;

      if (!(0, _assist.findComponentUpward)(this, ['DatePicker', 'TimePicker', 'Cascader', 'Search'])) {
        this.dispatch('FormItem', 'on-form-change', value);
      }
    }
  }
};
exports.default = _default;

/***/ }),
/* 75 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_avatar_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_avatar_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_avatar_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_avatar_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_avatar_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_avatar_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _icon = _interopRequireDefault(__webpack_require__(19));

var _assist = __webpack_require__(6);

var logger = __webpack_require__(0).get("iview:components:avatar:avatar.vue");

var prefixCls = 'ivu-avatar';
var _default = {
  name: 'Avatar',
  components: {
    Icon: _icon.default
  },
  props: {
    icon: {
      default: undefined,
      type: String
    },
    shape: {
      default: 'circle',
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['circle', 'square']);
      }
    },
    size: {
      default: 'default',
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['small', 'large', 'default']);
      }
    },
    src: {
      default: undefined,
      type: String
    }
  },
  data: function data() {
    return {
      childrenWidth: 0,
      isSlotShow: false,
      prefixCls: prefixCls,
      scale: 1
    };
  },
  computed: {
    childrenStyle: function childrenStyle() {
      var style = {};

      if (this.isSlotShow) {
        style = {
          display: 'inline-block',
          left: "calc(50% - ".concat(Math.round(this.childrenWidth / 2), "px)"),
          msTransform: "scale(".concat(this.scale, ")"),
          position: 'absolute',
          transform: "scale(".concat(this.scale, ")"),
          WebkitTransform: "scale(".concat(this.scale, ")")
        };
      }

      return style;
    },
    classes: function classes() {
      var _ref;

      return ["".concat(prefixCls), "".concat(prefixCls, "-").concat(this.shape), "".concat(prefixCls, "-").concat(this.size), (_ref = {}, (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-image"), !!this.src), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-icon"), !!this.icon), _ref)];
    }
  },
  mounted: function mounted() {
    this.setScale();
  },
  updated: function updated() {
    this.setScale();
  },
  methods: {
    setScale: function setScale() {
      this.isSlotShow = !this.src && !this.icon;

      if (this.$refs.children) {
        // set children width again to make slot centered
        this.childrenWidth = this.$refs.children.offsetWidth;
        var avatarWidth = this.$el.getBoundingClientRect().width; // add 4px gap for each side to get better performance

        if (avatarWidth - 8 < this.childrenWidth) {
          this.scale = (avatarWidth - 8) / this.childrenWidth;
        } else {
          this.scale = 1;
        }
      }
    }
  }
};
exports.default = _default;

/***/ }),
/* 77 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_back_top_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(78);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_back_top_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_back_top_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_back_top_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_back_top_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_back_top_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _assist = __webpack_require__(6);

var _dom = __webpack_require__(18);

var logger = __webpack_require__(0).get("iview:components:back-top:back-top.vue");

var prefixCls = 'ivu-back-top';
var _default = {
  props: {
    bottom: {
      default: 30,
      type: Number
    },
    duration: {
      default: 1000,
      type: Number
    },
    height: {
      default: 400,
      type: Number
    },
    right: {
      default: 30,
      type: Number
    }
  },
  data: function data() {
    return {
      backTop: false
    };
  },
  computed: {
    classes: function classes() {
      return ["".concat(prefixCls), (0, _defineProperty2.default)({}, "".concat(prefixCls, "-show"), this.backTop)];
    },
    innerClasses: function innerClasses() {
      return "".concat(prefixCls, "-inner");
    },
    styles: function styles() {
      return {
        bottom: "".concat(this.bottom, "px"),
        right: "".concat(this.right, "px")
      };
    }
  },
  mounted: function mounted() {
    //            window.addEventListener('scroll', this.handleScroll, false);
    //            window.addEventListener('resize', this.handleScroll, false);
    (0, _dom.on)(window, 'scroll', this.handleScroll);
    (0, _dom.on)(window, 'resize', this.handleScroll);
  },
  beforeDestroy: function beforeDestroy() {
    //            window.removeEventListener('scroll', this.handleScroll, false);
    //            window.removeEventListener('resize', this.handleScroll, false);
    (0, _dom.off)(window, 'scroll', this.handleScroll);
    (0, _dom.off)(window, 'resize', this.handleScroll);
  },
  methods: {
    back: function back() {
      var sTop = document.documentElement.scrollTop || document.body.scrollTop;
      (0, _assist.scrollTop)(window, sTop, 0, this.duration);
      this.$emit('on-click');
    },
    handleScroll: function handleScroll() {
      this.backTop = window.pageYOffset >= this.height;
    }
  }
};
exports.default = _default;

/***/ }),
/* 79 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_badge_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(80);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_badge_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_badge_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_badge_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_badge_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_badge_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var logger = __webpack_require__(0).get("iview:components:badge:badge.vue");

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var prefixCls = 'ivu-badge';
var _default = {
  name: 'Badge',
  props: {
    className: {
      default: undefined,
      type: String
    },
    count: {
      default: undefined,
      type: [Number, String]
    },
    dot: {
      default: false,
      type: Boolean
    },
    overflowCount: {
      default: 99,
      type: [Number, String]
    }
  },
  computed: {
    alone: function alone() {
      return this.$slots.default === undefined;
    },
    badge: function badge() {
      var status = false;

      if (this.count) {
        status = !(parseInt(this.count, 10) === 0);
      }

      if (this.dot) {
        status = true;

        if (this.count !== null) {
          if (parseInt(this.count, 10) === 0) {
            status = false;
          }
        }
      }

      return status;
    },
    classes: function classes() {
      return "".concat(prefixCls);
    },
    countClasses: function countClasses() {
      var _ref;

      return ["".concat(prefixCls, "-count"), (_ref = {}, (0, _defineProperty2.default)(_ref, "".concat(this.className), !!this.className), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-count-alone"), this.alone), _ref)];
    },
    dotClasses: function dotClasses() {
      return "".concat(prefixCls, "-dot");
    },
    finalCount: function finalCount() {
      return parseInt(this.count, 10) >= parseInt(this.overflowCount, 10) ? "".concat(this.overflowCount, "+") : this.count;
    }
  }
};
exports.default = _default;

/***/ }),
/* 81 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_breadcrumb_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(82);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_breadcrumb_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_breadcrumb_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_breadcrumb_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_breadcrumb_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_breadcrumb_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var logger = __webpack_require__(0).get("iview:components:breadcrumb:breadcrumb.vue");

//
//
//
//
//
var prefixCls = 'ivu-breadcrumb';
var _default = {
  name: 'Breadcrumb',
  props: {
    separator: {
      default: '/',
      type: String
    }
  },
  computed: {
    classes: function classes() {
      return "".concat(prefixCls);
    }
  },
  watch: {
    separator: function separator() {
      this.updateChildren();
    }
  },
  mounted: function mounted() {
    this.updateChildren();
  },
  updated: function updated() {
    var _this = this;

    this.$nextTick(function () {
      (0, _newArrowCheck2.default)(this, _this);
      this.updateChildren();
    }.bind(this));
  },
  methods: {
    updateChildren: function updateChildren() {
      var _this2 = this;

      this.$children.forEach(function (child) {
        (0, _newArrowCheck2.default)(this, _this2);
        child.separator = this.separator;
      }.bind(this));
    }
  }
};
exports.default = _default;

/***/ }),
/* 83 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_breadcrumb_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(84);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_breadcrumb_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_breadcrumb_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_breadcrumb_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_breadcrumb_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_breadcrumb_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var logger = __webpack_require__(0).get("iview:components:breadcrumb:breadcrumb-item.vue");

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
// todo 3.0 时废弃 href
var prefixCls = 'ivu-breadcrumb-item';
var _default = {
  name: 'BreadcrumbItem',
  props: {
    href: {
      default: undefined,
      type: [Object, String]
    },
    replace: {
      default: false,
      type: Boolean
    },
    to: {
      default: undefined,
      type: [Object, String]
    }
  },
  data: function data() {
    return {
      separator: '',
      showSeparator: false
    };
  },
  computed: {
    linkClasses: function linkClasses() {
      return "".concat(prefixCls, "-link");
    },
    separatorClasses: function separatorClasses() {
      return "".concat(prefixCls, "-separator");
    }
  },
  mounted: function mounted() {
    this.showSeparator = typeof this.$slots.separator !== 'undefined';
  },
  methods: {
    handleClick: function handleClick() {
      // const isRoute = this.$router;
      if (this.replace) {
        if (this.replace) {
          this.$router.replace(this.to || this.href);
        } else {
          this.$router.push(this.to || this.href);
        }
      } else {
        window.location.href = this.to || this.href;
      }
    }
  }
};
exports.default = _default;

/***/ }),
/* 85 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_button_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(86);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_button_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_button_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_button_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_button_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_button_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireWildcard = __webpack_require__(35);

var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isOneOfSizes = isOneOfSizes;
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _icon = _interopRequireWildcard(__webpack_require__(19));

var _isOneOf = _interopRequireDefault(__webpack_require__(256));

var _not = _interopRequireDefault(__webpack_require__(7));

var logger = __webpack_require__(0).get("iview:components:button:button.vue");

var prefixCls = 'byx-btn';
var DEFAULT = 'default';
var BUTTON = 'button';
var SUBMIT = 'submit';
var RESET = 'RESET';
var HTML_TYPES = Object.freeze([BUTTON, SUBMIT, RESET]);
var SMALL = 'small';
var LARGE = 'large';
var SIZES = Object.freeze([SMALL, LARGE, DEFAULT]);

function isOneOfSizes(value) {
  return (0, _isOneOf.default)(value, SIZES);
}

var PRIMARY = 'primary';
var TEXT = 'text';
var INFO = 'info';
var SUCCESS = 'success';
var WARNING = 'warning';
var ERROR = 'error';
var TYPES = Object.freeze([PRIMARY, TEXT, INFO, SUCCESS, WARNING, ERROR, DEFAULT]);
var _default = {
  name: 'Button',
  components: {
    Icon: _icon.default
  },
  props: {
    disabled: {
      default: false,
      type: Boolean
    },
    htmlType: {
      default: BUTTON,
      validator: function validator(value) {
        return (0, _isOneOf.default)(value, HTML_TYPES);
      }
    },
    icon: {
      default: undefined,
      type: String,
      validator: _icon.isOneOfIconNames
    },
    iconWeight: {
      default: undefined,
      type: String,
      validator: _icon.isOneOfIconWeights
    },
    loading: {
      default: false,
      type: Boolean
    },
    long: {
      default: false,
      type: Boolean
    },
    size: {
      default: undefined,
      type: String,
      validator: function validator(value) {
        return (0, _isOneOf.default)(value, SIZES);
      }
    },
    type: {
      default: undefined,
      type: String,
      validator: function validator(value) {
        return (0, _isOneOf.default)(value, TYPES);
      }
    }
  },
  computed: {
    classes: function classes() {
      var _ref;

      return ["".concat(prefixCls), (_ref = {}, (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-").concat(this.type), this.type), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-long"), this.long), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-").concat(this.size), this.size), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-loading"), this.loading), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-icon-only"), (0, _not.default)(this.showSlot) && (this.icon || this.loading)), _ref)];
    },
    showIcon: function showIcon() {
      return Boolean(this.icon) && (0, _not.default)(this.loading);
    },
    showSlot: function showSlot() {
      return Boolean(this.$slots.default);
    }
  }
};
exports.default = _default;

/***/ }),
/* 87 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_button_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(88);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_button_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_button_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_button_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_button_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_button_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _button = __webpack_require__(22);

var logger = __webpack_require__(0).get("iview:components:button:button-group.vue");

var prefixCls = 'byx-btn-group';
var _default = {
  name: 'ButtonGroup',
  props: {
    size: {
      default: undefined,
      type: String,
      validator: _button.isOneOfSizes
    }
  },
  computed: {
    classes: function classes() {
      return ["".concat(prefixCls), (0, _defineProperty2.default)({}, "".concat(prefixCls, "-").concat(this.size), this.size)];
    }
  }
};
exports.default = _default;

/***/ }),
/* 89 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_card_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(90);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_card_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_card_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_card_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_card_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_card_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _icon = _interopRequireDefault(__webpack_require__(12));

var logger = __webpack_require__(0).get("iview:components:card:card.vue");

var prefixCls = 'ivu-card';
var defaultPadding = 16;
var _default = {
  name: 'Card',
  components: {
    Icon: _icon.default
  },
  props: {
    bordered: {
      default: true,
      type: Boolean
    },
    disHover: {
      default: false,
      type: Boolean
    },
    icon: {
      default: undefined,
      type: String
    },
    padding: {
      default: defaultPadding,
      type: Number
    },
    shadow: {
      default: false,
      type: Boolean
    },
    title: {
      default: undefined,
      type: String
    }
  },
  data: function data() {
    return {
      showExtra: true,
      showHead: true
    };
  },
  computed: {
    bodyClasses: function bodyClasses() {
      return "".concat(prefixCls, "-body");
    },
    bodyStyles: function bodyStyles() {
      if (this.padding !== defaultPadding) {
        return {
          padding: "".concat(this.padding, "px")
        };
      }

      return '';
    },
    classes: function classes() {
      var _ref;

      return ["".concat(prefixCls), (_ref = {}, (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-bordered"), this.bordered && !this.shadow), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-dis-hover"), this.disHover || this.shadow), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-shadow"), this.shadow), _ref)];
    },
    extraClasses: function extraClasses() {
      return "".concat(prefixCls, "-extra");
    },
    headClasses: function headClasses() {
      return "".concat(prefixCls, "-head");
    }
  },
  mounted: function mounted() {
    this.showHead = this.title || typeof this.$slots.title !== 'undefined';
    this.showExtra = typeof this.$slots.extra !== 'undefined';
  }
};
exports.default = _default;

/***/ }),
/* 91 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_carousel_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(92);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_carousel_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_carousel_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_carousel_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_carousel_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_carousel_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _icon = _interopRequireDefault(__webpack_require__(12));

var _assist = __webpack_require__(6);

var _dom = __webpack_require__(18);

var logger = __webpack_require__(0).get("iview:components:carousel:carousel.vue");

var prefixCls = 'ivu-carousel';
var _default = {
  name: 'Carousel',
  components: {
    Icon: _icon.default
  },
  props: {
    arrow: {
      default: 'hover',
      type: String,
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['hover', 'always', 'never']);
      }
    },
    autoplay: {
      default: false,
      type: Boolean
    },
    autoplaySpeed: {
      default: 2000,
      type: Number
    },
    dots: {
      default: 'inside',
      type: String,
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['inside', 'outside', 'none']);
      }
    },
    easing: {
      default: 'ease',
      type: String
    },
    height: {
      default: 'auto',
      type: [String, Number],
      validator: function validator(value) {
        return value === 'auto' || Object.prototype.toString.call(value) === '[object Number]';
      }
    },
    loop: {
      default: false,
      type: Boolean
    },
    radiusDot: {
      default: false,
      type: Boolean
    },
    trigger: {
      default: 'click',
      type: String,
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['click', 'hover']);
      }
    },
    value: {
      default: 0,
      type: Number
    }
  },
  data: function data() {
    return {
      copyTrackIndex: this.value,
      currentIndex: this.value,
      // 默认左滑
      hideTrackPos: -1,
      listWidth: 0,
      prefixCls: prefixCls,
      ready: false,
      showCopyTrack: false,
      slideInstances: [],
      slides: [],
      timer: null,
      trackCopyOffset: 0,
      trackIndex: this.value,
      trackOffset: 0,
      trackWidth: 0
    };
  },
  computed: {
    arrowClasses: function arrowClasses() {
      return ["".concat(prefixCls, "-arrow"), "".concat(prefixCls, "-arrow-").concat(this.arrow)];
    },
    classes: function classes() {
      return ["".concat(prefixCls)];
    },
    copyTrackStyles: function copyTrackStyles() {
      return {
        position: 'absolute',
        top: 0,
        transform: "translate3d(".concat(-this.trackCopyOffset, "px, 0px, 0px)"),
        transition: "transform 500ms ".concat(this.easing),
        width: "".concat(this.trackWidth, "px")
      };
    },
    dotsClasses: function dotsClasses() {
      return ["".concat(prefixCls, "-dots"), "".concat(prefixCls, "-dots-").concat(this.dots)];
    },
    trackStyles: function trackStyles() {
      return {
        transform: "translate3d(".concat(-this.trackOffset, "px, 0px, 0px)"),
        transition: "transform 500ms ".concat(this.easing),
        width: "".concat(this.trackWidth, "px")
      };
    }
  },
  watch: {
    autoplay: function autoplay() {
      this.setAutoplay();
    },
    autoplaySpeed: function autoplaySpeed() {
      this.setAutoplay();
    },
    copyTrackIndex: function copyTrackIndex() {
      this.updateOffset();
    },
    height: function height() {
      this.updatePos();
    },
    trackIndex: function trackIndex() {
      this.updateOffset();
    },
    value: function value(val) {
      this.currentIndex = val;
      this.trackIndex = val;
    }
  },
  mounted: function mounted() {
    this.updateSlides(true);
    this.handleResize();
    this.setAutoplay(); //            window.addEventListener('resize', this.handleResize, false);

    (0, _dom.on)(window, 'resize', this.handleResize);
  },
  beforeDestroy: function beforeDestroy() {
    //            window.removeEventListener('resize', this.handleResize, false);
    (0, _dom.off)(window, 'resize', this.handleResize);
  },
  methods: {
    add: function add(offset) {
      // 获取单个轨道的图片数
      var slidesLen = this.slides.length; // 如果是无缝滚动，需要初始化双轨道位置

      if (this.loop) {
        if (offset > 0) {
          // 初始化左滑轨道位置
          this.hideTrackPos = -1;
        } else {
          // 初始化右滑轨道位置
          this.hideTrackPos = slidesLen;
        }

        this.updateTrackPos(this.hideTrackPos);
      } // 获取当前展示图片的索引值


      var oldIndex = this.showCopyTrack ? this.copyTrackIndex : this.trackIndex;
      var index = oldIndex + offset;

      while (index < 0) {
        index += slidesLen;
      }

      if ((offset > 0 && index === slidesLen || offset < 0 && index === slidesLen - 1) && this.loop) {
        // 极限值（左滑：当前索引为总图片张数， 右滑：当前索引为总图片张数 - 1）切换轨道
        this.showCopyTrack = !this.showCopyTrack;
        this.trackIndex += offset;
        this.copyTrackIndex += offset;
      } else {
        if (!this.loop) {
          index %= this.slides.length;
        }

        this.updateTrackIndex(index);
      }

      this.currentIndex = index === this.slides.length ? 0 : index;
      this.$emit('on-change', oldIndex, this.currentIndex);
      this.$emit('input', this.currentIndex);
    },
    arrowEvent: function arrowEvent(offset) {
      this.setAutoplay();
      this.add(offset);
    },
    dotsEvent: function dotsEvent(event, n) {
      var curIndex = this.showCopyTrack ? this.copyTrackIndex : this.trackIndex;

      if (event === this.trigger && curIndex !== n) {
        this.updateTrackIndex(n);
        this.$emit('input', n); // Reset autoplay timer when trigger be activated

        this.setAutoplay();
      }
    },
    // find option component
    findChild: function findChild(cb) {
      var _this2 = this;

      var find = function _find(child) {
        var _this = this;

        var name = child.$options.componentName;

        if (name) {
          cb(child);
        } else if (child.$children.length) {
          child.$children.forEach(function (innerChild) {
            (0, _newArrowCheck2.default)(this, _this);
            find(innerChild, cb);
          }.bind(this));
        }
      };

      if (this.slideInstances.length || !this.$children) {
        this.slideInstances.forEach(function (child) {
          (0, _newArrowCheck2.default)(this, _this2);
          find(child);
        }.bind(this));
      } else {
        this.$children.forEach(function (child) {
          (0, _newArrowCheck2.default)(this, _this2);
          find(child);
        }.bind(this));
      }
    },
    handleResize: function handleResize() {
      this.listWidth = parseInt((0, _assist.getStyle)(this.$el, 'width'), 10);
      this.updatePos();
      this.updateOffset();
    },
    // copy trackDom
    initCopyTrackDom: function initCopyTrackDom() {
      var _this3 = this;

      this.$nextTick(function () {
        (0, _newArrowCheck2.default)(this, _this3);
        this.$refs.copyTrack.innerHTML = this.$refs.originTrack.innerHTML;
      }.bind(this));
    },
    setAutoplay: function setAutoplay() {
      var _this4 = this;

      window.clearInterval(this.timer);

      if (this.autoplay) {
        this.timer = window.setInterval(function () {
          (0, _newArrowCheck2.default)(this, _this4);
          this.add(1);
        }.bind(this), this.autoplaySpeed);
      }
    },
    // use when slot changed
    slotChange: function slotChange() {
      var _this5 = this;

      this.$nextTick(function () {
        (0, _newArrowCheck2.default)(this, _this5);
        this.slides = [];
        this.slideInstances = [];
        this.updateSlides(true, true);
        this.updatePos();
        this.updateOffset();
      }.bind(this));
    },
    updateOffset: function updateOffset() {
      var _this6 = this;

      this.$nextTick(function () {
        (0, _newArrowCheck2.default)(this, _this6);

        /* hack: revise copyTrack offset (1px) */
        var ofs = this.copyTrackIndex > 0 ? -1 : 1;
        this.trackOffset = this.trackIndex * this.listWidth;
        this.trackCopyOffset = this.copyTrackIndex * this.listWidth + ofs;
      }.bind(this));
    },
    updatePos: function updatePos() {
      var _this7 = this;

      this.findChild(function (child) {
        (0, _newArrowCheck2.default)(this, _this7);
        child.width = this.listWidth;
        child.height = typeof this.height === 'number' ? "".concat(this.height, "px") : this.height;
      }.bind(this));
      this.trackWidth = (this.slides.length || 0) * this.listWidth;
    },
    updateSlides: function updateSlides(init) {
      var _this8 = this;

      var slides = [];
      var index = 1;
      this.findChild(function (child) {
        (0, _newArrowCheck2.default)(this, _this8);
        slides.push({
          $el: child.$el
        });
        child.index = index;
        index += 1;

        if (init) {
          this.slideInstances.push(child);
        }
      }.bind(this));
      this.slides = slides;
      this.updatePos();
    },
    updateTrackIndex: function updateTrackIndex(index) {
      if (this.showCopyTrack) {
        this.copyTrackIndex = index;
      } else {
        this.trackIndex = index;
      }
    },
    updateTrackPos: function updateTrackPos(index) {
      if (this.showCopyTrack) {
        this.trackIndex = index;
      } else {
        this.copyTrackIndex = index;
      }
    }
  }
};
exports.default = _default;

/***/ }),
/* 93 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_carousel_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(94);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_carousel_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_carousel_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_carousel_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_carousel_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_carousel_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var logger = __webpack_require__(0).get("iview:components:carousel:carousel-item.vue");

//
//
//
//
//
//
//
//
var prefixCls = 'ivu-carousel-item';
var _default = {
  componentName: 'carousel-item',
  name: 'CarouselItem',
  data: function data() {
    return {
      height: 'auto',
      left: 0,
      prefixCls: prefixCls,
      width: 0
    };
  },
  computed: {
    styles: function styles() {
      return {
        height: "".concat(this.height),
        left: "".concat(this.left, "px"),
        width: "".concat(this.width, "px")
      };
    }
  },
  watch: {
    width: function width(val) {
      var _this = this;

      if (val && this.$parent.loop) {
        this.$nextTick(function () {
          (0, _newArrowCheck2.default)(this, _this);
          this.$parent.initCopyTrackDom();
        }.bind(this));
      }
    }
  },
  mounted: function mounted() {
    this.$parent.slotChange();
  },
  beforeDestroy: function beforeDestroy() {
    this.$parent.slotChange();
  }
};
exports.default = _default;

/***/ }),
/* 95 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_cascader_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(96);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_cascader_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_cascader_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_cascader_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_cascader_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_cascader_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectSpread2 = _interopRequireDefault(__webpack_require__(11));

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _stubArray = _interopRequireDefault(__webpack_require__(14));

var _vClickOutsideX = __webpack_require__(24);

var _input = _interopRequireDefault(__webpack_require__(37));

var _dropdown = _interopRequireDefault(__webpack_require__(28));

var _icon = _interopRequireDefault(__webpack_require__(12));

var _caspanel = _interopRequireDefault(__webpack_require__(500));

var _transferDom = _interopRequireDefault(__webpack_require__(21));

var _assist = __webpack_require__(6);

var _emitter = _interopRequireDefault(__webpack_require__(9));

var _locale = _interopRequireDefault(__webpack_require__(10));

var logger = __webpack_require__(0).get("iview:components:cascader:cascader.vue");

var prefixCls = 'ivu-cascader';
var selectPrefixCls = 'ivu-select';
var _default2 = {
  name: 'Cascader',
  components: {
    Caspanel: _caspanel.default,
    Drop: _dropdown.default,
    Icon: _icon.default,
    iInput: _input.default
  },
  directives: {
    clickOutside: _vClickOutsideX.directive,
    TransferDom: _transferDom.default
  },
  mixins: [_emitter.default, _locale.default],
  props: {
    changeOnSelect: {
      default: false,
      type: Boolean
    },
    clearable: {
      default: true,
      type: Boolean
    },
    data: {
      default: _stubArray.default,
      type: Array
    },
    disabled: {
      default: false,
      type: Boolean
    },
    elementId: {
      default: undefined,
      type: String
    },
    filterable: {
      default: false,
      type: Boolean
    },
    loadData: {
      default: undefined,
      type: Function
    },
    name: {
      default: undefined,
      type: String
    },
    notFoundText: {
      default: undefined,
      type: String
    },
    placeholder: {
      default: undefined,
      type: String
    },
    renderFormat: {
      default: function _default(label) {
        return label.join(' / ');
      },
      type: Function
    },
    size: {
      default: undefined,
      type: String,
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['small', 'large']);
      }
    },
    transfer: {
      default: false,
      type: Boolean
    },
    trigger: {
      default: 'click',
      type: String,
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['click', 'hover']);
      }
    },
    value: {
      default: _stubArray.default,
      type: Array
    }
  },
  data: function data() {
    return {
      currentValue: this.value,
      // #950
      isLoadedChildren: false,
      prefixCls: prefixCls,
      query: '',
      selected: [],
      selectPrefixCls: selectPrefixCls,
      tmpSelected: [],
      // to fix set value in changeOnSelect type
      updatingValue: false,
      validDataStr: '',
      visible: false
    };
  },
  computed: {
    classes: function classes() {
      var _ref;

      return ["".concat(prefixCls), (_ref = {}, (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-show-clear"), this.showCloseIcon), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-size-").concat(this.size), !!this.size), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-visible"), this.visible), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-disabled"), this.disabled), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-not-found"), this.filterable && this.query !== '' && !this.querySelections.length), _ref)];
    },
    displayInputRender: function displayInputRender() {
      return this.filterable ? '' : this.displayRender;
    },
    displayRender: function displayRender() {
      var label = [];

      for (var i = 0; i < this.selected.length; i += 1) {
        label.push(this.selected[i].label);
      }

      return this.renderFormat(label, this.selected);
    },
    inputPlaceholder: function inputPlaceholder() {
      return this.filterable && this.currentValue.length ? null : this.localePlaceholder;
    },
    localeNotFoundText: function localeNotFoundText() {
      if (this.notFoundText === undefined) {
        return this.t('i.select.noMatch');
      }

      return this.notFoundText;
    },
    localePlaceholder: function localePlaceholder() {
      if (this.placeholder === undefined) {
        return this.t('i.select.placeholder');
      }

      return this.placeholder;
    },
    querySelections: function querySelections() {
      var _this = this;

      var selections = [];

      function getSelections(arr, label, value) {
        for (var i = 0; i < arr.length; i += 1) {
          var item = arr[i];
          /* eslint-disable-next-line no-underscore-dangle */

          item.__label = label ? "".concat(label, " / ").concat(item.label) : item.label;
          /* eslint-disable-next-line no-underscore-dangle */

          item.__value = value ? "".concat(value, ",").concat(item.value) : item.value;

          if (item.children && item.children.length) {
            /* eslint-disable-next-line no-underscore-dangle */
            getSelections(item.children, item.__label, item.__value);
            /* eslint-disable-next-line no-underscore-dangle */

            delete item.__label;
            /* eslint-disable-next-line no-underscore-dangle */

            delete item.__value;
          } else {
            selections.push({
              disabled: !!item.disabled,

              /* eslint-disable-next-line no-underscore-dangle */
              display: item.__label,
              item: item,

              /* eslint-disable-next-line no-underscore-dangle */
              label: item.__label,

              /* eslint-disable-next-line no-underscore-dangle */
              value: item.__value
            });
          }
        }
      }

      getSelections(this.data);
      selections = selections.filter(function (item) {
        (0, _newArrowCheck2.default)(this, _this);
        return item.label ? item.label.indexOf(this.query) > -1 : false;
      }.bind(this)).map(function (item) {
        (0, _newArrowCheck2.default)(this, _this);
        item.display = item.display.replace(new RegExp(this.query, 'g'), "<span>".concat(this.query, "</span>"));
        return item;
      }.bind(this));
      return selections;
    },
    showCloseIcon: function showCloseIcon() {
      return this.currentValue && this.currentValue.length && this.clearable && !this.disabled;
    }
  },
  watch: {
    currentValue: function currentValue() {
      this.$emit('input', this.currentValue);

      if (this.updatingValue) {
        this.updatingValue = false;
        return;
      }

      this.updateSelected(true);
    },
    data: {
      deep: true,
      handler: function handler() {
        var _this2 = this;

        var validDataStr = JSON.stringify(this.getValidData(this.data));

        if (validDataStr !== this.validDataStr) {
          this.validDataStr = validDataStr;

          if (!this.isLoadedChildren) {
            this.$nextTick(function () {
              (0, _newArrowCheck2.default)(this, _this2);
              return this.updateSelected(false, this.changeOnSelect);
            }.bind(this));
          }

          this.isLoadedChildren = false;
        }
      }
    },
    value: function value(val) {
      this.currentValue = val;

      if (!val.length) {
        this.selected = [];
      }
    },
    visible: function visible(val) {
      if (val) {
        if (this.currentValue.length) {
          this.updateSelected();
        }

        if (this.transfer) {
          this.$refs.drop.update();
        }

        this.broadcast('Drop', 'on-update-popper');
      } else {
        if (this.filterable) {
          this.query = '';
          this.$refs.input.currentValue = '';
        }

        if (this.transfer) {
          this.$refs.drop.destroy();
        }

        this.broadcast('Drop', 'on-destroy-popper');
      }

      this.$emit('on-visible-change', val);
    }
  },
  created: function created() {
    var _this3 = this;

    this.validDataStr = JSON.stringify(this.getValidData(this.data));
    this.$on('on-result-change', function (params) {
      var _this4 = this;

      (0, _newArrowCheck2.default)(this, _this3);
      // lastValue: is click the final val
      // fromInit: is this emit from update value
      var lastValue = params.lastValue,
          changeOnSelect = params.changeOnSelect,
          fromInit = params.fromInit;

      if (lastValue || changeOnSelect) {
        var oldVal = JSON.stringify(this.currentValue);
        this.selected = this.tmpSelected;
        var newVal = [];
        this.selected.forEach(function (item) {
          (0, _newArrowCheck2.default)(this, _this4);
          newVal.push(item.value);
        }.bind(this));

        if (!fromInit) {
          this.updatingValue = true;
          this.currentValue = newVal;
          this.emitValue(this.currentValue, oldVal);
        }
      }

      if (lastValue && !fromInit) {
        this.handleClose();
      }
    }.bind(this));
  },
  mounted: function mounted() {
    this.updateSelected(true);
  },
  methods: {
    clearSelect: function clearSelect() {
      if (this.disabled) {
        return;
      }

      var oldVal = JSON.stringify(this.currentValue);
      this.currentValue = [];
      this.selected = [];
      this.tmpSelected = [];
      this.handleClose();
      this.emitValue(this.currentValue, oldVal); // this.$broadcast('on-clear');

      this.broadcast('Caspanel', 'on-clear');
    },
    emitValue: function emitValue(val, oldVal) {
      var _this5 = this;

      if (JSON.stringify(val) !== oldVal) {
        this.$emit('on-change', this.currentValue, JSON.parse(JSON.stringify(this.selected)));
        this.$nextTick(function () {
          (0, _newArrowCheck2.default)(this, _this5);
          this.dispatch('FormItem', 'on-form-change', {
            selected: JSON.parse(JSON.stringify(this.selected)),
            value: this.currentValue
          });
        }.bind(this));
      }
    },
    // 排除 loading 后的 data，避免重复触发 updateSelect
    getValidData: function getValidData(data) {
      var _this7 = this;

      function deleteData(item) {
        var _this6 = this;

        var newItem = (0, _objectSpread2.default)({}, item);

        if ('loading' in newItem) {
          delete newItem.loading;
        }

        if ('__value' in newItem) {
          /* eslint-disable-next-line no-underscore-dangle */
          delete newItem.__value;
        }

        if ('__label' in newItem) {
          /* eslint-disable-next-line no-underscore-dangle */
          delete newItem.__label;
        }

        if ('children' in newItem && newItem.children.length) {
          newItem.children = newItem.children.map(function (i) {
            (0, _newArrowCheck2.default)(this, _this6);
            return deleteData(i);
          }.bind(this));
        }

        return newItem;
      }

      return data.map(function (item) {
        (0, _newArrowCheck2.default)(this, _this7);
        return deleteData(item);
      }.bind(this));
    },
    handleClose: function handleClose() {
      this.visible = false;
    },
    handleFocus: function handleFocus() {
      this.$refs.input.focus();
    },
    handleInput: function handleInput(event) {
      this.query = event.target.value;
    },
    handleSelectItem: function handleSelectItem(index) {
      var item = this.querySelections[index];

      if (item.item.disabled) {
        return;
      }

      this.query = '';
      this.$refs.input.currentValue = '';
      var oldVal = JSON.stringify(this.currentValue);
      this.currentValue = item.value.split(',');
      this.emitValue(this.currentValue, oldVal);
      this.handleClose();
    },
    onFocus: function onFocus() {
      this.visible = true;

      if (!this.currentValue.length) {
        this.broadcast('Caspanel', 'on-clear');
      }
    },
    toggleOpen: function toggleOpen() {
      if (this.disabled) {
        return;
      }

      if (this.visible) {
        if (!this.filterable) {
          this.handleClose();
        }
      } else {
        this.onFocus();
      }
    },
    updateResult: function updateResult(result) {
      this.tmpSelected = result;
    },
    updateSelected: function updateSelected() {
      var init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      var changeOnSelectDataChange = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

      // #2793 changeOnSelectDataChange used for changeOnSelect when data changed and set value
      if (!this.changeOnSelect || init || changeOnSelectDataChange) {
        this.broadcast('Caspanel', 'on-find-selected', {
          value: this.currentValue
        });
      }
    }
  }
};
exports.default = _default2;

/***/ }),
/* 97 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_caspanel_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(98);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_caspanel_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_caspanel_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_caspanel_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_caspanel_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_caspanel_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectSpread2 = _interopRequireDefault(__webpack_require__(11));

var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(15));

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _stubArray = _interopRequireDefault(__webpack_require__(14));

var _casitem = _interopRequireDefault(__webpack_require__(501));

var _emitter = _interopRequireDefault(__webpack_require__(9));

var _assist = __webpack_require__(6);

var logger = __webpack_require__(0).get("iview:components:cascader:caspanel.vue");

var key = 1;
var _default = {
  name: 'Caspanel',
  components: {
    Casitem: _casitem.default
  },
  mixins: [_emitter.default],
  props: {
    changeOnSelect: Boolean,
    data: {
      default: _stubArray.default,
      type: Array
    },
    disabled: {
      default: false,
      type: Boolean
    },
    prefixCls: {
      default: undefined,
      type: String
    },
    trigger: {
      default: undefined,
      type: String
    }
  },
  data: function data() {
    return {
      result: [],
      sublist: [],
      tmpItem: {}
    };
  },
  watch: {
    data: function data() {
      this.sublist = [];
    }
  },
  mounted: function mounted() {
    var _this = this;

    this.$on('on-find-selected', function (params) {
      var _this2 = this;

      (0, _newArrowCheck2.default)(this, _this);
      var val = params.value;
      var value = (0, _toConsumableArray2.default)(val);

      for (var i = 0; i < value.length; i += 1) {
        for (var j = 0; j < this.data.length; j += 1) {
          if (value[i] === this.data[j].value) {
            this.handleTriggerItem(this.data[j], true);
            value.splice(0, 1);
            this.$nextTick(function () {
              (0, _newArrowCheck2.default)(this, _this2);
              this.broadcast('Caspanel', 'on-find-selected', {
                value: value
              });
            }.bind(this));
            return;
          }
        }
      }
    }.bind(this)); // deep for #1553

    this.$on('on-clear', function () {
      var deep = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      (0, _newArrowCheck2.default)(this, _this);
      this.sublist = [];
      this.tmpItem = {};

      if (deep) {
        var Caspanel = (0, _assist.findComponentDownward)(this, 'Caspanel');

        if (Caspanel) {
          Caspanel.$emit('on-clear', true);
        }
      }
    }.bind(this));
  },
  methods: {
    emitUpdate: function emitUpdate(result) {
      if (this.$parent.$options.name === 'Caspanel') {
        this.$parent.updateResult(result);
      } else {
        this.$parent.$parent.updateResult(result);
      }
    },
    getBaseItem: function getBaseItem(item) {
      var backItem = (0, _objectSpread2.default)({}, item);

      if (backItem.children) {
        delete backItem.children;
      }

      return backItem;
    },
    getKey: function getKey() {
      var value = key;
      key += 1;
      return value;
    },
    handleClickItem: function handleClickItem(item) {
      if (this.trigger !== 'click' && item.children && item.children.length) {
        return;
      } // #1922


      this.handleTriggerItem(item, false, true);
    },
    handleHoverItem: function handleHoverItem(item) {
      if (this.trigger !== 'hover' || !item.children || !item.children.length) {
        return;
      } // #1922


      this.handleTriggerItem(item, false, true);
    },
    handleTriggerItem: function handleTriggerItem(item) {
      var _this3 = this;

      var fromInit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var fromUser = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

      if (item.disabled) {
        return;
      }

      if (item.loading !== undefined && !item.children.length) {
        var cascader = (0, _assist.findComponentUpward)(this, 'Cascader');

        if (cascader && cascader.loadData) {
          cascader.loadData(item, function () {
            (0, _newArrowCheck2.default)(this, _this3);

            // todo
            if (fromUser) {
              cascader.isLoadedChildren = true;
            }

            if (item.children.length) {
              this.handleTriggerItem(item);
            }
          }.bind(this));
          return;
        }
      } // return value back recursion  // 向上递归，设置临时选中值（并非真实选中）


      var backItem = this.getBaseItem(item);
      this.tmpItem = backItem;
      this.emitUpdate([backItem]);

      if (item.children && item.children.length) {
        this.sublist = item.children;
        this.dispatch('Cascader', 'on-result-change', {
          changeOnSelect: this.changeOnSelect,
          fromInit: fromInit,
          lastValue: false
        }); // #1553

        if (this.changeOnSelect) {
          var Caspanel = (0, _assist.findComponentDownward)(this, 'Caspanel');

          if (Caspanel) {
            Caspanel.$emit('on-clear', true);
          }
        }
      } else {
        this.sublist = [];
        this.dispatch('Cascader', 'on-result-change', {
          changeOnSelect: this.changeOnSelect,
          fromInit: fromInit,
          lastValue: true
        });
      }
    },
    updateResult: function updateResult(item) {
      this.result = [this.tmpItem].concat(item);
      this.emitUpdate(this.result);
    }
  }
};
exports.default = _default;

/***/ }),
/* 99 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_casitem_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(100);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_casitem_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_casitem_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_casitem_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_casitem_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_casitem_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var logger = __webpack_require__(0).get("iview:components:cascader:casitem.vue");

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var _default = {
  name: 'Casitem',
  props: {
    data: {
      default: undefined,
      type: Object
    },
    prefixCls: {
      default: undefined,
      type: String
    },
    tmpItem: {
      default: undefined,
      type: Object
    }
  },
  computed: {
    classes: function classes() {
      var _ref;

      return ["".concat(this.prefixCls, "-menu-item"), (_ref = {}, (0, _defineProperty2.default)(_ref, "".concat(this.prefixCls, "-menu-item-active"), this.tmpItem.value === this.data.value), (0, _defineProperty2.default)(_ref, "".concat(this.prefixCls, "-menu-item-disabled"), this.data.disabled), _ref)];
    },
    showArrow: function showArrow() {
      return this.data.children && this.data.children.length || 'loading' in this.data && !this.data.loading;
    },
    showLoading: function showLoading() {
      return 'loading' in this.data && this.data.loading;
    }
  }
};
exports.default = _default;

/***/ }),
/* 101 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_checkbox_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(102);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_checkbox_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_checkbox_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_checkbox_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_checkbox_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_checkbox_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _assist = __webpack_require__(6);

var _emitter = _interopRequireDefault(__webpack_require__(9));

var logger = __webpack_require__(0).get("iview:components:checkbox:checkbox.vue");

var prefixCls = 'ivu-checkbox';
var _default = {
  name: 'Checkbox',
  mixins: [_emitter.default],
  props: {
    disabled: {
      default: false,
      type: Boolean
    },
    falseValue: {
      default: false,
      type: [String, Number, Boolean]
    },
    indeterminate: {
      default: false,
      type: Boolean
    },
    label: {
      default: undefined,
      type: [String, Number, Boolean]
    },
    name: {
      default: undefined,
      type: String
    },
    size: {
      default: undefined,
      type: String,
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['small', 'large', 'default']);
      }
    },
    trueValue: {
      default: true,
      type: [String, Number, Boolean]
    },
    value: {
      default: false,
      type: [String, Number, Boolean]
    }
  },
  data: function data() {
    return {
      currentValue: this.value,
      focusInner: false,
      group: false,
      model: [],
      parent: (0, _assist.findComponentUpward)(this, 'CheckboxGroup'),
      showSlot: true
    };
  },
  computed: {
    checkboxClasses: function checkboxClasses() {
      var _ref;

      return ["".concat(prefixCls), (_ref = {}, (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-checked"), this.currentValue), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-disabled"), this.disabled), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-indeterminate"), this.indeterminate), _ref)];
    },
    innerClasses: function innerClasses() {
      return ["".concat(prefixCls, "-inner"), (0, _defineProperty2.default)({}, "".concat(prefixCls, "-focus"), this.focusInner)];
    },
    inputClasses: function inputClasses() {
      return "".concat(prefixCls, "-input");
    },
    wrapClasses: function wrapClasses() {
      var _ref3;

      return ["".concat(prefixCls, "-wrapper"), (_ref3 = {}, (0, _defineProperty2.default)(_ref3, "".concat(prefixCls, "-group-item"), this.group), (0, _defineProperty2.default)(_ref3, "".concat(prefixCls, "-wrapper-checked"), this.currentValue), (0, _defineProperty2.default)(_ref3, "".concat(prefixCls, "-wrapper-disabled"), this.disabled), (0, _defineProperty2.default)(_ref3, "".concat(prefixCls, "-").concat(this.size), !!this.size), _ref3)];
    }
  },
  watch: {
    value: function value(val) {
      if (val === this.trueValue || val === this.falseValue) {
        this.updateModel();
      } else {
        throw new Error('Value should be trueValue or falseValue.');
      }
    }
  },
  mounted: function mounted() {
    this.parent = (0, _assist.findComponentUpward)(this, 'CheckboxGroup');

    if (this.parent) {
      this.group = true;
    }

    if (this.group) {
      this.parent.updateModel(true);
    } else {
      this.updateModel();
      this.showSlot = this.$slots.default !== undefined;
    }
  },
  methods: {
    change: function change(event) {
      if (this.disabled) {
        return;
      }

      var checked = event.target.checked;
      this.currentValue = checked;
      var value = checked ? this.trueValue : this.falseValue;
      this.$emit('input', value);

      if (this.group) {
        this.parent.change(this.model);
      } else {
        this.$emit('on-change', value);
        this.dispatch('FormItem', 'on-form-change', value);
      }
    },
    onBlur: function onBlur() {
      this.focusInner = false;
    },
    onFocus: function onFocus() {
      this.focusInner = true;
    },
    updateModel: function updateModel() {
      this.currentValue = this.value === this.trueValue;
    }
  }
};
exports.default = _default;

/***/ }),
/* 103 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_checkbox_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(104);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_checkbox_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_checkbox_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_checkbox_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_checkbox_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_checkbox_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _stubArray = _interopRequireDefault(__webpack_require__(14));

var _assist = __webpack_require__(6);

var _emitter = _interopRequireDefault(__webpack_require__(9));

var logger = __webpack_require__(0).get("iview:components:checkbox:checkbox-group.vue");

var prefixCls = 'ivu-checkbox-group';
var _default = {
  name: 'CheckboxGroup',
  mixins: [_emitter.default],
  props: {
    size: {
      default: undefined,
      type: String,
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['small', 'large', 'default']);
      }
    },
    value: {
      default: _stubArray.default,
      type: Array
    }
  },
  data: function data() {
    return {
      childrens: [],
      currentValue: this.value
    };
  },
  computed: {
    classes: function classes() {
      return ["".concat(prefixCls), (0, _defineProperty2.default)({}, "ivu-checkbox-".concat(this.size), !!this.size)];
    }
  },
  watch: {
    value: function value() {
      this.updateModel(true);
    }
  },
  mounted: function mounted() {
    this.updateModel(true);
  },
  methods: {
    change: function change(data) {
      this.currentValue = data;
      this.$emit('input', data);
      this.$emit('on-change', data);
      this.dispatch('FormItem', 'on-form-change', data);
    },
    updateModel: function updateModel(update) {
      var _this = this;

      this.childrens = (0, _assist.findComponentsDownward)(this, 'Checkbox');

      if (this.childrens) {
        var value = this.value;
        this.childrens.forEach(function (child) {
          (0, _newArrowCheck2.default)(this, _this);
          child.model = value;

          if (update) {
            child.currentValue = value.indexOf(child.label) >= 0;
            child.group = true;
          }
        }.bind(this));
      }
    }
  }
};
exports.default = _default;

/***/ }),
/* 105 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_circle_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(106);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_circle_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_circle_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_circle_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_circle_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_circle_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _assist = __webpack_require__(6);

var logger = __webpack_require__(0).get("iview:components:circle:circle.vue");

var prefixCls = 'ivu-chart-circle';
var _default = {
  name: 'ICircle',
  props: {
    percent: {
      default: 0,
      type: Number
    },
    size: {
      default: 120,
      type: Number
    },
    strokeColor: {
      default: '#2db7f5',
      type: String
    },
    strokeLinecap: {
      default: 'round',
      type: String,
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['square', 'round']);
      }
    },
    strokeWidth: {
      default: 6,
      type: Number
    },
    trailColor: {
      default: '#eaeef2',
      type: String
    },
    trailWidth: {
      default: 5,
      type: Number
    }
  },
  computed: {
    circleSize: function circleSize() {
      return {
        height: "".concat(this.size, "px"),
        width: "".concat(this.size, "px")
      };
    },
    innerClasses: function innerClasses() {
      return "".concat(prefixCls, "-inner");
    },
    len: function len() {
      return Math.PI * 2 * this.radius;
    },
    pathString: function pathString() {
      return "M 50,50 m 0,-".concat(this.radius, "\n                a ").concat(this.radius, ",").concat(this.radius, " 0 1 1 0,").concat(2 * this.radius, "\n                a ").concat(this.radius, ",").concat(this.radius, " 0 1 1 0,-").concat(2 * this.radius);
    },
    pathStyle: function pathStyle() {
      return {
        'stroke-dasharray': "".concat(this.len, "px ").concat(this.len, "px"),
        'stroke-dashoffset': "".concat((100 - this.percent) / 100 * this.len, "px"),
        transition: 'stroke-dashoffset 0.6s ease 0s, stroke 0.6s ease'
      };
    },
    radius: function radius() {
      return 50 - this.strokeWidth / 2;
    },
    wrapClasses: function wrapClasses() {
      return "".concat(prefixCls);
    }
  }
};
exports.default = _default;

/***/ }),
/* 107 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_collapse_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(108);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_collapse_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_collapse_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_collapse_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_collapse_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_collapse_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var logger = __webpack_require__(0).get("iview:components:collapse:collapse.vue");

//
//
//
//
//
//
var prefixCls = 'ivu-collapse';
var _default = {
  name: 'Collapse',
  props: {
    accordion: {
      default: false,
      type: Boolean
    },
    value: {
      default: undefined,
      type: [Array, String]
    }
  },
  data: function data() {
    return {
      currentValue: this.value
    };
  },
  computed: {
    classes: function classes() {
      return "".concat(prefixCls);
    }
  },
  watch: {
    currentValue: function currentValue() {
      this.setActive();
    },
    value: function value(val) {
      this.currentValue = val;
    }
  },
  mounted: function mounted() {
    this.setActive();
  },
  methods: {
    getActiveKey: function getActiveKey() {
      var activeKey = this.currentValue || [];
      var accordion = this.accordion;

      if (!Array.isArray(activeKey)) {
        activeKey = [activeKey];
      }

      if (accordion && activeKey.length > 1) {
        activeKey = [activeKey[0]];
      }

      for (var i = 0; i < activeKey.length; i += 1) {
        activeKey[i] = activeKey[i].toString();
      }

      return activeKey;
    },
    setActive: function setActive() {
      var _this = this;

      var activeKey = this.getActiveKey();
      this.$children.forEach(function (child, index) {
        (0, _newArrowCheck2.default)(this, _this);
        var name = child.name || index.toString();
        child.isActive = activeKey.indexOf(name) > -1;
        child.index = index;
      }.bind(this));
    },
    toggle: function toggle(data) {
      var name = data.name.toString();
      var newActiveKey = [];

      if (this.accordion) {
        if (!data.isActive) {
          newActiveKey.push(name);
        }
      } else {
        var activeKey = this.getActiveKey();
        var nameIndex = activeKey.indexOf(name);

        if (data.isActive) {
          if (nameIndex > -1) {
            activeKey.splice(nameIndex, 1);
          }
        } else if (nameIndex < 0) {
          activeKey.push(name);
        }

        newActiveKey = activeKey;
      }

      this.currentValue = newActiveKey;
      this.$emit('input', newActiveKey);
      this.$emit('on-change', newActiveKey);
    }
  }
};
exports.default = _default;

/***/ }),
/* 109 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_panel_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(110);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_panel_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_panel_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_panel_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_panel_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_panel_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _icon = _interopRequireDefault(__webpack_require__(12));

var _collapseTransition = _interopRequireDefault(__webpack_require__(262));

var logger = __webpack_require__(0).get("iview:components:collapse:panel.vue");

var prefixCls = 'ivu-collapse';
var _default = {
  name: 'Panel',
  components: {
    CollapseTransition: _collapseTransition.default,
    Icon: _icon.default
  },
  props: {
    name: {
      default: undefined,
      type: String
    }
  },
  data: function data() {
    return {
      index: 0,
      // use index for default when name is null
      isActive: false
    };
  },
  computed: {
    boxClasses: function boxClasses() {
      return "".concat(prefixCls, "-content-box");
    },
    contentClasses: function contentClasses() {
      return "".concat(prefixCls, "-content");
    },
    headerClasses: function headerClasses() {
      return "".concat(prefixCls, "-header");
    },
    itemClasses: function itemClasses() {
      return ["".concat(prefixCls, "-item"), (0, _defineProperty2.default)({}, "".concat(prefixCls, "-item-active"), this.isActive)];
    }
  },
  methods: {
    toggle: function toggle() {
      this.$parent.toggle({
        isActive: this.isActive,
        name: this.name || this.index
      });
    }
  }
};
exports.default = _default;

/***/ }),
/* 111 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_color_picker_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(112);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_color_picker_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_color_picker_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_color_picker_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_color_picker_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_color_picker_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _tinycolor = _interopRequireDefault(__webpack_require__(387));

var _vClickOutsideX = __webpack_require__(24);

var _transferDom = _interopRequireDefault(__webpack_require__(21));

var _dropdown = _interopRequireDefault(__webpack_require__(28));

var _recommendColors = _interopRequireDefault(__webpack_require__(510));

var _saturation = _interopRequireDefault(__webpack_require__(511));

var _hue = _interopRequireDefault(__webpack_require__(512));

var _alpha = _interopRequireDefault(__webpack_require__(513));

var _locale = _interopRequireDefault(__webpack_require__(10));

var _assist = __webpack_require__(6);

var _emitter = _interopRequireDefault(__webpack_require__(9));

var _prefixMixin = _interopRequireDefault(__webpack_require__(39));

var _utils = __webpack_require__(29);

var logger = __webpack_require__(0).get("iview:components:color-picker:color-picker.vue");

var _default2 = {
  name: 'ColorPicker',
  components: {
    Alpha: _alpha.default,
    Drop: _dropdown.default,
    Hue: _hue.default,
    RecommendColors: _recommendColors.default,
    Saturation: _saturation.default
  },
  directives: {
    clickOutside: _vClickOutsideX.directive,
    TransferDom: _transferDom.default
  },
  mixins: [_emitter.default, _locale.default, _prefixMixin.default],
  props: {
    alpha: {
      default: false,
      type: Boolean
    },
    colors: {
      default: function _default() {
        return [];
      },
      type: Array
    },
    disabled: {
      default: false,
      type: Boolean
    },
    format: {
      default: undefined,
      type: String,
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['hsl', 'hsv', 'hex', 'rgb']);
      }
    },
    hideDropDown: {
      default: false,
      type: Boolean
    },
    hue: {
      default: true,
      type: Boolean
    },
    name: {
      default: undefined,
      type: String
    },
    placement: {
      default: 'bottom',
      type: String,
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['top', 'top-start', 'top-end', 'bottom', 'bottom-start', 'bottom-end', 'left', 'left-start', 'left-end', 'right', 'right-start', 'right-end']);
      }
    },
    recommend: {
      default: false,
      type: Boolean
    },
    size: {
      default: 'default',
      type: String,
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['small', 'large', 'default']);
      }
    },
    transfer: {
      default: false,
      type: Boolean
    },
    value: {
      default: undefined,
      type: String
    }
  },
  data: function data() {
    return {
      currentValue: this.value,
      dragging: false,
      recommendedColor: ['#2d8cf0', '#19be6b', '#ff9900', '#ed3f14', '#00b5ff', '#19c919', '#f9e31c', '#ea1a1a', '#9b1dea', '#00c2b1', '#ac7a33', '#1d35ea', '#8bc34a', '#f16b62', '#ea4ca3', '#0d94aa', '#febd79', '#5d4037', '#00bcd4', '#f06292', '#cddc39', '#607d8b', '#000000', '#ffffff'],
      val: (0, _utils.changeColor)(this.value),
      visible: false
    };
  },
  computed: {
    arrowClasses: function arrowClasses() {
      return [this.iconPrefixCls, "".concat(this.iconPrefixCls, "-chevron-down"), "".concat(this.inputPrefixCls, "-icon"), "".concat(this.inputPrefixCls, "-icon-normal")];
    },
    classes: function classes() {
      return ["".concat(this.prefixCls), (0, _defineProperty2.default)({}, "".concat(this.prefixCls, "-transfer"), this.transfer)];
    },
    displayedColorStyle: function displayedColorStyle() {
      return {
        backgroundColor: (0, _utils.toRGBAString)(this.visible ? this.saturationColors.rgba : (0, _tinycolor.default)(this.value).toRgb())
      };
    },
    dropClasses: function dropClasses() {
      var _ref2;

      return ["".concat(this.transferPrefixCls, "-no-max-height"), (_ref2 = {}, (0, _defineProperty2.default)(_ref2, "".concat(this.prefixCls, "-transfer"), this.transfer), (0, _defineProperty2.default)(_ref2, "".concat(this.prefixCls, "-hide-drop"), this.hideDropDown), _ref2)];
    },
    formatColor: function formatColor() {
      var format = this.format,
          saturationColors = this.saturationColors;

      if (format) {
        if (format === 'hsl') {
          return (0, _tinycolor.default)(saturationColors.hsl).toHslString();
        }

        if (format === 'hsv') {
          return (0, _tinycolor.default)(saturationColors.hsv).toHsvString();
        }

        if (format === 'hex') {
          return saturationColors.hex;
        }

        if (format === 'rgb') {
          return (0, _utils.toRGBAString)(saturationColors.rgba);
        }
      } else if (this.alpha) {
        return (0, _utils.toRGBAString)(saturationColors.rgba);
      }

      return saturationColors.hex;
    },
    inputClasses: function inputClasses() {
      var _ref3;

      return ["".concat(this.prefixCls, "-input"), "".concat(this.inputPrefixCls), "".concat(this.inputPrefixCls, "-").concat(this.size), (_ref3 = {}, (0, _defineProperty2.default)(_ref3, "".concat(this.prefixCls, "-focused"), this.visible), (0, _defineProperty2.default)(_ref3, "".concat(this.prefixCls, "-disabled"), this.disabled), _ref3)];
    },
    saturationColors: {
      get: function get() {
        return this.val;
      },
      set: function set(newVal) {
        this.val = newVal;
        this.$emit('on-active-change', this.formatColor);
      }
    },
    transition: function transition() {
      return (0, _assist.oneOf)(this.placement, ['bottom-start', 'bottom', 'bottom-end']) ? 'slide-up' : 'fade';
    },
    wrapClasses: function wrapClasses() {
      return ["".concat(this.prefixCls, "-rel"), "".concat(this.prefixCls, "-").concat(this.size), "".concat(this.inputPrefixCls, "-wrapper"), "".concat(this.inputPrefixCls, "-wrapper-").concat(this.size), (0, _defineProperty2.default)({}, "".concat(this.prefixCls, "-disabled"), this.disabled)];
    }
  },
  watch: {
    value: function value(newVal) {
      this.val = (0, _utils.changeColor)(newVal);
    },
    visible: function visible(val) {
      this.val = (0, _utils.changeColor)(this.value);
      this.$refs.drop[val ? 'update' : 'destroy']();
      this.$emit('on-open-change', Boolean(val));
    }
  },
  mounted: function mounted() {
    this.$on('on-escape-keydown', this.closer);
    this.$on('on-dragging', this.setDragging);
  },
  methods: {
    childChange: function childChange(data) {
      this.colorChange(data);
    },
    closer: function closer(event) {
      if (event) {
        event.preventDefault();
        event.stopPropagation();
      }

      this.visible = false;
      this.$refs.input.focus();
    },
    colorChange: function colorChange(data, oldHue) {
      this.oldHue = this.saturationColors.hsl.h;
      this.saturationColors = (0, _utils.changeColor)(data, oldHue || this.oldHue);
    },
    handleButtons: function handleButtons(event, value) {
      this.currentValue = value;
      this.$emit('input', value);
      this.$emit('on-change', value);
      this.dispatch('FormItem', 'on-form-change', value);
      this.closer(event);
    },
    handleClear: function handleClear(event) {
      this.handleButtons(event, '');
      this.$emit('on-pick-clear');
    },
    handleClose: function handleClose(event) {
      if (this.visible) {
        if (this.dragging || event.type === 'mousedown') {
          event.preventDefault();
          return;
        }

        if (this.transfer) {
          var $el = this.$refs.drop.$el;

          if ($el === event.target || $el.contains(event.target)) {
            return;
          }
        }

        this.closer(event);
        return;
      }

      this.visible = false;
    },
    handleFirstTab: function handleFirstTab(event) {
      if (event.key === 'Tab' && event.shiftKey) {
        event.preventDefault();
        event.stopPropagation();
        this.$refs.ok.$el.focus();
      }
    },
    handleLastTab: function handleLastTab(event) {
      if (!event.shiftKey) {
        event.preventDefault();
        event.stopPropagation();
        this.$refs.saturation.$el.focus();
      }
    },
    handleSelectColor: function handleSelectColor(color) {
      this.val = (0, _utils.changeColor)(color);
      this.$emit('on-active-change', this.formatColor);
    },
    handleSuccess: function handleSuccess(event) {
      this.handleButtons(event, this.formatColor);
      this.$emit('on-pick-success');
    },
    onArrow: function onArrow(event) {
      if (!this.visible) {
        event.preventDefault();
        event.stopPropagation();
        this.visible = true;
      }
    },
    onClear: function onClear(event) {
      if (event.key === 'Enter') {
        this.handleClear(event);
      }
    },
    onClearNative: function onClearNative(event) {
      if ((0, _assist.oneOf)(event.key, ['Esc', 'Escape'])) {
        this.closer(event);
      }
    },
    onEscape: function onEscape(event) {
      if (this.visible) {
        this.closer(event);
      }
    },
    onKeydown: function onKeydown(event) {
      var key = event.key;

      if ((0, _assist.oneOf)(key, ['Esc', 'Escape'])) {
        this.onEscape(event);
      } else if ((0, _assist.oneOf)(key, ['Up', 'ArrowUp'])) {
        this.onArrow(event);
      } else if ((0, _assist.oneOf)(key, ['Down', 'ArrowDown'])) {
        this.onArrow(event);
      } else if (key === 'Tab') {
        this.onTab(event);
      }
    },
    onOk: function onOk(event) {
      if (event.key === 'Enter') {
        this.handleSuccess(event);
      }
    },
    onOkNative: function onOkNative(event) {
      var key = event.key;

      if (key === 'Tab') {
        this.handleLastTab(event);
      } else if ((0, _assist.oneOf)(key, ['Esc', 'Escape'])) {
        this.closer(event);
      }
    },
    onTab: function onTab(event) {
      if (this.visible) {
        event.preventDefault();
      }
    },
    setDragging: function setDragging(value) {
      this.dragging = value;
    },
    toggleVisible: function toggleVisible() {
      if (this.disabled) {
        return;
      }

      this.visible = !this.visible;
      this.$refs.input.focus();
    }
  }
};
exports.default = _default2;

/***/ }),
/* 113 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_recommend_colors_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(114);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_recommend_colors_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_recommend_colors_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_recommend_colors_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_recommend_colors_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_recommend_colors_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectSpread2 = _interopRequireDefault(__webpack_require__(11));

var _emitter = _interopRequireDefault(__webpack_require__(9));

var _handleEscapeMixin = _interopRequireDefault(__webpack_require__(388));

var _prefixMixin = _interopRequireDefault(__webpack_require__(39));

var _utils = __webpack_require__(29);

var _assist = __webpack_require__(6);

var logger = __webpack_require__(0).get("iview:components:color-picker:recommend-colors.vue");

var _default = {
  name: 'RecommendedColors',
  mixins: [_emitter.default, _handleEscapeMixin.default, _prefixMixin.default],
  props: {
    list: {
      default: undefined,
      type: Array
    }
  },
  data: function data() {
    var columns = 12;
    var rows = Math.ceil(this.list.length / columns);
    var normalStep = 1;
    return {
      columns: columns,
      down: normalStep,
      grid: {
        x: 1,
        y: 1
      },
      left: -normalStep,
      powerKey: 'shiftKey',
      right: normalStep,
      rows: rows,
      up: -normalStep
    };
  },
  computed: {
    currentCircle: function currentCircle() {
      return this.$refs["color-circle-".concat(this.linearIndex)][0];
    },
    hideClass: function hideClass() {
      return "".concat(this.prefixCls, "-hide");
    },
    linearIndex: function linearIndex() {
      return this.getLinearIndex(this.grid);
    }
  },
  methods: {
    blurColor: function blurColor() {
      this.currentCircle.classList.add(this.hideClass);
    },
    focusColor: function focusColor() {
      this.currentCircle.classList.remove(this.hideClass);
    },
    getLinearIndex: function getLinearIndex(grid) {
      return this.columns * (grid.y - 1) + grid.x - 1;
    },
    getMaxLimit: function getMaxLimit(axis) {
      return axis === 'x' ? this.columns : this.rows;
    },
    handleArrow: function handleArrow(e, axis, direction) {
      e.preventDefault();
      e.stopPropagation();
      this.blurColor();
      var grid = (0, _objectSpread2.default)({}, this.grid);

      if (e[this.powerKey]) {
        if (direction < 0) {
          grid[axis] = 1;
        } else {
          grid[axis] = this.getMaxLimit(axis);
        }
      } else {
        grid[axis] += direction;
      }

      var index = this.getLinearIndex(grid);

      if (index >= 0 && index < this.list.length) {
        this.grid[axis] = (0, _utils.clamp)(grid[axis], 1, this.getMaxLimit(axis));
      }

      this.focusColor();
    },
    handleClick: function handleClick(e, circle) {
      e.preventDefault();
      e.stopPropagation();
      this.$refs.reference.focus();
      var target = circle || e.target;
      var colorId = target.dataset.colorId || target.parentElement.dataset.colorId;

      if (colorId) {
        this.blurColor();
        var id = Number(colorId) + 1;
        this.grid.x = id % this.columns || this.columns;
        this.grid.y = Math.ceil(id / this.columns);
        this.focusColor();
        this.$emit('picker-color', this.list[colorId]);
        this.$emit('change', {
          hex: this.list[colorId],
          source: 'hex'
        });
      }
    },
    handleEnter: function handleEnter(e) {
      this.handleClick(e, this.currentCircle);
    },
    lineBreak: function lineBreak(list, index) {
      if (!index) {
        return false;
      }

      var nextIndex = index + 1;
      return nextIndex < list.length && nextIndex % this.columns === 0;
    },
    onKeydown: function onKeydown(event) {
      var key = event.key;

      if ((0, _assist.oneOf)(key, ['Esc', 'Escape'])) {
        this.handleEscape(event);
      } else if (key === 'Enter') {
        this.handleEnter(event);
      } else if ((0, _assist.oneOf)(key, ['Up', 'ArrowUp'])) {
        this.handleArrow(event, 'y', this.up);
      } else if ((0, _assist.oneOf)(key, ['Down', 'ArrowDown'])) {
        this.handleArrow(event, 'y', this.down);
      } else if ((0, _assist.oneOf)(key, ['Left', 'ArrowLeft'])) {
        this.handleArrow(event, 'x', this.left);
      } else if ((0, _assist.oneOf)(key, ['Right', 'ArrowRight'])) {
        this.handleArrow(event, 'x', this.right);
      }
    }
  }
};
exports.default = _default;

/***/ }),
/* 115 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_saturation_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(116);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_saturation_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_saturation_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_saturation_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_saturation_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_saturation_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _hsaMixin = _interopRequireDefault(__webpack_require__(263));

var _prefixMixin = _interopRequireDefault(__webpack_require__(39));

var _utils = __webpack_require__(29);

var _dom = __webpack_require__(18);

var _assist = __webpack_require__(6);

var logger = __webpack_require__(0).get("iview:components:color-picker:saturation.vue");

var _default = {
  name: 'Saturation',
  mixins: [_hsaMixin.default, _prefixMixin.default],
  data: function data() {
    var normalStep = 0.01;
    return {
      down: -normalStep,
      left: -normalStep,
      multiplier: 10,
      powerKey: 'shiftKey',
      right: normalStep,
      up: normalStep
    };
  },
  computed: {
    bgColorStyle: function bgColorStyle() {
      return {
        background: "hsl(".concat(this.value.hsv.h, ", 100%, 50%)")
      };
    },
    pointerStyle: function pointerStyle() {
      return {
        left: "".concat(this.value.hsv.s * 100, "%"),
        top: "".concat(-(this.value.hsv.v * 100) + 1 + 100, "%")
      };
    }
  },
  methods: {
    change: function change(h, s, v, a) {
      this.$emit('change', {
        a: a,
        h: h,
        s: s,
        source: 'hsva',
        v: v
      });
    },
    handleChange: function handleChange(e) {
      e.preventDefault();
      e.stopPropagation();
      var _this$$refs$container = this.$refs.container,
          clientWidth = _this$$refs$container.clientWidth,
          clientHeight = _this$$refs$container.clientHeight;
      var left = (0, _utils.clamp)(this.getLeft(e), 0, clientWidth);
      var top = (0, _utils.clamp)(this.getTop(e), 0, clientHeight);
      var saturation = left / clientWidth;
      var bright = (0, _utils.clamp)(1 - top / clientHeight, 0, 1);
      this.change(this.value.hsv.h, saturation, bright, this.value.hsv.a);
    },
    handleMouseDown: function handleMouseDown(e) {
      _hsaMixin.default.methods.handleMouseDown.call(this, e); //            window.addEventListener('mouseup', this.handleChange, false);


      (0, _dom.on)(window, 'mouseup', this.handleChange);
    },
    handleSlide: function handleSlide(e, direction, key) {
      e.preventDefault();
      e.stopPropagation();
      var isPowerKey = e[this.powerKey];
      var increment = isPowerKey ? direction * this.multiplier : direction;
      var _this$value$hsv = this.value.hsv,
          h = _this$value$hsv.h,
          s = _this$value$hsv.s,
          v = _this$value$hsv.v,
          a = _this$value$hsv.a;
      var saturation = (0, _utils.clamp)(s + (0, _utils.getIncrement)(key, ['left', 'right'], increment), 0, 1);
      var bright = (0, _utils.clamp)(v + (0, _utils.getIncrement)(key, ['up', 'down'], increment), 0, 1);
      this.change(h, saturation, bright, a);
    },
    onKeydown: function onKeydown(event) {
      var key = event.key;

      if ((0, _assist.oneOf)(key, ['Esc', 'Escape'])) {
        this.handleEscape(event);
      } else if ((0, _assist.oneOf)(key, ['Up', 'ArrowUp'])) {
        this.handleUp(event);
      } else if ((0, _assist.oneOf)(key, ['Down', 'ArrowDown'])) {
        this.handleDown(event);
      } else if ((0, _assist.oneOf)(key, ['Left', 'ArrowLeft'])) {
        this.handleLeft(event);
      } else if ((0, _assist.oneOf)(key, ['Right', 'ArrowRight'])) {
        this.handleRight(event);
      }
    },
    unbindEventListeners: function unbindEventListeners(e) {
      _hsaMixin.default.methods.unbindEventListeners.call(this, e); //            window.removeEventListener('mouseup', this.handleChange);


      (0, _dom.off)(window, 'mouseup', this.handleChange);
    }
  }
};
exports.default = _default;

/***/ }),
/* 117 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_hue_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(118);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_hue_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_hue_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_hue_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_hue_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_hue_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _hsaMixin = _interopRequireDefault(__webpack_require__(263));

var _prefixMixin = _interopRequireDefault(__webpack_require__(39));

var _utils = __webpack_require__(29);

var _assist = __webpack_require__(6);

var logger = __webpack_require__(0).get("iview:components:color-picker:hue.vue");

var _default = {
  name: 'Hue',
  mixins: [_hsaMixin.default, _prefixMixin.default],
  data: function data() {
    var normalStep = 1 / 360 * 25;
    var jumpStep = 20 * normalStep;
    return {
      down: -jumpStep,
      left: -normalStep,
      percent: (0, _utils.clamp)(this.value.hsl.h * 100 / 360, 0, 100),
      powerKey: 'shiftKey',
      right: normalStep,
      up: jumpStep
    };
  },
  watch: {
    value: function value() {
      this.percent = (0, _utils.clamp)(this.value.hsl.h * 100 / 360, 0, 100);
    }
  },
  methods: {
    change: function change(percent) {
      this.percent = (0, _utils.clamp)(percent, 0, 100);
      var _this$value$hsl = this.value.hsl,
          h = _this$value$hsl.h,
          s = _this$value$hsl.s,
          l = _this$value$hsl.l,
          a = _this$value$hsl.a;
      var newHue = (0, _utils.clamp)(percent / 100 * 360, 0, 360);

      if (h !== newHue) {
        this.$emit('change', {
          a: a,
          h: newHue,
          l: l,
          s: s,
          source: 'hsl'
        });
      }
    },
    handleChange: function handleChange(e) {
      e.preventDefault();
      e.stopPropagation();
      var left = this.getLeft(e);

      if (left < 0) {
        this.change(0);
        return;
      }

      var clientWidth = this.$refs.container.clientWidth;

      if (left > clientWidth) {
        this.change(100);
        return;
      }

      this.change(left * 100 / clientWidth);
    },
    handleSlide: function handleSlide(e, direction) {
      e.preventDefault();
      e.stopPropagation();

      if (e[this.powerKey]) {
        this.change(direction < 0 ? 0 : 100);
        return;
      }

      this.change(this.percent + direction);
    },
    onKeydown: function onKeydown(event) {
      var key = event.key;

      if ((0, _assist.oneOf)(key, ['Esc', 'Escape'])) {
        this.handleEscape(event);
      } else if ((0, _assist.oneOf)(key, ['Up', 'ArrowUp'])) {
        this.handleUp(event);
      } else if ((0, _assist.oneOf)(key, ['Down', 'ArrowDown'])) {
        this.handleDown(event);
      } else if ((0, _assist.oneOf)(key, ['Left', 'ArrowLeft'])) {
        this.handleLeft(event);
      } else if ((0, _assist.oneOf)(key, ['Right', 'ArrowRight'])) {
        this.handleRight(event);
      }
    }
  }
};
exports.default = _default;

/***/ }),
/* 119 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_alpha_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(120);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_alpha_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_alpha_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_alpha_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_alpha_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_alpha_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _hsaMixin = _interopRequireDefault(__webpack_require__(263));

var _prefixMixin = _interopRequireDefault(__webpack_require__(39));

var _utils = __webpack_require__(29);

var _assist = __webpack_require__(6);

var logger = __webpack_require__(0).get("iview:components:color-picker:alpha.vue");

var _default = {
  name: 'Alpha',
  mixins: [_hsaMixin.default, _prefixMixin.default],
  data: function data() {
    var normalStep = 1;
    var jumpStep = 10;
    return {
      down: -jumpStep,
      left: -normalStep,
      powerKey: 'shiftKey',
      right: normalStep,
      up: jumpStep
    };
  },
  computed: {
    gradientStyle: function gradientStyle() {
      var _this$value$rgba = this.value.rgba,
          r = _this$value$rgba.r,
          g = _this$value$rgba.g,
          b = _this$value$rgba.b;
      var start = (0, _utils.toRGBAString)({
        a: 0,
        b: b,
        g: g,
        r: r
      });
      var finish = (0, _utils.toRGBAString)({
        a: 1,
        b: b,
        g: g,
        r: r
      });
      return {
        background: "linear-gradient(to right, ".concat(start, " 0%, ").concat(finish, " 100%)")
      };
    }
  },
  methods: {
    change: function change(newAlpha) {
      var _this$value$hsl = this.value.hsl,
          h = _this$value$hsl.h,
          s = _this$value$hsl.s,
          l = _this$value$hsl.l;
      var a = this.value.a;

      if (a !== newAlpha) {
        this.$emit('change', {
          a: newAlpha,
          h: h,
          l: l,
          s: s,
          source: 'rgba'
        });
      }
    },
    handleChange: function handleChange(e) {
      e.preventDefault();
      e.stopPropagation();
      var left = this.getLeft(e);

      if (left < 0) {
        this.change(0);
        return;
      }

      var clientWidth = this.$refs.container.clientWidth;

      if (left > clientWidth) {
        this.change(1);
        return;
      }

      this.change(Math.round(left * 100 / clientWidth) / 100);
    },
    handleSlide: function handleSlide(e, direction) {
      e.preventDefault();
      e.stopPropagation();
      this.change((0, _utils.clamp)(e[this.powerKey] ? direction : Math.round(this.value.hsl.a * 100 + direction) / 100, 0, 1));
    },
    onKeydown: function onKeydown(event) {
      var key = event.key;

      if ((0, _assist.oneOf)(key, ['Esc', 'Escape'])) {
        this.handleEscape(event);
      } else if ((0, _assist.oneOf)(key, ['Up', 'ArrowUp'])) {
        this.handleUp(event);
      } else if ((0, _assist.oneOf)(key, ['Down', 'ArrowDown'])) {
        this.handleDown(event);
      } else if ((0, _assist.oneOf)(key, ['Left', 'ArrowLeft'])) {
        this.handleLeft(event);
      } else if ((0, _assist.oneOf)(key, ['Right', 'ArrowRight'])) {
        this.handleRight(event);
      }
    }
  }
};
exports.default = _default;

/***/ }),
/* 121 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_content_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(122);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_content_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_content_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_content_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_content_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_content_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var logger = __webpack_require__(0).get("iview:components:layout:content.vue");

//
//
//
//
//
var prefixCls = 'ivu-layout';
var _default = {
  name: 'Content',
  computed: {
    wrapClasses: function wrapClasses() {
      return "".concat(prefixCls, "-content");
    }
  }
};
exports.default = _default;

/***/ }),
/* 123 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_picker_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(124);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_picker_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_picker_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_picker_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_picker_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_picker_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _slicedToArray2 = _interopRequireDefault(__webpack_require__(20));

var _objectSpread2 = _interopRequireDefault(__webpack_require__(11));

var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(15));

var _typeof2 = _interopRequireDefault(__webpack_require__(36));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _stubArray = _interopRequireDefault(__webpack_require__(14));

var _stubObject = _interopRequireDefault(__webpack_require__(45));

var _castArray = _interopRequireDefault(__webpack_require__(381));

var _vClickOutsideX = __webpack_require__(24);

var _input = _interopRequireDefault(__webpack_require__(37));

var _dropdown = _interopRequireDefault(__webpack_require__(28));

var _transferDom = _interopRequireDefault(__webpack_require__(21));

var _util = __webpack_require__(17);

var _assist = __webpack_require__(6);

var _emitter = _interopRequireDefault(__webpack_require__(9));

var _this = void 0;

var logger = __webpack_require__(0).get("iview:components:date-picker:picker.vue");

var prefixCls = 'ivu-date-picker';
var pickerPrefixCls = 'ivu-picker';

var isEmptyArray = function isEmptyArray(val) {
  var _this2 = this;

  (0, _newArrowCheck2.default)(this, _this);
  return val.reduce(function (isEmpty, str) {
    (0, _newArrowCheck2.default)(this, _this2);
    return isEmpty && !str || typeof str === 'string' && str.trim() === '';
  }.bind(this), true);
}.bind(void 0);

var keyValueMapper = {
  40: 'up',
  39: 'right',
  38: 'down',
  37: 'left'
};

var mapPossibleValues = function mapPossibleValues(key, horizontal, vertical) {
  (0, _newArrowCheck2.default)(this, _this);

  if (key === 'left') {
    return horizontal * -1;
  }

  if (key === 'right') {
    return horizontal * 1;
  }

  if (key === 'up') {
    return vertical * 1;
  }

  if (key === 'down') {
    return vertical * -1;
  }

  return undefined;
}.bind(void 0);

var pulseElement = function pulseElement(el) {
  var _this3 = this;

  (0, _newArrowCheck2.default)(this, _this);
  var pulseClass = 'ivu-date-picker-btn-pulse';
  el.classList.add(pulseClass);
  setTimeout(function () {
    (0, _newArrowCheck2.default)(this, _this3);
    return el.classList.remove(pulseClass);
  }.bind(this), 200);
}.bind(void 0);

var extractTime = function extractTime(date) {
  (0, _newArrowCheck2.default)(this, _this);

  if (!date) {
    return [0, 0, 0];
  }

  return [date.getHours(), date.getMinutes(), date.getSeconds()];
}.bind(void 0);

var _default = {
  components: {
    Drop: _dropdown.default,
    iInput: _input.default
  },
  directives: {
    clickOutside: _vClickOutsideX.directive,
    TransferDom: _transferDom.default
  },
  mixins: [_emitter.default],
  props: {
    clearable: {
      default: true,
      type: Boolean
    },
    confirm: {
      default: false,
      type: Boolean
    },
    disabled: {
      default: false,
      type: Boolean
    },
    editable: {
      default: true,
      type: Boolean
    },
    elementId: {
      default: undefined,
      type: String
    },
    format: {
      default: undefined,
      type: String
    },
    multiple: {
      default: false,
      type: Boolean
    },
    name: {
      default: undefined,
      type: String
    },
    open: {
      default: null,
      type: Boolean
    },
    options: {
      default: _stubObject.default,
      type: Object
    },
    placeholder: {
      default: '',
      type: String
    },
    placement: {
      default: 'bottom-start',
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['top', 'top-start', 'top-end', 'bottom', 'bottom-start', 'bottom-end', 'left', 'left-start', 'left-end', 'right', 'right-start', 'right-end']);
      }
    },
    readonly: {
      default: false,
      type: Boolean
    },
    showWeekNumbers: {
      default: false,
      type: Boolean
    },
    size: {
      default: 'default',
      type: String,
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['small', 'large', 'default']);
      }
    },
    splitPanels: {
      default: false,
      type: Boolean
    },
    startDate: {
      default: undefined,
      type: Date
    },
    steps: {
      default: _stubArray.default,
      type: Array
    },
    timePickerOptions: {
      default: _stubObject.default,
      type: Object
    },
    transfer: {
      default: false,
      type: Boolean
    },
    value: {
      default: undefined,
      type: [Date, String, Array]
    }
  },
  data: function data() {
    var isRange = this.type.includes('range');
    var emptyArray = isRange ? [null, null] : [null];
    var initialValue = isEmptyArray((isRange ? this.value : [this.value]) || []) ? emptyArray : this.parseDate(this.value);
    var focusedTime = initialValue.map(extractTime);
    return {
      // fixed when click a date,trigger clickoutside to close picker
      disableClickOutSide: false,
      // transfer 模式下，点击Drop也会触发关闭,
      disableCloseUnderTransfer: false,
      focusedDate: initialValue[0] || this.startDate || new Date(),
      focusedTime: {
        active: false,
        column: 0,
        // which column inside the picker
        picker: 0,
        // which picker
        // the values array into [hh, mm, ss],
        time: focusedTime
      },
      forceInputRerender: 1,
      internalFocus: false,
      internalValue: initialValue,
      isFocused: false,
      prefixCls: prefixCls,
      selectionMode: this.onSelectionModeChange(this.type),
      showClose: false,
      visible: false
    };
  },
  computed: {
    iconType: function iconType() {
      var icon = 'ios-calendar-outline';

      if (this.type === 'time' || this.type === 'timerange') {
        icon = 'ios-clock-outline';
      }

      if (this.showClose) {
        icon = 'ios-close';
      }

      return icon;
    },
    isConfirm: function isConfirm() {
      return this.confirm || this.type === 'datetime' || this.type === 'datetimerange' || this.multiple;
    },
    opened: function opened() {
      return this.open === null ? this.visible : this.open;
    },
    publicStringValue: function publicStringValue() {
      var formatDate = this.formatDate,
          publicVModelValue = this.publicVModelValue,
          type = this.type;

      if (type.match(/^time/)) {
        return publicVModelValue;
      }

      if (this.multiple) {
        return formatDate(publicVModelValue);
      }

      return Array.isArray(publicVModelValue) ? publicVModelValue.map(formatDate) : formatDate(publicVModelValue);
    },
    publicVModelValue: function publicVModelValue() {
      var _this4 = this;

      if (this.multiple) {
        return this.internalValue.slice();
      }

      var isRange = this.type.includes('range');
      var val = this.internalValue.map(function (date) {
        (0, _newArrowCheck2.default)(this, _this4);
        return date instanceof Date ? new Date(date) : date || '';
      }.bind(this));

      if (this.type.match(/^time/)) {
        val = val.map(this.formatDate);
      }

      return isRange || this.multiple ? val : val[0];
    },
    transition: function transition() {
      var bottomPlaced = this.placement.match(/^bottom/);
      return bottomPlaced ? 'slide-up' : 'slide-down';
    },
    visualValue: function visualValue() {
      return this.formatDate(this.internalValue);
    },
    wrapperClasses: function wrapperClasses() {
      return [prefixCls, (0, _defineProperty2.default)({}, "".concat(prefixCls, "-focused"), this.isFocused)];
    }
  },
  watch: {
    open: function open(val) {
      this.visible = val === true;
    },
    publicVModelValue: function publicVModelValue(now, before) {
      var newValue = JSON.stringify(now);
      var oldValue = JSON.stringify(before);
      var shouldEmitInput = newValue !== oldValue || (0, _typeof2.default)(now) !== (0, _typeof2.default)(before);

      if (shouldEmitInput) {
        this.$emit('input', now);
      } // to update v-model

    },
    type: function type(_type) {
      this.onSelectionModeChange(_type);
    },
    value: function value(val) {
      this.internalValue = this.parseDate(val);
    },
    visible: function visible(state) {
      if (state === false) {
        this.$refs.drop.destroy();
      }

      this.$refs.drop.update();
      this.$emit('on-open-change', state);
    }
  },
  mounted: function mounted() {
    var _this5 = this;

    var initialValue = this.value;
    var parsedValue = this.publicVModelValue;

    if ((0, _typeof2.default)(initialValue) !== (0, _typeof2.default)(parsedValue) || JSON.stringify(initialValue) !== JSON.stringify(parsedValue)) {
      this.$emit('input', this.publicVModelValue); // to update v-model
    }

    if (this.open !== null) {
      this.visible = this.open;
    } // to handle focus from confirm buttons


    this.$on('focus-input', function () {
      (0, _newArrowCheck2.default)(this, _this5);
      return this.focus();
    }.bind(this));
  },
  methods: {
    emitChange: function emitChange(type) {
      var _this6 = this;

      this.$nextTick(function () {
        (0, _newArrowCheck2.default)(this, _this6);
        this.$emit('on-change', this.publicStringValue, type);
        this.dispatch('FormItem', 'on-form-change', this.publicStringValue);
      }.bind(this));
    },
    focus: function focus() {
      if (this.$refs.input) {
        this.$refs.input.focus();
      }
    },
    formatDate: function formatDate(value) {
      var format = _util.DEFAULT_FORMATS[this.type];

      if (this.multiple) {
        var _formatter = _util.TYPE_VALUE_RESOLVER_MAP.multiple.formatter;
        return _formatter(value, this.format || format);
      }

      var _ref2 = _util.TYPE_VALUE_RESOLVER_MAP[this.type] || _util.TYPE_VALUE_RESOLVER_MAP.default,
          formatter = _ref2.formatter;

      return formatter(value, this.format || format);
    },
    handleBlur: function handleBlur(e) {
      if (this.internalFocus) {
        this.internalFocus = false;
        return;
      }

      if (this.visible) {
        e.preventDefault();
        return;
      }

      this.isFocused = false;
      this.onSelectionModeChange(this.type);
      this.internalValue = this.internalValue.slice(); // trigger panel watchers to reset views

      this.reset();
      this.$refs.pickerPanel.onToggleVisibility(false);
    },
    handleClear: function handleClear() {
      var _this7 = this;

      this.visible = false;
      this.internalValue = this.internalValue.map(function () {
        (0, _newArrowCheck2.default)(this, _this7);
        return null;
      }.bind(this));
      this.$emit('on-clear');
      this.dispatch('FormItem', 'on-form-change', '');
      this.emitChange(this.type);
      this.reset();
      setTimeout(function () {
        (0, _newArrowCheck2.default)(this, _this7);
        return this.onSelectionModeChange(this.type);
      }.bind(this), 500 // delay to improve dropdown close visual effect
      );
    },
    handleClose: function handleClose(e) {
      if (this.disableCloseUnderTransfer) {
        this.disableCloseUnderTransfer = false;
        return;
      }

      if (e && e.type === 'mousedown' && this.visible) {
        e.preventDefault();
        e.stopPropagation();
        return;
      }

      if (this.visible) {
        var pickerPanel = this.$refs.pickerPanel && this.$refs.pickerPanel.$el;

        if (e && pickerPanel && pickerPanel.contains(e.target)) {
          return;
        } // its a click inside own component, lets ignore it.


        this.visible = false;

        if (e) {
          e.preventDefault();
          e.stopPropagation();
        }

        return;
      }

      this.isFocused = false;
      this.disableClickOutSide = false;
    },
    handleFocus: function handleFocus(e) {
      if (this.readonly) {
        return;
      }

      this.isFocused = true;

      if (e && e.type === 'focus') {
        return;
      } // just focus, don't open yet


      if (!this.disabled) {
        this.visible = true;
      }
    },
    handleIconClick: function handleIconClick() {
      if (this.showClose) {
        this.handleClear();
      } else if (!this.disabled) {
        this.handleFocus();
      }
    },
    handleInputChange: function handleInputChange(event) {
      var _this8 = this;

      var isArrayValue = this.type.includes('range') || this.multiple;
      var oldValue = this.visualValue;
      var newValue = event.target.value;
      var newDate = this.parseDate(newValue);
      var disabledDateFn = this.options && typeof this.options.disabledDate === 'function' && this.options.disabledDate;
      var valueToTest = isArrayValue ? newDate : newDate[0];
      var isDisabled = disabledDateFn && disabledDateFn(valueToTest);
      var isValidDate = newDate.reduce(function (valid, date) {
        (0, _newArrowCheck2.default)(this, _this8);
        return valid && date instanceof Date;
      }.bind(this), true);

      if (newValue !== oldValue && !isDisabled && isValidDate) {
        this.emitChange(this.type);
        this.internalValue = newDate;
      } else {
        this.forceInputRerender += 1;
      }
    },
    handleInputMouseenter: function handleInputMouseenter() {
      if (this.readonly || this.disabled) {
        return;
      }

      if (this.visualValue && this.clearable) {
        this.showClose = true;
      }
    },
    handleInputMouseleave: function handleInputMouseleave() {
      this.showClose = false;
    },
    handleKeydown: function handleKeydown(e) {
      var _this9 = this;

      var keyCode = e.keyCode; // handle "tab" key

      if (keyCode === 9) {
        if (this.visible) {
          e.stopPropagation();
          e.preventDefault();

          if (this.isConfirm) {
            var selector = ".".concat(pickerPrefixCls, "-confirm > *");
            var tabbable = this.$refs.drop.$el.querySelectorAll(selector);
            this.internalFocus = true;
            var element = (0, _toConsumableArray2.default)(tabbable)[e.shiftKey ? 'pop' : 'shift']();
            element.focus();
          } else {
            this.handleClose();
          }
        } else {
          this.focused = false;
        }
      } // open the panel


      var arrows = [37, 38, 39, 40];

      if (!this.visible && arrows.includes(keyCode)) {
        this.visible = true;
        return;
      } // close on "esc" key


      if (keyCode === 27) {
        if (this.visible) {
          e.stopPropagation();
          this.handleClose();
        }
      } // select date, "Enter" key


      if (keyCode === 13) {
        var timePickers = (0, _assist.findComponentsDownward)(this, 'TimeSpinner');

        if (timePickers.length > 0) {
          var columnsPerPicker = timePickers[0].showSeconds ? 3 : 2;
          var pickerIndex = Math.floor(this.focusedTime.column / columnsPerPicker);
          var value = this.focusedTime.time[pickerIndex];
          timePickers[pickerIndex].chooseValue(value);
          return;
        }

        if (this.type.match(/range/)) {
          this.$refs.pickerPanel.handleRangePick(this.focusedDate, 'date');
        } else {
          var panels = (0, _assist.findComponentsDownward)(this, 'PanelTable');

          var compareDate = function compareDate(d) {
            (0, _newArrowCheck2.default)(this, _this9);
            var sliceIndex = ['year', 'month', 'date'].indexOf(this.type) + 1;
            return [d.getFullYear(), d.getMonth(), d.getDate()].slice(0, sliceIndex).join('-');
          }.bind(this);

          var dateIsValid = panels.find(function (_ref3) {
            var _this10 = this;

            var cells = _ref3.cells;
            (0, _newArrowCheck2.default)(this, _this9);
            return cells.find(function (_ref4) {
              var date = _ref4.date,
                  disabled = _ref4.disabled,
                  type = _ref4.type;
              (0, _newArrowCheck2.default)(this, _this10);
              return !disabled && type !== 'weekLabel' && compareDate(date) === compareDate(this.focusedDate);
            }.bind(this));
          }.bind(this));

          if (dateIsValid) {
            this.onPick(this.focusedDate, false, 'date');
          }
        }
      }

      if (!arrows.includes(keyCode)) {
        return;
      } // ignore rest of keys
      // navigate times and dates


      if (this.focusedTime.active) {
        e.preventDefault();
      } // to prevent cursor from moving


      this.navigateDatePanel(keyValueMapper[keyCode], e.shiftKey);
    },
    // 开启 transfer 时，点击 Drop 即会关闭，这里不让其关闭
    handleTransferClick: function handleTransferClick() {
      if (this.transfer) {
        this.disableCloseUnderTransfer = true;
      }
    },
    navigateDatePanel: function navigateDatePanel(direction, shift) {
      var timePickers = (0, _assist.findComponentsDownward)(this, 'TimeSpinner');

      if (timePickers.length > 0) {
        // we are in TimePicker mode
        this.navigateTimePanel(direction, shift, timePickers);
        return;
      }

      if (shift) {
        if (this.type === 'year') {
          this.focusedDate = new Date(this.focusedDate.getFullYear() + mapPossibleValues(direction, 0, 10), this.focusedDate.getMonth(), this.focusedDate.getDate());
        } else {
          this.focusedDate = new Date(this.focusedDate.getFullYear() + mapPossibleValues(direction, 0, 1), this.focusedDate.getMonth() + mapPossibleValues(direction, 1, 0), this.focusedDate.getDate());
        }

        var position = direction.match(/left|down/) ? 'prev' : 'next';
        var double = direction.match(/up|down/) ? '-double' : ''; // pulse button

        var button = this.$refs.drop.$el.querySelector(".ivu-date-picker-".concat(position, "-btn-arrow").concat(double));

        if (button) {
          pulseElement(button);
        }

        return;
      }

      var initialDate = this.focusedDate || this.internalValue && this.internalValue[0] || new Date();
      var focusedDate = new Date(initialDate);

      if (this.type.match(/^date/)) {
        var lastOfMonth = (0, _util.getDayCountOfMonth)(initialDate.getFullYear(), initialDate.getMonth());
        var startDay = initialDate.getDate();
        var nextDay = focusedDate.getDate() + mapPossibleValues(direction, 1, 7);

        if (nextDay < 1) {
          if (direction.match(/left|right/)) {
            focusedDate.setMonth(focusedDate.getMonth() + 1);
            focusedDate.setDate(nextDay);
          } else {
            focusedDate.setDate(startDay + Math.floor((lastOfMonth - startDay) / 7) * 7);
          }
        } else if (nextDay > lastOfMonth) {
          if (direction.match(/left|right/)) {
            focusedDate.setDate(1);
          } else {
            focusedDate.setDate(startDay % 7);
          }
        } else {
          focusedDate.setDate(nextDay);
        }
      }

      if (this.type.match(/^month/)) {
        focusedDate.setMonth(focusedDate.getMonth() + mapPossibleValues(direction, 1, 3));
      }

      if (this.type.match(/^year/)) {
        focusedDate.setFullYear(focusedDate.getFullYear() + mapPossibleValues(direction, 1, 3));
      }

      this.focusedDate = focusedDate;
    },
    navigateTimePanel: function navigateTimePanel(direction) {
      var _this11 = this;

      this.focusedTime.active = true;
      var horizontal = direction.match(/left|right/);
      var vertical = direction.match(/up|down/);
      var timePickers = (0, _assist.findComponentsDownward)(this, 'TimeSpinner');
      var maxNrOfColumns = (timePickers[0].showSeconds ? 3 : 2) * timePickers.length;

      var column = function (currentColumn) {
        (0, _newArrowCheck2.default)(this, _this11);
        var dir = 0;

        if (horizontal) {
          dir = direction === 'left' ? -1 : 1;
        }

        var incremented = currentColumn + dir;
        return (incremented + maxNrOfColumns) % maxNrOfColumns;
      }.bind(this)(this.focusedTime.column);

      var columnsPerPicker = maxNrOfColumns / timePickers.length;
      var pickerIndex = Math.floor(column / columnsPerPicker);
      var col = column % columnsPerPicker;

      if (horizontal) {
        var time = this.internalValue.map(extractTime);
        this.focusedTime = (0, _objectSpread2.default)({}, this.focusedTime, {
          column: column,
          time: time
        });
        timePickers.forEach(function (instance, i) {
          (0, _newArrowCheck2.default)(this, _this11);

          if (i === pickerIndex) {
            instance.updateFocusedTime(col, time[pickerIndex]);
          } else {
            instance.updateFocusedTime(-1, instance.focusedTime);
          }
        }.bind(this));
      }

      if (vertical) {
        var increment = direction === 'up' ? 1 : -1;
        var timeParts = ['hours', 'minutes', 'seconds'];
        var pickerPossibleValues = timePickers[pickerIndex]["".concat(timeParts[col], "List")];
        var nextIndex = pickerPossibleValues.findIndex(function (_ref5) {
          var text = _ref5.text;
          (0, _newArrowCheck2.default)(this, _this11);
          return this.focusedTime.time[pickerIndex][col] === text;
        }.bind(this)) + increment;
        var nextValue = pickerPossibleValues[nextIndex % pickerPossibleValues.length].text;
        var times = this.focusedTime.time.map(function (time, i) {
          (0, _newArrowCheck2.default)(this, _this11);

          if (i !== pickerIndex) {
            return time;
          }

          time[col] = nextValue;
          return time;
        }.bind(this));
        this.focusedTime = (0, _objectSpread2.default)({}, this.focusedTime, {
          time: times
        });
        timePickers.forEach(function (instance, i) {
          (0, _newArrowCheck2.default)(this, _this11);

          if (i === pickerIndex) {
            instance.updateFocusedTime(col, times[i]);
          } else {
            instance.updateFocusedTime(-1, instance.focusedTime);
          }
        }.bind(this));
      }
    },
    onPick: function onPick(dates) {
      var _this12 = this;

      var visible = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var type = arguments.length > 2 ? arguments[2] : undefined;

      if (this.multiple) {
        var pickedTimeStamp = dates.getTime();
        var indexOfPickedDate = this.internalValue.findIndex(function (date) {
          (0, _newArrowCheck2.default)(this, _this12);
          return date && date.getTime() === pickedTimeStamp;
        }.bind(this));
        var allDates = [].concat((0, _toConsumableArray2.default)(this.internalValue), [dates]).filter(Boolean);
        var timeStamps = allDates.map(function (date) {
          (0, _newArrowCheck2.default)(this, _this12);
          return date.getTime();
        }.bind(this)).filter(function (ts, i, arr) {
          (0, _newArrowCheck2.default)(this, _this12);
          return arr.indexOf(ts) === i && i !== indexOfPickedDate;
        }.bind(this)); // filter away duplicates

        this.internalValue = timeStamps.map(function (ts) {
          (0, _newArrowCheck2.default)(this, _this12);
          return new Date(ts);
        }.bind(this));
      } else {
        this.internalValue = (0, _castArray.default)(this.parseDate(dates));
      }

      var _this$internalValue = (0, _slicedToArray2.default)(this.internalValue, 1),
          internalValue = _this$internalValue[0];

      if (internalValue) {
        this.focusedDate = internalValue;
      }

      this.focusedTime = (0, _objectSpread2.default)({}, this.focusedTime, {
        time: this.internalValue.map(extractTime)
      });

      if (!this.isConfirm) {
        this.onSelectionModeChange(this.type);
      } // reset the selectionMode


      if (!this.isConfirm) {
        this.visible = visible;
      }

      this.emitChange(type);
    },
    onPickSuccess: function onPickSuccess() {
      this.visible = false;
      this.$emit('on-ok');
      this.focus();
      this.reset();
    },
    onSelectionModeChange: function onSelectionModeChange(rangeType) {
      var type = rangeType;

      if (type.match(/^date/)) {
        type = 'date';
      }

      this.selectionMode = (0, _assist.oneOf)(type, ['year', 'month', 'date', 'time']) && type;
      return this.selectionMode;
    },
    parseDate: function parseDate(value) {
      var _this13 = this;

      var val = value;
      var type = this.type;
      var isRange = type.includes('range');

      var _ref6 = _util.TYPE_VALUE_RESOLVER_MAP[type] || _util.TYPE_VALUE_RESOLVER_MAP.default,
          parser = _ref6.parser;

      var format = this.format || _util.DEFAULT_FORMATS[type];
      var multipleParser = _util.TYPE_VALUE_RESOLVER_MAP.multiple.parser;

      if (val && type === 'time' && !(val instanceof Date)) {
        val = parser(val, format);
      } else if (this.multiple && val) {
        val = multipleParser(val, format);
      } else if (isRange) {
        if (!val) {
          val = [null, null];
        } else if (typeof val === 'string') {
          val = parser(val, format);
        } else if (type === 'timerange') {
          val = parser(val, format).map(function (v) {
            (0, _newArrowCheck2.default)(this, _this13);
            return v || '';
          }.bind(this));
        } else {
          var _val = val,
              _val2 = (0, _slicedToArray2.default)(_val, 2),
              start = _val2[0],
              end = _val2[1];

          if (start instanceof Date && end instanceof Date) {
            val = val.map(function (date) {
              (0, _newArrowCheck2.default)(this, _this13);
              return new Date(date);
            }.bind(this));
          } else if (typeof start === 'string' && typeof end === 'string') {
            val = parser(val.join(_util.RANGE_SEPARATOR), format);
          } else if (!start || !end) {
            val = [null, null];
          }
        }
      } else if (typeof val === 'string' && type.indexOf('time') !== 0) {
        val = parser(val, format) || null;
      }

      return isRange || this.multiple ? val || [] : [val];
    },
    reset: function reset() {
      if (this.$refs.pickerPanel.reset) {
        this.$refs.pickerPanel.reset();
      }
    }
  }
};
exports.default = _default;

/***/ }),
/* 125 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_date_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(126);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_date_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_date_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_date_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_date_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_date_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _icon = _interopRequireDefault(__webpack_require__(12));

var _dateTable = _interopRequireDefault(__webpack_require__(391));

var _yearTable = _interopRequireDefault(__webpack_require__(392));

var _monthTable = _interopRequireDefault(__webpack_require__(393));

var _time = _interopRequireDefault(__webpack_require__(394));

var _confirm = _interopRequireDefault(__webpack_require__(47));

var _datePanelLabel = _interopRequireDefault(__webpack_require__(396));

var _panelMixin = _interopRequireDefault(__webpack_require__(48));

var _datePanelMixin = _interopRequireDefault(__webpack_require__(397));

var _locale = _interopRequireDefault(__webpack_require__(10));

var _util = __webpack_require__(17);

var logger = __webpack_require__(0).get("iview:components:date-picker:panel:Date:date.vue");

var prefixCls = 'ivu-picker-panel';
var datePrefixCls = 'ivu-date-picker';
var _default = {
  name: 'DatePickerPanel',
  components: {
    Confirm: _confirm.default,
    DatePanelLabel: _datePanelLabel.default,
    DateTable: _dateTable.default,
    Icon: _icon.default,
    MonthTable: _monthTable.default,
    TimePicker: _time.default,
    YearTable: _yearTable.default
  },
  mixins: [_panelMixin.default, _locale.default, _datePanelMixin.default],
  props: {
    // more props in the mixin
    multiple: {
      default: false,
      type: Boolean
    }
  },
  data: function data() {
    var selectionMode = this.selectionMode,
        value = this.value;
    var dates = value.slice().sort();
    return {
      currentView: selectionMode || 'date',
      datePrefixCls: datePrefixCls,
      dates: dates,
      panelDate: this.startDate || dates[0] || new Date(),
      pickerTable: this.getTableType(selectionMode),
      prefixCls: prefixCls
    };
  },
  computed: {
    classes: function classes() {
      return ["".concat(prefixCls, "-body-wrapper"), (0, _defineProperty2.default)({}, "".concat(prefixCls, "-with-sidebar"), this.shortcuts.length)];
    },
    datePanelLabel: function datePanelLabel() {
      var _this = this;

      var locale = this.t('i.locale');
      var datePanelLabel = this.t('i.datepicker.datePanelLabel');
      var date = this.panelDate;

      var _formatDateLabels = (0, _util.formatDateLabels)(locale, datePanelLabel, date),
          labels = _formatDateLabels.labels,
          separator = _formatDateLabels.separator;

      var handler = function handler(type) {
        var _this2 = this;

        (0, _newArrowCheck2.default)(this, _this);
        return function () {
          (0, _newArrowCheck2.default)(this, _this2);

          /* eslint-disable-next-line vue/no-side-effects-in-computed-properties */
          this.pickerTable = this.getTableType(type);
          return this.pickerTable;
        }.bind(this);
      }.bind(this);

      return {
        labels: labels.map(function (obj) {
          (0, _newArrowCheck2.default)(this, _this);
          obj.handler = handler(obj.type);
          return obj;
        }.bind(this)),
        separator: separator
      };
    },
    panelPickerHandlers: function panelPickerHandlers() {
      return this.pickerTable === "".concat(this.currentView, "-table") ? this.handlePick : this.handlePreSelection;
    },
    timeDisabled: function timeDisabled() {
      return !this.dates[0];
    }
  },
  watch: {
    currentView: function currentView(_currentView) {
      var _this3 = this;

      this.$emit('on-selection-mode-change', _currentView);

      if (this.currentView === 'time') {
        this.$nextTick(function () {
          (0, _newArrowCheck2.default)(this, _this3);
          var spinner = this.$refs.timePicker.$refs.timeSpinner;
          spinner.updateScroll();
        }.bind(this));
      }
    },
    focusedDate: function focusedDate(date) {
      var isDifferentYear = date.getFullYear() !== this.panelDate.getFullYear();
      var isDifferentMonth = isDifferentYear || date.getMonth() !== this.panelDate.getMonth();

      if (isDifferentYear || isDifferentMonth) {
        if (!this.multiple) {
          this.panelDate = date;
        }
      }
    },
    selectionMode: function selectionMode(type) {
      this.currentView = type;
      this.pickerTable = this.getTableType(type);
    },
    value: function value(newVal) {
      this.dates = newVal;
      var panelDate = this.multiple ? this.dates[this.dates.length - 1] : this.startDate || this.dates[0];
      this.panelDate = panelDate || new Date();
    }
  },
  methods: {
    changeMonth: function changeMonth(dir) {
      this.panelDate = (0, _util.siblingMonth)(this.panelDate, dir);
    },
    changeYear: function changeYear(dir) {
      if (this.selectionMode === 'year' || this.pickerTable === 'year-table') {
        this.panelDate = new Date(this.panelDate.getFullYear() + dir * 10, 0, 1);
      } else {
        this.panelDate = (0, _util.siblingMonth)(this.panelDate, dir * 12);
      }
    },
    getTableType: function getTableType(currentView) {
      return currentView.match(/^time/) ? 'time-picker' : "".concat(currentView, "-table");
    },
    handlePick: function handlePick(val, type) {
      var value = val;
      var selectionMode = this.selectionMode,
          panelDate = this.panelDate;

      if (selectionMode === 'year') {
        value = new Date(value.getFullYear(), 0, 1);
      } else if (selectionMode === 'month') {
        value = new Date(panelDate.getFullYear(), value.getMonth(), 1);
      } else {
        value = new Date(value);
      }

      this.dates = [value];
      this.$emit('on-pick', value, false, type || selectionMode);
    },
    handlePreSelection: function handlePreSelection(value) {
      this.panelDate = value;

      if (this.pickerTable === 'year-table') {
        this.pickerTable = 'month-table';
      } else {
        this.pickerTable = this.getTableType(this.currentView);
      }
    },
    reset: function reset() {
      this.currentView = this.selectionMode;
      this.pickerTable = this.getTableType(this.currentView);
    }
  }
};
exports.default = _default;

/***/ }),
/* 127 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_date_table_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(128);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_date_table_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_date_table_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_date_table_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_date_table_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_date_table_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _objectSpread2 = _interopRequireDefault(__webpack_require__(11));

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _slicedToArray2 = _interopRequireDefault(__webpack_require__(20));

var _jsCalendar = _interopRequireDefault(__webpack_require__(521));

var _util = __webpack_require__(17);

var _locale = _interopRequireDefault(__webpack_require__(10));

var _mixin = _interopRequireDefault(__webpack_require__(264));

var _prefixCls = _interopRequireDefault(__webpack_require__(265));

var logger = __webpack_require__(0).get("iview:components:date-picker:base:date-table.vue");

var _default = {
  mixins: [_locale.default, _mixin.default],
  props: {
    /* more props in mixin */
    showWeekNumbers: {
      default: false,
      type: Boolean
    }
  },
  data: function data() {
    return {
      prefixCls: _prefixCls.default
    };
  },
  computed: {
    calendar: function calendar() {
      var weekStartDay = Number(this.t('i.datepicker.weekStartDay'));
      return new _jsCalendar.default.Generator({
        onlyDays: !this.showWeekNumbers,
        weekStart: weekStartDay
      });
    },
    cells: function cells() {
      var _this = this;

      var tableYear = this.tableDate.getFullYear();
      var tableMonth = this.tableDate.getMonth();
      var today = (0, _util.clearHours)(new Date()); // timestamp of today

      var selectedDays = this.dates.filter(Boolean).map(_util.clearHours); // timestamp of selected days

      var _this$dates$map = this.dates.map(_util.clearHours),
          _this$dates$map2 = (0, _slicedToArray2.default)(_this$dates$map, 2),
          minDay = _this$dates$map2[0],
          maxDay = _this$dates$map2[1];

      var rangeStart = this.rangeState.from && (0, _util.clearHours)(this.rangeState.from);
      var rangeEnd = this.rangeState.to && (0, _util.clearHours)(this.rangeState.to);
      var isRange = this.selectionMode === 'range';
      var disabledTestFn = typeof this.disabledDate === 'function' && this.disabledDate;
      return this.calendar(tableYear, tableMonth, function (cell) {
        (0, _newArrowCheck2.default)(this, _this);

        // normalize date offset from the dates provided by jsCalendar
        if (cell.date instanceof Date) {
          cell.date.setTime(cell.date.getTime() + cell.date.getTimezoneOffset() * 60000);
        }

        var time = cell.date && (0, _util.clearHours)(cell.date);
        var dateIsInCurrentMonth = cell.date && tableMonth === cell.date.getMonth();
        return (0, _objectSpread2.default)({}, cell, {
          disabled: cell.date && disabledTestFn && disabledTestFn(new Date(time)),
          end: dateIsInCurrentMonth && isRange && time === maxDay,
          range: dateIsInCurrentMonth && isRange && (0, _util.isInRange)(time, rangeStart, rangeEnd),
          selected: dateIsInCurrentMonth && selectedDays.includes(time),
          start: dateIsInCurrentMonth && isRange && time === minDay,
          type: time === today ? 'today' : cell.type
        });
      }.bind(this)).cells.slice(this.showWeekNumbers ? 8 : 0);
    },
    classes: function classes() {
      return ["".concat(_prefixCls.default), (0, _defineProperty2.default)({}, "".concat(_prefixCls.default, "-show-week-numbers"), this.showWeekNumbers)];
    },
    headerDays: function headerDays() {
      var _this2 = this;

      var weekStartDay = Number(this.t('i.datepicker.weekStartDay'));
      var translatedDays = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'].map(function (item) {
        (0, _newArrowCheck2.default)(this, _this2);
        return this.t("i.datepicker.weeks.".concat(item));
      }.bind(this));
      var weekDays = translatedDays.splice(weekStartDay, 7 - weekStartDay).concat(translatedDays.splice(0, weekStartDay));
      return this.showWeekNumbers ? [''].concat(weekDays) : weekDays;
    }
  },
  methods: {
    getCellCls: function getCellCls(cell) {
      var _ref2;

      return ["".concat(_prefixCls.default, "-cell"), (_ref2 = {}, (0, _defineProperty2.default)(_ref2, "".concat(_prefixCls.default, "-cell-selected"), cell.selected || cell.start || cell.end), (0, _defineProperty2.default)(_ref2, "".concat(_prefixCls.default, "-cell-disabled"), cell.disabled), (0, _defineProperty2.default)(_ref2, "".concat(_prefixCls.default, "-cell-today"), cell.type === 'today'), (0, _defineProperty2.default)(_ref2, "".concat(_prefixCls.default, "-cell-prev-month"), cell.type === 'prevMonth'), (0, _defineProperty2.default)(_ref2, "".concat(_prefixCls.default, "-cell-next-month"), cell.type === 'nextMonth'), (0, _defineProperty2.default)(_ref2, "".concat(_prefixCls.default, "-cell-week-label"), cell.type === 'weekLabel'), (0, _defineProperty2.default)(_ref2, "".concat(_prefixCls.default, "-cell-range"), cell.range && !cell.start && !cell.end), (0, _defineProperty2.default)(_ref2, "".concat(_prefixCls.default, "-focused"), (0, _util.clearHours)(cell.date) === (0, _util.clearHours)(this.focusedDate)), _ref2)];
    }
  }
};
exports.default = _default;

/***/ }),
/* 129 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_year_table_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(130);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_year_table_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_year_table_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_year_table_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_year_table_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_year_table_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _util = __webpack_require__(17);

var _assist = __webpack_require__(6);

var _mixin = _interopRequireDefault(__webpack_require__(264));

var _prefixCls = _interopRequireDefault(__webpack_require__(265));

var logger = __webpack_require__(0).get("iview:components:date-picker:base:year-table.vue");

var _default = {
  mixins: [_mixin.default],
  props: {
    /* in mixin */
  },
  computed: {
    cells: function cells() {
      var _this = this;

      var cells = [];
      var cellTmpl = {
        disabled: false,
        selected: false,
        text: ''
      };
      var selectedDays = this.dates.filter(Boolean).map(function (date) {
        (0, _newArrowCheck2.default)(this, _this);
        return (0, _util.clearHours)(new Date(date.getFullYear(), 0, 1));
      }.bind(this));
      var focusedDate = (0, _util.clearHours)(new Date(this.focusedDate.getFullYear(), 0, 1));

      for (var i = 0; i < 10; i += 1) {
        var cell = (0, _assist.deepCopy)(cellTmpl);
        cell.date = new Date(this.startYear + i, 0, 1);
        cell.disabled = typeof this.disabledDate === 'function' && this.disabledDate(cell.date) && this.selectionMode === 'year';
        var day = (0, _util.clearHours)(cell.date);
        cell.selected = selectedDays.includes(day);
        cell.focused = day === focusedDate;
        cells.push(cell);
      }

      return cells;
    },
    classes: function classes() {
      return ["".concat(_prefixCls.default), "".concat(_prefixCls.default, "-year")];
    },
    startYear: function startYear() {
      return Math.floor(this.tableDate.getFullYear() / 10) * 10;
    }
  },
  methods: {
    getCellCls: function getCellCls(cell) {
      var _ref;

      return ["".concat(_prefixCls.default, "-cell"), (_ref = {}, (0, _defineProperty2.default)(_ref, "".concat(_prefixCls.default, "-cell-selected"), cell.selected), (0, _defineProperty2.default)(_ref, "".concat(_prefixCls.default, "-cell-disabled"), cell.disabled), (0, _defineProperty2.default)(_ref, "".concat(_prefixCls.default, "-cell-focused"), cell.focused), (0, _defineProperty2.default)(_ref, "".concat(_prefixCls.default, "-cell-range"), cell.range && !cell.start && !cell.end), _ref)];
    }
  }
};
exports.default = _default;

/***/ }),
/* 131 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_month_table_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(132);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_month_table_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_month_table_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_month_table_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_month_table_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_month_table_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _util = __webpack_require__(17);

var _assist = __webpack_require__(6);

var _locale = _interopRequireDefault(__webpack_require__(10));

var _mixin = _interopRequireDefault(__webpack_require__(264));

var _prefixCls = _interopRequireDefault(__webpack_require__(265));

var logger = __webpack_require__(0).get("iview:components:date-picker:base:month-table.vue");

var _default = {
  mixins: [_locale.default, _mixin.default],
  props: {
    /* in mixin */
  },
  computed: {
    cells: function cells() {
      var _this = this;

      var cells = [];
      var cellTmpl = {
        disabled: false,
        selected: false,
        text: ''
      };
      var tableYear = this.tableDate.getFullYear();
      var selectedDays = this.dates.filter(Boolean).map(function (date) {
        (0, _newArrowCheck2.default)(this, _this);
        return (0, _util.clearHours)(new Date(date.getFullYear(), date.getMonth(), 1));
      }.bind(this));
      var focusedDate = (0, _util.clearHours)(new Date(this.focusedDate.getFullYear(), this.focusedDate.getMonth(), 1));

      for (var i = 0; i < 12; i += 1) {
        var cell = (0, _assist.deepCopy)(cellTmpl);
        cell.date = new Date(tableYear, i, 1);
        cell.text = this.tCell(i + 1);
        var day = (0, _util.clearHours)(cell.date);
        cell.disabled = typeof this.disabledDate === 'function' && this.disabledDate(cell.date) && this.selectionMode === 'month';
        cell.selected = selectedDays.includes(day);
        cell.focused = day === focusedDate;
        cells.push(cell);
      }

      return cells;
    },
    classes: function classes() {
      return ["".concat(_prefixCls.default), "".concat(_prefixCls.default, "-month")];
    }
  },
  methods: {
    getCellCls: function getCellCls(cell) {
      var _ref;

      return ["".concat(_prefixCls.default, "-cell"), (_ref = {}, (0, _defineProperty2.default)(_ref, "".concat(_prefixCls.default, "-cell-selected"), cell.selected), (0, _defineProperty2.default)(_ref, "".concat(_prefixCls.default, "-cell-disabled"), cell.disabled), (0, _defineProperty2.default)(_ref, "".concat(_prefixCls.default, "-cell-focused"), cell.focused), (0, _defineProperty2.default)(_ref, "".concat(_prefixCls.default, "-cell-range"), cell.range && !cell.start && !cell.end), _ref)];
    },
    tCell: function tCell(nr) {
      return this.t("i.datepicker.months.m".concat(nr));
    }
  }
};
exports.default = _default;

/***/ }),
/* 133 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_time_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(134);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_time_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_time_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_time_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_time_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_time_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(15));

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _timeSpinner = _interopRequireDefault(__webpack_require__(395));

var _confirm = _interopRequireDefault(__webpack_require__(47));

var _timeMixins = _interopRequireDefault(__webpack_require__(46));

var _panelMixin = _interopRequireDefault(__webpack_require__(48));

var _locale = _interopRequireDefault(__webpack_require__(10));

var _util = __webpack_require__(17);

var _this = void 0;

var logger = __webpack_require__(0).get("iview:components:date-picker:panel:Time:time.vue");

var prefixCls = 'ivu-picker-panel';
var timePrefixCls = 'ivu-time-picker';

var capitalize = function capitalize(str) {
  (0, _newArrowCheck2.default)(this, _this);
  return str[0].toUpperCase() + str.slice(1);
}.bind(void 0);

var mergeDateHMS = function mergeDateHMS(date, hours, minutes, seconds) {
  (0, _newArrowCheck2.default)(this, _this);
  var newDate = new Date(date.getTime());
  newDate.setHours(hours);
  newDate.setMinutes(minutes);
  newDate.setSeconds(seconds);
  return newDate;
}.bind(void 0);

var unique = function unique(el, i, arr) {
  (0, _newArrowCheck2.default)(this, _this);
  return arr.indexOf(el) === i;
}.bind(void 0);

var returnFalse = function returnFalse() {
  (0, _newArrowCheck2.default)(this, _this);
  return false;
}.bind(void 0);

var _default2 = {
  name: 'TimePickerPanel',
  components: {
    Confirm: _confirm.default,
    TimeSpinner: _timeSpinner.default
  },
  mixins: [_panelMixin.default, _locale.default, _timeMixins.default],
  props: {
    disabledDate: {
      default: returnFalse,
      type: Function
    },
    format: {
      default: 'HH:mm:ss',
      type: String
    },
    steps: {
      default: function _default() {
        (0, _newArrowCheck2.default)(this, _this);
        return [];
      }.bind(void 0),
      type: Array
    },
    value: {
      required: true,
      type: Array
    }
  },
  data: function data() {
    return {
      date: this.value[0] || (0, _util.initTimeDate)(),
      prefixCls: prefixCls,
      showDate: false,
      timePrefixCls: timePrefixCls
    };
  },
  computed: {
    disabledHMS: function disabledHMS() {
      var _this2 = this;

      var disabledTypes = ['disabledHours', 'disabledMinutes', 'disabledSeconds'];

      if (this.disabledDate === returnFalse || !this.value[0]) {
        return disabledTypes.reduce(function (obj, type) {
          (0, _newArrowCheck2.default)(this, _this2);
          obj[type] = this[type];
          return obj;
        }.bind(this), {});
      }

      var slots = [24, 60, 60];
      var disabled = ['Hours', 'Minutes', 'Seconds'].map(function (type) {
        (0, _newArrowCheck2.default)(this, _this2);
        return this["disabled".concat(type)];
      }.bind(this));
      var disabledHMS = disabled.map(function (preDisabled, j) {
        var _this3 = this;

        (0, _newArrowCheck2.default)(this, _this2);
        var slot = slots[j];
        var toDisable = preDisabled;

        var _loop = function _loop(i) {
          var _this4 = this;

          var hms = _this3.timeSlots.map(function (timeSlot, x) {
            (0, _newArrowCheck2.default)(this, _this4);
            return x === j ? i : timeSlot;
          }.bind(this));

          var testDateTime = mergeDateHMS.apply(void 0, [_this3.date].concat((0, _toConsumableArray2.default)(hms)));

          if (_this3.disabledDate(testDateTime, true)) {
            toDisable.push(i);
          }
        };

        for (var i = 0; i < slot; i += this.steps[j] || 1) {
          _loop(i);
        }

        return toDisable.filter(unique);
      }.bind(this));
      return disabledTypes.reduce(function (obj, type, i) {
        (0, _newArrowCheck2.default)(this, _this2);
        obj[type] = disabledHMS[i];
        return obj;
      }.bind(this), {});
    },
    showSeconds: function showSeconds() {
      return !(this.format || '').match(/mm$/);
    },
    timeSlots: function timeSlots() {
      var _this5 = this;

      if (!this.value[0]) {
        return [];
      }

      return ['getHours', 'getMinutes', 'getSeconds'].map(function (slot) {
        (0, _newArrowCheck2.default)(this, _this5);
        return this.date[slot]();
      }.bind(this));
    },
    visibleDate: function visibleDate() {
      // TODO
      var date = this.date;
      var month = date.getMonth() + 1;
      var tYear = this.t('i.datepicker.year');
      var tMonth = this.t("i.datepicker.month".concat(month));
      return "".concat(date.getFullYear()).concat(tYear, " ").concat(tMonth);
    }
  },
  watch: {
    value: function value(dates) {
      var newVal = dates[0] || (0, _util.initTimeDate)();
      newVal = new Date(newVal);
      this.date = newVal;
    }
  },
  mounted: function mounted() {
    if (this.$parent && this.$parent.$options.name === 'DatePicker') {
      this.showDate = true;
    }
  },
  methods: {
    handleChange: function handleChange(date) {
      var _this6 = this;

      var emit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      var newDate = new Date(this.date);
      Object.keys(date).forEach(function (type) {
        (0, _newArrowCheck2.default)(this, _this6);
        return newDate["set".concat(capitalize(type))](date[type]);
      }.bind(this));

      if (emit) {
        this.$emit('on-pick', newDate, 'time');
      }
    }
  }
};
exports.default = _default2;

/***/ }),
/* 135 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_time_spinner_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(136);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_time_spinner_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_time_spinner_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_time_spinner_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_time_spinner_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_time_spinner_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectSpread3 = _interopRequireDefault(__webpack_require__(11));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _stubArray = _interopRequireDefault(__webpack_require__(14));

var _timeMixins = _interopRequireDefault(__webpack_require__(46));

var _assist = __webpack_require__(6);

var logger = __webpack_require__(0).get("iview:components:date-picker:base:time-spinner.vue");

var prefixCls = 'ivu-time-picker-cells';
var timeParts = ['hours', 'minutes', 'seconds'];
var _default = {
  name: 'TimeSpinner',
  mixins: [_timeMixins.default],
  props: {
    hours: {
      default: NaN,
      type: [Number, String]
    },
    minutes: {
      default: NaN,
      type: [Number, String]
    },
    seconds: {
      default: NaN,
      type: [Number, String]
    },
    showSeconds: {
      default: true,
      type: Boolean
    },
    steps: {
      default: _stubArray.default,
      type: Array
    }
  },
  data: function data() {
    var _this = this;

    return {
      compiled: false,
      // which column inside the picker
      focusedColumn: -1,
      // the values array into [hh, mm, ss]
      focusedTime: [0, 0, 0],
      prefixCls: prefixCls,
      spinerSteps: [1, 1, 1].map(function (one, i) {
        (0, _newArrowCheck2.default)(this, _this);
        return Math.abs(this.steps[i]) || one;
      }.bind(this))
    };
  },
  computed: {
    classes: function classes() {
      return ["".concat(prefixCls), (0, _defineProperty2.default)({}, "".concat(prefixCls, "-with-seconds"), this.showSeconds)];
    },
    hoursList: function hoursList() {
      var hours = [];
      var step = this.spinerSteps[0];
      var focusedHour = this.focusedColumn === 0 && this.focusedTime[0];
      var hourTmpl = {
        disabled: false,
        hide: false,
        selected: false,
        text: 0
      };

      for (var i = 0; i < 24; i += step) {
        var hour = (0, _assist.deepCopy)(hourTmpl);
        hour.text = i;
        hour.focused = i === focusedHour;

        if (this.disabledHours.length && this.disabledHours.indexOf(i) > -1) {
          hour.disabled = true;

          if (this.hideDisabledOptions) {
            hour.hide = true;
          }
        }

        if (this.hours === i) {
          hour.selected = true;
        }

        hours.push(hour);
      }

      return hours;
    },
    minutesList: function minutesList() {
      var minutes = [];
      var step = this.spinerSteps[1];
      var focusedMinute = this.focusedColumn === 1 && this.focusedTime[1];
      var minuteTmpl = {
        disabled: false,
        hide: false,
        selected: false,
        text: 0
      };

      for (var i = 0; i < 60; i += step) {
        var minute = (0, _assist.deepCopy)(minuteTmpl);
        minute.text = i;
        minute.focused = i === focusedMinute;

        if (this.disabledMinutes.length && this.disabledMinutes.indexOf(i) > -1) {
          minute.disabled = true;

          if (this.hideDisabledOptions) {
            minute.hide = true;
          }
        }

        if (this.minutes === i) {
          minute.selected = true;
        }

        minutes.push(minute);
      }

      return minutes;
    },
    secondsList: function secondsList() {
      var seconds = [];
      var step = this.spinerSteps[2];
      var focusedMinute = this.focusedColumn === 2 && this.focusedTime[2];
      var secondTmpl = {
        disabled: false,
        hide: false,
        selected: false,
        text: 0
      };

      for (var i = 0; i < 60; i += step) {
        var second = (0, _assist.deepCopy)(secondTmpl);
        second.text = i;
        second.focused = i === focusedMinute;

        if (this.disabledSeconds.length && this.disabledSeconds.indexOf(i) > -1) {
          second.disabled = true;

          if (this.hideDisabledOptions) {
            second.hide = true;
          }
        }

        if (this.seconds === i) {
          second.selected = true;
        }

        seconds.push(second);
      }

      return seconds;
    }
  },
  watch: {
    focusedTime: function focusedTime(updated, old) {
      var _this2 = this;

      timeParts.forEach(function (part, i) {
        var _this3 = this;

        (0, _newArrowCheck2.default)(this, _this2);

        if (updated[i] === old[i] || typeof updated[i] === 'undefined') {
          return;
        }

        var valueIndex = this["".concat(part, "List")].findIndex(function (obj) {
          (0, _newArrowCheck2.default)(this, _this3);
          return obj.text === updated[i];
        }.bind(this));
        this.scroll(part, valueIndex);
      }.bind(this));
    },
    hours: function hours(val) {
      var _this4 = this;

      if (!this.compiled) {
        return;
      }

      this.scroll('hours', this.hoursList.findIndex(function (obj) {
        (0, _newArrowCheck2.default)(this, _this4);
        return obj.text === val;
      }.bind(this)));
    },
    minutes: function minutes(val) {
      var _this5 = this;

      if (!this.compiled) {
        return;
      }

      this.scroll('minutes', this.minutesList.findIndex(function (obj) {
        (0, _newArrowCheck2.default)(this, _this5);
        return obj.text === val;
      }.bind(this)));
    },
    seconds: function seconds(val) {
      var _this6 = this;

      if (!this.compiled) {
        return;
      }

      this.scroll('seconds', this.secondsList.findIndex(function (obj) {
        (0, _newArrowCheck2.default)(this, _this6);
        return obj.text === val;
      }.bind(this)));
    }
  },
  mounted: function mounted() {
    var _this7 = this;

    this.$nextTick(function () {
      (0, _newArrowCheck2.default)(this, _this7);
      this.compiled = true;
    }.bind(this));
  },
  methods: {
    chooseValue: function chooseValue(values) {
      var _this8 = this;

      var changes = timeParts.reduce(function (obj, part, i) {
        (0, _newArrowCheck2.default)(this, _this8);
        var value = values[i];

        if (this[part] === value) {
          return obj;
        }

        return (0, _objectSpread3.default)({}, obj, (0, _defineProperty2.default)({}, part, value));
      }.bind(this), {});

      if (Object.keys(changes).length > 0) {
        this.emitChange(changes);
      }
    },
    emitChange: function emitChange(changes) {
      this.$emit('on-change', changes);
      this.$emit('on-pick-click');
    },
    formatTime: function formatTime(text) {
      return text < 10 ? "0".concat(text) : text;
    },
    getCellCls: function getCellCls(cell) {
      var _ref2;

      return ["".concat(prefixCls, "-cell"), (_ref2 = {}, (0, _defineProperty2.default)(_ref2, "".concat(prefixCls, "-cell-selected"), cell.selected), (0, _defineProperty2.default)(_ref2, "".concat(prefixCls, "-cell-focused"), cell.focused), (0, _defineProperty2.default)(_ref2, "".concat(prefixCls, "-cell-disabled"), cell.disabled), _ref2)];
    },
    getScrollIndex: function getScrollIndex(type, idx) {
      var _this9 = this;

      var index = idx;
      var Type = (0, _assist.firstUpperCase)(type);
      var disabled = this["disabled".concat(Type)];

      if (disabled.length && this.hideDisabledOptions) {
        var count = 0;
        disabled.forEach(function (item) {
          (0, _newArrowCheck2.default)(this, _this9);

          if (item <= index) {
            count += 1;
          }
        }.bind(this));
        index -= count;
      }

      return index;
    },
    handleClick: function handleClick(type, cell) {
      if (cell.disabled) {
        return;
      }

      var data = (0, _defineProperty2.default)({}, type, cell.text);
      this.emitChange(data);
    },
    scroll: function scroll(type, index) {
      var from = this.$refs[type].scrollTop;
      var to = 24 * this.getScrollIndex(type, index);
      (0, _assist.scrollTop)(this.$refs[type], from, to, 500);
    },
    updateFocusedTime: function updateFocusedTime(col, time) {
      this.focusedColumn = col;
      this.focusedTime = time.slice();
    },
    updateScroll: function updateScroll() {
      var _this10 = this;

      this.$nextTick(function () {
        var _this11 = this;

        (0, _newArrowCheck2.default)(this, _this10);
        timeParts.forEach(function (type) {
          var _this12 = this;

          (0, _newArrowCheck2.default)(this, _this11);
          this.$refs[type].scrollTop = 24 * this["".concat(type, "List")].findIndex(function (obj) {
            (0, _newArrowCheck2.default)(this, _this12);
            return obj.text === this[type];
          }.bind(this));
        }.bind(this));
      }.bind(this));
    }
  }
};
exports.default = _default;

/***/ }),
/* 137 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_confirm_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(138);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_confirm_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_confirm_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_confirm_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_confirm_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_confirm_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(15));

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _button = _interopRequireDefault(__webpack_require__(22));

var _locale = _interopRequireDefault(__webpack_require__(10));

var _emitter = _interopRequireDefault(__webpack_require__(9));

var logger = __webpack_require__(0).get("iview:components:date-picker:base:confirm.vue");

var prefixCls = 'ivu-picker';
var _default = {
  components: {
    iButton: _button.default
  },
  mixins: [_locale.default, _emitter.default],
  props: {
    isTime: {
      default: false,
      type: Boolean
    },
    showTime: {
      default: false,
      type: Boolean
    },
    timeDisabled: {
      default: false,
      type: Boolean
    }
  },
  data: function data() {
    return {
      prefixCls: prefixCls
    };
  },
  computed: {
    labels: function labels() {
      var _this = this;

      var labels = ['time', 'clear', 'ok'];
      var values = [this.isTime ? 'selectDate' : 'selectTime', 'clear', 'ok'];
      return labels.reduce(function (obj, key, i) {
        (0, _newArrowCheck2.default)(this, _this);
        obj[key] = this.t("i.datepicker.".concat(values[i]));
        return obj;
      }.bind(this), {});
    },
    timeClasses: function timeClasses() {
      return "".concat(prefixCls, "-confirm-time");
    }
  },
  methods: {
    handleClear: function handleClear() {
      this.$emit('on-pick-clear');
    },
    handleSuccess: function handleSuccess() {
      this.$emit('on-pick-success');
    },
    handleTab: function handleTab(e) {
      var tabbables = (0, _toConsumableArray2.default)(this.$el.children);
      var expectedFocus = tabbables[e.shiftKey ? 'shift' : 'pop']();

      if (document.activeElement === expectedFocus) {
        e.preventDefault();
        e.stopPropagation();
        this.dispatch('CalendarPicker', 'focus-input');
      }
    },
    handleToggleTime: function handleToggleTime() {
      if (this.timeDisabled) {
        return;
      }

      this.$emit('on-pick-toggle-time');
      this.dispatch('CalendarPicker', 'focus-input');
    },
    onKeydown: function onKeydown(event) {
      var key = event.key,
          target = event.target;

      if (key === 'Tab' && target === this.$refs.confirm) {
        this.handleTab(event);
      } else if (key === 'Enter') {
        if (target === this.$refs.clear) {
          this.handleClear(event);
        } else if (target === this.$refs.success) {
          this.handleSuccess(event);
        }
      }
    }
  }
};
exports.default = _default;

/***/ }),
/* 139 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_date_panel_label_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(140);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_date_panel_label_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_date_panel_label_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_date_panel_label_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_date_panel_label_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_date_panel_label_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var logger = __webpack_require__(0).get("iview:components:date-picker:panel:Date:date-panel-label.vue");

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var _default = {
  props: {
    currentView: {
      default: undefined,
      type: String
    },
    datePanelLabel: {
      default: undefined,
      type: Object
    },
    datePrefixCls: {
      default: undefined,
      type: String
    }
  }
};
exports.default = _default;

/***/ }),
/* 141 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_date_range_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(142);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_date_range_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_date_range_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_date_range_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_date_range_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_date_range_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _slicedToArray2 = _interopRequireDefault(__webpack_require__(20));

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _icon = _interopRequireDefault(__webpack_require__(12));

var _dateTable = _interopRequireDefault(__webpack_require__(391));

var _yearTable = _interopRequireDefault(__webpack_require__(392));

var _monthTable = _interopRequireDefault(__webpack_require__(393));

var _timeRange = _interopRequireDefault(__webpack_require__(398));

var _confirm = _interopRequireDefault(__webpack_require__(47));

var _util = __webpack_require__(17);

var _datePanelLabel = _interopRequireDefault(__webpack_require__(396));

var _panelMixin = _interopRequireDefault(__webpack_require__(48));

var _datePanelMixin = _interopRequireDefault(__webpack_require__(397));

var _locale = _interopRequireDefault(__webpack_require__(10));

var _this = void 0;

var logger = __webpack_require__(0).get("iview:components:date-picker:panel:Date:date-range.vue");

var prefixCls = 'ivu-picker-panel';
var datePrefixCls = 'ivu-date-picker';

var dateSorter = function dateSorter(a, b) {
  (0, _newArrowCheck2.default)(this, _this);

  if (!a || !b) {
    return 0;
  }

  return a.getTime() - b.getTime();
}.bind(void 0);

var _default = {
  name: 'RangeDatePickerPanel',
  components: {
    Confirm: _confirm.default,
    DatePanelLabel: _datePanelLabel.default,
    DateTable: _dateTable.default,
    Icon: _icon.default,
    MonthTable: _monthTable.default,
    TimePicker: _timeRange.default,
    YearTable: _yearTable.default
  },
  mixins: [_panelMixin.default, _locale.default, _datePanelMixin.default],
  props: {
    // more props in the mixin
    splitPanels: {
      default: false,
      type: Boolean
    }
  },
  data: function data() {
    var _this2 = this;

    var _this$value$map = this.value.map(function (date) {
      (0, _newArrowCheck2.default)(this, _this2);
      return date || (0, _util.initTimeDate)();
    }.bind(this)),
        _this$value$map2 = (0, _slicedToArray2.default)(_this$value$map, 2),
        minDate = _this$value$map2[0],
        maxDate = _this$value$map2[1];

    var leftPanelDate = this.startDate ? this.startDate : minDate;
    return {
      currentView: this.selectionMode || 'range',
      datePrefixCls: datePrefixCls,
      dates: this.value,
      leftPanelDate: leftPanelDate,
      leftPickerTable: "".concat(this.selectionMode, "-table"),
      prefixCls: prefixCls,
      rangeState: {
        from: this.value[0],
        selecting: minDate && !maxDate,
        to: this.value[1]
      },
      rightPanelDate: new Date(leftPanelDate.getFullYear(), leftPanelDate.getMonth() + 1, 1),
      rightPickerTable: "".concat(this.selectionMode, "-table")
    };
  },
  computed: {
    classes: function classes() {
      var _ref;

      return ["".concat(prefixCls, "-body-wrapper"), "".concat(datePrefixCls, "-with-range"), (_ref = {}, (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-with-sidebar"), this.shortcuts.length), (0, _defineProperty2.default)(_ref, "".concat(datePrefixCls, "-with-week-numbers"), this.showWeekNumbers), _ref)];
    },
    leftDatePanelLabel: function leftDatePanelLabel() {
      return this.panelLabelConfig('left');
    },
    leftDatePanelView: function leftDatePanelView() {
      return this.leftPickerTable.split('-').shift();
    },
    panelBodyClasses: function panelBodyClasses() {
      var _ref2;

      return ["".concat(prefixCls, "-body"), (_ref2 = {}, (0, _defineProperty2.default)(_ref2, "".concat(prefixCls, "-body-time"), this.showTime), (0, _defineProperty2.default)(_ref2, "".concat(prefixCls, "-body-date"), !this.showTime), _ref2)];
    },
    panelPickerHandlers: function panelPickerHandlers() {
      return {
        left: this.preSelecting.left ? this.handlePreSelection.bind(this, 'left') : this.handleRangePick,
        right: this.preSelecting.right ? this.handlePreSelection.bind(this, 'right') : this.handleRangePick
      };
    },
    preSelecting: function preSelecting() {
      var tableType = "".concat(this.currentView, "-table");
      return {
        left: this.leftPickerTable !== tableType,
        right: this.rightPickerTable !== tableType
      };
    },
    rightDatePanelLabel: function rightDatePanelLabel() {
      return this.panelLabelConfig('right');
    },
    rightDatePanelView: function rightDatePanelView() {
      return this.rightPickerTable.split('-').shift();
    },
    timeDisabled: function timeDisabled() {
      return !(this.dates[0] && this.dates[1]);
    }
  },
  watch: {
    currentView: function currentView(_currentView) {
      var leftMonth = this.leftPanelDate.getMonth();
      var rightMonth = this.rightPanelDate.getMonth();
      var isSameYear = this.leftPanelDate.getFullYear() === this.rightPanelDate.getFullYear();

      if (_currentView === 'date' && isSameYear && leftMonth === rightMonth) {
        this.changePanelDate('right', 'Month', 1);
      }

      if (_currentView === 'month' && isSameYear) {
        this.changePanelDate('right', 'FullYear', 1);
      }

      if (_currentView === 'year' && isSameYear) {
        this.changePanelDate('right', 'FullYear', 10);
      }
    },
    focusedDate: function focusedDate(date) {
      this.setPanelDates(date || new Date());
    },
    selectionMode: function selectionMode(type) {
      this.currentView = type || 'range';
    },
    value: function value(newVal) {
      var minDate = newVal[0] ? (0, _util.toDate)(newVal[0]) : null;
      var maxDate = newVal[1] ? (0, _util.toDate)(newVal[1]) : null;
      this.dates = [minDate, maxDate].sort(dateSorter);
      this.rangeState = {
        from: this.dates[0],
        selecting: false,
        to: this.dates[1]
      }; // set panels positioning

      this.setPanelDates(this.startDate || this.dates[0] || new Date());
    }
  },
  methods: {
    changePanelDate: function changePanelDate(panel, type, increment) {
      var updateOtherPanel = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;
      var current = new Date(this["".concat(panel, "PanelDate")]);
      current["set".concat(type)](current["get".concat(type)]() + increment);
      this["".concat(panel, "PanelDate")] = current;

      if (!updateOtherPanel) {
        return;
      }

      if (this.splitPanels) {
        // change other panel if dates overlap
        var otherPanel = panel === 'left' ? 'right' : 'left';

        if (panel === 'left' && this.leftPanelDate >= this.rightPanelDate) {
          this.changePanelDate(otherPanel, type, 1);
        }

        if (panel === 'right' && this.rightPanelDate <= this.leftPanelDate) {
          this.changePanelDate(otherPanel, type, -1);
        }
      } else {
        // keep the panels together
        var _otherPanel = panel === 'left' ? 'right' : 'left';

        var otherCurrent = new Date(this["".concat(_otherPanel, "PanelDate")]);
        otherCurrent["set".concat(type)](otherCurrent["get".concat(type)]() + increment);
        this["".concat(_otherPanel, "PanelDate")] = otherCurrent;
      }
    },
    handleChangeRange: function handleChangeRange(val) {
      this.rangeState.to = val;
    },
    handlePreSelection: function handlePreSelection(panel, value) {
      this["".concat(panel, "PanelDate")] = value;
      var currentViewType = this["".concat(panel, "PickerTable")];

      if (currentViewType === 'year-table') {
        this["".concat(panel, "PickerTable")] = 'month-table';
      } else {
        this["".concat(panel, "PickerTable")] = "".concat(this.currentView, "-table");
      }

      if (!this.splitPanels) {
        var otherPanel = panel === 'left' ? 'right' : 'left';
        this["".concat(otherPanel, "PanelDate")] = value;
        var increment = otherPanel === 'left' ? -1 : 1; // #3973

        this.changePanelDate(otherPanel, 'Month', increment, false);
      }
    },
    handleRangePick: function handleRangePick(val, type) {
      if (this.rangeState.selecting || this.currentView === 'time') {
        if (this.currentView === 'time') {
          this.dates = val;
        } else {
          var _sort = [this.rangeState.from, val].sort(dateSorter),
              _sort2 = (0, _slicedToArray2.default)(_sort, 2),
              minDate = _sort2[0],
              maxDate = _sort2[1];

          this.dates = [minDate, maxDate];
          this.rangeState = {
            from: minDate,
            selecting: false,
            to: maxDate
          };
        }

        this.handleConfirm(false, type || 'date');
      } else {
        this.rangeState = {
          from: val,
          selecting: true,
          to: null
        };
      }
    },
    nextMonth: function nextMonth(panel) {
      this.changePanelDate(panel, 'Month', 1);
    },
    nextYear: function nextYear(panel) {
      var increment = this.currentView === 'year' ? 10 : 1;
      this.changePanelDate(panel, 'FullYear', increment);
    },
    panelLabelConfig: function panelLabelConfig(direction) {
      var _this3 = this;

      var locale = this.t('i.locale');
      var datePanelLabel = this.t('i.datepicker.datePanelLabel');

      var handler = function handler(type) {
        var _this4 = this;

        (0, _newArrowCheck2.default)(this, _this3);
        var fn = type === 'month' ? this.showMonthPicker : this.showYearPicker;
        return function () {
          (0, _newArrowCheck2.default)(this, _this4);
          return fn(direction);
        }.bind(this);
      }.bind(this);

      var date = this["".concat(direction, "PanelDate")];

      var _formatDateLabels = (0, _util.formatDateLabels)(locale, datePanelLabel, date),
          labels = _formatDateLabels.labels,
          separator = _formatDateLabels.separator;

      return {
        labels: labels.map(function (obj) {
          (0, _newArrowCheck2.default)(this, _this3);
          obj.handler = handler(obj.type);
          return obj;
        }.bind(this)),
        separator: separator
      };
    },
    prevMonth: function prevMonth(panel) {
      this.changePanelDate(panel, 'Month', -1);
    },
    prevYear: function prevYear(panel) {
      var increment = this.currentView === 'year' ? -10 : -1;
      this.changePanelDate(panel, 'FullYear', increment);
    },
    reset: function reset() {
      this.currentView = this.selectionMode;
      this.leftPickerTable = "".concat(this.currentView, "-table");
      this.rightPickerTable = "".concat(this.currentView, "-table");
    },
    setPanelDates: function setPanelDates(leftPanelDate) {
      this.leftPanelDate = leftPanelDate;
      var rightPanelDate = new Date(leftPanelDate.getFullYear(), leftPanelDate.getMonth() + 1, leftPanelDate.getDate());
      this.rightPanelDate = this.splitPanels ? new Date(Math.max(this.dates[1], rightPanelDate)) : rightPanelDate;
    },
    showMonthPicker: function showMonthPicker(panel) {
      this["".concat(panel, "PickerTable")] = 'month-table';
    },
    showYearPicker: function showYearPicker(panel) {
      this["".concat(panel, "PickerTable")] = 'year-table';
    }
  }
};
exports.default = _default;

/***/ }),
/* 143 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_time_range_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(144);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_time_range_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_time_range_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_time_range_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_time_range_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_time_range_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _slicedToArray2 = _interopRequireDefault(__webpack_require__(20));

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _timeSpinner = _interopRequireDefault(__webpack_require__(395));

var _confirm = _interopRequireDefault(__webpack_require__(47));

var _timeMixins = _interopRequireDefault(__webpack_require__(46));

var _panelMixin = _interopRequireDefault(__webpack_require__(48));

var _locale = _interopRequireDefault(__webpack_require__(10));

var _util = __webpack_require__(17);

var _this = void 0;

var logger = __webpack_require__(0).get("iview:components:date-picker:panel:Time:time-range.vue");

var prefixCls = 'ivu-picker-panel';
var timePrefixCls = 'ivu-time-picker';

var capitalize = function capitalize(str) {
  (0, _newArrowCheck2.default)(this, _this);
  return str[0].toUpperCase() + str.slice(1);
}.bind(void 0);

var _default2 = {
  name: 'RangeTimePickerPanel',
  components: {
    Confirm: _confirm.default,
    TimeSpinner: _timeSpinner.default
  },
  mixins: [_panelMixin.default, _locale.default, _timeMixins.default],
  props: {
    format: {
      default: 'HH:mm:ss',
      type: String
    },
    steps: {
      default: function _default() {
        (0, _newArrowCheck2.default)(this, _this);
        return [];
      }.bind(void 0),
      type: Array
    },
    value: {
      required: true,
      type: Array
    }
  },
  data: function data() {
    var _this$value$slice = this.value.slice(),
        _this$value$slice2 = (0, _slicedToArray2.default)(_this$value$slice, 2),
        dateStart = _this$value$slice2[0],
        dateEnd = _this$value$slice2[1];

    return {
      dateEnd: dateEnd || (0, _util.initTimeDate)(),
      dateStart: dateStart || (0, _util.initTimeDate)(),
      prefixCls: prefixCls,
      showDate: false,
      timePrefixCls: timePrefixCls
    };
  },
  computed: {
    classes: function classes() {
      return ["".concat(prefixCls, "-body-wrapper"), "".concat(timePrefixCls, "-with-range"), (0, _defineProperty2.default)({}, "".concat(timePrefixCls, "-with-seconds"), this.showSeconds)];
    },
    leftDatePanelLabel: function leftDatePanelLabel() {
      return this.panelLabelConfig(this.date);
    },
    rightDatePanelLabel: function rightDatePanelLabel() {
      return this.panelLabelConfig(this.dateEnd);
    },
    showSeconds: function showSeconds() {
      return !(this.format || '').match(/mm$/);
    }
  },
  watch: {
    value: function value(dates) {
      var _dates$slice = dates.slice(),
          _dates$slice2 = (0, _slicedToArray2.default)(_dates$slice, 2),
          dateStart = _dates$slice2[0],
          dateEnd = _dates$slice2[1];

      this.dateStart = dateStart || (0, _util.initTimeDate)();
      this.dateEnd = dateEnd || (0, _util.initTimeDate)();
    }
  },
  mounted: function mounted() {
    if (this.$parent && this.$parent.$options.name === 'DatePicker') {
      this.showDate = true;
    }
  },
  methods: {
    handleChange: function handleChange(start, end) {
      var _this2 = this;

      var emit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
      var dateStart = new Date(this.dateStart);
      var dateEnd = new Date(this.dateEnd); // set dateStart

      Object.keys(start).forEach(function (type) {
        (0, _newArrowCheck2.default)(this, _this2);
        dateStart["set".concat(capitalize(type))](start[type]);
      }.bind(this)); // set dateEnd

      Object.keys(end).forEach(function (type) {
        (0, _newArrowCheck2.default)(this, _this2);
        dateEnd["set".concat(capitalize(type))](end[type]);
      }.bind(this)); // judge endTime > startTime?

      if (dateEnd < dateStart) {
        dateEnd = dateStart;
      }

      if (emit) {
        this.$emit('on-pick', [dateStart, dateEnd], 'time');
      }
    },
    handleEndChange: function handleEndChange(date) {
      this.handleChange({}, date);
    },
    handleStartChange: function handleStartChange(date) {
      this.handleChange(date, {});
    },
    panelLabelConfig: function panelLabelConfig(date) {
      var locale = this.t('i.locale');
      var datePanelLabel = this.t('i.datepicker.datePanelLabel');

      var _formatDateLabels = (0, _util.formatDateLabels)(locale, datePanelLabel, date || (0, _util.initTimeDate)()),
          labels = _formatDateLabels.labels,
          separator = _formatDateLabels.separator;

      return [labels[0].label, separator, labels[1].label].join('');
    },
    updateScroll: function updateScroll() {
      this.$refs.timeSpinner.updateScroll();
      this.$refs.timeSpinnerEnd.updateScroll();
    }
  }
};
exports.default = _default2;

/***/ }),
/* 145 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_dropdown_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(146);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_dropdown_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_dropdown_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_dropdown_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_dropdown_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_dropdown_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _vClickOutsideX = __webpack_require__(24);

var _dropdown = _interopRequireDefault(__webpack_require__(28));

var _transferDom = _interopRequireDefault(__webpack_require__(21));

var _assist = __webpack_require__(6);

var logger = __webpack_require__(0).get("iview:components:dropdown:dropdown.vue");

var prefixCls = 'ivu-dropdown';
var _default = {
  name: 'Dropdown',
  directives: {
    clickOutside: _vClickOutsideX.directive,
    TransferDom: _transferDom.default
  },
  components: {
    Drop: _dropdown.default
  },
  props: {
    placement: {
      default: 'bottom',
      type: String,
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['top', 'top-start', 'top-end', 'bottom', 'bottom-start', 'bottom-end', 'left', 'left-start', 'left-end', 'right', 'right-start', 'right-end']);
      }
    },
    transfer: {
      default: false,
      type: Boolean
    },
    trigger: {
      default: 'hover',
      type: String,
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['click', 'hover', 'custom']);
      }
    },
    visible: {
      default: false,
      type: Boolean
    }
  },
  data: function data() {
    return {
      currentVisible: this.visible,
      prefixCls: prefixCls
    };
  },
  computed: {
    dropdownCls: function dropdownCls() {
      return (0, _defineProperty2.default)({}, "".concat(prefixCls, "-transfer"), this.transfer);
    },
    transition: function transition() {
      return ['bottom-start', 'bottom', 'bottom-end'].indexOf(this.placement) > -1 ? 'slide-up' : 'fade';
    }
  },
  watch: {
    currentVisible: function currentVisible(val) {
      if (val) {
        this.$refs.drop.update();
      } else {
        this.$refs.drop.destroy();
      }

      this.$emit('on-visible-change', val);
    },
    visible: function visible(val) {
      this.currentVisible = val;
    }
  },
  mounted: function mounted() {
    var _this = this;

    this.$on('on-click', function (key) {
      (0, _newArrowCheck2.default)(this, _this);
      var $parent = this.hasParent();

      if ($parent) {
        $parent.$emit('on-click', key);
      }
    }.bind(this));
    this.$on('on-hover-click', function () {
      var _this2 = this;

      (0, _newArrowCheck2.default)(this, _this);
      var $parent = this.hasParent();

      if ($parent) {
        this.$nextTick(function () {
          (0, _newArrowCheck2.default)(this, _this2);

          if (this.trigger === 'custom') {
            return;
          }

          this.currentVisible = false;
        }.bind(this));
        $parent.$emit('on-hover-click');
      } else {
        this.$nextTick(function () {
          (0, _newArrowCheck2.default)(this, _this2);

          if (this.trigger === 'custom') {
            return;
          }

          this.currentVisible = false;
        }.bind(this));
      }
    }.bind(this));
    this.$on('on-haschild-click', function () {
      var _this3 = this;

      (0, _newArrowCheck2.default)(this, _this);
      this.$nextTick(function () {
        (0, _newArrowCheck2.default)(this, _this3);

        if (this.trigger === 'custom') {
          return;
        }

        this.currentVisible = true;
      }.bind(this));
      var $parent = this.hasParent();

      if ($parent) {
        $parent.$emit('on-haschild-click');
      }
    }.bind(this));
  },
  methods: {
    handleClick: function handleClick() {
      if (this.trigger === 'custom') {
        return;
      }

      if (this.trigger !== 'click') {
        return;
      }

      this.currentVisible = !this.currentVisible;
    },
    handleClose: function handleClose() {
      if (this.trigger === 'custom') {
        return;
      }

      if (this.trigger !== 'click') {
        return;
      }

      this.currentVisible = false;
    },
    handleMouseenter: function handleMouseenter() {
      var _this4 = this;

      if (this.trigger === 'custom') {
        return;
      }

      if (this.trigger !== 'hover') {
        return;
      }

      if (this.timeout) {
        clearTimeout(this.timeout);
      }

      this.timeout = setTimeout(function () {
        (0, _newArrowCheck2.default)(this, _this4);
        this.currentVisible = true;
      }.bind(this), 250);
    },
    handleMouseleave: function handleMouseleave() {
      var _this5 = this;

      if (this.trigger === 'custom') {
        return;
      }

      if (this.trigger !== 'hover') {
        return;
      }

      if (this.timeout) {
        clearTimeout(this.timeout);
        this.timeout = setTimeout(function () {
          (0, _newArrowCheck2.default)(this, _this5);
          this.currentVisible = false;
        }.bind(this), 150);
      }
    },
    hasParent: function hasParent() {
      //                const $parent = this.$parent.$parent.$parent;
      var $parent = (0, _assist.findComponentUpward)(this, 'Dropdown');

      if ($parent) {
        return $parent;
      }

      return false;
    },
    onClickoutside: function onClickoutside(e) {
      this.handleClose();

      if (this.currentVisible) {
        this.$emit('on-clickoutside', e);
      }
    }
  }
};
exports.default = _default;

/***/ }),
/* 147 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_dropdown_menu_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(148);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_dropdown_menu_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_dropdown_menu_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_dropdown_menu_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_dropdown_menu_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_dropdown_menu_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var logger = __webpack_require__(0).get("iview:components:dropdown:dropdown-menu.vue");

//
//
//
//
//
var _default = {
  name: 'DropdownMenu'
};
exports.default = _default;

/***/ }),
/* 149 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_dropdown_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(150);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_dropdown_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_dropdown_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_dropdown_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_dropdown_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_dropdown_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _assist = __webpack_require__(6);

var logger = __webpack_require__(0).get("iview:components:dropdown:dropdown-item.vue");

var prefixCls = 'ivu-dropdown-item';
var _default = {
  name: 'DropdownItem',
  props: {
    disabled: {
      default: false,
      type: Boolean
    },
    divided: {
      default: false,
      type: Boolean
    },
    name: {
      default: undefined,
      type: [String, Number]
    },
    selected: {
      default: false,
      type: Boolean
    }
  },
  computed: {
    classes: function classes() {
      var _ref;

      return ["".concat(prefixCls), (_ref = {}, (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-disabled"), this.disabled), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-selected"), this.selected), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-divided"), this.divided), _ref)];
    }
  },
  methods: {
    handleClick: function handleClick() {
      var _this = this;

      var $parent = (0, _assist.findComponentUpward)(this, 'Dropdown');
      var hasChildren = this.$parent && this.$parent.$options.name === 'Dropdown';

      if (this.disabled) {
        this.$nextTick(function () {
          (0, _newArrowCheck2.default)(this, _this);
          $parent.currentVisible = true;
        }.bind(this));
      } else if (hasChildren) {
        this.$parent.$emit('on-haschild-click');
      } else if ($parent && $parent.$options.name === 'Dropdown') {
        $parent.$emit('on-hover-click');
      }

      $parent.$emit('on-click', this.name);
    }
  }
};
exports.default = _default;

/***/ }),
/* 151 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_footer_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(152);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_footer_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_footer_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_footer_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_footer_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_footer_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var logger = __webpack_require__(0).get("iview:components:layout:footer.vue");

//
//
//
//
//
var prefixCls = 'ivu-layout';
var _default = {
  name: 'Footer',
  computed: {
    wrapClasses: function wrapClasses() {
      return "".concat(prefixCls, "-footer");
    }
  }
};
exports.default = _default;

/***/ }),
/* 153 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_form_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(154);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_form_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_form_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_form_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_form_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_form_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _assist = __webpack_require__(6);

var logger = __webpack_require__(0).get("iview:components:form:form.vue");

var prefixCls = 'ivu-form';
var _default = {
  name: 'IForm',
  props: {
    autocomplete: {
      default: 'off',
      type: String,
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['on', 'off']);
      }
    },
    inline: {
      default: false,
      type: Boolean
    },
    labelPosition: {
      default: 'right',
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['left', 'right', 'top']);
      }
    },
    labelWidth: {
      default: undefined,
      type: Number
    },
    model: {
      default: undefined,
      type: Object
    },
    rules: {
      default: undefined,
      type: Object
    },
    showMessage: {
      default: true,
      type: Boolean
    }
  },
  provide: function provide() {
    return {
      form: this
    };
  },
  data: function data() {
    return {
      fields: []
    };
  },
  computed: {
    classes: function classes() {
      return ["".concat(prefixCls), "".concat(prefixCls, "-label-").concat(this.labelPosition), (0, _defineProperty2.default)({}, "".concat(prefixCls, "-inline"), this.inline)];
    }
  },
  watch: {
    rules: function rules() {
      this.validate();
    }
  },
  created: function created() {
    var _this = this;

    this.$on('on-form-item-add', function (field) {
      (0, _newArrowCheck2.default)(this, _this);

      if (field) {
        this.fields.push(field);
      }

      return false;
    }.bind(this));
    this.$on('on-form-item-remove', function (field) {
      (0, _newArrowCheck2.default)(this, _this);

      if (field.prop) {
        this.fields.splice(this.fields.indexOf(field), 1);
      }

      return false;
    }.bind(this));
  },
  methods: {
    resetFields: function resetFields() {
      var _this2 = this;

      this.fields.forEach(function (field) {
        (0, _newArrowCheck2.default)(this, _this2);
        field.resetField();
      }.bind(this));
    },
    validate: function validate(callback) {
      var _this3 = this;

      return new Promise(function (resolve) {
        var _this4 = this;

        (0, _newArrowCheck2.default)(this, _this3);
        var valid = true;
        var count = 0;
        this.fields.forEach(function (field) {
          var _this5 = this;

          (0, _newArrowCheck2.default)(this, _this4);
          field.validate('', function (errors) {
            (0, _newArrowCheck2.default)(this, _this5);

            if (errors) {
              valid = false;
            }

            count += 1;

            if (count === this.fields.length) {
              // all finish
              resolve(valid);

              if (typeof callback === 'function') {
                callback(valid);
              }
            }
          }.bind(this));
        }.bind(this));
      }.bind(this));
    },
    validateField: function validateField(prop, cb) {
      var _this6 = this;

      var field = this.fields.filter(function (fieldItem) {
        (0, _newArrowCheck2.default)(this, _this6);
        return fieldItem.prop === prop;
      }.bind(this))[0];

      if (!field) {
        throw new Error('[iView warn]: must call validateField with valid prop string!');
      }

      field.validate('', cb);
    }
  }
};
exports.default = _default;

/***/ }),
/* 155 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_form_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(156);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_form_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_form_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_form_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_form_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_form_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _noop = _interopRequireDefault(__webpack_require__(13));

var _asyncValidator = _interopRequireDefault(__webpack_require__(696));

var _emitter = _interopRequireDefault(__webpack_require__(9));

var logger = __webpack_require__(0).get("iview:components:form:form-item.vue");

var prefixCls = 'ivu-form-item';

function getPropByPath(obj, pathString) {
  var tempObj = obj;
  var path = pathString.replace(/\[(\w+)]/g, '.$1');
  path = path.replace(/^\./, '');
  var keyArr = path.split('.');
  var i = 0;

  for (var len = keyArr.length; i < len - 1; i += 1) {
    var key = keyArr[i];

    if (key in tempObj) {
      tempObj = tempObj[key];
    } else {
      throw new Error('[iView warn]: please transfer a valid prop path to form item!');
    }
  }

  return {
    o: tempObj,
    k: keyArr[i],
    v: tempObj[keyArr[i]]
  };
}

var _default = {
  name: 'FormItem',
  mixins: [_emitter.default],
  props: {
    error: {
      default: undefined,
      type: String
    },
    label: {
      default: '',
      type: String
    },
    labelFor: {
      default: undefined,
      type: String
    },
    labelWidth: {
      default: undefined,
      type: Number
    },
    prop: {
      default: undefined,
      type: String
    },
    required: {
      default: false,
      type: Boolean
    },
    rules: {
      default: undefined,
      type: [Object, Array]
    },
    showMessage: {
      default: true,
      type: Boolean
    },
    validateStatus: {
      type: Boolean
    }
  },
  data: function data() {
    return {
      isRequired: false,
      prefixCls: prefixCls,
      validateDisabled: false,
      validateMessage: '',
      validateState: '',
      validator: {}
    };
  },
  computed: {
    classes: function classes() {
      var _ref;

      return ["".concat(prefixCls), (_ref = {}, (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-required"), this.required || this.isRequired), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-error"), this.validateState === 'error'), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-validating"), this.validateState === 'validating'), _ref)];
    },
    contentStyles: function contentStyles() {
      var style = {};
      var labelWidth = this.labelWidth || this.form.labelWidth;

      if (labelWidth) {
        style.marginLeft = "".concat(labelWidth, "px");
      }

      return style;
    },
    // form() {
    //    let parent = this.$parent;
    //    while (parent.$options.name !== 'iForm') {
    //        parent = parent.$parent;
    //    }
    //    return parent;
    // },
    fieldValue: {
      cache: false,
      get: function get() {
        var model = this.form.model;

        if (!model || !this.prop) {
          return undefined;
        }

        var path = this.prop;

        if (path.indexOf(':') !== -1) {
          path = path.replace(/:/, '.');
        }

        return getPropByPath(model, path).v;
      }
    },
    labelStyles: function labelStyles() {
      var style = {};
      var labelWidth = this.labelWidth || this.form.labelWidth;

      if (labelWidth) {
        style.width = "".concat(labelWidth, "px");
      }

      return style;
    }
  },
  watch: {
    error: function error(val) {
      this.validateMessage = val;
      this.validateState = val === '' ? '' : 'error';
    },
    validateStatus: function validateStatus(val) {
      this.validateState = val;
    }
  },
  inject: ['form'],
  mounted: function mounted() {
    var _this = this;

    if (this.prop) {
      this.dispatch('iForm', 'on-form-item-add', this);
      Object.defineProperty(this, 'initialValue', {
        value: this.fieldValue
      });
      var rules = this.getRules();

      if (rules.length) {
        rules.every(function (rule) {
          (0, _newArrowCheck2.default)(this, _this);

          if (rule.required) {
            this.isRequired = true;
            return false;
          }

          return undefined;
        }.bind(this));
        this.$on('on-form-blur', this.onFieldBlur);
        this.$on('on-form-change', this.onFieldChange);
      }
    }
  },
  beforeDestroy: function beforeDestroy() {
    this.dispatch('iForm', 'on-form-item-remove', this);
  },
  methods: {
    getFilteredRule: function getFilteredRule(trigger) {
      var _this2 = this;

      var rules = this.getRules();
      return rules.filter(function (rule) {
        (0, _newArrowCheck2.default)(this, _this2);
        return !rule.trigger || rule.trigger.indexOf(trigger) !== -1;
      }.bind(this));
    },
    getRules: function getRules() {
      var formRules = this.form.rules;
      var selfRules = this.rules;
      formRules = formRules ? formRules[this.prop] : [];
      return [].concat(selfRules || formRules || []);
    },
    onFieldBlur: function onFieldBlur() {
      this.validate('blur');
    },
    onFieldChange: function onFieldChange() {
      if (this.validateDisabled) {
        this.validateDisabled = false;
        return;
      }

      this.validate('change');
    },
    resetField: function resetField() {
      this.validateState = '';
      this.validateMessage = '';
      var model = this.form.model;
      var value = this.fieldValue;
      var path = this.prop;

      if (path.indexOf(':') !== -1) {
        path = path.replace(/:/, '.');
      }

      var prop = getPropByPath(model, path); //                if (Array.isArray(value) && value.length > 0) {
      //                    this.validateDisabled = true;
      //                    prop.o[prop.k] = [];
      //                } else if (value !== this.initialValue) {
      //                    this.validateDisabled = true;
      //                    prop.o[prop.k] = this.initialValue;
      //                }

      if (Array.isArray(value)) {
        this.validateDisabled = true;
        prop.o[prop.k] = [].concat(this.initialValue);
      } else {
        this.validateDisabled = true;
        prop.o[prop.k] = this.initialValue;
      }
    },
    validate: function validate(trigger) {
      var _this3 = this;

      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _noop.default;
      var rules = this.getFilteredRule(trigger);

      if (!rules || rules.length === 0) {
        callback();
        return;
      }

      this.validateState = 'validating';
      var descriptor = {};
      descriptor[this.prop] = rules;
      var validator = new _asyncValidator.default(descriptor);
      var model = {};
      model[this.prop] = this.fieldValue;
      validator.validate(model, {
        firstFields: true
      }, function (errors) {
        (0, _newArrowCheck2.default)(this, _this3);
        this.validateState = !errors ? 'success' : 'error';
        this.validateMessage = errors ? errors[0].message : '';
        callback(this.validateMessage);
      }.bind(this));
      this.validateDisabled = false;
    }
  }
};
exports.default = _default;

/***/ }),
/* 157 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_header_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(158);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_header_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_header_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_header_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_header_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_header_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var logger = __webpack_require__(0).get("iview:components:layout:header.vue");

//
//
//
//
//
var prefixCls = 'ivu-layout';
var _default = {
  name: 'Header',
  computed: {
    wrapClasses: function wrapClasses() {
      return "".concat(prefixCls, "-header");
    }
  }
};
exports.default = _default;

/***/ }),
/* 159 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_input_number_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(160);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_input_number_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_input_number_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_input_number_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_input_number_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_input_number_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _assist = __webpack_require__(6);

var _emitter = _interopRequireDefault(__webpack_require__(9));

var logger = __webpack_require__(0).get("iview:components:input-number:input-number.vue");

var prefixCls = 'ivu-input-number';
var iconPrefixCls = 'ivu-icon';

function addNum(num1, num2) {
  var sq1;
  var sq2;

  try {
    sq1 = num1.toString().split('.')[1].length;
  } catch (e) {
    sq1 = 0;
  }

  try {
    sq2 = num2.toString().split('.')[1].length;
  } catch (e) {
    sq2 = 0;
  } //        if (sq1 === 0 || sq2 === 0) {
  //            return num1 + num2;
  //        } else {
  //            m = Math.pow(10, Math.max(sq1, sq2));
  //            return (num1 * m + num2 * m) / m;
  //        }


  var m = Math.pow(10, Math.max(sq1, sq2));
  return (Math.round(num1 * m) + Math.round(num2 * m)) / m;
}

var _default = {
  name: 'InputNumber',
  mixins: [_emitter.default],
  props: {
    autofocus: {
      default: false,
      type: Boolean
    },
    disabled: {
      default: false,
      type: Boolean
    },
    editable: {
      default: true,
      type: Boolean
    },
    elementId: {
      default: undefined,
      type: String
    },
    formatter: {
      default: undefined,
      type: Function
    },
    max: {
      default: Infinity,
      type: Number
    },
    min: {
      default: -Infinity,
      type: Number
    },
    name: {
      default: undefined,
      type: String
    },
    parser: {
      default: undefined,
      type: Function
    },
    placeholder: {
      default: '',
      type: String
    },
    precision: {
      default: undefined,
      type: Number
    },
    readonly: {
      default: false,
      type: Boolean
    },
    size: {
      default: undefined,
      type: String,
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['small', 'large', 'default']);
      }
    },
    step: {
      default: 1,
      type: Number
    },
    value: {
      default: 1,
      type: Number
    }
  },
  data: function data() {
    return {
      currentValue: this.value,
      downDisabled: false,
      focused: false,
      upDisabled: false
    };
  },
  computed: {
    downClasses: function downClasses() {
      return ["".concat(prefixCls, "-handler"), "".concat(prefixCls, "-handler-down"), (0, _defineProperty2.default)({}, "".concat(prefixCls, "-handler-down-disabled"), this.downDisabled)];
    },
    formatterValue: function formatterValue() {
      if (this.formatter && this.precisionValue !== null) {
        return this.formatter(this.precisionValue);
      }

      return this.precisionValue;
    },
    handlerClasses: function handlerClasses() {
      return "".concat(prefixCls, "-handler-wrap");
    },
    innerDownClasses: function innerDownClasses() {
      return "".concat(prefixCls, "-handler-down-inner ").concat(iconPrefixCls, " ").concat(iconPrefixCls, "-ios-arrow-down");
    },
    innerUpClasses: function innerUpClasses() {
      return "".concat(prefixCls, "-handler-up-inner ").concat(iconPrefixCls, " ").concat(iconPrefixCls, "-ios-arrow-up");
    },
    inputClasses: function inputClasses() {
      return "".concat(prefixCls, "-input");
    },
    inputWrapClasses: function inputWrapClasses() {
      return "".concat(prefixCls, "-input-wrap");
    },
    precisionValue: function precisionValue() {
      // can not display 1.0
      if (!this.currentValue) {
        return this.currentValue;
      }

      return this.precision ? this.currentValue.toFixed(this.precision) : this.currentValue;
    },
    upClasses: function upClasses() {
      return ["".concat(prefixCls, "-handler"), "".concat(prefixCls, "-handler-up"), (0, _defineProperty2.default)({}, "".concat(prefixCls, "-handler-up-disabled"), this.upDisabled)];
    },
    wrapClasses: function wrapClasses() {
      var _ref3;

      return ["".concat(prefixCls), (_ref3 = {}, (0, _defineProperty2.default)(_ref3, "".concat(prefixCls, "-").concat(this.size), !!this.size), (0, _defineProperty2.default)(_ref3, "".concat(prefixCls, "-disabled"), this.disabled), (0, _defineProperty2.default)(_ref3, "".concat(prefixCls, "-focused"), this.focused), _ref3)];
    }
  },
  watch: {
    currentValue: function currentValue(val) {
      this.changeVal(val);
    },
    max: function max() {
      this.changeVal(this.currentValue);
    },
    min: function min() {
      this.changeVal(this.currentValue);
    },
    value: function value(val) {
      this.currentValue = val;
    }
  },
  mounted: function mounted() {
    this.changeVal(this.currentValue);
  },
  methods: {
    blur: function blur() {
      this.focused = false;
      this.$emit('on-blur');
    },
    change: function change(event) {
      var val = event.target.value.trim();

      if (this.parser) {
        val = this.parser(val);
      }

      if (event.type === 'input' && val.match(/^-?\.?$|\.$/)) {
        return;
      } // prevent fire early if decimal. If no more input the change event will fire later


      var min = this.min,
          max = this.max;
      var isEmptyString = val.length === 0;
      val = Number(val);

      if (isEmptyString) {
        if (min === -Infinity && max === Infinity) {
          this.setValue(null);
        } else if (min !== -Infinity) {
          this.setValue(min);
        } else if (max !== Infinity) {
          this.setValue(max);
        }

        return;
      }

      if (event.type === 'change') {
        if (val === this.currentValue && val > min && val < max) {
          return;
        } // already fired change for input event

      }

      if (!Number.isNaN(val) && !isEmptyString) {
        this.currentValue = val;

        if (event.type === 'input' && val < min) {
          return;
        } // prevent fire early in case user is typing a bigger number. Change will handle this otherwise.


        if (val > max) {
          this.setValue(max);
        } else if (val < min) {
          this.setValue(min);
        } else {
          this.setValue(val);
        }
      } else {
        event.target.value = this.currentValue;
      }
    },
    changeStep: function changeStep(type, e) {
      if (this.disabled || this.readonly) {
        return;
      }

      var targetVal = Number(e.target.value);
      var val = Number(this.currentValue);
      var step = Number(this.step);

      if (Number.isNaN(val)) {
        return;
      } // input a number, and key up or down


      if (!Number.isNaN(targetVal)) {
        if (type === 'up') {
          if (addNum(targetVal, step) <= this.max) {
            val = targetVal;
          } else {
            return;
          }
        } else if (type === 'down') {
          if (addNum(targetVal, -step) >= this.min) {
            val = targetVal;
          } else {
            return;
          }
        }
      }

      if (type === 'up') {
        val = addNum(val, step);
      } else if (type === 'down') {
        val = addNum(val, -step);
      }

      this.setValue(val);
    },
    changeVal: function changeVal(value) {
      var val = Number(value);

      if (!Number.isNaN(val)) {
        var step = this.step;
        this.upDisabled = val + step > this.max;
        this.downDisabled = val - step < this.min;
      } else {
        this.upDisabled = true;
        this.downDisabled = true;
      }
    },
    down: function down(e) {
      var targetVal = Number(e.target.value);

      if (this.downDisabled && Number.isNaN(targetVal)) {
        return;
      }

      this.changeStep('down', e);
    },
    focus: function focus(event) {
      this.focused = true;
      this.$emit('on-focus', event);
    },
    keyDown: function keyDown(e) {
      if (e.keyCode === 38) {
        e.preventDefault();
        this.up(e);
      } else if (e.keyCode === 40) {
        e.preventDefault();
        this.down(e);
      }
    },
    preventDefault: function preventDefault(e) {
      e.preventDefault();
    },
    setValue: function setValue(value) {
      var _this = this;

      var val = value; // 如果 step 是小数，且没有设置 precision，是有问题的

      if (val && !Number.isNaN(this.precision)) {
        val = Number(Number(val).toFixed(this.precision));
      }

      this.$nextTick(function () {
        (0, _newArrowCheck2.default)(this, _this);
        this.currentValue = val;
        this.$emit('input', val);
        this.$emit('on-change', val);
        this.dispatch('FormItem', 'on-form-change', val);
      }.bind(this));
    },
    up: function up(e) {
      var targetVal = Number(e.target.value);

      if (this.upDisabled && Number.isNaN(targetVal)) {
        return;
      }

      this.changeStep('up', e);
    }
  }
};
exports.default = _default;

/***/ }),
/* 161 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_scroll_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(162);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_scroll_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_scroll_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_scroll_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_scroll_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_scroll_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _noop = _interopRequireDefault(__webpack_require__(13));

var _throttle = _interopRequireDefault(__webpack_require__(571));

var _loadingComponent = _interopRequireDefault(__webpack_require__(577));

var _dom = __webpack_require__(18);

var _locale = _interopRequireDefault(__webpack_require__(10));

var logger = __webpack_require__(0).get("iview:components:scroll:scroll.vue");

var prefixCls = 'ivu-scroll';
var dragConfig = {
  sensitivity: 10,
  minimumStartDragOffset: 5 // minimum start drag offset

};
var _default = {
  name: 'Scroll',
  components: {
    loader: _loadingComponent.default
  },
  mixins: [_locale.default],
  props: {
    distanceToEdge: {
      default: undefined,
      type: [Number, Array]
    },
    height: {
      default: 300,
      type: [Number, String]
    },
    loadingText: {
      default: undefined,
      type: String
    },
    onReachBottom: {
      default: undefined,
      type: Function
    },
    onReachEdge: {
      default: undefined,
      type: Function
    },
    onReachTop: {
      default: undefined,
      type: Function
    }
  },
  data: function data() {
    var distanceToEdge = this.calculateProximityThreshold();
    return {
      bottomProximityThreshold: distanceToEdge[1],
      bottomRubberPadding: 0,
      handleScroll: _noop.default,
      isLoading: false,
      lastScroll: 0,
      pointerMoveHandler: _noop.default,
      pointerTouchDown: null,
      pointerUpHandler: _noop.default,
      reachedBottomScrollLimit: false,
      reachedTopScrollLimit: true,
      rubberRollBackTimeout: false,
      showBodyLoader: false,
      showBottomLoader: false,
      showTopLoader: false,
      // near to edge detectors
      topProximityThreshold: distanceToEdge[0],
      topRubberPadding: 0,
      touchScroll: false
    };
  },
  computed: {
    loaderClasses: function loaderClasses() {
      return "".concat(prefixCls, "-loader");
    },
    localeLoadingText: function localeLoadingText() {
      if (this.loadingText === undefined) {
        return this.t('i.select.loading');
      }

      return this.loadingText;
    },
    scrollContainerClasses: function scrollContainerClasses() {
      return "".concat(prefixCls, "-container");
    },
    slotContainerClasses: function slotContainerClasses() {
      return ["".concat(prefixCls, "-content"), (0, _defineProperty2.default)({}, "".concat(prefixCls, "-content-loading"), this.showBodyLoader)];
    },
    wrapClasses: function wrapClasses() {
      return "".concat(prefixCls, "-wrapper");
    },
    wrapperPadding: function wrapperPadding() {
      return {
        paddingBottom: "".concat(this.bottomRubberPadding, "px"),
        paddingTop: "".concat(this.topRubberPadding, "px")
      };
    }
  },
  created: function created() {
    this.handleScroll = (0, _throttle.default)(this.onScroll, 150, {
      leading: false
    });
    this.pointerUpHandler = this.onPointerUp.bind(this); // because we need the same function to add and remove event handlers

    this.pointerMoveHandler = (0, _throttle.default)(this.onPointerMove, 50, {
      leading: false
    });
  },
  methods: {
    calculateProximityThreshold: function calculateProximityThreshold() {
      var dte = this.distanceToEdge;

      if (typeof dte === 'undefined') {
        return [20, 20];
      }

      return Array.isArray(dte) ? dte : [dte, dte];
    },
    getTouchCoordinates: function getTouchCoordinates(e) {
      return {
        x: e.touches[0].pageX,
        y: e.touches[0].pageY
      };
    },
    onCallback: function onCallback(dir) {
      var _this = this;

      this.isLoading = true;
      this.showBodyLoader = true;

      if (dir > 0) {
        this.showTopLoader = true;
        this.topRubberPadding = 20;
      } else {
        this.showBottomLoader = true;
        this.bottomRubberPadding = 20; // to force the scroll to the bottom while height is animating

        var bottomLoaderHeight = 0;
        var container = this.$refs.scrollContainer;
        var initialScrollTop = container.scrollTop;

        var executor = function executor() {
          (0, _newArrowCheck2.default)(this, _this);
          bottomLoaderHeight = Math.max(bottomLoaderHeight, this.$refs.bottomLoader.getBoundingClientRect().height);
          container.scrollTop = initialScrollTop + bottomLoaderHeight;
        }.bind(this);

        for (var i = 0; i < 20; i += 1) {
          setTimeout(executor, i * 50);
        }
      }

      var callbacks = [this.waitOneSecond(), this.onReachEdge ? this.onReachEdge(dir) : Promise.resolve()];
      var cb;

      if (dir > 0) {
        cb = this.onReachTop ? this.onReachTop() : Promise.resolve();
      } else {
        cb = this.onReachBottom ? this.onReachBottom() : Promise.resolve();
      }

      callbacks.push(cb);
      var tooSlow = setTimeout(function () {
        (0, _newArrowCheck2.default)(this, _this);
        this.reset();
      }.bind(this), 5000);
      Promise.all(callbacks).then(function () {
        (0, _newArrowCheck2.default)(this, _this);
        clearTimeout(tooSlow);
        this.reset();
        return null;
      }.bind(this)).catch(function (error) {
        (0, _newArrowCheck2.default)(this, _this);
        throw error;
      }.bind(this));
    },
    onPointerDown: function onPointerDown(e) {
      var _this2 = this;

      // we just use scroll and wheel in desktop, no mousedown
      if (this.isLoading) {
        return;
      }

      if (e.type === 'touchstart') {
        // if we start do touchmove on the scroll edger the browser will scroll the body
        // by adding 5px margin on pointer down we avoid this behaviour and the scroll/touchmove
        // in the component will not be exported outside of the component
        var container = this.$refs.scrollContainer;

        if (this.reachedTopScrollLimit) {
          container.scrollTop = 5;
        } else if (this.reachedBottomScrollLimit) {
          container.scrollTop -= 5;
        }
      }

      if (e.type === 'touchstart' && this.$refs.scrollContainer.scrollTop === 0) {
        this.$refs.scrollContainer.scrollTop = 5;
      }

      this.pointerTouchDown = this.getTouchCoordinates(e);
      (0, _dom.on)(window, 'touchend', this.pointerUpHandler);
      this.$refs.scrollContainer.parentElement.addEventListener('touchmove', function (evt) {
        (0, _newArrowCheck2.default)(this, _this2);
        evt.stopPropagation();
        this.pointerMoveHandler(evt);
      }.bind(this), {
        passive: false,
        useCapture: true
      });
    },
    onPointerMove: function onPointerMove(e) {
      if (!this.pointerTouchDown) {
        return;
      }

      if (this.isLoading) {
        return;
      }

      var pointerPosition = this.getTouchCoordinates(e);
      var yDiff = pointerPosition.y - this.pointerTouchDown.y;
      this.stretchEdge(yDiff);

      if (!this.touchScroll) {
        var wasDragged = Math.abs(yDiff) > dragConfig.minimumStartDragOffset;

        if (wasDragged) {
          this.touchScroll = true;
        }
      }
    },
    onPointerUp: function onPointerUp() {
      this.pointerTouchDown = null;
    },
    onScroll: function onScroll() {
      var el = this.$refs.scrollContainer;

      if (this.isLoading || !el) {
        return;
      }

      var scrollDirection = Math.sign(this.lastScroll - el.scrollTop); // IE has no Math.sign, check that webpack polyfills this

      var displacement = el.scrollHeight - el.clientHeight - el.scrollTop;
      var topNegativeProximity = this.topProximityThreshold < 0 ? this.topProximityThreshold : 0;
      var bottomNegativeProximity = this.bottomProximityThreshold < 0 ? this.bottomProximityThreshold : 0;

      if (scrollDirection === -1 && displacement + bottomNegativeProximity <= dragConfig.sensitivity) {
        this.reachedBottomScrollLimit = true;
      } else if (scrollDirection >= 0 && el.scrollTop + topNegativeProximity <= 0) {
        this.reachedTopScrollLimit = true;
      } else {
        this.reachedTopScrollLimit = false;
        this.reachedBottomScrollLimit = false;
        this.lastScroll = el.scrollTop;
      }
    },
    onWheel: function onWheel(event) {
      if (this.isLoading) {
        return;
      } // get the wheel direction


      var wheelDelta = event.wheelDelta ? event.wheelDelta : -(event.detail || event.deltaY);
      this.stretchEdge(wheelDelta);
    },
    reset: function reset() {
      var _this3 = this;

      ['showTopLoader', 'showBottomLoader', 'showBodyLoader', 'isLoading', 'reachedTopScrollLimit', 'reachedBottomScrollLimit'].forEach(function (prop) {
        (0, _newArrowCheck2.default)(this, _this3);
        this[prop] = false;
      }.bind(this));
      this.lastScroll = 0;
      this.topRubberPadding = 0;
      this.bottomRubberPadding = 0;
      clearInterval(this.rubberRollBackTimeout); // if we remove the handler too soon the screen will bump

      if (this.touchScroll) {
        setTimeout(function () {
          (0, _newArrowCheck2.default)(this, _this3);
          (0, _dom.off)(window, 'touchend', this.pointerUpHandler);
          this.$refs.scrollContainer.removeEventListener('touchmove', this.pointerMoveHandler);
          this.touchScroll = false;
        }.bind(this), 500);
      }
    },
    stretchEdge: function stretchEdge(direction) {
      var _this4 = this;

      clearTimeout(this.rubberRollBackTimeout); // check if set these props

      if (!this.onReachEdge) {
        if (direction > 0) {
          if (!this.onReachTop) {
            return;
          }
        } else if (!this.onReachBottom) {
          return;
        }
      } // if the scroll is not strong enough, lets reset it


      this.rubberRollBackTimeout = setTimeout(function () {
        (0, _newArrowCheck2.default)(this, _this4);

        if (!this.isLoading) {
          this.reset();
        }
      }.bind(this), 250); // to give the feeling its ruberish and can be puled more to start loading

      if (direction > 0 && this.reachedTopScrollLimit) {
        this.topRubberPadding += 5 - this.topRubberPadding / 5;

        if (this.topRubberPadding > this.topProximityThreshold) {
          this.onCallback(1);
        }
      } else if (direction < 0 && this.reachedBottomScrollLimit) {
        this.bottomRubberPadding += 6 - this.bottomRubberPadding / 4;

        if (this.bottomRubberPadding > this.bottomProximityThreshold) {
          this.onCallback(-1);
        }
      } else {
        this.onScroll();
      }
    },
    // just to improve feeling of loading and avoid scroll trailing events fired by the browser
    waitOneSecond: function waitOneSecond() {
      var _this5 = this;

      return new Promise(function (resolve) {
        (0, _newArrowCheck2.default)(this, _this5);
        setTimeout(resolve, 1000);
      }.bind(this));
    }
  }
};
exports.default = _default;

/***/ }),
/* 163 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_loading_component_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(164);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_loading_component_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_loading_component_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_loading_component_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_loading_component_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_loading_component_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var logger = __webpack_require__(0).get("iview:components:scroll:loading-component.vue");

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var prefixCls = 'ivu-scroll';
var _default = {
  props: {
    active: {
      default: false,
      type: Boolean
    },
    spinnerHeight: {
      default: null,
      type: [Number, String]
    },
    text: {
      default: '',
      type: String
    }
  },
  computed: {
    iconClasses: function iconClasses() {
      return "".concat(prefixCls, "-spinner-icon");
    },
    spinnerClasses: function spinnerClasses() {
      return "".concat(prefixCls, "-spinner");
    },
    textClasses: function textClasses() {
      return "".concat(prefixCls, "-loader-text");
    },
    wrapperClasses: function wrapperClasses() {
      return ["".concat(prefixCls, "-loader-wrapper"), (0, _defineProperty2.default)({}, "".concat(prefixCls, "-loader-wrapper-active"), this.active)];
    }
  }
};
exports.default = _default;

/***/ }),
/* 165 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_layout_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(166);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_layout_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_layout_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_layout_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_layout_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_layout_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var logger = __webpack_require__(0).get("iview:components:layout:layout.vue");

//
//
//
//
//
var prefixCls = 'ivu-layout';
var _default = {
  name: 'Layout',
  data: function data() {
    return {
      hasSider: false
    };
  },
  computed: {
    wrapClasses: function wrapClasses() {
      return ["".concat(prefixCls), (0, _defineProperty2.default)({}, "".concat(prefixCls, "-has-sider"), this.hasSider)];
    }
  },
  mounted: function mounted() {
    this.hasSider = this.findSider();
  },
  methods: {
    findSider: function findSider() {
      var _this = this;

      return this.$children.some(function (child) {
        (0, _newArrowCheck2.default)(this, _this);
        return child.$options.name === 'Sider';
      }.bind(this));
    }
  }
};
exports.default = _default;

/***/ }),
/* 167 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_sider_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(168);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_sider_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_sider_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_sider_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_sider_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_sider_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _dom = __webpack_require__(18);

var _assist = __webpack_require__(6);

var logger = __webpack_require__(0).get("iview:components:layout:sider.vue");

var prefixCls = 'ivu-layout-sider';
(0, _assist.setMatchMedia)();
var _default = {
  name: 'Sider',
  props: {
    breakpoint: {
      default: undefined,
      type: String,
      validator: function validator(val) {
        return (0, _assist.oneOf)(val, ['xs', 'sm', 'md', 'lg', 'xl']);
      }
    },
    collapsedWidth: {
      default: 64,
      type: [Number, String]
    },
    collapsible: {
      default: false,
      type: Boolean
    },
    defaultCollapsed: {
      default: false,
      type: Boolean
    },
    hideTrigger: {
      default: false,
      type: Boolean
    },
    reverseArrow: {
      default: false,
      type: Boolean
    },
    value: {
      default: false,
      // if it's collpased now
      type: Boolean
    },
    width: {
      default: 200,
      type: [Number, String]
    }
  },
  data: function data() {
    return {
      mediaMatched: false,
      prefixCls: prefixCls
    };
  },
  computed: {
    childClasses: function childClasses() {
      return "".concat(this.prefixCls, "-children");
    },
    showBottomTrigger: function showBottomTrigger() {
      return this.collapsible ? !this.mediaMatched && !this.hideTrigger : false;
    },
    showZeroTrigger: function showZeroTrigger() {
      return this.collapsible ? this.mediaMatched && !this.hideTrigger || parseInt(this.collapsedWidth, 10) === 0 && this.value && !this.hideTrigger : false;
    },
    siderWidth: function siderWidth() {
      if (this.collapsible) {
        if (this.value) {
          return this.mediaMatched ? 0 : parseInt(this.collapsedWidth, 10);
        }

        return parseInt(this.width, 10);
      }

      return this.width;
    },
    triggerClasses: function triggerClasses() {
      return ["".concat(prefixCls, "-trigger"), this.value ? "".concat(prefixCls, "-trigger-collapsed") : ''];
    },
    triggerIconClasses: function triggerIconClasses() {
      return ['ivu-icon', "ivu-icon-chevron-".concat(this.reverseArrow ? 'right' : 'left'), "".concat(prefixCls, "-trigger-icon")];
    },
    wrapClasses: function wrapClasses() {
      return ["".concat(prefixCls), this.siderWidth ? '' : "".concat(prefixCls, "-zero-width"), this.value ? "".concat(prefixCls, "-collapsed") : ''];
    },
    wrapStyles: function wrapStyles() {
      return {
        flex: "0 0 ".concat(this.siderWidth, "px"),
        maxWidth: "".concat(this.siderWidth, "px"),
        minWidth: "".concat(this.siderWidth, "px"),
        width: "".concat(this.siderWidth, "px")
      };
    },
    zeroWidthTriggerClasses: function zeroWidthTriggerClasses() {
      return ["".concat(prefixCls, "-zero-width-trigger"), this.reverseArrow ? "".concat(prefixCls, "-zero-width-trigger-left") : ''];
    }
  },
  watch: {
    value: function value(stat) {
      this.$emit('on-collapse', stat);
    }
  },
  mounted: function mounted() {
    if (this.defaultCollapsed) {
      this.$emit('input', this.defaultCollapsed);
    }

    if (this.breakpoint !== undefined) {
      (0, _dom.on)(window, 'resize', this.onWindowResize);
      this.matchMedia();
    }
  },
  beforeDestroy: function beforeDestroy() {
    if (this.breakpoint !== undefined) {
      (0, _dom.off)(window, 'resize', this.onWindowResize);
    }
  },
  methods: {
    matchMedia: function matchMedia() {
      var _window = window,
          matchMedia = _window.matchMedia;
      var mediaMatched = this.mediaMatched;
      this.mediaMatched = matchMedia("(max-width: ".concat(_assist.dimensionMap[this.breakpoint], ")")).matches;

      if (this.mediaMatched !== mediaMatched) {
        this.$emit('input', this.mediaMatched);
      }
    },
    onWindowResize: function onWindowResize() {
      this.matchMedia();
    },
    toggleCollapse: function toggleCollapse() {
      var value = this.collapsible ? !this.value : false;
      this.$emit('input', value);
    }
  }
};
exports.default = _default;

/***/ }),
/* 169 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_loading_bar_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(170);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_loading_bar_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_loading_bar_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_loading_bar_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_loading_bar_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_loading_bar_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var logger = __webpack_require__(0).get("iview:components:loading-bar:loading-bar.vue");

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//    import { oneOf } from '../../utils/assist';
var prefixCls = 'ivu-loading-bar';
var _default = {
  props: {
    //            percent: {
    //                type: Number,
    //                default: 0
    //            },
    color: {
      default: 'primary',
      type: String
    },
    failedColor: {
      default: 'error',
      type: String
    },
    height: {
      default: 2,
      type: Number
    } //            status: {
    //                type: String,
    //                validator (value) {
    //                    return oneOf(value, ['success', 'error']);
    //                },
    //                default: 'success'
    //            },
    //            show: {
    //                type: Boolean,
    //                default: false
    //            }

  },
  data: function data() {
    return {
      percent: 0,
      show: false,
      //                color: 'primary',
      //                failedColor: 'error',
      //                height: 2,
      status: 'success'
    };
  },
  computed: {
    classes: function classes() {
      return "".concat(prefixCls);
    },
    innerClasses: function innerClasses() {
      var _ref;

      return ["".concat(prefixCls, "-inner"), (_ref = {}, (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-inner-color-primary"), this.color === 'primary' && this.status === 'success'), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-inner-failed-color-error"), this.failedColor === 'error' && this.status === 'error'), _ref)];
    },
    outerStyles: function outerStyles() {
      return {
        height: "".concat(this.height, "px")
      };
    },
    styles: function styles() {
      var style = {
        height: "".concat(this.height, "px"),
        width: "".concat(this.percent, "%")
      };

      if (this.color !== 'primary' && this.status === 'success') {
        style.backgroundColor = this.color;
      }

      if (this.failedColor !== 'error' && this.status === 'error') {
        style.backgroundColor = this.failedColor;
      }

      return style;
    }
  }
};
exports.default = _default;

/***/ }),
/* 171 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_menu_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(172);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_menu_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_menu_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_menu_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_menu_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_menu_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(15));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _stubArray = _interopRequireDefault(__webpack_require__(14));

var _assist = __webpack_require__(6);

var _emitter = _interopRequireDefault(__webpack_require__(9));

var logger = __webpack_require__(0).get("iview:components:menu:menu.vue");

var prefixCls = 'ivu-menu';
var _default = {
  name: 'Menu',
  mixins: [_emitter.default],
  props: {
    accordion: {
      default: false,
      type: Boolean
    },
    activeName: {
      default: undefined,
      type: [String, Number]
    },
    mode: {
      default: 'vertical',
      type: String,
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['horizontal', 'vertical']);
      }
    },
    openNames: {
      default: _stubArray.default,
      type: Array
    },
    theme: {
      default: 'light',
      type: String,
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['light', 'dark', 'primary']);
      }
    },
    width: {
      default: '240px',
      type: String
    }
  },
  data: function data() {
    return {
      currentActiveName: this.activeName,
      openedNames: []
    };
  },
  computed: {
    classes: function classes() {
      var theme = this.theme;

      if (this.mode === 'vertical' && this.theme === 'primary') {
        theme = 'light';
      }

      return ["".concat(prefixCls), "".concat(prefixCls, "-").concat(theme), (0, _defineProperty2.default)({}, "".concat(prefixCls, "-").concat(this.mode), this.mode)];
    },
    styles: function styles() {
      var style = {};

      if (this.mode === 'vertical') {
        style.width = this.width;
      }

      return style;
    }
  },
  watch: {
    activeName: function activeName(val) {
      this.currentActiveName = val;
    },
    currentActiveName: function currentActiveName() {
      this.updateActiveName();
    },
    openNames: function openNames(names) {
      this.openedNames = names;
    }
  },
  mounted: function mounted() {
    var _this = this;

    this.updateActiveName();
    this.openedNames = (0, _toConsumableArray2.default)(this.openNames);
    this.updateOpened();
    this.$on('on-menu-item-select', function (name) {
      (0, _newArrowCheck2.default)(this, _this);
      this.currentActiveName = name;
      this.$emit('on-select', name);
    }.bind(this));
  },
  methods: {
    updateActiveName: function updateActiveName() {
      if (this.currentActiveName === undefined) {
        this.currentActiveName = -1;
      }

      this.broadcast('Submenu', 'on-update-active-name', false);
      this.broadcast('MenuItem', 'on-update-active-name', this.currentActiveName);
    },
    updateOpened: function updateOpened() {
      var _this2 = this;

      var items = (0, _assist.findComponentsDownward)(this, 'Submenu');

      if (items.length) {
        items.forEach(function (item) {
          (0, _newArrowCheck2.default)(this, _this2);
          item.opened = this.openedNames.indexOf(item.name) > -1;
        }.bind(this));
      }
    },
    updateOpenKeys: function updateOpenKeys(name) {
      var _this3 = this;

      var names = (0, _toConsumableArray2.default)(this.openedNames);
      var index = names.indexOf(name);

      if (this.accordion) {
        (0, _assist.findComponentsDownward)(this, 'Submenu').forEach(function (item) {
          (0, _newArrowCheck2.default)(this, _this3);
          item.opened = false;
        }.bind(this));
      }

      if (index >= 0) {
        var currentSubmenu = null;
        (0, _assist.findComponentsDownward)(this, 'Submenu').forEach(function (item) {
          (0, _newArrowCheck2.default)(this, _this3);

          if (item.name === name) {
            currentSubmenu = item;
            item.opened = false;
          }
        }.bind(this));
        (0, _assist.findComponentsUpward)(currentSubmenu, 'Submenu').forEach(function (item) {
          (0, _newArrowCheck2.default)(this, _this3);
          item.opened = true;
        }.bind(this));
        (0, _assist.findComponentsDownward)(currentSubmenu, 'Submenu').forEach(function (item) {
          (0, _newArrowCheck2.default)(this, _this3);
          item.opened = false;
        }.bind(this));
      } else if (this.accordion) {
        var _currentSubmenu = null;
        (0, _assist.findComponentsDownward)(this, 'Submenu').forEach(function (item) {
          (0, _newArrowCheck2.default)(this, _this3);

          if (item.name === name) {
            _currentSubmenu = item;
            item.opened = true;
          }
        }.bind(this));
        (0, _assist.findComponentsUpward)(_currentSubmenu, 'Submenu').forEach(function (item) {
          (0, _newArrowCheck2.default)(this, _this3);
          item.opened = true;
        }.bind(this));
      } else {
        (0, _assist.findComponentsDownward)(this, 'Submenu').forEach(function (item) {
          (0, _newArrowCheck2.default)(this, _this3);

          if (item.name === name) {
            item.opened = true;
          }
        }.bind(this));
      }

      var openedNames = (0, _assist.findComponentsDownward)(this, 'Submenu').filter(function (item) {
        (0, _newArrowCheck2.default)(this, _this3);
        return item.opened;
      }.bind(this)).map(function (item) {
        (0, _newArrowCheck2.default)(this, _this3);
        return item.name;
      }.bind(this));
      this.openedNames = (0, _toConsumableArray2.default)(openedNames);
      this.$emit('on-open-change', openedNames);
    }
  }
};
exports.default = _default;

/***/ }),
/* 173 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_menu_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(174);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_menu_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_menu_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_menu_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_menu_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_menu_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _mixin = _interopRequireDefault(__webpack_require__(278));

var logger = __webpack_require__(0).get("iview:components:menu:menu-group.vue");

var prefixCls = 'ivu-menu';
var _default = {
  name: 'MenuGroup',
  mixins: [_mixin.default],
  props: {
    title: {
      default: '',
      type: String
    }
  },
  data: function data() {
    return {
      prefixCls: prefixCls
    };
  },
  computed: {
    groupStyle: function groupStyle() {
      return this.hasParentSubmenu && this.mode !== 'horizontal' ? {
        paddingLeft: "".concat(43 + (this.parentSubmenuNum - 1) * 28, "px")
      } : {};
    }
  }
};
exports.default = _default;

/***/ }),
/* 175 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_menu_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(176);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_menu_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_menu_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_menu_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_menu_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_menu_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _emitter = _interopRequireDefault(__webpack_require__(9));

var _assist = __webpack_require__(6);

var _mixin = _interopRequireDefault(__webpack_require__(278));

var logger = __webpack_require__(0).get("iview:components:menu:menu-item.vue");

var prefixCls = 'ivu-menu';
var _default = {
  name: 'MenuItem',
  mixins: [_emitter.default, _mixin.default],
  props: {
    disabled: {
      default: false,
      type: Boolean
    },
    name: {
      required: true,
      type: [String, Number]
    }
  },
  data: function data() {
    return {
      active: false
    };
  },
  computed: {
    classes: function classes() {
      var _ref;

      return ["".concat(prefixCls, "-item"), (_ref = {}, (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-item-active"), this.active), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-item-selected"), this.active), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-item-disabled"), this.disabled), _ref)];
    },
    itemStyle: function itemStyle() {
      return this.hasParentSubmenu && this.mode !== 'horizontal' ? {
        paddingLeft: "".concat(43 + (this.parentSubmenuNum - 1) * 24, "px")
      } : {};
    }
  },
  mounted: function mounted() {
    var _this = this;

    this.$on('on-update-active-name', function (name) {
      (0, _newArrowCheck2.default)(this, _this);

      if (this.name === name) {
        this.active = true;
        this.dispatch('Submenu', 'on-update-active-name', name);
      } else {
        this.active = false;
      }
    }.bind(this));
  },
  methods: {
    handleClick: function handleClick() {
      if (this.disabled) {
        return;
      }

      var parent = (0, _assist.findComponentUpward)(this, 'Submenu');

      if (parent) {
        this.dispatch('Submenu', 'on-menu-item-select', this.name);
      } else {
        this.dispatch('Menu', 'on-menu-item-select', this.name);
      }
    }
  }
};
exports.default = _default;

/***/ }),
/* 177 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_submenu_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(178);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_submenu_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_submenu_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_submenu_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_submenu_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_submenu_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _dropdown = _interopRequireDefault(__webpack_require__(28));

var _icon = _interopRequireDefault(__webpack_require__(12));

var _collapseTransition = _interopRequireDefault(__webpack_require__(262));

var _assist = __webpack_require__(6);

var _emitter = _interopRequireDefault(__webpack_require__(9));

var _mixin = _interopRequireDefault(__webpack_require__(278));

var logger = __webpack_require__(0).get("iview:components:menu:submenu.vue");

var prefixCls = 'ivu-menu';
var _default = {
  name: 'Submenu',
  components: {
    CollapseTransition: _collapseTransition.default,
    Drop: _dropdown.default,
    Icon: _icon.default
  },
  mixins: [_emitter.default, _mixin.default],
  props: {
    disabled: {
      default: false,
      type: Boolean
    },
    name: {
      required: true,
      type: [String, Number]
    }
  },
  data: function data() {
    return {
      active: false,
      dropWidth: parseFloat((0, _assist.getStyle)(this.$el, 'width')),
      opened: false,
      prefixCls: prefixCls
    };
  },
  computed: {
    accordion: function accordion() {
      return this.menu.accordion;
    },
    classes: function classes() {
      var _ref;

      return ["".concat(prefixCls, "-submenu"), (_ref = {}, (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-item-active"), this.active && !this.hasParentSubmenu), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-opened"), this.opened), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-submenu-disabled"), this.disabled), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-submenu-has-parent-submenu"), this.hasParentSubmenu), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-child-item-active"), this.active), _ref)];
    },
    dropStyle: function dropStyle() {
      var style = {};

      if (this.dropWidth) {
        style.minWidth = "".concat(this.dropWidth, "px");
      }

      return style;
    },
    titleStyle: function titleStyle() {
      return this.hasParentSubmenu && this.mode !== 'horizontal' ? {
        paddingLeft: "".concat(43 + (this.parentSubmenuNum - 1) * 24, "px")
      } : {};
    }
  },
  watch: {
    mode: function mode(val) {
      if (val === 'horizontal') {
        this.$refs.drop.update();
      }
    },
    opened: function opened(val) {
      if (this.mode === 'vertical') {
        return;
      }

      if (val) {
        // set drop a width to fixed when menu has fixed position
        this.dropWidth = parseFloat((0, _assist.getStyle)(this.$el, 'width'));
        this.$refs.drop.update();
      } else {
        this.$refs.drop.destroy();
      }
    }
  },
  mounted: function mounted() {
    var _this = this;

    this.$on('on-menu-item-select', function (name) {
      (0, _newArrowCheck2.default)(this, _this);

      if (this.mode === 'horizontal') {
        this.opened = false;
      }

      this.dispatch('Menu', 'on-menu-item-select', name);
      return true;
    }.bind(this));
    this.$on('on-update-active-name', function (status) {
      var _this2 = this;

      (0, _newArrowCheck2.default)(this, _this);

      if ((0, _assist.findComponentUpward)(this, 'Submenu')) {
        this.dispatch('Submenu', 'on-update-active-name', status);
      }

      if ((0, _assist.findComponentsDownward)(this, 'Submenu')) {
        (0, _assist.findComponentsDownward)(this, 'Submenu').forEach(function (item) {
          (0, _newArrowCheck2.default)(this, _this2);
          item.active = false;
        }.bind(this));
      }

      this.active = status;
    }.bind(this));
  },
  methods: {
    handleClick: function handleClick() {
      var _this3 = this;

      if (this.disabled) {
        return;
      }

      if (this.mode === 'horizontal') {
        return;
      }

      var opened = this.opened;

      if (this.accordion) {
        this.$parent.$children.forEach(function (item) {
          (0, _newArrowCheck2.default)(this, _this3);

          if (item.$options.name === 'Submenu') {
            item.opened = false;
          }
        }.bind(this));
      }

      this.opened = !opened;
      this.menu.updateOpenKeys(this.name);
    },
    handleMouseenter: function handleMouseenter() {
      var _this4 = this;

      if (this.disabled) {
        return;
      }

      if (this.mode === 'vertical') {
        return;
      }

      clearTimeout(this.timeout);
      this.timeout = setTimeout(function () {
        (0, _newArrowCheck2.default)(this, _this4);
        this.menu.updateOpenKeys(this.name);
        this.opened = true;
      }.bind(this), 250);
    },
    handleMouseleave: function handleMouseleave() {
      var _this5 = this;

      if (this.disabled) {
        return;
      }

      if (this.mode === 'vertical') {
        return;
      }

      clearTimeout(this.timeout);
      this.timeout = setTimeout(function () {
        (0, _newArrowCheck2.default)(this, _this5);
        this.menu.updateOpenKeys(this.name);
        this.opened = false;
      }.bind(this), 150);
    }
  }
};
exports.default = _default;

/***/ }),
/* 179 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_notification_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(180);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_notification_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_notification_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_notification_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_notification_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_notification_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectSpread2 = _interopRequireDefault(__webpack_require__(11));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _notice = _interopRequireDefault(__webpack_require__(591));

var logger = __webpack_require__(0).get("iview:components:base:notification:notification.vue");

var prefixCls = 'ivu-notification';
var seed = 0;
var now = Date.now();

function getUuid() {
  var value = "ivuNotification_".concat(now, "_").concat(seed);
  seed += 1;
  return value;
}

var _default2 = {
  components: {
    Notice: _notice.default
  },
  props: {
    className: {
      default: undefined,
      type: String
    },
    content: {
      default: undefined,
      type: String
    },
    prefixCls: {
      default: prefixCls,
      type: String
    },
    styles: {
      default: function _default() {
        return {
          left: '50%',
          top: '65px'
        };
      },
      type: Object
    }
  },
  data: function data() {
    return {
      notices: []
    };
  },
  computed: {
    classes: function classes() {
      return ["".concat(this.prefixCls), (0, _defineProperty2.default)({}, "".concat(this.className), !!this.className)];
    }
  },
  methods: {
    add: function add(notice) {
      var name = notice.name || getUuid();
      var noticeObj = (0, _objectSpread2.default)({}, {
        closable: false,
        content: '',
        duration: 1.5,
        name: name,
        styles: {
          right: '50%'
        }
      }, notice);
      this.notices.push(noticeObj);
    },
    close: function close(name) {
      var notices = this.notices;

      for (var i = 0; i < notices.length; i += 1) {
        if (notices[i].name === name) {
          this.notices.splice(i, 1);
          break;
        }
      }
    },
    closeAll: function closeAll() {
      this.notices = [];
    }
  }
};
exports.default = _default2;

/***/ }),
/* 181 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_notice_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(182);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_notice_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_notice_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_notice_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_notice_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_notice_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _noop = _interopRequireDefault(__webpack_require__(13));

var _render = _interopRequireDefault(__webpack_require__(415));

var logger = __webpack_require__(0).get("iview:components:base:notification:notice.vue");

var _default2 = {
  components: {
    RenderCell: _render.default
  },
  props: {
    className: {
      default: undefined,
      type: String
    },
    closable: {
      default: false,
      type: Boolean
    },
    content: {
      default: '',
      type: String
    },
    duration: {
      default: 1.5,
      type: Number
    },
    hasTitle: {
      default: false,
      type: Boolean
    },
    name: {
      required: true,
      type: String
    },
    onClose: {
      default: undefined,
      type: Function
    },
    prefixCls: {
      default: '',
      type: String
    },
    render: {
      default: undefined,
      type: Function
    },
    styles: {
      default: function _default() {
        return {
          right: '50%'
        };
      },
      type: Object
    },
    transitionName: {
      default: undefined,
      type: String
    },
    type: {
      default: undefined,
      type: String
    },
    withIcon: {
      default: false,
      type: Boolean
    }
  },
  data: function data() {
    return {
      withDesc: false
    };
  },
  computed: {
    baseClass: function baseClass() {
      return "".concat(this.prefixCls, "-notice");
    },
    classes: function classes() {
      var _ref;

      return [this.baseClass, (_ref = {}, (0, _defineProperty2.default)(_ref, "".concat(this.className), !!this.className), (0, _defineProperty2.default)(_ref, "".concat(this.baseClass, "-closable"), this.closable), (0, _defineProperty2.default)(_ref, "".concat(this.baseClass, "-with-desc"), this.withDesc), _ref)];
    },
    contentClasses: function contentClasses() {
      return ["".concat(this.baseClass, "-content"), this.render !== undefined ? "".concat(this.baseClass, "-content-with-render") : ''];
    },
    contentWithIcon: function contentWithIcon() {
      return [this.withIcon ? "".concat(this.prefixCls, "-content-with-icon") : '', !this.hasTitle && this.withIcon ? "".concat(this.prefixCls, "-content-with-render-notitle") : ''];
    },
    messageClasses: function messageClasses() {
      return ["".concat(this.baseClass, "-content"), this.render !== undefined ? "".concat(this.baseClass, "-content-with-render") : ''];
    },
    renderFunc: function renderFunc() {
      return this.render || _noop.default;
    }
  },
  mounted: function mounted() {
    var _this = this;

    this.clearCloseTimer();

    if (this.duration !== 0) {
      this.closeTimer = setTimeout(function () {
        (0, _newArrowCheck2.default)(this, _this);
        this.close();
      }.bind(this), this.duration * 1000);
    } // check if with desc in Notice component


    if (this.prefixCls === 'ivu-notice') {
      var desc = this.$refs.content.querySelectorAll(".".concat(this.prefixCls, "-desc"))[0];

      if (this.render) {
        this.withDesc = true;
      } else {
        this.withDesc = desc ? desc.innerHTML !== '' : false;
      }
    }
  },
  beforeDestroy: function beforeDestroy() {
    this.clearCloseTimer();
  },
  methods: {
    clearCloseTimer: function clearCloseTimer() {
      if (this.closeTimer) {
        clearTimeout(this.closeTimer);
        this.closeTimer = null;
      }
    },
    close: function close() {
      this.clearCloseTimer();
      this.onClose();
      this.$parent.close(this.name);
    },
    handleEnter: function handleEnter(el) {
      if (this.type === 'message') {
        el.style.height = "".concat(el.scrollHeight, "px");
      }
    },
    handleLeave: function handleLeave(el) {
      if (this.type === 'message') {
        // 优化一下，如果当前只有一个 Message，则不使用 js 过渡动画，这样更优美
        if (document.getElementsByClassName('ivu-message-notice').length !== 1) {
          el.style.height = 0;
          el.style.paddingTop = 0;
          el.style.paddingBottom = 0;
        }
      }
    }
  }
};
exports.default = _default2;

/***/ }),
/* 183 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_modal_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(184);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_modal_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_modal_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_modal_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_modal_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_modal_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _icon = _interopRequireDefault(__webpack_require__(19));

var _button = _interopRequireDefault(__webpack_require__(22));

var _transferDom = _interopRequireDefault(__webpack_require__(21));

var _locale = _interopRequireDefault(__webpack_require__(10));

var _emitter = _interopRequireDefault(__webpack_require__(9));

var _mixinsScrollbar = _interopRequireDefault(__webpack_require__(416));

var logger = __webpack_require__(0).get("iview:components:modal:modal.vue");

var prefixCls = 'ivu-modal';
var _default2 = {
  name: 'Modal',
  components: {
    iButton: _button.default,
    Icon: _icon.default
  },
  directives: {
    TransferDom: _transferDom.default
  },
  mixins: [_locale.default, _emitter.default, _mixinsScrollbar.default],
  props: {
    cancelText: {
      default: undefined,
      type: String
    },
    className: {
      default: undefined,
      type: String
    },
    closable: {
      default: true,
      type: Boolean
    },
    // for instance
    footerHide: {
      default: false,
      type: Boolean
    },
    loading: {
      default: false,
      type: Boolean
    },
    maskClosable: {
      default: true,
      type: Boolean
    },
    okText: {
      default: undefined,
      type: String
    },
    scrollable: {
      default: false,
      type: Boolean
    },
    styles: {
      default: undefined,
      type: Object
    },
    title: {
      default: undefined,
      type: String
    },
    transfer: {
      default: true,
      type: Boolean
    },
    transitionNames: {
      default: function _default() {
        return ['ease', 'fade'];
      },
      type: Array
    },
    value: {
      default: false,
      type: Boolean
    },
    width: {
      default: 520,
      type: [Number, String]
    }
  },
  data: function data() {
    return {
      buttonLoading: false,
      prefixCls: prefixCls,
      showHead: true,
      visible: this.value,
      wrapShow: false
    };
  },
  computed: {
    classes: function classes() {
      return "".concat(prefixCls);
    },
    localeCancelText: function localeCancelText() {
      if (this.cancelText === undefined) {
        return this.t('i.modal.cancelText');
      }

      return this.cancelText;
    },
    localeOkText: function localeOkText() {
      if (this.okText === undefined) {
        return this.t('i.modal.okText');
      }

      return this.okText;
    },
    mainStyles: function mainStyles() {
      var style = {};
      var width = parseInt(this.width, 10);
      var styleWidth = {
        width: width <= 100 ? "".concat(width, "%") : "".concat(width, "px")
      };
      var customStyle = this.styles ? this.styles : {};
      Object.assign(style, styleWidth, customStyle);
      return style;
    },
    maskClasses: function maskClasses() {
      return "".concat(prefixCls, "-mask");
    },
    wrapClasses: function wrapClasses() {
      var _ref;

      return ["".concat(prefixCls, "-wrap"), (_ref = {}, (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-hidden"), !this.wrapShow), (0, _defineProperty2.default)(_ref, "".concat(this.className), !!this.className), _ref)];
    }
  },
  watch: {
    loading: function loading(val) {
      if (!val) {
        this.buttonLoading = false;
      }
    },
    scrollable: function scrollable(val) {
      if (!val) {
        this.addScrollEffect();
      } else {
        this.removeScrollEffect();
      }
    },
    title: function title(val) {
      if (this.$slots.header === undefined) {
        this.showHead = !!val;
      }
    },
    value: function value(val) {
      this.visible = val;
    },
    visible: function visible(val) {
      var _this = this;

      if (val === false) {
        this.buttonLoading = false;
        this.timer = setTimeout(function () {
          (0, _newArrowCheck2.default)(this, _this);
          this.wrapShow = false;
          this.removeScrollEffect();
        }.bind(this), 300);
      } else {
        if (this.timer) {
          clearTimeout(this.timer);
        }

        this.wrapShow = true;

        if (!this.scrollable) {
          this.addScrollEffect();
        }
      }

      this.broadcast('Table', 'on-visible-change', val);
      this.broadcast('Slider', 'on-visible-change', val); // #2852

      this.$emit('on-visible-change', val);
    }
  },
  mounted: function mounted() {
    if (this.visible) {
      this.wrapShow = true;
    }

    var showHead = true;

    if (this.$slots.header === undefined && !this.title) {
      showHead = false;
    }

    this.showHead = showHead; // ESC close

    document.addEventListener('keydown', this.EscClose);
  },
  beforeDestroy: function beforeDestroy() {
    document.removeEventListener('keydown', this.EscClose);
    this.removeScrollEffect();
  },
  methods: {
    animationFinish: function animationFinish() {
      this.$emit('on-hidden');
    },
    cancel: function cancel() {
      this.close();
    },
    close: function close() {
      this.visible = false;
      this.$emit('input', false);
      this.$emit('on-cancel');
    },
    EscClose: function EscClose(e) {
      if (this.visible && this.closable) {
        if (e.keyCode === 27) {
          this.close();
        }
      }
    },
    handleWrapClick: function handleWrapClick(event) {
      // use indexOf,do not use === ,because ivu-modal-wrap can have other custom className
      var className = event.target.getAttribute('class');

      if (className && className.indexOf("".concat(prefixCls, "-wrap")) > -1) {
        this.mask();
      }
    },
    mask: function mask() {
      if (this.maskClosable) {
        this.close();
      }
    },
    ok: function ok() {
      if (this.loading) {
        this.buttonLoading = true;
      } else {
        this.visible = false;
        this.$emit('input', false);
      }

      this.$emit('on-ok');
    }
  }
};
exports.default = _default2;

/***/ }),
/* 185 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_page_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(186);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_page_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_page_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_page_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_page_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_page_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _assist = __webpack_require__(6);

var _options = _interopRequireDefault(__webpack_require__(598));

var _locale = _interopRequireDefault(__webpack_require__(10));

var logger = __webpack_require__(0).get("iview:components:page:page.vue");

var prefixCls = 'ivu-page';
var _default2 = {
  name: 'Page',
  components: {
    Options: _options.default
  },
  mixins: [_locale.default],
  props: {
    className: {
      default: undefined,
      type: String
    },
    current: {
      default: 1,
      type: Number
    },
    pageSize: {
      default: 10,
      type: Number
    },
    pageSizeOpts: {
      default: function _default() {
        return [10, 20, 30, 40];
      },
      type: Array
    },
    placement: {
      default: 'bottom',
      type: String,
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['top', 'bottom']);
      }
    },
    showElevator: {
      default: false,
      type: Boolean
    },
    showSizer: {
      default: false,
      type: Boolean
    },
    showTotal: {
      default: false,
      type: Boolean
    },
    simple: {
      default: false,
      type: Boolean
    },
    size: {
      default: undefined,
      type: String,
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['small']);
      }
    },
    styles: {
      default: undefined,
      type: Object
    },
    total: {
      default: 0,
      type: Number
    },
    transfer: {
      default: false,
      type: Boolean
    }
  },
  data: function data() {
    return {
      currentPage: this.current,
      currentPageSize: this.pageSize,
      prefixCls: prefixCls
    };
  },
  computed: {
    allPages: function allPages() {
      var allPage = Math.ceil(this.total / this.currentPageSize);
      return allPage === 0 ? 1 : allPage;
    },
    firstPageClasses: function firstPageClasses() {
      return ["".concat(prefixCls, "-item"), (0, _defineProperty2.default)({}, "".concat(prefixCls, "-item-active"), this.currentPage === 1)];
    },
    isSmall: function isSmall() {
      return !!this.size;
    },
    lastPageClasses: function lastPageClasses() {
      return ["".concat(prefixCls, "-item"), (0, _defineProperty2.default)({}, "".concat(prefixCls, "-item-active"), this.currentPage === this.allPages)];
    },
    nextClasses: function nextClasses() {
      return ["".concat(prefixCls, "-next"), (0, _defineProperty2.default)({}, "".concat(prefixCls, "-disabled"), this.currentPage === this.allPages)];
    },
    prevClasses: function prevClasses() {
      return ["".concat(prefixCls, "-prev"), (0, _defineProperty2.default)({}, "".concat(prefixCls, "-disabled"), this.currentPage === 1)];
    },
    simplePagerClasses: function simplePagerClasses() {
      return "".concat(prefixCls, "-simple-pager");
    },
    simpleWrapClasses: function simpleWrapClasses() {
      return ["".concat(prefixCls), "".concat(prefixCls, "-simple"), (0, _defineProperty2.default)({}, "".concat(this.className), !!this.className)];
    },
    wrapClasses: function wrapClasses() {
      var _ref6;

      return ["".concat(prefixCls), (_ref6 = {}, (0, _defineProperty2.default)(_ref6, "".concat(this.className), !!this.className), (0, _defineProperty2.default)(_ref6, "mini", !!this.size), _ref6)];
    }
  },
  watch: {
    current: function current(val) {
      this.currentPage = val;
    },
    pageSize: function pageSize(val) {
      this.currentPageSize = val;
    },
    total: function total(val) {
      var maxPage = Math.ceil(val / this.currentPageSize);

      if (maxPage < this.currentPage && maxPage > 0) {
        this.currentPage = maxPage;
      }
    }
  },
  methods: {
    changePage: function changePage(page) {
      if (this.currentPage !== page) {
        this.currentPage = page;
        this.$emit('update:current', page);
        this.$emit('on-change', page);
      }
    },
    fastNext: function fastNext() {
      var page = this.currentPage + 5;

      if (page > this.allPages) {
        this.changePage(this.allPages);
      } else {
        this.changePage(page);
      }
    },
    fastPrev: function fastPrev() {
      var page = this.currentPage - 5;

      if (page > 0) {
        this.changePage(page);
      } else {
        this.changePage(1);
      }
    },
    keyDown: function keyDown(e) {
      var key = e.keyCode;
      var condition = key >= 48 && key <= 57 || key >= 96 && key <= 105 || key === 8 || key === 37 || key === 39;

      if (!condition) {
        e.preventDefault();
      }
    },
    keyUp: function keyUp(e) {
      var key = e.keyCode;
      var val = parseInt(e.target.value, 10);

      if (key === 38) {
        this.prev();
      } else if (key === 40) {
        this.next();
      } else if (key === 13) {
        var page = 1;

        if (val > this.allPages) {
          page = this.allPages;
        } else if (val <= 0 || !val) {
          page = 1;
        } else {
          page = val;
        }

        e.target.value = page;
        this.changePage(page);
      }
    },
    next: function next() {
      var current = this.currentPage;

      if (current >= this.allPages) {
        return;
      }

      this.changePage(current + 1);
    },
    onPage: function onPage(page) {
      this.changePage(page);
    },
    onSize: function onSize(pageSize) {
      this.currentPageSize = pageSize;
      this.$emit('on-page-size-change', pageSize);
      this.changePage(1);
    },
    prev: function prev() {
      var current = this.currentPage;

      if (current <= 1) {
        return;
      }

      this.changePage(current - 1);
    }
  }
};
exports.default = _default2;

/***/ }),
/* 187 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_options_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(188);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_options_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_options_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_options_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_options_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_options_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _select = _interopRequireDefault(__webpack_require__(257));

var _option = _interopRequireDefault(__webpack_require__(261));

var _locale = _interopRequireDefault(__webpack_require__(10));

var logger = __webpack_require__(0).get("iview:components:page:options.vue");

var prefixCls = 'ivu-page';

function isValueNumber(value) {
  return /^[1-9][0-9]*$/.test("".concat(value));
}

var _default = {
  name: 'PageOption',
  components: {
    iOption: _option.default,
    iSelect: _select.default
  },
  mixins: [_locale.default],
  props: {
    allPages: {
      default: undefined,
      type: Number
    },
    current: {
      default: undefined,
      type: Number
    },
    isSmall: {
      default: undefined,
      type: Boolean
    },
    pageSize: {
      default: undefined,
      type: Number
    },
    pageSizeOpts: {
      default: undefined,
      type: Array
    },
    placement: {
      default: undefined,
      type: String
    },
    scoreCurrent: {
      default: undefined,
      type: Number
    },
    showElevator: {
      default: undefined,
      type: Boolean
    },
    showSizer: {
      default: undefined,
      type: Boolean
    },
    transfer: {
      default: undefined,
      type: Boolean
    }
  },
  data: function data() {
    return {
      currentPageSize: this.pageSize
    };
  },
  computed: {
    ElevatorClasses: function ElevatorClasses() {
      return ["".concat(prefixCls, "-options-elevator")];
    },
    optsClasses: function optsClasses() {
      return ["".concat(prefixCls, "-options")];
    },
    size: function size() {
      return this.isSmall ? 'small' : 'default';
    },
    sizerClasses: function sizerClasses() {
      return ["".concat(prefixCls, "-options-sizer")];
    }
  },
  watch: {
    pageSize: function pageSize(val) {
      this.currentPageSize = val;
    }
  },
  methods: {
    changePage: function changePage(event) {
      var val = event.target.value.trim();
      var page = 0;

      if (isValueNumber(val)) {
        val = Number(val);

        if (val !== this.current) {
          var allPages = this.allPages;

          if (val > allPages) {
            page = allPages;
          } else {
            page = val;
          }
        }
      } else {
        page = 1;
      }

      if (page) {
        this.$emit('on-page', page);
        event.target.value = page;
      }
    },
    changeSize: function changeSize() {
      this.$emit('on-size', this.currentPageSize);
    },
    onKeyup: function onKeyup(event) {
      if (event.key === 'Enter') {
        this.changePage(event);
      }
    }
  }
};
exports.default = _default;

/***/ }),
/* 189 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_poptip_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(190);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_poptip_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_poptip_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_poptip_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_poptip_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_poptip_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _head = _interopRequireDefault(__webpack_require__(418));

var _vClickOutsideX = __webpack_require__(24);

var _popper = _interopRequireDefault(__webpack_require__(419));

var _button = _interopRequireDefault(__webpack_require__(22));

var _transferDom = _interopRequireDefault(__webpack_require__(21));

var _assist = __webpack_require__(6);

var _locale = _interopRequireDefault(__webpack_require__(10));

var logger = __webpack_require__(0).get("iview:components:poptip:poptip.vue");

var prefixCls = 'ivu-poptip';
var _default = {
  name: 'Poptip',
  directives: {
    clickOutside: _vClickOutsideX.directive,
    TransferDom: _transferDom.default
  },
  components: {
    iButton: _button.default
  },
  mixins: [_popper.default, _locale.default],
  props: {
    cancelText: {
      default: undefined,
      type: String
    },
    confirm: {
      default: false,
      type: Boolean
    },
    content: {
      default: '',
      type: [String, Number]
    },
    okText: {
      default: undefined,
      type: String
    },
    placement: {
      default: 'top',
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['top', 'top-start', 'top-end', 'bottom', 'bottom-start', 'bottom-end', 'left', 'left-start', 'left-end', 'right', 'right-start', 'right-end']);
      }
    },
    popperClass: {
      default: undefined,
      type: String
    },
    title: {
      default: undefined,
      type: [String, Number]
    },
    transfer: {
      default: false,
      type: Boolean
    },
    trigger: {
      default: 'click',
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['click', 'focus', 'hover']);
      }
    },
    width: {
      default: undefined,
      type: [String, Number]
    }
  },
  data: function data() {
    return {
      // transfer 模式下，点击 slot 也会触发关闭
      disableCloseUnderTransfer: false,
      isInput: false,
      prefixCls: prefixCls,
      showTitle: true
    };
  },
  computed: {
    classes: function classes() {
      return ["".concat(prefixCls), (0, _defineProperty2.default)({}, "".concat(prefixCls, "-confirm"), this.confirm)];
    },
    localeCancelText: function localeCancelText() {
      if (this.cancelText === undefined) {
        return this.t('i.poptip.cancelText');
      }

      return this.cancelText;
    },
    localeOkText: function localeOkText() {
      if (this.okText === undefined) {
        return this.t('i.poptip.okText');
      }

      return this.okText;
    },
    popperClasses: function popperClasses() {
      var _ref2;

      return ["".concat(prefixCls, "-popper"), (_ref2 = {}, (0, _defineProperty2.default)(_ref2, "".concat(prefixCls, "-confirm"), this.transfer && this.confirm), (0, _defineProperty2.default)(_ref2, "".concat(this.popperClass), !!this.popperClass), _ref2)];
    },
    styles: function styles() {
      var style = {};

      if (this.width) {
        style.width = "".concat(this.width, "px");
      }

      return style;
    }
  },
  mounted: function mounted() {
    var _this = this;

    if (!this.confirm) {
      //                this.showTitle = this.$refs.title.innerHTML != `<div class="${prefixCls}-title-inner"></div>`;
      this.showTitle = this.$slots.title !== undefined || this.title;
    } // if trigger and children is input or textarea,listen focus & blur event


    if (this.trigger === 'focus') {
      this.$nextTick(function () {
        (0, _newArrowCheck2.default)(this, _this);
        var $children = this.getInputChildren();

        if ($children) {
          this.isInput = true;
          $children.addEventListener('focus', this.handleFocus, false);
          $children.addEventListener('blur', this.handleBlur, false);
        }
      }.bind(this));
    }
  },
  beforeDestroy: function beforeDestroy() {
    var $children = this.getInputChildren();

    if ($children) {
      $children.removeEventListener('focus', this.handleFocus, false);
      $children.removeEventListener('blur', this.handleBlur, false);
    }
  },
  methods: {
    cancel: function cancel() {
      this.visible = false;
      this.$emit('on-cancel');
    },
    getInputChildren: function getInputChildren() {
      var $input = this.$refs.reference.querySelectorAll('input');
      var $textarea = this.$refs.reference.querySelectorAll('textarea');
      var $children = null;

      if ($input.length) {
        $children = (0, _head.default)($input);
      } else if ($textarea.length) {
        $children = (0, _head.default)($textarea);
      }

      return $children;
    },
    handleBlur: function handleBlur() {
      var fromInput = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

      if (this.trigger !== 'focus' || this.confirm || this.isInput && !fromInput) {
        return;
      }

      this.visible = false;
    },
    handleClick: function handleClick() {
      if (this.confirm) {
        this.visible = !this.visible;
        return true;
      }

      if (this.trigger !== 'click') {
        return false;
      }

      this.visible = !this.visible;
      return false;
    },
    handleClose: function handleClose() {
      if (this.disableCloseUnderTransfer) {
        this.disableCloseUnderTransfer = false;
        return false;
      }

      if (this.confirm) {
        this.visible = false;
        return true;
      }

      if (this.trigger !== 'click') {
        return false;
      }

      this.visible = false;
      return false;
    },
    handleFocus: function handleFocus() {
      var fromInput = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

      if (this.trigger !== 'focus' || this.confirm || this.isInput && !fromInput) {
        return;
      }

      this.visible = true;
    },
    handleMouseenter: function handleMouseenter() {
      var _this2 = this;

      if (this.trigger !== 'hover' || this.confirm) {
        return;
      }

      if (this.enterTimer) {
        clearTimeout(this.enterTimer);
      }

      this.enterTimer = setTimeout(function () {
        (0, _newArrowCheck2.default)(this, _this2);
        this.visible = true;
      }.bind(this), 100);
    },
    handleMouseleave: function handleMouseleave() {
      var _this3 = this;

      if (this.trigger !== 'hover' || this.confirm) {
        return;
      }

      if (this.enterTimer) {
        clearTimeout(this.enterTimer);
        this.enterTimer = setTimeout(function () {
          (0, _newArrowCheck2.default)(this, _this3);
          this.visible = false;
        }.bind(this), 100);
      }
    },
    handleTransferClick: function handleTransferClick() {
      if (this.transfer) {
        this.disableCloseUnderTransfer = true;
      }
    },
    ok: function ok() {
      this.visible = false;
      this.$emit('on-ok');
    }
  }
};
exports.default = _default;

/***/ }),
/* 191 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_progress_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(192);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_progress_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_progress_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_progress_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_progress_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_progress_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _icon = _interopRequireDefault(__webpack_require__(19));

var _assist = __webpack_require__(6);

var logger = __webpack_require__(0).get("iview:components:progress:progress.vue");

var prefixCls = 'ivu-progress';
var _default = {
  components: {
    Icon: _icon.default
  },
  props: {
    hideInfo: {
      default: false,
      type: Boolean
    },
    percent: {
      default: 0,
      type: Number
    },
    status: {
      default: 'normal',
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['normal', 'active', 'wrong', 'success']);
      }
    },
    strokeWidth: {
      default: 10,
      type: Number
    },
    vertical: {
      default: false,
      type: Boolean
    }
  },
  data: function data() {
    return {
      currentStatus: this.status
    };
  },
  computed: {
    bgClasses: function bgClasses() {
      return "".concat(prefixCls, "-bg");
    },
    bgStyle: function bgStyle() {
      return this.vertical ? {
        height: "".concat(this.percent, "%"),
        width: "".concat(this.strokeWidth, "px")
      } : {
        height: "".concat(this.strokeWidth, "px"),
        width: "".concat(this.percent, "%")
      };
    },
    innerClasses: function innerClasses() {
      return "".concat(prefixCls, "-inner");
    },
    isStatus: function isStatus() {
      return this.currentStatus === 'wrong' || this.currentStatus === 'success';
    },
    outerClasses: function outerClasses() {
      return "".concat(prefixCls, "-outer");
    },
    statusIcon: function statusIcon() {
      var type = '';

      switch (this.currentStatus) {
        case 'wrong':
          type = 'ios-close';
          break;

        case 'success':
          type = 'ios-checkmark';
          break;

        default:
      }

      return type;
    },
    textClasses: function textClasses() {
      return "".concat(prefixCls, "-text");
    },
    textInnerClasses: function textInnerClasses() {
      return "".concat(prefixCls, "-text-inner");
    },
    wrapClasses: function wrapClasses() {
      var _ref;

      return ["".concat(prefixCls), "".concat(prefixCls, "-").concat(this.currentStatus), (_ref = {}, (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-show-info"), !this.hideInfo), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-vertical"), this.vertical), _ref)];
    }
  },
  watch: {
    percent: function percent(val, oldVal) {
      if (val < oldVal) {
        this.handleStatus(true);
      } else {
        this.handleStatus();
      }
    },
    status: function status(val) {
      this.currentStatus = val;
    }
  },
  created: function created() {
    this.handleStatus();
  },
  methods: {
    handleStatus: function handleStatus(isDown) {
      if (isDown) {
        this.currentStatus = 'normal';
        this.$emit('on-status-change', 'normal');
      } else if (parseInt(this.percent, 10) === 100) {
        this.currentStatus = 'success';
        this.$emit('on-status-change', 'success');
      }
    }
  }
};
exports.default = _default;

/***/ }),
/* 193 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_radio_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(194);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_radio_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_radio_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_radio_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_radio_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_radio_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _assist = __webpack_require__(6);

var _emitter = _interopRequireDefault(__webpack_require__(9));

var logger = __webpack_require__(0).get("iview:components:radio:radio.vue");

var prefixCls = 'ivu-radio';
var _default = {
  name: 'Radio',
  mixins: [_emitter.default],
  props: {
    disabled: {
      default: false,
      type: Boolean
    },
    falseValue: {
      default: false,
      type: [String, Number, Boolean]
    },
    label: {
      default: undefined,
      type: [String, Number]
    },
    name: {
      default: undefined,
      type: String
    },
    size: {
      default: undefined,
      type: String,
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['small', 'large', 'default']);
      }
    },
    trueValue: {
      default: true,
      type: [String, Number, Boolean]
    },
    value: {
      default: false,
      type: [String, Number, Boolean]
    }
  },
  data: function data() {
    return {
      currentValue: this.value,
      focusInner: false,
      focusWrapper: false,
      group: false,
      groupName: this.name,
      parent: (0, _assist.findComponentUpward)(this, 'RadioGroup')
    };
  },
  computed: {
    innerClasses: function innerClasses() {
      return ["".concat(prefixCls, "-inner"), (0, _defineProperty2.default)({}, "".concat(prefixCls, "-focus"), this.focusInner)];
    },
    inputClasses: function inputClasses() {
      return "".concat(prefixCls, "-input");
    },
    radioClasses: function radioClasses() {
      var _ref2;

      return ["".concat(prefixCls), (_ref2 = {}, (0, _defineProperty2.default)(_ref2, "".concat(prefixCls, "-checked"), this.currentValue), (0, _defineProperty2.default)(_ref2, "".concat(prefixCls, "-disabled"), this.disabled), _ref2)];
    },
    wrapClasses: function wrapClasses() {
      var _ref3;

      return ["".concat(prefixCls, "-wrapper"), (_ref3 = {}, (0, _defineProperty2.default)(_ref3, "".concat(prefixCls, "-group-item"), this.group), (0, _defineProperty2.default)(_ref3, "".concat(prefixCls, "-wrapper-checked"), this.currentValue), (0, _defineProperty2.default)(_ref3, "".concat(prefixCls, "-wrapper-disabled"), this.disabled), (0, _defineProperty2.default)(_ref3, "".concat(prefixCls, "-").concat(this.size), !!this.size), (0, _defineProperty2.default)(_ref3, "".concat(prefixCls, "-focus"), this.focusWrapper), _ref3)];
    }
  },
  watch: {
    value: function value(val) {
      if (val === this.trueValue || val === this.falseValue) {
        this.updateValue();
      } else {
        throw new Error('Value should be trueValue or falseValue.');
      }
    }
  },
  mounted: function mounted() {
    if (this.parent) {
      this.group = true;

      if (this.name && this.name !== this.parent.name) {
        /* eslint-disable-next-line no-console */
        if (console.warn) {
          /* eslint-disable-next-line no-console */
          console.warn('[iview] Name does not match Radio Group name.');
        }
      } else {
        this.groupName = this.parent.name;
      }
    }

    if (this.group) {
      this.parent.updateValue();
    } else {
      this.updateValue();
    }
  },
  methods: {
    change: function change(event) {
      if (this.disabled) {
        return;
      }

      var checked = event.target.checked;
      this.currentValue = checked;
      var value = checked ? this.trueValue : this.falseValue;
      this.$emit('input', value);

      if (this.group) {
        if (this.label !== undefined) {
          this.parent.change({
            checked: this.value,
            value: this.label
          });
        }
      } else {
        this.$emit('on-change', value);
        this.dispatch('FormItem', 'on-form-change', value);
      }
    },
    onBlur: function onBlur() {
      this.focusWrapper = false;
      this.focusInner = false;
    },
    onFocus: function onFocus() {
      if (this.group && this.parent.type === 'button') {
        this.focusWrapper = true;
      } else {
        this.focusInner = true;
      }
    },
    updateValue: function updateValue() {
      this.currentValue = this.value === this.trueValue;
    }
  }
};
exports.default = _default;

/***/ }),
/* 195 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_radio_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(196);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_radio_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_radio_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_radio_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_radio_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_radio_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _assist = __webpack_require__(6);

var _emitter = _interopRequireDefault(__webpack_require__(9));

var _this = void 0;

var logger = __webpack_require__(0).get("iview:components:radio:radio-group.vue");

var prefixCls = 'ivu-radio-group';
var seed = 0;
var now = Date.now();

var getUuid = function getUuid() {
  (0, _newArrowCheck2.default)(this, _this);
  var value = "ivuRadioGroup_".concat(now, "_").concat(seed += 1);
  seed += 1;
  return value;
}.bind(void 0);

var _default = {
  name: 'RadioGroup',
  mixins: [_emitter.default],
  props: {
    name: {
      default: getUuid,
      type: String
    },
    size: {
      default: undefined,
      type: String,
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['small', 'large', 'default']);
      }
    },
    type: {
      default: undefined,
      type: String,
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['button']);
      }
    },
    value: {
      default: '',
      type: [String, Number]
    },
    vertical: {
      default: false,
      type: Boolean
    }
  },
  data: function data() {
    return {
      childrens: [],
      currentValue: this.value
    };
  },
  computed: {
    classes: function classes() {
      var _ref;

      return ["".concat(prefixCls), (_ref = {}, (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-").concat(this.size), !!this.size), (0, _defineProperty2.default)(_ref, "ivu-radio-".concat(this.size), !!this.size), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-").concat(this.type), !!this.type), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-vertical"), this.vertical), _ref)];
    }
  },
  watch: {
    value: function value() {
      if (this.currentValue !== this.value) {
        this.currentValue = this.value;
        this.updateValue();
      }
    }
  },
  mounted: function mounted() {
    this.updateValue();
  },
  methods: {
    change: function change(data) {
      this.currentValue = data.value;
      this.updateValue();
      this.$emit('input', data.value);
      this.$emit('on-change', data.value);
      this.dispatch('FormItem', 'on-form-change', data.value);
    },
    updateValue: function updateValue() {
      var _this2 = this;

      this.childrens = (0, _assist.findComponentsDownward)(this, 'Radio');

      if (this.childrens) {
        this.childrens.forEach(function (child) {
          (0, _newArrowCheck2.default)(this, _this2);
          child.currentValue = this.currentValue === child.label;
          child.group = true;
        }.bind(this));
      }
    }
  }
};
exports.default = _default;

/***/ }),
/* 197 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_rate_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(198);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_rate_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_rate_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_rate_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_rate_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_rate_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _locale = _interopRequireDefault(__webpack_require__(10));

var _emitter = _interopRequireDefault(__webpack_require__(9));

var logger = __webpack_require__(0).get("iview:components:rate:rate.vue");

var prefixCls = 'ivu-rate';
var _default = {
  name: 'Rate',
  mixins: [_locale.default, _emitter.default],
  props: {
    allowHalf: {
      default: false,
      type: Boolean
    },
    clearable: {
      default: false,
      type: Boolean
    },
    count: {
      default: 5,
      type: Number
    },
    disabled: {
      default: false,
      type: Boolean
    },
    name: {
      default: undefined,
      type: String
    },
    showText: {
      default: false,
      type: Boolean
    },
    value: {
      default: 0,
      type: Number
    }
  },
  data: function data() {
    return {
      currentValue: this.value,
      hoverIndex: -1,
      isHalf: this.allowHalf && this.value.toString().indexOf('.') >= 0,
      isHover: false,
      prefixCls: prefixCls
    };
  },
  computed: {
    classes: function classes() {
      return ["".concat(prefixCls), (0, _defineProperty2.default)({}, "".concat(prefixCls, "-disabled"), this.disabled)];
    }
  },
  watch: {
    currentValue: function currentValue(val) {
      this.setHalf(val);
    },
    value: function value(val) {
      this.currentValue = val;
    }
  },
  methods: {
    handleClick: function handleClick(item) {
      if (this.disabled) {
        return;
      }

      var value = item; // value++;

      if (this.isHalf) {
        value -= 0.5;
      }

      if (this.clearable && Math.abs(value - this.currentValue) < 0.01) {
        value = 0;
      }

      this.currentValue = value;
      this.$emit('input', value);
      this.$emit('on-change', value);
      this.dispatch('FormItem', 'on-form-change', value);
    },
    handleMouseleave: function handleMouseleave() {
      if (this.disabled) {
        return;
      }

      this.isHover = false;
      this.setHalf(this.currentValue);
      this.hoverIndex = -1;
    },
    handleMousemove: function handleMousemove(value, event) {
      if (this.disabled) {
        return;
      }

      this.isHover = true;

      if (this.allowHalf) {
        var type = event.target.getAttribute('type') || false;
        this.isHalf = type === 'half';
      } else {
        this.isHalf = false;
      }

      this.hoverIndex = value;
    },
    setHalf: function setHalf(val) {
      this.isHalf = this.allowHalf && val.toString().indexOf('.') >= 0;
    },
    starCls: function starCls(value) {
      var _ref2;

      var hoverIndex = this.hoverIndex;
      var currentIndex = this.isHover ? hoverIndex : this.currentValue;
      var full = false;
      var isLast = false;

      if (currentIndex >= value) {
        full = true;
      }

      if (this.isHover) {
        isLast = currentIndex === value;
      } else {
        isLast = Math.ceil(this.currentValue) === value;
      }

      return ["".concat(prefixCls, "-star"), (_ref2 = {}, (0, _defineProperty2.default)(_ref2, "".concat(prefixCls, "-star-full"), !isLast && full || isLast && !this.isHalf), (0, _defineProperty2.default)(_ref2, "".concat(prefixCls, "-star-half"), isLast && this.isHalf), (0, _defineProperty2.default)(_ref2, "".concat(prefixCls, "-star-zero"), !full), _ref2)];
    }
  }
};
exports.default = _default;

/***/ }),
/* 199 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_Richtext_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(200);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_Richtext_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_Richtext_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_Richtext_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_Richtext_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_Richtext_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _vue = _interopRequireDefault(__webpack_require__(5));

var _icon = __webpack_require__(19);

var _isProduction = _interopRequireDefault(__webpack_require__(377));

var _not = _interopRequireDefault(__webpack_require__(7));

var _deepFreeze = _interopRequireDefault(__webpack_require__(608));

__webpack_require__(609);

__webpack_require__(610);

var _Object$create;

var logger = __webpack_require__(0).get("iview:components:richtext:Richtext.vue");

var prefixCls = 'byx-richtext';
var NAME = 'Richtext';
var DEFAULT_LANG = 'sv';
var INPUT = 'input';
var CALLBACKS = 'callbacks';
var EMPTY_STRING = '';
var BOLD = 'bold';
var ITALIC = 'italic';
var UNDERLINE = 'underline';
var LINK = 'link';
var HTML = 'html';
var CODE = 'code';
var BUTTONS_ICON_MAP = Object.create(null, (_Object$create = {}, (0, _defineProperty2.default)(_Object$create, BOLD, {
  enumerable: true,
  value: BOLD
}), (0, _defineProperty2.default)(_Object$create, ITALIC, {
  enumerable: true,
  value: ITALIC
}), (0, _defineProperty2.default)(_Object$create, UNDERLINE, {
  enumerable: true,
  value: UNDERLINE
}), (0, _defineProperty2.default)(_Object$create, LINK, {
  enumerable: true,
  value: LINK
}), (0, _defineProperty2.default)(_Object$create, HTML, {
  enumerable: true,
  value: CODE
}), _Object$create));
var BUTTONS = Object.freeze([BOLD, ITALIC, UNDERLINE, LINK, HTML]);
var buttons = (0, _deepFreeze.default)(JSON.parse(JSON.stringify($R.buttons)));
var _default = {
  name: NAME,
  redactor: false,
  props: {
    config: {
      default: undefined,
      type: Object
    },
    disabled: {
      default: false,
      type: Boolean
    },
    placeholder: {
      default: undefined,
      type: String
    },
    value: {
      default: EMPTY_STRING,
      type: String
    }
  },
  data: function data() {
    return {
      buttonIconHtmlMap: null,
      options: this.config || {
        air: true,
        buttons: BUTTONS,
        lang: DEFAULT_LANG,
        placeholder: this.placeholder,
        styles: false,
        source: (0, _not.default)(_isProduction.default),
        tabindex: 0,
        tabKey: false
      },
      prefixCls: prefixCls
    };
  },
  computed: {
    editorState: function editorState() {
      return this.disabled ? 'module.editor.disable' : 'module.editor.enable';
    }
  },
  watch: {
    editorState: function editorState() {
      this.redactor.api(this.editorState);
    },
    value: function value(newValue) {
      if ((0, _not.default)(this.redactor.editor.isFocus())) {
        this.redactor.source.setCode(newValue);
      }
    }
  },
  created: function created() {
    this.buttonIconHtmlMap = this.getButtonHTMLMap();
  },
  mounted: function mounted() {
    this.init();
  },
  methods: {
    getButtonHTMLMap: function getButtonHTMLMap() {
      var _this = this;

      return BUTTONS.reduce(function (accumulator, button) {
        (0, _newArrowCheck2.default)(this, _this);
        return Object.defineProperty(accumulator, button, {
          enumerable: true,
          value: (0, _icon.getIconAsHTML)({
            fw: true,
            type: BUTTONS_ICON_MAP[button]
          })
        });
      }.bind(this), Object.create(null));
    },
    getCallbacks: function getCallbacks() {
      var _this2 = this;

      return {
        changed: function changed(html) {
          (0, _newArrowCheck2.default)(this, _this2);
          this.handleInput(html);
          return html;
        }.bind(this)
      };
    },
    handleInput: function handleInput(val) {
      this.$emit(INPUT, val);
    },
    init: function init() {
      // extend config
      _vue.default.set(this.options, CALLBACKS, this.getCallbacks()); // call Redactor


      var app = $R(this.$refs.redactor, this.options); // set instance

      this.redactor = app;
      this.$parent.redactor = app;
      this.redactor.api(this.editorState);
      this.setButtonIcons();
    },
    setButtonIcons: function setButtonIcons() {
      var _this3 = this;

      BUTTONS.forEach(function (button) {
        (0, _newArrowCheck2.default)(this, _this3);
        var reButton = this.redactor.toolbar.getButton(button);
        reButton.setIcon(this.buttonIconHtmlMap[button]);
        var _buttons$button = buttons[button],
            tooltip = _buttons$button.tooltip,
            title = _buttons$button.title;
        reButton.setTooltip(this.redactor.lang.parse(tooltip || title));
      }.bind(this));
    }
  }
};
exports.default = _default;

/***/ }),
/* 201 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_slider_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(202);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_slider_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_slider_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_slider_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_slider_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_slider_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _slicedToArray2 = _interopRequireDefault(__webpack_require__(20));

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(15));

var _head = _interopRequireDefault(__webpack_require__(418));

var _at = _interopRequireDefault(__webpack_require__(614));

var _inputNumber = _interopRequireDefault(__webpack_require__(411));

var _tooltip = _interopRequireDefault(__webpack_require__(421));

var _assist = __webpack_require__(6);

var _dom = __webpack_require__(18);

var _emitter = _interopRequireDefault(__webpack_require__(9));

var logger = __webpack_require__(0).get("iview:components:slider:slider.vue");

var prefixCls = 'ivu-slider';
var _default2 = {
  name: 'Slider',
  components: {
    InputNumber: _inputNumber.default,
    Tooltip: _tooltip.default
  },
  mixins: [_emitter.default],
  props: {
    disabled: {
      default: false,
      type: Boolean
    },
    inputSize: {
      default: 'default',
      type: String,
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['small', 'large', 'default']);
      }
    },
    max: {
      default: 100,
      type: Number
    },
    min: {
      default: 0,
      type: Number
    },
    name: {
      default: undefined,
      type: String
    },
    range: {
      default: false,
      type: Boolean
    },
    showInput: {
      default: false,
      type: Boolean
    },
    showStops: {
      default: false,
      type: Boolean
    },
    showTip: {
      default: 'hover',
      type: String,
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['hover', 'always', 'never']);
      }
    },
    step: {
      default: 1,
      type: Number
    },
    tipFormat: {
      default: function _default(val) {
        return val;
      },
      type: Function
    },
    value: {
      default: 0,
      type: [Number, Array]
    }
  },
  data: function data() {
    var val = this.checkLimits(Array.isArray(this.value) ? this.value : [this.value]);
    return {
      currentValue: val,
      currentX: 0,
      dragging: false,
      oldValue: (0, _toConsumableArray2.default)(val),
      pointerDown: '',
      prefixCls: prefixCls,
      startPos: 0,
      startX: 0,
      valueIndex: {
        max: 1,
        min: 0
      }
    };
  },
  computed: {
    barStyle: function barStyle() {
      var style = {
        width: "".concat((this.currentValue[0] - this.min) / this.valueRange * 100, "%")
      };

      if (this.range) {
        style.left = "".concat((this.currentValue[0] - this.min) / this.valueRange * 100, "%");
        style.width = "".concat((this.currentValue[1] - this.currentValue[0]) / this.valueRange * 100, "%");
      }

      return style;
    },
    classes: function classes() {
      var _ref;

      return ["".concat(prefixCls), (_ref = {}, (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-input"), this.showInput && !this.range), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-range"), this.range), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-disabled"), this.disabled), _ref)];
    },
    exportValue: function exportValue() {
      var _this = this;

      var decimalCases = (String(this.step).split('.')[1] || '').length;
      return this.currentValue.map(function (nr) {
        (0, _newArrowCheck2.default)(this, _this);
        return Number(nr.toFixed(decimalCases));
      }.bind(this));
    },
    maxButtonClasses: function maxButtonClasses() {
      return ["".concat(prefixCls, "-button"), (0, _defineProperty2.default)({}, "".concat(prefixCls, "-button-dragging"), this.pointerDown === 'max')];
    },
    maxPosition: function maxPosition() {
      var val = this.currentValue;
      return (val[1] - this.min) / this.valueRange * 100;
    },
    minButtonClasses: function minButtonClasses() {
      return ["".concat(prefixCls, "-button"), (0, _defineProperty2.default)({}, "".concat(prefixCls, "-button-dragging"), this.pointerDown === 'min')];
    },
    minPosition: function minPosition() {
      var val = this.currentValue;
      return (val[0] - this.min) / this.valueRange * 100;
    },
    sliderWidth: function sliderWidth() {
      return parseInt((0, _assist.getStyle)(this.$refs.slider, 'width'), 10);
    },
    stops: function stops() {
      var stopCount = this.valueRange / this.step;
      var result = [];
      var stepWidth = 100 * this.step / this.valueRange;

      for (var i = 1; i < stopCount; i += 1) {
        result.push(i * stepWidth);
      }

      return result;
    },
    tipDisabled: function tipDisabled() {
      return this.tipFormat(this.currentValue[0]) === null || this.showTip === 'never';
    },
    valueRange: function valueRange() {
      return this.max - this.min;
    }
  },
  watch: {
    exportValue: function exportValue(values) {
      var _this2 = this;

      this.$nextTick(function () {
        (0, _newArrowCheck2.default)(this, _this2);
        this.$refs.minTooltip.updatePopper();

        if (this.range) {
          this.$refs.maxTooltip.updatePopper();
        }
      }.bind(this));
      var value = this.range ? values : values[0];
      this.$emit('input', value);
      this.$emit('on-input', value);
    },
    value: function value(_value) {
      var val = this.checkLimits(Array.isArray(_value) ? _value : [_value]);

      if (val[0] !== this.currentValue[0] || val[1] !== this.currentValue[1]) {
        this.currentValue = val;
      }
    }
  },
  mounted: function mounted() {
    var _this3 = this;

    // #2852
    this.$on('on-visible-change', function (val) {
      var _this4 = this;

      (0, _newArrowCheck2.default)(this, _this3);

      if (val && this.showTip === 'always') {
        this.$refs.minTooltip.doDestroy();

        if (this.range) {
          this.$refs.maxTooltip.doDestroy();
        }

        this.$nextTick(function () {
          (0, _newArrowCheck2.default)(this, _this4);
          this.$refs.minTooltip.updatePopper();

          if (this.range) {
            this.$refs.maxTooltip.updatePopper();
          }
        }.bind(this));
      }
    }.bind(this));
  },
  methods: {
    changeButtonPosition: function changeButtonPosition(newPosition, forceType) {
      var newPos = newPosition;
      var type = forceType || this.pointerDown;
      var index = type === 'min' ? 0 : 1;

      if (type === 'min') {
        newPos = (0, _head.default)(this.checkLimits([newPos, this.max]));
      } else {
        newPos = (0, _at.default)(this.checkLimits([this.min, newPos]), 1);
      }

      var modulus = this.handleDecimal(newPos, this.step);
      var value = this.currentValue;
      value[index] = newPos - modulus;
      this.currentValue = (0, _toConsumableArray2.default)(value);

      if (!this.dragging) {
        if (this.currentValue[index] !== this.oldValue[index]) {
          this.emitChange();
          this.oldValue[index] = this.currentValue[index];
        }
      }
    },
    checkLimits: function checkLimits(_ref4) {
      var _ref5 = (0, _slicedToArray2.default)(_ref4, 2),
          minimum = _ref5[0],
          maximum = _ref5[1];

      var min = Math.max(this.min, minimum);
      min = Math.min(this.max, min);
      var max = Math.max(this.min, min, maximum);
      max = Math.min(this.max, max);
      return [min, max];
    },
    emitChange: function emitChange() {
      var value = this.range ? this.exportValue : (0, _head.default)(this.exportValue);
      this.$emit('on-change', value);
      this.dispatch('FormItem', 'on-form-change', value);
    },
    getCurrentValue: function getCurrentValue(event, type) {
      if (this.disabled) {
        return undefined;
      }

      var index = this.valueIndex[type];

      if (typeof index === 'undefined') {
        return undefined;
      }

      return this.currentValue[index];
    },
    getPointerX: function getPointerX(e) {
      return e.type.indexOf('touch') !== -1 ? e.touches[0].clientX : e.clientX;
    },
    handleBlur: function handleBlur(type) {
      this.$refs["".concat(type, "Tooltip")].handleClosePopper();
    },
    handleDecimal: function handleDecimal(pos, step) {
      if (step < 1) {
        var sl = step.toString();
        var multiple = 1;
        var m;

        try {
          m = sl.split('.')[1].length;
        } catch (e) {
          m = 0;
        }

        multiple = Math.pow(10, m);
        return pos * multiple % (step * multiple) / multiple;
      }

      return pos % step;
    },
    handleFocus: function handleFocus(type) {
      this.$refs["".concat(type, "Tooltip")].handleShowPopper();
    },
    handleInputChange: function handleInputChange(val) {
      this.currentValue = [val, this.currentValue[1]];
      this.emitChange();
    },
    onKeydown: function onKeydown(event, range) {
      var key = event.key;

      if ((0, _assist.oneOf)(key, ['Up', 'ArrowUp'])) {
        this.onKeyRight(event, range);
      } else if ((0, _assist.oneOf)(key, ['Down', 'ArrowDown'])) {
        this.onKeyLeft(event, range);
      } else if ((0, _assist.oneOf)(key, ['Left', 'ArrowLeft'])) {
        this.onKeyLeft(event, range);
      } else if ((0, _assist.oneOf)(key, ['Right', 'ArrowRight'])) {
        this.onKeyRight(event, range);
      }
    },
    onKeyLeft: function onKeyLeft(event, type) {
      var value = this.getCurrentValue(event, type);

      if (Number.isFinite(value)) {
        this.changeButtonPosition(value - this.step, type);
      }
    },
    onKeyRight: function onKeyRight(event, type) {
      var value = this.getCurrentValue(event, type);

      if (Number.isFinite(value)) {
        this.changeButtonPosition(value + this.step, type);
      }
    },
    onPointerDown: function onPointerDown(event, type) {
      if (this.disabled) {
        return;
      }

      event.preventDefault();
      this.pointerDown = type;
      this.onPointerDragStart(event);
      (0, _dom.on)(window, 'mousemove', this.onPointerDrag);
      (0, _dom.on)(window, 'touchmove', this.onPointerDrag);
      (0, _dom.on)(window, 'mouseup', this.onPointerDragEnd);
      (0, _dom.on)(window, 'touchend', this.onPointerDragEnd);
    },
    onPointerDrag: function onPointerDrag(event) {
      this.dragging = true;
      this.$refs["".concat(this.pointerDown, "Tooltip")].visible = true;
      this.currentX = this.getPointerX(event);
      var diff = (this.currentX - this.startX) / this.sliderWidth * this.valueRange;
      this.changeButtonPosition(this.startPos + diff);
    },
    onPointerDragEnd: function onPointerDragEnd() {
      if (this.dragging) {
        this.dragging = false;
        this.$refs["".concat(this.pointerDown, "Tooltip")].visible = false;
        this.emitChange();
      }

      this.pointerDown = '';
      (0, _dom.off)(window, 'mousemove', this.onPointerDrag);
      (0, _dom.off)(window, 'touchmove', this.onPointerDrag);
      (0, _dom.off)(window, 'mouseup', this.onPointerDragEnd);
      (0, _dom.off)(window, 'touchend', this.onPointerDragEnd);
    },
    onPointerDragStart: function onPointerDragStart(event) {
      this.dragging = false;
      this.startX = this.getPointerX(event);
      this.startPos = this["".concat(this.pointerDown, "Position")] * this.valueRange / 100 + this.min;
    },
    sliderClick: function sliderClick(event) {
      if (this.disabled) {
        return;
      }

      var currentX = this.getPointerX(event);
      var sliderOffsetLeft = this.$refs.slider.getBoundingClientRect().left;
      var newPos = (currentX - sliderOffsetLeft) / this.sliderWidth * this.valueRange + this.min;

      if (!this.range || newPos <= this.minPosition) {
        this.changeButtonPosition(newPos, 'min');
      } else if (newPos >= this.maxPosition) {
        this.changeButtonPosition(newPos, 'max');
      } else {
        this.changeButtonPosition(newPos, newPos - this.firstPosition <= this.secondPosition - newPos ? 'min' : 'max');
      }
    }
  }
};
exports.default = _default2;

/***/ }),
/* 203 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_tooltip_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(204);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_tooltip_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_tooltip_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_tooltip_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_tooltip_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_tooltip_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _popper = _interopRequireDefault(__webpack_require__(419));

var _transferDom = _interopRequireDefault(__webpack_require__(21));

var _assist = __webpack_require__(6);

var logger = __webpack_require__(0).get("iview:components:tooltip:tooltip.vue");

var prefixCls = 'ivu-tooltip';
var _default = {
  name: 'Tooltip',
  directives: {
    TransferDom: _transferDom.default
  },
  mixins: [_popper.default],
  props: {
    always: {
      default: false,
      type: Boolean
    },
    content: {
      default: '',
      type: [String, Number]
    },
    controlled: {
      default: false,
      // under this prop,Tooltip will not close when mouseleave
      type: Boolean
    },
    delay: {
      default: 100,
      type: Number
    },
    disabled: {
      default: false,
      type: Boolean
    },
    placement: {
      default: 'bottom',
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['top', 'top-start', 'top-end', 'bottom', 'bottom-start', 'bottom-end', 'left', 'left-start', 'left-end', 'right', 'right-start', 'right-end']);
      }
    },
    transfer: {
      default: false,
      type: Boolean
    }
  },
  data: function data() {
    return {
      prefixCls: prefixCls
    };
  },
  watch: {
    content: function content() {
      this.updatePopper();
    }
  },
  mounted: function mounted() {
    if (this.always) {
      this.updatePopper();
    }
  },
  methods: {
    handleClosePopper: function handleClosePopper() {
      var _this = this;

      if (this.timeout) {
        clearTimeout(this.timeout);

        if (!this.controlled) {
          this.timeout = setTimeout(function () {
            (0, _newArrowCheck2.default)(this, _this);
            this.visible = false;
          }.bind(this), 100);
        }
      }
    },
    handleShowPopper: function handleShowPopper() {
      var _this2 = this;

      if (this.timeout) {
        clearTimeout(this.timeout);
      }

      this.timeout = setTimeout(function () {
        (0, _newArrowCheck2.default)(this, _this2);
        this.visible = true;
      }.bind(this), this.delay);
    }
  }
};
exports.default = _default;

/***/ }),
/* 205 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_spin_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(206);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_spin_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_spin_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_spin_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_spin_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_spin_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _assist = __webpack_require__(6);

var _mixinsScrollbar = _interopRequireDefault(__webpack_require__(416));

var logger = __webpack_require__(0).get("iview:components:spin:spin.vue");

var prefixCls = 'ivu-spin';
var _default = {
  name: 'Spin',
  mixins: [_mixinsScrollbar.default],
  props: {
    fix: {
      default: false,
      type: Boolean
    },
    fullscreen: {
      default: false,
      type: Boolean
    },
    size: {
      default: undefined,
      type: String,
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['small', 'large']);
      }
    }
  },
  data: function data() {
    return {
      showText: false,
      // used for $Spin
      visible: false
    };
  },
  computed: {
    classes: function classes() {
      var _ref;

      return ["".concat(prefixCls), (_ref = {}, (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-").concat(this.size), !!this.size), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-fix"), this.fix), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-show-text"), this.showText), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-fullscreen"), this.fullscreen), _ref)];
    },
    dotClasses: function dotClasses() {
      return "".concat(prefixCls, "-dot");
    },
    fullscreenVisible: function fullscreenVisible() {
      if (this.fullscreen) {
        return this.visible;
      }

      return true;
    },
    mainClasses: function mainClasses() {
      return "".concat(prefixCls, "-main");
    },
    textClasses: function textClasses() {
      return "".concat(prefixCls, "-text");
    }
  },
  watch: {
    visible: function visible(val) {
      if (val) {
        this.addScrollEffect();
      } else {
        this.removeScrollEffect();
      }
    }
  },
  mounted: function mounted() {
    this.showText = this.$slots.default !== undefined;
  }
};
exports.default = _default;

/***/ }),
/* 207 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_steps_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(208);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_steps_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_steps_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_steps_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_steps_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_steps_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _assist = __webpack_require__(6);

var logger = __webpack_require__(0).get("iview:components:steps:steps.vue");

var prefixCls = 'ivu-steps';

function debounce(fn) {
  var waiting;
  return function _debounced() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (waiting) {
      return;
    }

    waiting = true;
    /* eslint-disable-next-line babel/no-invalid-this */

    var context = this;

    var later = function _later() {
      waiting = false;
      fn.apply(context, args);
    };
    /* eslint-disable-next-line babel/no-invalid-this */


    this.$nextTick(later);
  };
}

var _default = {
  name: 'Steps',
  props: {
    current: {
      default: 0,
      type: Number
    },
    direction: {
      default: 'horizontal',
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['horizontal', 'vertical']);
      }
    },
    size: {
      default: undefined,
      type: String,
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['small']);
      }
    },
    status: {
      default: 'process',
      type: String,
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['wait', 'process', 'finish', 'error']);
      }
    }
  },
  computed: {
    classes: function classes() {
      return ["".concat(prefixCls), "".concat(prefixCls, "-").concat(this.direction), (0, _defineProperty2.default)({}, "".concat(prefixCls, "-").concat(this.size), !!this.size)];
    }
  },
  watch: {
    current: function current() {
      this.updateChildProps();
    },
    status: function status() {
      this.updateCurrent();
    }
  },
  mounted: function mounted() {
    this.updateSteps();
    this.$on('append', this.debouncedAppendRemove());
    this.$on('remove', this.debouncedAppendRemove());
  },
  methods: {
    debouncedAppendRemove: function debouncedAppendRemove() {
      return debounce(function _debounced() {
        /* eslint-disable-next-line babel/no-invalid-this */
        this.updateSteps();
      });
    },
    setNextError: function setNextError() {
      var _this = this;

      this.$children.forEach(function (child, index) {
        (0, _newArrowCheck2.default)(this, _this);

        if (child.currentStatus === 'error' && index !== 0) {
          this.$children[index - 1].nextError = true;
        }
      }.bind(this));
    },
    updateChildProps: function updateChildProps(isInit) {
      var _this2 = this;

      var total = this.$children.length;
      this.$children.forEach(function (child, index) {
        (0, _newArrowCheck2.default)(this, _this2);
        child.stepNumber = index + 1;

        if (this.direction === 'horizontal') {
          child.total = total;
        } // 如果已存在status,且在初始化时,则略过
        // todo 如果当前是error,在current改变时需要处理


        if (!(isInit && child.currentStatus)) {
          if (index === this.current) {
            if (this.status !== 'error') {
              child.currentStatus = 'process';
            }
          } else if (index < this.current) {
            child.currentStatus = 'finish';
          } else {
            child.currentStatus = 'wait';
          }
        }

        if (child.currentStatus !== 'error' && index !== 0) {
          this.$children[index - 1].nextError = false;
        }
      }.bind(this));
    },
    updateCurrent: function updateCurrent(isInit) {
      // 防止溢出边界
      if (this.current < 0 || this.current >= this.$children.length) {
        return;
      }

      if (isInit) {
        var currentStatus = this.$children[this.current].currentStatus;

        if (!currentStatus) {
          this.$children[this.current].currentStatus = this.status;
        }
      } else {
        this.$children[this.current].currentStatus = this.status;
      }
    },
    updateSteps: function updateSteps() {
      this.updateChildProps(true);
      this.setNextError();
      this.updateCurrent(true);
    }
  }
};
exports.default = _default;

/***/ }),
/* 209 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_step_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(210);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_step_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_step_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_step_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_step_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_step_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _emitter = _interopRequireDefault(__webpack_require__(9));

var _assist = __webpack_require__(6);

var logger = __webpack_require__(0).get("iview:components:steps:step.vue");

var prefixCls = 'ivu-steps';
var iconPrefixCls = 'ivu-icon';
var _default = {
  name: 'Step',
  mixins: [_emitter.default],
  props: {
    content: {
      default: undefined,
      type: String
    },
    icon: {
      default: undefined,
      type: String
    },
    status: {
      default: undefined,
      type: String,
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['wait', 'process', 'finish', 'error']);
      }
    },
    title: {
      default: '',
      type: String
    }
  },
  data: function data() {
    return {
      currentStatus: '',
      nextError: false,
      prefixCls: prefixCls,
      stepNumber: '',
      total: 1
    };
  },
  computed: {
    iconClasses: function iconClasses() {
      var iconName = '';

      if (this.icon) {
        iconName = this.icon;
      } else if (this.currentStatus === 'finish') {
        iconName = 'ios-checkmark-empty';
      } else if (this.currentStatus === 'error') {
        iconName = 'ios-close-empty';
      }

      return ["".concat(prefixCls, "-icon"), "".concat(iconPrefixCls), (0, _defineProperty2.default)({}, "".concat(iconPrefixCls, "-").concat(iconName), iconName !== '')];
    },
    styles: function styles() {
      return {
        width: "".concat(1 / this.total * 100, "%")
      };
    },
    wrapClasses: function wrapClasses() {
      var _ref2;

      return ["".concat(prefixCls, "-item"), "".concat(prefixCls, "-status-").concat(this.currentStatus), (_ref2 = {}, (0, _defineProperty2.default)(_ref2, "".concat(prefixCls, "-custom"), !!this.icon), (0, _defineProperty2.default)(_ref2, "".concat(prefixCls, "-next-error"), this.nextError), _ref2)];
    }
  },
  watch: {
    status: function status(val) {
      this.currentStatus = val;

      if (this.currentStatus === 'error') {
        this.$parent.setNextError();
      }
    }
  },
  created: function created() {
    this.currentStatus = this.status;
  },
  mounted: function mounted() {
    this.dispatch('Steps', 'append');
  },
  beforeDestroy: function beforeDestroy() {
    this.dispatch('Steps', 'remove');
  }
};
exports.default = _default;

/***/ }),
/* 211 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_switch_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(212);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_switch_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_switch_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_switch_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_switch_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_switch_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _assist = __webpack_require__(6);

var _emitter = _interopRequireDefault(__webpack_require__(9));

var logger = __webpack_require__(0).get("iview:components:switch:switch.vue");

var prefixCls = 'ivu-switch';
var _default = {
  name: 'ISwitch',
  mixins: [_emitter.default],
  props: {
    disabled: {
      default: false,
      type: Boolean
    },
    falseValue: {
      default: false,
      type: [String, Number, Boolean]
    },
    name: {
      default: undefined,
      type: String
    },
    size: {
      default: undefined,
      type: String,
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['large', 'small', 'default']);
      }
    },
    trueValue: {
      default: true,
      type: [String, Number, Boolean]
    },
    value: {
      default: false,
      type: [String, Number, Boolean]
    }
  },
  data: function data() {
    return {
      currentValue: this.value
    };
  },
  computed: {
    innerClasses: function innerClasses() {
      return "".concat(prefixCls, "-inner");
    },
    wrapClasses: function wrapClasses() {
      var _ref;

      return ["".concat(prefixCls), (_ref = {}, (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-checked"), this.currentValue === this.trueValue), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-disabled"), this.disabled), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-").concat(this.size), !!this.size), _ref)];
    }
  },
  watch: {
    value: function value(val) {
      if (val !== this.trueValue && val !== this.falseValue) {
        throw new Error('Value should be trueValue or falseValue.');
      }

      this.currentValue = val;
    }
  },
  methods: {
    onKeydown: function onKeydown(event) {
      if ((0, _assist.oneOf)(event.key, [' ', 'Space', 'Spacebar'])) {
        this.toggle(event);
      }
    },
    toggle: function toggle(event) {
      event.preventDefault();

      if (this.disabled) {
        return;
      }

      var checked = this.currentValue === this.trueValue ? this.falseValue : this.trueValue;
      this.currentValue = checked;
      this.$emit('input', checked);
      this.$emit('on-change', checked);
      this.dispatch('FormItem', 'on-form-change', checked);
    }
  }
};
exports.default = _default;

/***/ }),
/* 213 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_table_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(214);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_table_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_table_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_table_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_table_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_table_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _stubArray = _interopRequireDefault(__webpack_require__(14));

var _get = _interopRequireDefault(__webpack_require__(26));

var _elementResizeDetector = _interopRequireDefault(__webpack_require__(423));

var _tableHead = _interopRequireDefault(__webpack_require__(636));

var _tableBody = _interopRequireDefault(__webpack_require__(638));

var _spin = _interopRequireDefault(__webpack_require__(422));

var _assist = __webpack_require__(6);

var _dom = __webpack_require__(18);

var _csv = _interopRequireDefault(__webpack_require__(641));

var _exportCsv = _interopRequireDefault(__webpack_require__(642));

var _locale = _interopRequireDefault(__webpack_require__(10));

var _util = __webpack_require__(643);

var logger = __webpack_require__(0).get("iview:components:table:table.vue");

var prefixCls = 'ivu-table';
var rowKey = 1;
var columnKey = 1;
var _default2 = {
  name: 'Table',
  components: {
    Spin: _spin.default,
    tableBody: _tableBody.default,
    tableHead: _tableHead.default
  },
  mixins: [_locale.default],
  props: {
    border: {
      default: false,
      type: Boolean
    },
    columns: {
      default: _stubArray.default,
      type: Array
    },
    context: {
      default: undefined,
      type: Object
    },
    data: {
      default: _stubArray.default,
      type: Array
    },
    disabledHover: {
      type: Boolean
    },
    height: {
      default: undefined,
      type: [Number, String]
    },
    highlightRow: {
      default: false,
      type: Boolean
    },
    loading: {
      default: false,
      type: Boolean
    },
    noDataText: {
      default: undefined,
      type: String
    },
    noFilteredDataText: {
      default: undefined,
      type: String
    },
    rowClassName: {
      default: function _default() {
        return '';
      },
      type: Function
    },
    showHeader: {
      default: true,
      type: Boolean
    },
    size: {
      default: undefined,
      type: String,
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['small', 'large', 'default']);
      }
    },
    stripe: {
      default: false,
      type: Boolean
    },
    width: {
      default: undefined,
      type: [Number, String]
    }
  },
  data: function data() {
    var colsWithId = this.makeColumnsId(this.columns);
    return {
      // for multiple table-head, get columns that have no children
      allColumns: (0, _util.getAllColumns)(colsWithId),
      bodyHeight: 0,
      cloneColumns: this.makeColumns(colsWithId),
      // when Cell has a button to delete row data, clickCurrentRow will throw an error, so clone a data
      cloneData: (0, _assist.deepCopy)(this.data),
      columnRows: this.makeColumnRows(false, colsWithId),
      columnsWidth: {},
      compiledUids: [],
      currentContext: this.context,
      headerHeight: 0,
      headerWidth: 0,
      leftFixedColumnRows: this.makeColumnRows('left', colsWithId),
      objData: this.makeObjData(),
      // checkbox or highlight-row
      prefixCls: prefixCls,
      ready: false,
      // for sort or filter
      rebuildData: [],
      rightFixedColumnRows: this.makeColumnRows('right', colsWithId),
      scrollBarWidth: (0, _assist.getScrollBarSize)(),
      showHorizontalScrollBar: false,
      showSlotFooter: true,
      showSlotHeader: true,
      showVerticalScrollBar: false,
      tableWidth: 0
    };
  },
  computed: {
    bodyStyle: function bodyStyle() {
      var style = {};

      if (this.bodyHeight !== 0) {
        var height = this.bodyHeight;
        style.height = "".concat(height, "px");
      }

      return style;
    },
    classes: function classes() {
      var _ref;

      return ["".concat(prefixCls), (_ref = {}, (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-").concat(this.size), !!this.size), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-border"), this.border), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-stripe"), this.stripe), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-with-fixed-top"), !!this.height), _ref)];
    },
    fixedBodyStyle: function fixedBodyStyle() {
      var style = {};

      if (this.bodyHeight !== 0) {
        var height = this.bodyHeight - (this.showHorizontalScrollBar ? this.scrollBarWidth : 0);
        style.height = this.showHorizontalScrollBar ? "".concat(height, "px") : "".concat(height - 1, "px");
      }

      return style;
    },
    fixedHeaderClasses: function fixedHeaderClasses() {
      return ["".concat(prefixCls, "-fixed-header"), (0, _defineProperty2.default)({}, "".concat(prefixCls, "-fixed-header-with-empty"), !this.rebuildData.length)];
    },
    fixedRightHeaderStyle: function fixedRightHeaderStyle() {
      var style = {};
      var width = 0;
      var height = this.headerHeight + 1;

      if (this.showVerticalScrollBar) {
        width = this.scrollBarWidth;
      }

      style.width = "".concat(width, "px");
      style.height = "".concat(height, "px");
      return style;
    },
    fixedRightTableStyle: function fixedRightTableStyle() {
      var _this = this;

      var style = {};
      var width = 0;
      this.rightFixedColumns.forEach(function (col) {
        (0, _newArrowCheck2.default)(this, _this);

        if (col.fixed && col.fixed === 'right') {
          /* eslint-disable-next-line no-underscore-dangle */
          width += col._width;
        }
      }.bind(this)); // width += this.scrollBarWidth;

      style.width = "".concat(width, "px");
      style.right = "".concat(this.showVerticalScrollBar ? this.scrollBarWidth : 0, "px");
      return style;
    },
    fixedTableStyle: function fixedTableStyle() {
      var _this2 = this;

      var style = {};
      var width = 0;
      this.leftFixedColumns.forEach(function (col) {
        (0, _newArrowCheck2.default)(this, _this2);

        if (col.fixed && col.fixed === 'left') {
          /* eslint-disable-next-line no-underscore-dangle */
          width += col._width;
        }
      }.bind(this));
      style.width = "".concat(width, "px");
      return style;
    },
    isLeftFixed: function isLeftFixed() {
      var _this3 = this;

      return this.columns.some(function (col) {
        (0, _newArrowCheck2.default)(this, _this3);
        return col.fixed && col.fixed === 'left';
      }.bind(this));
    },
    isRightFixed: function isRightFixed() {
      var _this4 = this;

      return this.columns.some(function (col) {
        (0, _newArrowCheck2.default)(this, _this4);
        return col.fixed && col.fixed === 'right';
      }.bind(this));
    },
    leftFixedColumns: function leftFixedColumns() {
      return (0, _util.convertColumnOrder)(this.cloneColumns, 'left');
    },
    localeNoDataText: function localeNoDataText() {
      if (this.noDataText === undefined) {
        return this.t('i.table.noDataText');
      }

      return this.noDataText;
    },
    localeNoFilteredDataText: function localeNoFilteredDataText() {
      if (this.noFilteredDataText === undefined) {
        return this.t('i.table.noFilteredDataText');
      }

      return this.noFilteredDataText;
    },
    rightFixedColumns: function rightFixedColumns() {
      return (0, _util.convertColumnOrder)(this.cloneColumns, 'right');
    },
    styles: function styles() {
      var style = {};

      if (this.height) {
        var height = parseInt(this.height, 10);
        style.height = "".concat(height, "px");
      }

      if (this.width) {
        style.width = "".concat(this.width, "px");
      }

      return style;
    },
    tableHeaderStyle: function tableHeaderStyle() {
      var style = {};

      if (this.tableWidth !== 0) {
        var width = '';
        width = this.tableWidth;
        style.width = "".concat(width, "px");
      }

      return style;
    },
    tableStyle: function tableStyle() {
      var style = {};

      if (this.tableWidth !== 0) {
        var width = '';

        if (this.bodyHeight === 0) {
          width = this.tableWidth;
        } else {
          width = this.tableWidth - (this.showVerticalScrollBar ? this.scrollBarWidth : 0);
        } //                    const width = this.bodyHeight === 0 ? this.tableWidth : this.tableWidth - this.scrollBarWidth;


        style.width = "".concat(width, "px");
      }

      return style;
    },
    wrapClasses: function wrapClasses() {
      var _ref3;

      return ["".concat(prefixCls, "-wrapper"), (_ref3 = {}, (0, _defineProperty2.default)(_ref3, "".concat(prefixCls, "-hide"), !this.ready), (0, _defineProperty2.default)(_ref3, "".concat(prefixCls, "-with-header"), this.showSlotHeader), (0, _defineProperty2.default)(_ref3, "".concat(prefixCls, "-with-footer"), this.showSlotFooter), _ref3)];
    }
  },
  watch: {
    columns: {
      deep: true,
      handler: function handler() {
        // todo 这里有性能问题，可能是左右固定计算属性影响的
        var colsWithId = this.makeColumnsId(this.columns);
        this.allColumns = (0, _util.getAllColumns)(colsWithId);
        this.cloneColumns = this.makeColumns(colsWithId);
        this.columnRows = this.makeColumnRows(false, colsWithId);
        this.leftFixedColumnRows = this.makeColumnRows('left', colsWithId);
        this.rightFixedColumnRows = this.makeColumnRows('right', colsWithId);
        this.rebuildData = this.makeDataWithSortAndFilter();
        this.handleResize();
      }
    },
    data: {
      deep: true,
      handler: function handler() {
        var _this5 = this;

        var oldDataLen = this.rebuildData.length;
        this.objData = this.makeObjData();
        this.rebuildData = this.makeDataWithSortAndFilter();
        this.handleResize();

        if (!oldDataLen) {
          this.fixedHeader();
        } // here will trigger before clickCurrentRow, so use async


        setTimeout(function () {
          (0, _newArrowCheck2.default)(this, _this5);
          this.cloneData = (0, _assist.deepCopy)(this.data);
        }.bind(this), 0);
      }
    },
    height: function height() {
      this.handleResize();
    },
    showHorizontalScrollBar: function showHorizontalScrollBar() {
      this.handleResize();
    },
    showVerticalScrollBar: function showVerticalScrollBar() {
      this.handleResize();
    }
  },
  created: function created() {
    if (!this.context) {
      this.currentContext = this.$parent;
    }

    this.showSlotHeader = this.$slots.header !== undefined;
    this.showSlotFooter = this.$slots.footer !== undefined;
    this.rebuildData = this.makeDataWithSortAndFilter();
  },
  mounted: function mounted() {
    var _this6 = this;

    this.handleResize();
    this.$nextTick(function () {
      (0, _newArrowCheck2.default)(this, _this6);
      this.ready = true;
    }.bind(this));
    (0, _dom.on)(window, 'resize', this.handleResize);
    this.observer = (0, _elementResizeDetector.default)();
    this.observer.listenTo(this.$el, this.handleResize);
    this.$on('on-visible-change', function (val) {
      (0, _newArrowCheck2.default)(this, _this6);

      if (val) {
        this.handleResize();
      }
    }.bind(this));
  },
  beforeDestroy: function beforeDestroy() {
    (0, _dom.off)(window, 'resize', this.handleResize);
    this.observer.removeListener(this.$el, this.handleResize);
  },
  methods: {
    clearCurrentRow: function clearCurrentRow() {
      if (!this.highlightRow) {
        return;
      }

      this.handleCurrentRow('clear');
    },
    clickCurrentRow: function clickCurrentRow(_index) {
      this.highlightCurrentRow(_index);
      /* eslint-disable-next-line no-underscore-dangle */

      this.$emit('on-row-click', JSON.parse(JSON.stringify(this.cloneData[_index])), _index);
    },
    dblclickCurrentRow: function dblclickCurrentRow(_index) {
      this.highlightCurrentRow(_index);
      /* eslint-disable-next-line no-underscore-dangle */

      this.$emit('on-row-dblclick', JSON.parse(JSON.stringify(this.cloneData[_index])), _index);
    },
    exportCsv: function exportCsv(params) {
      if (params.filename) {
        if (params.filename.indexOf('.csv') === -1) {
          params.filename += '.csv';
        }
      } else {
        params.filename = 'table.csv';
      }

      var columns = [];
      var datas = [];

      if (params.columns && params.data) {
        columns = (0, _get.default)(params, 'columns');
        datas = params.data;
      } else {
        columns = this.allColumns;

        if (!('original' in params)) {
          params.original = true;
        }

        datas = params.original ? this.data : this.rebuildData;
      }

      var noHeader = 'noHeader' in params && params.noHeader;
      var data = (0, _csv.default)(columns, datas, params, noHeader);

      if (params.callback) {
        params.callback(data);
      } else {
        _exportCsv.default.download(params.filename, data);
      }
    },
    filterData: function filterData(data, column) {
      var _this7 = this;

      return data.filter(function (row) {
        (0, _newArrowCheck2.default)(this, _this7);

        // 如果定义了远程过滤方法则忽略此方法
        if (typeof column.filterRemote === 'function') {
          return true;
        }
        /* eslint-disable-next-line no-underscore-dangle */


        var status = !column._filterChecked.length;
        /* eslint-disable-next-line no-underscore-dangle */

        for (var i = 0; i < column._filterChecked.length; i += 1) {
          /* eslint-disable-next-line no-underscore-dangle */
          status = column.filterMethod(column._filterChecked[i], row);

          if (status) {
            break;
          }
        }

        return status;
      }.bind(this));
    },
    filterOtherData: function filterOtherData(otherData, index) {
      var _this8 = this;

      var data = otherData;
      var column = this.cloneColumns[index];

      if (typeof column.filterRemote === 'function') {
        /* eslint-disable-next-line no-underscore-dangle */
        column.filterRemote.call(this.$parent, column._filterChecked, column.key, column);
      }

      this.cloneColumns.forEach(function (col, colIndex) {
        (0, _newArrowCheck2.default)(this, _this8);

        if (colIndex !== index) {
          data = this.filterData(data, col);
        }
      }.bind(this));
      return data;
    },
    fixedBody: function fixedBody() {
      if (this.$refs.header) {
        this.headerWidth = this.$refs.header.children[0].offsetWidth;
        this.headerHeight = this.$refs.header.children[0].offsetHeight; // this.showHorizontalScrollBar = this.headerWidth>this.$refs.header.offsetWidth;
      }

      if (!this.$refs.tbody || !this.data || this.data.length === 0) {
        this.showVerticalScrollBar = false;
      } else {
        var bodyContentEl = this.$refs.tbody.$el;
        var bodyEl = bodyContentEl.parentElement;
        var bodyContentHeight = bodyContentEl.offsetHeight;
        var bodyHeight = bodyEl.offsetHeight;
        this.showHorizontalScrollBar = bodyEl.offsetWidth < bodyContentEl.offsetWidth + (this.showVerticalScrollBar ? this.scrollBarWidth : 0);
        this.showVerticalScrollBar = this.bodyHeight ? bodyHeight - (this.showHorizontalScrollBar ? this.scrollBarWidth : 0) < bodyContentHeight : false;

        if (this.showVerticalScrollBar) {
          bodyEl.classList.add("".concat(this.prefixCls, "-overflowY"));
        } else {
          bodyEl.classList.remove("".concat(this.prefixCls, "-overflowY"));
        }

        if (this.showHorizontalScrollBar) {
          bodyEl.classList.add("".concat(this.prefixCls, "-overflowX"));
        } else {
          bodyEl.classList.remove("".concat(this.prefixCls, "-overflowX"));
        }
      }
    },
    fixedHeader: function fixedHeader() {
      var _this9 = this;

      if (this.height) {
        this.$nextTick(function () {
          var _this10 = this;

          (0, _newArrowCheck2.default)(this, _this9);
          var titleHeight = parseInt((0, _assist.getStyle)(this.$refs.title, 'height'), 10) || 0;
          var headerHeight = parseInt((0, _assist.getStyle)(this.$refs.header, 'height'), 10) || 0;
          var footerHeight = parseInt((0, _assist.getStyle)(this.$refs.footer, 'height'), 10) || 0;
          this.bodyHeight = this.height - titleHeight - headerHeight - footerHeight;
          this.$nextTick(function () {
            (0, _newArrowCheck2.default)(this, _this10);
            return this.fixedBody();
          }.bind(this));
        }.bind(this));
      } else {
        this.bodyHeight = 0;
        this.$nextTick(function () {
          (0, _newArrowCheck2.default)(this, _this9);
          return this.fixedBody();
        }.bind(this));
      }
    },

    /*
     * #2832
     * 应该区分当前表头的 column 是左固定还是右固定
     * 否则执行到 $parent 时，方法的 index 与 cloneColumns 的 index 是不对应的
     * 左固定和右固定，要区分对待
     * 所以，此方法用来获取正确的 index.
     */
    getOriginalIndex: function getOriginalIndex(_index) {
      var _this11 = this;

      /* eslint-disable-next-line no-underscore-dangle */
      return this.cloneColumns.findIndex(function (item) {
        (0, _newArrowCheck2.default)(this, _this11);
        return item._index === _index;
      }.bind(this));
    },
    getSelection: function getSelection() {
      var _this12 = this;

      var selectionIndexes = [];
      /* eslint-disable-next-line no-restricted-syntax */

      for (var i in this.objData) {
        /* eslint-disable-next-line no-underscore-dangle */
        if (this.objData[i]._isChecked) {
          selectionIndexes.push(parseInt(i, 10));
        }
      }

      return JSON.parse(JSON.stringify(this.data.filter(function (data, index) {
        (0, _newArrowCheck2.default)(this, _this12);
        return selectionIndexes.indexOf(index) > -1;
      }.bind(this))));
    },
    handleBodyScroll: function handleBodyScroll(event) {
      if (this.showHeader) {
        this.$refs.header.scrollLeft = event.target.scrollLeft;
      }

      if (this.isLeftFixed) {
        this.$refs.fixedBody.scrollTop = event.target.scrollTop;
      }

      if (this.isRightFixed) {
        this.$refs.fixedRightBody.scrollTop = event.target.scrollTop;
      }

      this.hideColumnFilter();
    },
    // 通用处理 highlightCurrentRow 和 clearCurrentRow
    handleCurrentRow: function handleCurrentRow(type, _index) {
      var oldIndex = -1;
      /* eslint-disable-next-line no-restricted-syntax */

      for (var i in this.objData) {
        /* eslint-disable-next-line no-underscore-dangle */
        if (this.objData[i]._isHighlight) {
          oldIndex = parseInt(i, 10);
          /* eslint-disable-next-line no-underscore-dangle */

          this.objData[i]._isHighlight = false;
        }
      }

      if (type === 'highlight') {
        /* eslint-disable-next-line no-underscore-dangle */
        this.objData[_index]._isHighlight = true;
      }

      var oldData = oldIndex < 0 ? null : JSON.parse(JSON.stringify(this.cloneData[oldIndex]));
      /* eslint-disable-next-line no-underscore-dangle */

      var newData = type === 'highlight' ? JSON.parse(JSON.stringify(this.cloneData[_index])) : null;
      this.$emit('on-current-change', newData, oldData);
    },
    handleFilter: function handleFilter(index) {
      var column = this.cloneColumns[index];
      var filterData = this.makeDataWithSort(); // filter others first, after filter this column

      filterData = this.filterOtherData(filterData, index);
      this.rebuildData = this.filterData(filterData, column);
      /* eslint-disable-next-line no-underscore-dangle */

      this.cloneColumns[index]._isFiltered = true;
      /* eslint-disable-next-line no-underscore-dangle */

      this.cloneColumns[index]._filterVisible = false;
      this.$emit('on-filter-change', column);
    },
    handleFilterHide: function handleFilterHide(index) {
      // clear checked that not filter now

      /* eslint-disable-next-line no-underscore-dangle */
      if (!this.cloneColumns[index]._isFiltered) {
        /* eslint-disable-next-line no-underscore-dangle */
        this.cloneColumns[index]._filterChecked = [];
      }
    },
    handleFilterReset: function handleFilterReset(_index) {
      var index = this.getOriginalIndex(_index);
      /* eslint-disable-next-line no-underscore-dangle */

      this.cloneColumns[index]._isFiltered = false;
      /* eslint-disable-next-line no-underscore-dangle */

      this.cloneColumns[index]._filterVisible = false;
      /* eslint-disable-next-line no-underscore-dangle */

      this.cloneColumns[index]._filterChecked = [];
      var filterData = this.makeDataWithSort();
      filterData = this.filterOtherData(filterData, index);
      this.rebuildData = filterData;
      this.$emit('on-filter-change', this.cloneColumns[index]);
    },
    handleFilterSelect: function handleFilterSelect(_index, value) {
      var index = this.getOriginalIndex(_index);
      /* eslint-disable-next-line no-underscore-dangle */

      this.cloneColumns[index]._filterChecked = [value];
      this.handleFilter(index);
    },
    handleFixedMousewheel: function handleFixedMousewheel(event) {
      var _this13 = this;

      var deltaY = event.deltaY;

      if (!deltaY && event.detail) {
        deltaY = event.detail * 40;
      }

      if (!deltaY && event.wheelDeltaY) {
        deltaY = -event.wheelDeltaY;
      }

      if (!deltaY && event.wheelDelta) {
        deltaY = -event.wheelDelta;
      }

      if (!deltaY) {
        return;
      }

      var body = this.$refs.body;
      var currentScrollTop = body.scrollTop;

      if (deltaY < 0 && currentScrollTop !== 0) {
        event.preventDefault();
      }

      if (deltaY > 0 && body.scrollHeight - body.clientHeight > currentScrollTop) {
        event.preventDefault();
      } // body.scrollTop += deltaY;


      var step = 0;
      var timeId = setInterval(function () {
        (0, _newArrowCheck2.default)(this, _this13);
        step += 5;

        if (deltaY > 0) {
          body.scrollTop += 2;
        } else {
          body.scrollTop -= 2;
        }

        if (step >= Math.abs(deltaY)) {
          clearInterval(timeId);
        }
      }.bind(this), 5);
    },
    handleMouseIn: function handleMouseIn(_index) {
      if (this.disabledHover) {
        return;
      }
      /* eslint-disable-next-line no-underscore-dangle */


      if (this.objData[_index]._isHover) {
        return;
      }
      /* eslint-disable-next-line no-underscore-dangle */


      this.objData[_index]._isHover = true;
    },
    handleMouseOut: function handleMouseOut(_index) {
      if (this.disabledHover) {
        return;
      }
      /* eslint-disable-next-line no-underscore-dangle */


      this.objData[_index]._isHover = false;
    },
    handleMouseWheel: function handleMouseWheel(event) {
      var deltaX = event.deltaX;
      var $body = this.$refs.body;

      if (deltaX > 0) {
        $body.scrollLeft += 10;
      } else {
        $body.scrollLeft -= 10;
      }
    },
    handleResize: function handleResize() {
      var _this14 = this;

      // let tableWidth = parseInt(getStyle(this.$el, 'width')) - 1;
      var tableWidth = this.$el.offsetWidth - 1;
      var columnsWidth = {};
      var sumMinWidth = 0;
      var hasWidthColumns = [];
      var noWidthColumns = [];
      var maxWidthColumns = [];
      var noMaxWidthColumns = [];
      this.cloneColumns.forEach(function (col) {
        (0, _newArrowCheck2.default)(this, _this14);

        if (col.width) {
          hasWidthColumns.push(col);
        } else {
          noWidthColumns.push(col);

          if (col.minWidth) {
            sumMinWidth += col.minWidth;
          }

          if (col.maxWidth) {
            maxWidthColumns.push(col);
          } else {
            noMaxWidthColumns.push(col);
          }
        }
        /* eslint-disable-next-line no-underscore-dangle */


        col._width = null;
      }.bind(this));
      var unUsableWidth = hasWidthColumns.map(function (cell) {
        (0, _newArrowCheck2.default)(this, _this14);
        return cell.width;
      }.bind(this)).reduce(function (a, b) {
        (0, _newArrowCheck2.default)(this, _this14);
        return a + b;
      }.bind(this), 0);
      var usableWidth = tableWidth - unUsableWidth - sumMinWidth - (this.showVerticalScrollBar ? this.scrollBarWidth : 0) - 1;
      var usableLength = noWidthColumns.length;
      var columnWidth = 0;

      if (usableWidth > 0 && usableLength > 0) {
        columnWidth = parseInt(usableWidth / usableLength, 10);
      }

      for (var i = 0; i < this.cloneColumns.length; i += 1) {
        var column = this.cloneColumns[i];
        var width = columnWidth + (column.minWidth ? column.minWidth : 0);

        if (column.width) {
          width = (0, _get.default)(column, 'width');
          /* eslint-disable-next-line no-underscore-dangle */
        } else if (column._width) {
          /* eslint-disable-next-line no-underscore-dangle */
          width = column._width;
        } else {
          if (column.minWidth > width) {
            width = column.minWidth;
          } else if (column.maxWidth < width) {
            width = column.maxWidth;
          }

          if (usableWidth > 0) {
            usableWidth -= width - (column.minWidth ? column.minWidth : 0);
            usableLength -= 1;

            if (usableLength > 0) {
              columnWidth = parseInt(usableWidth / usableLength, 10);
            } else {
              columnWidth = 0;
            }
          } else {
            columnWidth = 0;
          }
        }
        /* eslint-disable-next-line no-underscore-dangle */


        column._width = width;
        /* eslint-disable-next-line no-underscore-dangle */

        columnsWidth[column._index] = {
          width: width
        };
      }

      if (usableWidth > 0) {
        usableLength = noMaxWidthColumns.length;
        columnWidth = parseInt(usableWidth / usableLength, 10);

        for (var _i = 0; _i < noMaxWidthColumns.length; _i += 1) {
          var _column = noMaxWidthColumns[_i];
          /* eslint-disable-next-line no-underscore-dangle */

          var _width = _column._width + columnWidth;

          if (usableLength > 1) {
            usableLength -= 1;
            usableWidth -= columnWidth;
            columnWidth = parseInt(usableWidth / usableLength, 10);
          } else {
            columnWidth = 0;
          }
          /* eslint-disable-next-line no-underscore-dangle */


          _column._width = _width;
          /* eslint-disable-next-line no-underscore-dangle */

          columnsWidth[_column._index] = {
            width: _width
          };
        }
      }

      this.tableWidth =
      /* eslint-disable-next-line no-underscore-dangle */
      this.cloneColumns.map(function (cell) {
        (0, _newArrowCheck2.default)(this, _this14);
        return cell._width;
      }.bind(this)).reduce(function (a, b) {
        (0, _newArrowCheck2.default)(this, _this14);
        return a + b;
      }.bind(this), 0) + (this.showVerticalScrollBar ? this.scrollBarWidth : 0) + 1;
      this.columnsWidth = columnsWidth;
      this.fixedHeader();
    },
    handleSort: function handleSort(_index, type) {
      var _this15 = this;

      var index = this.getOriginalIndex(_index);
      this.cloneColumns.forEach(function (col) {
        (0, _newArrowCheck2.default)(this, _this15);

        /* eslint-disable-next-line no-underscore-dangle */
        col._sortType = 'normal';
      }.bind(this));
      var key = this.cloneColumns[index].key;

      if (this.cloneColumns[index].sortable !== 'custom') {
        // custom is for remote sort
        if (type === 'normal') {
          this.rebuildData = this.makeDataWithFilter();
        } else {
          this.rebuildData = this.sortData(this.rebuildData, type, index);
        }
      }
      /* eslint-disable-next-line no-underscore-dangle */


      this.cloneColumns[index]._sortType = type;
      this.$emit('on-sort-change', {
        /* eslint-disable-next-line no-underscore-dangle */
        column: JSON.parse(JSON.stringify(this.allColumns[this.cloneColumns[index]._index])),
        key: key,
        order: type
      });
    },
    hideColumnFilter: function hideColumnFilter() {
      var _this16 = this;

      this.cloneColumns.forEach(function (col) {
        (0, _newArrowCheck2.default)(this, _this16);

        /* eslint-disable-next-line no-underscore-dangle */
        col._filterVisible = false;
      }.bind(this));
    },
    highlightCurrentRow: function highlightCurrentRow(_index) {
      /* eslint-disable-next-line no-underscore-dangle */
      if (!this.highlightRow || this.objData[_index]._isHighlight) {
        return;
      }

      this.handleCurrentRow('highlight', _index);
    },
    // create a multiple table-head
    makeColumnRows: function makeColumnRows(fixedType, cols) {
      return (0, _util.convertToRows)(cols, fixedType);
    },
    makeColumns: function makeColumns(cols) {
      var _this17 = this;

      // 在 data 时，this.allColumns 暂时为 undefined
      var columns = (0, _assist.deepCopy)((0, _util.getAllColumns)(cols));
      var left = [];
      var right = [];
      var center = [];
      columns.forEach(function (column, index) {
        (0, _newArrowCheck2.default)(this, _this17);

        /* eslint-disable-next-line no-underscore-dangle */
        column._index = index;
        /* eslint-disable-next-line no-underscore-dangle */

        column._columnKey = columnKey;
        columnKey += 1;
        /* eslint-disable-next-line no-underscore-dangle */

        column._width = column.width ? column.width : ''; // update in handleResize()

        /* eslint-disable-next-line no-underscore-dangle */

        column._sortType = 'normal';
        /* eslint-disable-next-line no-underscore-dangle */

        column._filterVisible = false;
        /* eslint-disable-next-line no-underscore-dangle */

        column._isFiltered = false;
        /* eslint-disable-next-line no-underscore-dangle */

        column._filterChecked = [];

        if ('filterMultiple' in column) {
          /* eslint-disable-next-line no-underscore-dangle */
          column._filterMultiple = column.filterMultiple;
        } else {
          /* eslint-disable-next-line no-underscore-dangle */
          column._filterMultiple = true;
        }

        if ('filteredValue' in column) {
          /* eslint-disable-next-line no-underscore-dangle */
          column._filterChecked = column.filteredValue;
          /* eslint-disable-next-line no-underscore-dangle */

          column._isFiltered = true;
        }

        if ('sortType' in column) {
          /* eslint-disable-next-line no-underscore-dangle */
          column._sortType = column.sortType;
        }

        if (column.fixed && column.fixed === 'left') {
          left.push(column);
        } else if (column.fixed && column.fixed === 'right') {
          right.push(column);
        } else {
          center.push(column);
        }
      }.bind(this));
      return left.concat(center).concat(right);
    },
    // 修改列，设置一个隐藏的 id，便于后面的多级表头寻找对应的列，否则找不到
    makeColumnsId: function makeColumnsId(columns) {
      var _this18 = this;

      return columns.map(function (item) {
        (0, _newArrowCheck2.default)(this, _this18);

        if ('children' in item) {
          item.children = this.makeColumnsId(item.children);
        }
        /* eslint-disable-next-line no-underscore-dangle */


        item.__id = (0, _util.getRandomStr)(6);
        return item;
      }.bind(this));
    },
    makeData: function makeData() {
      var _this19 = this;

      var data = (0, _assist.deepCopy)(this.data);
      data.forEach(function (row, index) {
        (0, _newArrowCheck2.default)(this, _this19);

        /* eslint-disable-next-line no-underscore-dangle */
        row._index = index;
        /* eslint-disable-next-line no-underscore-dangle */

        row._rowKey = rowKey;
        rowKey += 1;
      }.bind(this));
      return data;
    },
    makeDataWithFilter: function makeDataWithFilter() {
      var _this20 = this;

      var data = this.makeData();
      this.cloneColumns.forEach(function (col) {
        (0, _newArrowCheck2.default)(this, _this20);
        data = this.filterData(data, col);
      }.bind(this));
      return data;
    },
    makeDataWithSort: function makeDataWithSort() {
      var data = this.makeData();
      var sortType = 'normal';
      var sortIndex = -1;
      var isCustom = false;

      for (var i = 0; i < this.cloneColumns.length; i += 1) {
        /* eslint-disable-next-line no-underscore-dangle */
        if (this.cloneColumns[i]._sortType !== 'normal') {
          /* eslint-disable-next-line no-underscore-dangle */
          sortType = this.cloneColumns[i]._sortType;
          sortIndex = i;
          isCustom = this.cloneColumns[i].sortable === 'custom';
          break;
        }
      }

      if (sortType !== 'normal' && !isCustom) {
        data = this.sortData(data, sortType, sortIndex);
      }

      return data;
    },
    makeDataWithSortAndFilter: function makeDataWithSortAndFilter() {
      var _this21 = this;

      var data = this.makeDataWithSort();
      this.cloneColumns.forEach(function (col) {
        (0, _newArrowCheck2.default)(this, _this21);
        data = this.filterData(data, col);
      }.bind(this));
      return data;
    },
    makeObjData: function makeObjData() {
      var _this22 = this;

      var data = {};
      this.data.forEach(function (row, index) {
        (0, _newArrowCheck2.default)(this, _this22);
        var newRow = (0, _assist.deepCopy)(row); // todo 直接替换

        /* eslint-disable-next-line no-underscore-dangle */

        newRow._isHover = false;
        /* eslint-disable-next-line no-underscore-dangle */

        if (newRow._disabled) {
          /* eslint-disable-next-line no-underscore-dangle */
          newRow._isDisabled = newRow._disabled;
        } else {
          /* eslint-disable-next-line no-underscore-dangle */
          newRow._isDisabled = false;
        }
        /* eslint-disable-next-line no-underscore-dangle */


        if (newRow._checked) {
          /* eslint-disable-next-line no-underscore-dangle */
          newRow._isChecked = newRow._checked;
        } else {
          /* eslint-disable-next-line no-underscore-dangle */
          newRow._isChecked = false;
        }
        /* eslint-disable-next-line no-underscore-dangle */


        if (newRow._expanded) {
          /* eslint-disable-next-line no-underscore-dangle */
          newRow._isExpanded = newRow._expanded;
        } else {
          /* eslint-disable-next-line no-underscore-dangle */
          newRow._isExpanded = false;
        }
        /* eslint-disable-next-line no-underscore-dangle */


        if (newRow._highlight) {
          /* eslint-disable-next-line no-underscore-dangle */
          newRow._isHighlight = newRow._highlight;
        } else {
          /* eslint-disable-next-line no-underscore-dangle */
          newRow._isHighlight = false;
        }

        data[index] = newRow;
      }.bind(this));
      return data;
    },
    rowClsName: function rowClsName(index) {
      return this.rowClassName(this.data[index], index);
    },
    selectAll: function selectAll(status) {
      // this.rebuildData.forEach((data) => {
      //     if(this.objData[data._index]._isDisabled){
      //         this.objData[data._index]._isChecked = false;
      //     }else{
      //         this.objData[data._index]._isChecked = status;
      //     }
      // });

      /* eslint-disable-next-line no-restricted-syntax */
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = this.rebuildData[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var data = _step.value;

          /* eslint-disable-next-line no-underscore-dangle */
          if (this.objData[data._index]._isDisabled) {
            /* eslint-disable-next-line no-continue */
            continue;
          }
          /* eslint-disable-next-line no-underscore-dangle */


          this.objData[data._index]._isChecked = status;
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      var selection = this.getSelection();

      if (status) {
        this.$emit('on-select-all', selection);
      }

      this.$emit('on-selection-change', selection);
    },
    sortData: function sortData(data, type, index) {
      var _this23 = this;

      var key = this.cloneColumns[index].key;
      data.sort(function (a, b) {
        (0, _newArrowCheck2.default)(this, _this23);

        if (this.cloneColumns[index].sortMethod) {
          return this.cloneColumns[index].sortMethod(a[key], b[key], type);
        }

        if (type === 'asc') {
          return a[key] > b[key] ? 1 : -1;
        }

        if (type === 'desc') {
          return a[key] < b[key] ? 1 : -1;
        }

        return undefined;
      }.bind(this));
      return data;
    },
    toggleExpand: function toggleExpand(_index) {
      var data = {};
      /* eslint-disable-next-line no-restricted-syntax */

      for (var i in this.objData) {
        if (parseInt(i, 10) === _index) {
          data = this.objData[i];
          break;
        }
      }
      /* eslint-disable-next-line no-underscore-dangle */


      var status = !data._isExpanded;
      /* eslint-disable-next-line no-underscore-dangle */

      this.objData[_index]._isExpanded = status;
      /* eslint-disable-next-line no-underscore-dangle */

      this.$emit('on-expand', JSON.parse(JSON.stringify(this.cloneData[_index])), status);
    },
    toggleSelect: function toggleSelect(_index) {
      var data = {};
      /* eslint-disable-next-line no-restricted-syntax */

      for (var i in this.objData) {
        if (parseInt(i, 10) === _index) {
          data = this.objData[i];
          break;
        }
      }
      /* eslint-disable-next-line no-underscore-dangle */


      var status = !data._isChecked;
      /* eslint-disable-next-line no-underscore-dangle */

      this.objData[_index]._isChecked = status;
      var selection = this.getSelection();
      /* eslint-disable-next-line no-underscore-dangle */

      this.$emit(status ? 'on-select' : 'on-select-cancel', selection, JSON.parse(JSON.stringify(this.data[_index])));
      this.$emit('on-selection-change', selection);
    }
  }
};
exports.default = _default2;

/***/ }),
/* 215 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_table_head_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(216);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_table_head_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_table_head_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_table_head_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_table_head_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_table_head_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _objectSpread2 = _interopRequireDefault(__webpack_require__(11));

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _checkboxGroup = _interopRequireDefault(__webpack_require__(386));

var _checkbox = _interopRequireDefault(__webpack_require__(38));

var _poptip = _interopRequireDefault(__webpack_require__(417));

var _button = _interopRequireDefault(__webpack_require__(22));

var _header = _interopRequireDefault(__webpack_require__(637));

var _mixin = _interopRequireDefault(__webpack_require__(426));

var _locale = _interopRequireDefault(__webpack_require__(10));

var logger = __webpack_require__(0).get("iview:components:table:table-head.vue");

var _default = {
  name: 'TableHead',
  components: {
    Checkbox: _checkbox.default,
    CheckboxGroup: _checkboxGroup.default,
    iButton: _button.default,
    Poptip: _poptip.default,
    renderHeader: _header.default
  },
  mixins: [_mixin.default, _locale.default],
  props: {
    columnRows: {
      default: undefined,
      type: Array
    },
    columns: {
      default: undefined,
      type: Array
    },
    columnsWidth: {
      default: undefined,
      type: Object
    },
    // rebuildData
    data: {
      default: undefined,
      type: Array
    },
    fixed: {
      default: false,
      type: [Boolean, String]
    },
    fixedColumnRows: {
      default: undefined,
      type: Array
    },
    objData: {
      default: undefined,
      type: Object
    },
    prefixCls: {
      default: undefined,
      type: String
    },
    styleObject: {
      default: undefined,
      type: Object
    }
  },
  computed: {
    headRows: function headRows() {
      var isGroup = this.columnRows.length > 1;

      if (isGroup) {
        return this.fixed ? this.fixedColumnRows : this.columnRows;
      }

      return [this.columns];
    },
    isSelectAll: function isSelectAll() {
      var _this = this;

      var isSelectAll = true;

      if (!this.data.length) {
        isSelectAll = false;
      }
      /* eslint-disable-next-line no-underscore-dangle */


      if (!this.data.find(function (item) {
        (0, _newArrowCheck2.default)(this, _this);
        return !item._disabled;
      }.bind(this))) {
        isSelectAll = false;
      } // #1751


      for (var i = 0; i < this.data.length; i += 1) {
        /* eslint-disable-next-line no-underscore-dangle */
        if (!this.objData[this.data[i]._index]._isChecked && !this.objData[this.data[i]._index]._isDisabled) {
          isSelectAll = false;
          break;
        }
      }

      return isSelectAll;
    },
    styles: function styles() {
      var style = (0, _objectSpread2.default)({}, this.styleObject);
      var width = parseInt(this.styleObject.width, 10);
      style.width = "".concat(width, "px");
      return style;
    }
  },
  methods: {
    cellClasses: function cellClasses(column) {
      return ["".concat(this.prefixCls, "-cell"), (0, _defineProperty2.default)({}, "".concat(this.prefixCls, "-hidden"), !this.fixed && column.fixed && (column.fixed === 'left' || column.fixed === 'right'))];
    },
    // 因为表头嵌套不是深拷贝，所以没有 _ 开头的方法，在 isGroup 下用此列
    getColumn: function getColumn(rowIndex, index) {
      var _this2 = this;

      var isGroup = this.columnRows.length > 1;

      if (isGroup) {
        /* eslint-disable-next-line no-underscore-dangle */
        var id = this.headRows[rowIndex][index].__id;
        /* eslint-disable-next-line no-underscore-dangle */

        return this.columns.filter(function (item) {
          (0, _newArrowCheck2.default)(this, _this2);
          return item.__id === id;
        }.bind(this))[0];
      }

      return this.headRows[rowIndex][index];
    },
    handleFilter: function handleFilter(index) {
      this.$parent.handleFilter(index);
    },
    handleFilterHide: function handleFilterHide(index) {
      this.$parent.handleFilterHide(index);
    },
    handleReset: function handleReset(index) {
      this.$parent.handleFilterReset(index);
    },
    handleSelect: function handleSelect(index, value) {
      this.$parent.handleFilterSelect(index, value);
    },
    handleSort: function handleSort(index, sortType) {
      var type = sortType;
      var column = this.columns[index];
      var _index = column._index;
      /* eslint-disable-next-line no-underscore-dangle */

      if (column._sortType === type) {
        type = 'normal';
      }

      this.$parent.handleSort(_index, type);
    },
    handleSortByHead: function handleSortByHead(index) {
      var column = this.columns[index];

      if (column.sortable) {
        /* eslint-disable-next-line no-underscore-dangle */
        var type = column._sortType;

        if (type === 'normal') {
          this.handleSort(index, 'asc');
        } else if (type === 'asc') {
          this.handleSort(index, 'desc');
        } else {
          this.handleSort(index, 'normal');
        }
      }
    },
    itemAllClasses: function itemAllClasses(column) {
      return ["".concat(this.prefixCls, "-filter-select-item"), (0, _defineProperty2.default)({}, "".concat(this.prefixCls, "-filter-select-item-selected"), !column._filterChecked.length)];
    },
    itemClasses: function itemClasses(column, item) {
      return ["".concat(this.prefixCls, "-filter-select-item"), (0, _defineProperty2.default)({}, "".concat(this.prefixCls, "-filter-select-item-selected"), column._filterChecked[0] === item.value)];
    },
    scrollBarCellClass: function scrollBarCellClass() {
      var hasRightFixed = false;
      /* eslint-disable-next-line guard-for-in, no-restricted-syntax */

      for (var i in this.headRows) {
        /* eslint-disable-next-line guard-for-in, no-restricted-syntax */
        for (var j in this.headRows[i]) {
          if (this.headRows[i][j].fixed === 'right') {
            hasRightFixed = true;
            break;
          }

          if (hasRightFixed) {
            break;
          }
        }
      }

      return [(0, _defineProperty2.default)({}, "".concat(this.prefixCls, "-hidden"), hasRightFixed)];
    },
    selectAll: function selectAll() {
      var status = !this.isSelectAll;
      this.$parent.selectAll(status);
    }
  }
};
exports.default = _default;

/***/ }),
/* 217 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_table_body_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(218);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_table_body_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_table_body_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_table_body_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_table_body_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_table_body_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 218 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _get = _interopRequireDefault(__webpack_require__(26));

var _tableTr = _interopRequireDefault(__webpack_require__(639));

var _cell = _interopRequireDefault(__webpack_require__(640));

var _expand = _interopRequireDefault(__webpack_require__(427));

var _mixin = _interopRequireDefault(__webpack_require__(426));

var logger = __webpack_require__(0).get("iview:components:table:table-body.vue");

var _default = {
  name: 'TableBody',
  components: {
    Cell: _cell.default,
    Expand: _expand.default,
    TableTr: _tableTr.default
  },
  mixins: [_mixin.default],
  props: {
    columns: {
      default: undefined,
      type: Array
    },
    columnsWidth: {
      default: undefined,
      type: Object
    },
    // rebuildData
    data: {
      default: undefined,
      type: Array
    },
    fixed: {
      default: false,
      type: [Boolean, String]
    },
    objData: {
      default: undefined,
      type: Object
    },
    prefixCls: {
      default: undefined,
      type: String
    },
    styleObject: {
      default: undefined,
      type: Object
    }
  },
  computed: {
    expandRender: function expandRender() {
      var renderFn = function render() {
        return '';
      };

      for (var i = 0; i < this.columns.length; i += 1) {
        var column = this.columns[i];

        if (column.type && column.type === 'expand') {
          if (column.render) {
            renderFn = column.render;
          }
        }
      }

      return renderFn;
    }
  },
  methods: {
    clickCurrentRow: function clickCurrentRow(_index) {
      this.$parent.clickCurrentRow(_index);
    },
    dblclickCurrentRow: function dblclickCurrentRow(_index) {
      this.$parent.dblclickCurrentRow(_index);
    },
    handleMouseIn: function handleMouseIn(_index) {
      this.$parent.handleMouseIn(_index);
    },
    handleMouseOut: function handleMouseOut(_index) {
      this.$parent.handleMouseOut(_index);
    },
    rowChecked: function rowChecked(_index) {
      return (0, _get.default)(this.objData, "[".concat(_index, "]._isChecked"));
    },
    rowDisabled: function rowDisabled(_index) {
      return (0, _get.default)(this.objData, "[".concat(_index, "]._isDisabled"));
    },
    rowExpanded: function rowExpanded(_index) {
      return (0, _get.default)(this.objData, "[".concat(_index, "]._isExpanded"));
    }
  }
};
exports.default = _default;

/***/ }),
/* 219 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_table_tr_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(220);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_table_tr_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_table_tr_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_table_tr_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_table_tr_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_table_tr_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _get = _interopRequireDefault(__webpack_require__(26));

var logger = __webpack_require__(0).get("iview:components:table:table-tr.vue");

var _default = {
  props: {
    prefixCls: {
      default: undefined,
      type: String
    },
    row: {
      default: undefined,
      type: Object
    }
  },
  computed: {
    objData: function objData() {
      return this.$parent.objData;
    }
  },
  methods: {
    rowClasses: function rowClasses(index) {
      var _ref;

      return ["".concat(this.prefixCls, "-row"), this.rowClsName(index), (_ref = {}, (0, _defineProperty2.default)(_ref, "".concat(this.prefixCls, "-row-highlight"), (0, _get.default)(this.objData, "[".concat(index, "]._isHighlight"), false)), (0, _defineProperty2.default)(_ref, "".concat(this.prefixCls, "-row-hover"), (0, _get.default)(this.objData, "[".concat(index, "]._isHover"), false)), _ref)];
    },
    rowClsName: function rowClsName(index) {
      return this.$parent.$parent.rowClassName(this.objData[index], index);
    }
  }
};
exports.default = _default;

/***/ }),
/* 221 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_cell_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(222);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_cell_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_cell_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_cell_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_cell_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_cell_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 222 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _noop = _interopRequireDefault(__webpack_require__(13));

var _expand = _interopRequireDefault(__webpack_require__(427));

var _icon = _interopRequireDefault(__webpack_require__(12));

var _checkbox = _interopRequireDefault(__webpack_require__(38));

var logger = __webpack_require__(0).get("iview:components:table:cell.vue");

var _default = {
  name: 'TableCell',
  components: {
    Cell: _expand.default,
    Checkbox: _checkbox.default,
    Icon: _icon.default
  },
  props: {
    checked: {
      default: false,
      type: Boolean
    },
    column: {
      default: undefined,
      type: Object
    },
    disabled: {
      default: false,
      type: Boolean
    },
    expanded: {
      default: false,
      type: Boolean
    },
    fixed: {
      default: false,
      type: [Boolean, String]
    },
    // _index of data
    index: {
      default: undefined,
      type: Number
    },
    // index of rebuildData
    naturalIndex: {
      default: undefined,
      type: Number
    },
    prefixCls: {
      default: undefined,
      type: String
    },
    row: {
      default: undefined,
      type: Object
    }
  },
  data: function data() {
    return {
      context: this.$parent.$parent.$parent.currentContext,
      renderType: '',
      uid: -1
    };
  },
  computed: {
    classes: function classes() {
      var _ref;

      return ["".concat(this.prefixCls, "-cell"), (_ref = {}, (0, _defineProperty2.default)(_ref, "".concat(this.prefixCls, "-hidden"), !this.fixed && this.column.fixed && (this.column.fixed === 'left' || this.column.fixed === 'right')), (0, _defineProperty2.default)(_ref, "".concat(this.prefixCls, "-cell-ellipsis"), this.column.ellipsis || false), (0, _defineProperty2.default)(_ref, "".concat(this.prefixCls, "-cell-with-expand"), this.renderType === 'expand'), _ref)];
    },
    expandCls: function expandCls() {
      return ["".concat(this.prefixCls, "-cell-expand"), (0, _defineProperty2.default)({}, "".concat(this.prefixCls, "-cell-expand-expanded"), this.expanded)];
    }
  },
  created: function created() {
    if (this.column.type === 'index') {
      this.renderType = 'index';
    } else if (this.column.type === 'selection') {
      this.renderType = 'selection';
    } else if (this.column.type === 'html') {
      this.renderType = 'html';
    } else if (this.column.type === 'expand') {
      this.renderType = 'expand';
    } else if (this.column.render) {
      this.renderType = 'render';
    } else {
      this.renderType = 'normal';
    }
  },
  methods: {
    handleClick: _noop.default,
    // handleClick() {
    //   // 放置 Checkbox 冒泡
    // },
    toggleExpand: function toggleExpand() {
      this.$parent.$parent.$parent.toggleExpand(this.index);
    },
    toggleSelect: function toggleSelect() {
      this.$parent.$parent.$parent.toggleSelect(this.index);
    }
  }
};
exports.default = _default;

/***/ }),
/* 223 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_tabs_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(224);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_tabs_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_tabs_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_tabs_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_tabs_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_tabs_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 224 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(15));

var _typeof2 = _interopRequireDefault(__webpack_require__(36));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _elementResizeDetector = _interopRequireDefault(__webpack_require__(423));

var _icon = _interopRequireDefault(__webpack_require__(12));

var _render = _interopRequireDefault(__webpack_require__(415));

var _assist = __webpack_require__(6);

var _emitter = _interopRequireDefault(__webpack_require__(9));

var _this = void 0;

var logger = __webpack_require__(0).get("iview:components:tabs:tabs.vue");

var prefixCls = 'ivu-tabs';
var transitionTime = 300; // from CSS

var _getNextTab = function getNextTab(list, activeKey, direction, countDisabledAlso) {
  var _this2 = this;

  (0, _newArrowCheck2.default)(this, _this);
  var currentIndex = list.findIndex(function (tab) {
    (0, _newArrowCheck2.default)(this, _this2);
    return tab.name === activeKey;
  }.bind(this));
  var nextIndex = (currentIndex + direction + list.length) % list.length;
  var nextTab = list[nextIndex];

  if (nextTab.disabled) {
    return _getNextTab(list, nextTab.name, direction, countDisabledAlso);
  }

  return nextTab;
}.bind(void 0);

var _focusFirst = function focusFirst(element, root) {
  (0, _newArrowCheck2.default)(this, _this);

  try {
    element.focus();
  } catch (err) {
    /* empty */
  }

  if (document.activeElement === element && element !== root) {
    return true;
  }

  var candidates = element.children;
  /* eslint-disable-next-line no-restricted-syntax */

  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = candidates[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var candidate = _step.value;

      if (_focusFirst(candidate, root)) {
        return true;
      }
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return != null) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  return false;
}.bind(void 0);

var _default = {
  name: 'Tabs',
  components: {
    Icon: _icon.default,
    Render: _render.default
  },
  mixins: [_emitter.default],
  props: {
    animated: {
      default: true,
      type: Boolean
    },
    captureFocus: {
      default: false,
      type: Boolean
    },
    closable: {
      default: false,
      type: Boolean
    },
    size: {
      default: 'default',
      type: String,
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['small', 'default']);
      }
    },
    type: {
      default: 'line',
      type: String,
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['line', 'card']);
      }
    },
    value: {
      default: undefined,
      type: [String, Number]
    }
  },
  data: function data() {
    return {
      activeKey: this.value,
      barOffset: 0,
      barWidth: 0,
      focusedKey: this.value,
      navList: [],
      navStyle: {
        transform: ''
      },
      prefixCls: prefixCls,
      scrollable: false,
      showSlot: false,
      transitioning: false
    };
  },
  computed: {
    barClasses: function barClasses() {
      return ["".concat(prefixCls, "-ink-bar"), (0, _defineProperty2.default)({}, "".concat(prefixCls, "-ink-bar-animated"), this.animated)];
    },
    barStyle: function barStyle() {
      var style = {
        visibility: 'hidden',
        width: "".concat(this.barWidth, "px")
      };

      if (this.type === 'line') {
        style.visibility = 'visible';
      }

      if (this.animated) {
        style.transform = "translate3d(".concat(this.barOffset, "px, 0px, 0px)");
      } else {
        style.left = "".concat(this.barOffset, "px");
      }

      return style;
    },
    classes: function classes() {
      var _ref2;

      return ["".concat(prefixCls), (_ref2 = {}, (0, _defineProperty2.default)(_ref2, "".concat(prefixCls, "-card"), this.type === 'card'), (0, _defineProperty2.default)(_ref2, "".concat(prefixCls, "-mini"), this.size === 'small' && this.type === 'line'), (0, _defineProperty2.default)(_ref2, "".concat(prefixCls, "-no-animation"), !this.animated), _ref2)];
    },
    contentClasses: function contentClasses() {
      return ["".concat(prefixCls, "-content"), (0, _defineProperty2.default)({}, "".concat(prefixCls, "-content-animated"), this.animated)];
    },
    contentStyle: function contentStyle() {
      var x = this.getTabIndex(this.activeKey);
      var p = x === 0 ? '0%' : "-".concat(x, "00%");
      var style = {};

      if (x > -1) {
        style = {
          transform: "translateX(".concat(p, ") translateZ(0px)")
        };
      }

      return style;
    }
  },
  watch: {
    activeKey: function activeKey(val) {
      var _this3 = this;

      this.focusedKey = val;
      this.updateBar();
      this.updateStatus();
      this.broadcast('Table', 'on-visible-change', true);
      this.$nextTick(function () {
        (0, _newArrowCheck2.default)(this, _this3);
        this.scrollToActiveTab();
      }.bind(this)); // update visibility

      var nextIndex = Math.max(this.getTabIndex(this.focusedKey), 0);
      this.updateVisibility(nextIndex);
    },
    value: function value(val) {
      this.activeKey = val;
      this.focusedKey = val;
    }
  },
  mounted: function mounted() {
    var _this4 = this;

    this.showSlot = this.$slots.extra !== undefined;
    this.observer = (0, _elementResizeDetector.default)();
    this.observer.listenTo(this.$refs.navWrap, this.handleResize);
    var hiddenParentNode = this.isInsideHiddenElement();

    if (hiddenParentNode) {
      this.mutationObserver = new _assist.MutationObserver(function () {
        (0, _newArrowCheck2.default)(this, _this4);

        if (hiddenParentNode.style.display !== 'none') {
          this.updateBar();
          this.mutationObserver.disconnect();
        }
      }.bind(this));
      this.mutationObserver.observe(hiddenParentNode, {
        attributeFilter: ['style'],
        attributes: true,
        characterData: true,
        childList: true
      });
    }

    this.handleTabKeyboardSelect(true);
    this.updateVisibility(this.getTabIndex(this.activeKey));
  },
  beforeDestroy: function beforeDestroy() {
    this.observer.removeListener(this.$refs.navWrap, this.handleResize);

    if (this.mutationObserver) {
      this.mutationObserver.disconnect();
    }
  },
  methods: {
    getCurrentScrollOffset: function getCurrentScrollOffset() {
      var navStyle = this.navStyle;
      return navStyle.transform ? Number(navStyle.transform.match(/translateX\(-(\d+(\.\d+)*)px\)/)[1]) : 0;
    },
    getTabIndex: function getTabIndex(name) {
      var _this5 = this;

      return this.navList.findIndex(function (nav) {
        (0, _newArrowCheck2.default)(this, _this5);
        return nav.name === name;
      }.bind(this));
    },
    getTabs: function getTabs() {
      var _this6 = this;

      return this.$children.filter(function (item) {
        (0, _newArrowCheck2.default)(this, _this6);
        return item.$options.name === 'TabPane';
      }.bind(this));
    },
    handleChange: function handleChange(index) {
      var _this7 = this;

      if (this.transitioning) {
        return;
      }

      this.transitioning = true;
      setTimeout(function () {
        (0, _newArrowCheck2.default)(this, _this7);
        this.transitioning = false;
      }.bind(this), transitionTime);
      var nav = this.navList[index];

      if (nav.disabled) {
        return;
      }

      this.activeKey = nav.name;
      this.$emit('input', nav.name);
      this.$emit('on-click', nav.name);
    },
    handleRemove: function handleRemove(index) {
      var _this8 = this;

      var tabs = this.getTabs();
      var tab = tabs[index];
      tab.$destroy();

      if (tab.currentName === this.activeKey) {
        var newTabs = this.getTabs();
        var activeKey = -1;

        if (newTabs.length) {
          var leftNoDisabledTabs = tabs.filter(function (item, itemIndex) {
            (0, _newArrowCheck2.default)(this, _this8);
            return !item.disabled && itemIndex < index;
          }.bind(this));
          var rightNoDisabledTabs = tabs.filter(function (item, itemIndex) {
            (0, _newArrowCheck2.default)(this, _this8);
            return !item.disabled && itemIndex > index;
          }.bind(this));

          if (rightNoDisabledTabs.length) {
            activeKey = rightNoDisabledTabs[0].currentName;
          } else if (leftNoDisabledTabs.length) {
            activeKey = leftNoDisabledTabs[leftNoDisabledTabs.length - 1].currentName;
          } else {
            activeKey = newTabs[0].currentName;
          }
        }

        this.activeKey = activeKey;
        this.$emit('input', activeKey);
      }

      this.$emit('on-tab-remove', tab.currentName);
      this.updateNav();
    },
    handleResize: function handleResize() {
      this.updateNavScroll();
    },
    handleTabKeyboardSelect: function handleTabKeyboardSelect() {
      var init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

      if (init) {
        return;
      }

      var focused = this.focusedKey || 0;
      var index = this.getTabIndex(focused);
      this.handleChange(index);
    },
    handleTabKeyNavigation: function handleTabKeyNavigation(e) {
      if (e.keyCode !== 37 && e.keyCode !== 39) {
        return;
      }

      var direction = e.keyCode === 39 ? 1 : -1;

      var nextTab = _getNextTab(this.navList, this.focusedKey, direction);

      this.focusedKey = nextTab.name;
    },
    isInsideHiddenElement: function isInsideHiddenElement() {
      var currentNode = this.$el.parentNode;

      while (currentNode && currentNode !== document.body) {
        if (currentNode.style && currentNode.style.display === 'none') {
          return currentNode;
        }

        currentNode = currentNode.parentNode;
      }

      return false;
    },
    onKeydown: function onKeydown(event) {
      var key = event.key;

      if ((0, _assist.oneOf)(key, [' ', 'Space', 'Spacebar'])) {
        event.preventDefault();
        this.handleTabKeyboardSelect(false);
      } else {
        this.handleTabKeyNavigation(event);
      }
    },
    scrollNext: function scrollNext() {
      var navWidth = this.$refs.nav.offsetWidth;
      var containerWidth = this.$refs.navScroll.offsetWidth;
      var currentOffset = this.getCurrentScrollOffset();

      if (navWidth - currentOffset <= containerWidth) {
        return;
      }

      var newOffset = navWidth - currentOffset > containerWidth * 2 ? currentOffset + containerWidth : navWidth - containerWidth;
      this.setOffset(newOffset);
    },
    scrollPrev: function scrollPrev() {
      var containerWidth = this.$refs.navScroll.offsetWidth;
      var currentOffset = this.getCurrentScrollOffset();

      if (!currentOffset) {
        return;
      }

      var newOffset = currentOffset > containerWidth ? currentOffset - containerWidth : 0;
      this.setOffset(newOffset);
    },
    scrollToActiveTab: function scrollToActiveTab() {
      if (!this.scrollable) {
        return;
      }

      var nav = this.$refs.nav;
      var activeTab = this.$el.querySelector(".".concat(prefixCls, "-tab-active"));

      if (!activeTab) {
        return;
      }

      var navScroll = this.$refs.navScroll;
      var activeTabBounding = activeTab.getBoundingClientRect();
      var navScrollBounding = navScroll.getBoundingClientRect();
      var navBounding = nav.getBoundingClientRect();
      var currentOffset = this.getCurrentScrollOffset();
      var newOffset = currentOffset;

      if (navBounding.right < navScrollBounding.right) {
        newOffset = nav.offsetWidth - navScrollBounding.width;
      }

      if (activeTabBounding.left < navScrollBounding.left) {
        newOffset = currentOffset - (navScrollBounding.left - activeTabBounding.left);
      } else if (activeTabBounding.right > navScrollBounding.right) {
        newOffset = currentOffset + activeTabBounding.right - navScrollBounding.right;
      }

      if (currentOffset !== newOffset) {
        this.setOffset(Math.max(newOffset, 0));
      }
    },
    setOffset: function setOffset(value) {
      this.navStyle.transform = "translateX(-".concat(value, "px)");
    },
    showClose: function showClose(item) {
      if (this.type === 'card') {
        if (item.closable !== null) {
          return item.closable;
        }

        return this.closable;
      }

      return false;
    },
    tabCls: function tabCls(item) {
      var _ref4;

      return ["".concat(prefixCls, "-tab"), (_ref4 = {}, (0, _defineProperty2.default)(_ref4, "".concat(prefixCls, "-tab-disabled"), item.disabled), (0, _defineProperty2.default)(_ref4, "".concat(prefixCls, "-tab-active"), item.name === this.activeKey), (0, _defineProperty2.default)(_ref4, "".concat(prefixCls, "-tab-focused"), item.name === this.focusedKey), _ref4)];
    },
    updateBar: function updateBar() {
      var _this9 = this;

      this.$nextTick(function () {
        (0, _newArrowCheck2.default)(this, _this9);
        var index = this.getTabIndex(this.activeKey);

        if (!this.$refs.nav) {
          return;
        } // 页面销毁时，这里会报错，为了解决 #2100


        var prevTabs = this.$refs.nav.querySelectorAll(".".concat(prefixCls, "-tab"));
        var tab = prevTabs[index];
        this.barWidth = tab ? parseFloat(tab.offsetWidth) : 0;

        if (index > 0) {
          var offset = 0;
          var gutter = this.size === 'small' ? 0 : 16;

          for (var i = 0; i < index; i += 1) {
            offset += parseFloat(prevTabs[i].offsetWidth) + gutter;
          }

          this.barOffset = offset;
        } else {
          this.barOffset = 0;
        }

        this.updateNavScroll();
      }.bind(this));
    },
    updateNav: function updateNav() {
      var _this10 = this;

      this.navList = [];
      this.getTabs().forEach(function (pane, index) {
        (0, _newArrowCheck2.default)(this, _this10);
        this.navList.push({
          closable: pane.closable,
          disabled: pane.disabled,
          icon: pane.icon || '',
          label: pane.label,
          labelType: (0, _typeof2.default)(pane.label),
          name: pane.currentName || index
        });

        if (!pane.currentName) {
          pane.currentName = index;
        }

        if (index === 0) {
          if (!this.activeKey) {
            this.activeKey = pane.currentName || index;
          }
        }
      }.bind(this));
      this.updateStatus();
      this.updateBar();
    },
    updateNavScroll: function updateNavScroll() {
      var navWidth = this.$refs.nav.offsetWidth;
      var containerWidth = this.$refs.navScroll.offsetWidth;
      var currentOffset = this.getCurrentScrollOffset();

      if (containerWidth < navWidth) {
        this.scrollable = true;

        if (navWidth - currentOffset < containerWidth) {
          this.setOffset(navWidth - containerWidth);
        }
      } else {
        this.scrollable = false;

        if (currentOffset > 0) {
          this.setOffset(0);
        }
      }
    },
    updateStatus: function updateStatus() {
      var _this11 = this;

      var tabs = this.getTabs();
      tabs.forEach(function (tab) {
        (0, _newArrowCheck2.default)(this, _this11);
        tab.show = tab.currentName === this.activeKey || this.animated;
      }.bind(this));
    },
    updateVisibility: function updateVisibility(index) {
      var _this12 = this;

      (0, _toConsumableArray2.default)(this.$refs.panes.children).forEach(function (el, i) {
        var _this13 = this;

        (0, _newArrowCheck2.default)(this, _this12);

        if (index === i) {
          (0, _toConsumableArray2.default)(el.children).forEach(function (child) {
            (0, _newArrowCheck2.default)(this, _this13);
            child.style.visibility = 'visible';
          }.bind(this));

          if (this.captureFocus) {
            setTimeout(function () {
              (0, _newArrowCheck2.default)(this, _this13);
              return _focusFirst(el, el);
            }.bind(this), transitionTime);
          }
        } else {
          setTimeout(function () {
            var _this14 = this;

            (0, _newArrowCheck2.default)(this, _this13);
            (0, _toConsumableArray2.default)(el.children).forEach(function (child) {
              (0, _newArrowCheck2.default)(this, _this14);
              child.style.visibility = 'hidden';
            }.bind(this));
          }.bind(this), transitionTime);
        }
      }.bind(this));
    }
  }
};
exports.default = _default;

/***/ }),
/* 225 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_pane_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(226);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_pane_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_pane_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_pane_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_pane_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_pane_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 226 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var logger = __webpack_require__(0).get("iview:components:tabs:pane.vue");

//
//
//
//
//
//
//
//
//
var prefixCls = 'ivu-tabs-tabpane';
var _default = {
  name: 'TabPane',
  props: {
    closable: {
      default: null,
      type: Boolean
    },
    disabled: {
      default: false,
      type: Boolean
    },
    icon: {
      default: undefined,
      type: String
    },
    label: {
      default: '',
      type: [String, Function]
    },
    name: {
      default: undefined,
      type: String
    }
  },
  data: function data() {
    return {
      currentName: this.name,
      prefixCls: prefixCls,
      show: true
    };
  },
  watch: {
    disabled: function disabled() {
      this.updateNav();
    },
    icon: function icon() {
      this.updateNav();
    },
    label: function label() {
      this.updateNav();
    },
    name: function name(val) {
      this.currentName = val;
      this.updateNav();
    }
  },
  mounted: function mounted() {
    this.updateNav();
  },
  destroyed: function destroyed() {
    this.updateNav();
  },
  methods: {
    updateNav: function updateNav() {
      this.$parent.updateNav();
    }
  }
};
exports.default = _default;

/***/ }),
/* 227 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_tag_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(228);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_tag_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_tag_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_tag_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_tag_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_tag_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _icon = _interopRequireDefault(__webpack_require__(19));

var _assist = __webpack_require__(6);

var logger = __webpack_require__(0).get("iview:components:tag:tag.vue");

var prefixCls = 'byx-tag';
var initColorList = ['blue', 'green', 'red', 'yellow', 'default'];
var _default = {
  name: 'Tag',
  components: {
    Icon: _icon.default
  },
  props: {
    checkable: {
      default: false,
      type: Boolean
    },
    checked: {
      default: true,
      type: Boolean
    },
    closable: {
      default: false,
      type: Boolean
    },
    color: {
      default: 'default',
      type: String
    },
    fade: {
      default: true,
      type: Boolean
    },
    name: {
      default: undefined,
      type: [String, Number]
    },
    type: {
      default: undefined,
      type: String,
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['border', 'dot']);
      }
    }
  },
  data: function data() {
    return {
      isChecked: this.checked
    };
  },
  computed: {
    bgColorStyle: function bgColorStyle() {
      return (0, _assist.oneOf)(this.color, initColorList) ? {} : {
        background: this.dotColor
      };
    },
    borderColor: function borderColor() {
      if (typeof this.color === 'undefined') {
        return '';
      }

      return this.color === 'default' ? '' : this.color;
    },
    classes: function classes() {
      var _ref;

      return ["".concat(prefixCls), (_ref = {}, (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-").concat(this.color), !!this.color && (0, _assist.oneOf)(this.color, initColorList)), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-").concat(this.type), !!this.type), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-closable"), this.closable), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-checked"), this.isChecked), _ref)];
    },
    defaultTypeColor: function defaultTypeColor() {
      if (this.type !== 'dot' && this.type !== 'border') {
        if (typeof this.color !== 'undefined') {
          return (0, _assist.oneOf)(this.color, initColorList) ? '' : this.color;
        }
      }

      return '';
    },
    dotClasses: function dotClasses() {
      return "".concat(prefixCls, "-dot-inner");
    },
    dotColor: function dotColor() {
      if (typeof this.color === 'undefined') {
        return '';
      }

      return (0, _assist.oneOf)(this.color, initColorList) ? '' : this.color;
    },
    iconClass: function iconClass() {
      if (this.type === 'dot') {
        return '';
      }

      if (this.type === 'border') {
        return (0, _assist.oneOf)(this.color, initColorList) ? "".concat(prefixCls, "-color-").concat(this.color) : '';
      }

      if (typeof this.color === 'undefined') {
        return '';
      }

      return this.color === 'default' ? '' : 'rgb(255, 255, 255)';
    },
    lineColor: function lineColor() {
      if (this.type === 'dot') {
        return '';
      }

      if (this.type === 'border') {
        if (typeof this.color === 'undefined') {
          return '';
        }

        return (0, _assist.oneOf)(this.color, initColorList) ? '' : this.color;
      }

      if (typeof this.color === 'undefined') {
        return '';
      }

      return this.color === 'default' ? '' : 'rgb(255, 255, 255)';
    },
    showDot: function showDot() {
      return !!this.type && this.type === 'dot';
    },
    textClasses: function textClasses() {
      var type1 = '';
      var type2 = '';

      if (this.type === 'border') {
        type1 = (0, _assist.oneOf)(this.color, initColorList) ? "".concat(prefixCls, "-color-").concat(this.color) : '';
      }

      if (this.type !== 'dot' && this.type !== 'border' && this.color !== 'default') {
        type2 = this.isChecked ? "".concat(prefixCls, "-color-white") : '';
      }

      return ["".concat(prefixCls, "-text"), type1, type2];
    },
    textColorStyle: function textColorStyle() {
      if ((0, _assist.oneOf)(this.color, initColorList)) {
        return {};
      }

      if (this.type !== 'dot' && this.type !== 'border') {
        return this.isChecked ? {
          color: this.lineColor
        } : {};
      }

      return {
        color: this.lineColor
      };
    },
    wraperStyles: function wraperStyles() {
      return (0, _assist.oneOf)(this.color, initColorList) ? {} : {
        background: this.isChecked ? this.defaultTypeColor : 'transparent',
        borderColor: this.type !== 'dot' && this.type !== 'border' && this.isChecked ? this.borderColor : this.lineColor,
        borderStyle: 'solid',
        borderWidth: '1px',
        color: this.lineColor
      };
    }
  },
  methods: {
    check: function check() {
      if (!this.checkable) {
        return;
      }

      var checked = !this.isChecked;
      this.isChecked = checked;

      if (this.name === undefined) {
        this.$emit('on-change', checked);
      } else {
        this.$emit('on-change', checked, this.name);
      }
    },
    close: function close(event) {
      if (this.name === undefined) {
        this.$emit('on-close', event);
      } else {
        this.$emit('on-close', event, this.name);
      }
    }
  }
};
exports.default = _default;

/***/ }),
/* 229 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_timeline_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(230);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_timeline_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_timeline_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_timeline_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_timeline_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_timeline_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 230 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var logger = __webpack_require__(0).get("iview:components:timeline:timeline.vue");

//
//
//
//
//
var prefixCls = 'ivu-timeline';
var _default = {
  name: 'Timeline',
  props: {
    pending: {
      default: false,
      type: Boolean
    }
  },
  computed: {
    classes: function classes() {
      return ["".concat(prefixCls), (0, _defineProperty2.default)({}, "".concat(prefixCls, "-pending"), this.pending)];
    }
  }
};
exports.default = _default;

/***/ }),
/* 231 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_timeline_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(232);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_timeline_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_timeline_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_timeline_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_timeline_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_timeline_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 232 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var logger = __webpack_require__(0).get("iview:components:timeline:timeline-item.vue");

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var prefixCls = 'ivu-timeline';
var _default = {
  name: 'TimelineItem',
  props: {
    color: {
      default: 'blue',
      type: String
    }
  },
  data: function data() {
    return {
      dot: false
    };
  },
  computed: {
    contentClasses: function contentClasses() {
      return "".concat(prefixCls, "-item-content");
    },
    customColor: function customColor() {
      var style = {};

      if (this.color) {
        if (!this.headColorShow) {
          style = {
            color: this.color,
            'border-color': this.color
          };
        }
      }

      return style;
    },
    headClasses: function headClasses() {
      var _ref;

      return ["".concat(prefixCls, "-item-head"), (_ref = {}, (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-item-head-custom"), this.dot), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-item-head-").concat(this.color), this.headColorShow), _ref)];
    },
    headColorShow: function headColorShow() {
      return this.color === 'blue' || this.color === 'red' || this.color === 'green';
    },
    itemClasses: function itemClasses() {
      return "".concat(prefixCls, "-item");
    },
    tailClasses: function tailClasses() {
      return "".concat(prefixCls, "-item-tail");
    }
  },
  mounted: function mounted() {
    this.dot = !!this.$refs.dot.innerHTML.length;
  }
};
exports.default = _default;

/***/ }),
/* 233 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_transfer_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(234);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_transfer_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_transfer_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_transfer_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_transfer_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_transfer_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 234 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(15));

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _stubObject = _interopRequireDefault(__webpack_require__(45));

var _stubArray = _interopRequireDefault(__webpack_require__(14));

var _list = _interopRequireDefault(__webpack_require__(657));

var _operation = _interopRequireDefault(__webpack_require__(659));

var _locale = _interopRequireDefault(__webpack_require__(10));

var _emitter = _interopRequireDefault(__webpack_require__(9));

var logger = __webpack_require__(0).get("iview:components:transfer:transfer.vue");

var prefixCls = 'ivu-transfer';
var _default2 = {
  name: 'Transfer',
  mixins: [_emitter.default, _locale.default],
  props: {
    data: {
      default: _stubArray.default,
      type: Array
    },
    filterable: {
      default: false,
      type: Boolean
    },
    filterMethod: {
      default: function _default(data, query) {
        var type = 'label' in data ? 'label' : 'key';
        return data[type].indexOf(query) > -1;
      },
      type: Function
    },
    filterPlaceholder: {
      default: undefined,
      type: String
    },
    listStyle: {
      default: _stubObject.default,
      type: Object
    },
    notFoundText: {
      default: undefined,
      type: String
    },
    operations: {
      default: _stubArray.default,
      type: Array
    },
    renderFormat: {
      default: function _default(item) {
        return item.label || item.key;
      },
      type: Function
    },
    selectedKeys: {
      default: _stubArray.default,
      type: Array
    },
    targetKeys: {
      default: _stubArray.default,
      type: Array
    },
    titles: {
      default: undefined,
      type: Array
    }
  },
  data: function data() {
    return {
      leftCheckedKeys: [],
      leftData: [],
      prefixCls: prefixCls,
      rightCheckedKeys: [],
      rightData: []
    };
  },
  computed: {
    classes: function classes() {
      return ["".concat(prefixCls)];
    },
    leftValidKeysCount: function leftValidKeysCount() {
      return this.getValidKeys('left').length;
    },
    localeFilterPlaceholder: function localeFilterPlaceholder() {
      if (this.filterPlaceholder === undefined) {
        return this.t('i.transfer.filterPlaceholder');
      }

      return this.filterPlaceholder;
    },
    localeNotFoundText: function localeNotFoundText() {
      if (this.notFoundText === undefined) {
        return this.t('i.transfer.notFoundText');
      }

      return this.notFoundText;
    },
    localeTitles: function localeTitles() {
      if (Array.isArray(this.titles)) {
        return this.titles;
      }

      return [this.t('i.transfer.titles.source'), this.t('i.transfer.titles.target')];
    },
    rightValidKeysCount: function rightValidKeysCount() {
      return this.getValidKeys('right').length;
    }
  },
  watch: {
    data: function data() {
      this.splitData(false);
    },
    targetKeys: function targetKeys() {
      this.splitData(false);
    }
  },
  mounted: function mounted() {
    this.splitData(true);
  },
  methods: {
    getValidKeys: function getValidKeys(direction) {
      var _this = this;

      return this["".concat(direction, "Data")].filter(function (data) {
        (0, _newArrowCheck2.default)(this, _this);
        return !data.disabled && this["".concat(direction, "CheckedKeys")].indexOf(data.key) > -1;
      }.bind(this)).map(function (data) {
        (0, _newArrowCheck2.default)(this, _this);
        return data.key;
      }.bind(this));
    },
    handleCheckedKeys: function handleCheckedKeys() {
      var sourceSelectedKeys = this.getValidKeys('left');
      var targetSelectedKeys = this.getValidKeys('right');
      this.$emit('on-selected-change', sourceSelectedKeys, targetSelectedKeys);
    },
    handleLeftCheckedKeysChange: function handleLeftCheckedKeysChange(keys) {
      this.leftCheckedKeys = keys;
    },
    handleRightCheckedKeysChange: function handleRightCheckedKeysChange(keys) {
      this.rightCheckedKeys = keys;
    },
    moveTo: function moveTo(direction) {
      var _this2 = this;

      var targetKeys = this.targetKeys;
      var opposite = direction === 'left' ? 'right' : 'left';
      var moveKeys = this.getValidKeys(opposite);
      var newTargetKeys = direction === 'right' ? moveKeys.concat(targetKeys) : targetKeys.filter(function (targetKey) {
        var _this3 = this;

        (0, _newArrowCheck2.default)(this, _this2);
        return !moveKeys.some(function (checkedKey) {
          (0, _newArrowCheck2.default)(this, _this3);
          return targetKey === checkedKey;
        }.bind(this));
      }.bind(this));
      this.$refs[opposite].toggleSelectAll(false);
      this.$emit('on-change', newTargetKeys, direction, moveKeys);
      this.dispatch('FormItem', 'on-form-change', {
        direction: direction,
        moveKeys: moveKeys,
        tarketKeys: newTargetKeys
      });
    },
    splitData: function splitData() {
      var _this4 = this;

      var init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      this.leftData = (0, _toConsumableArray2.default)(this.data);
      this.rightData = [];

      if (this.targetKeys.length > 0) {
        this.targetKeys.forEach(function (targetKey) {
          var _this5 = this;

          (0, _newArrowCheck2.default)(this, _this4);
          var filteredData = this.leftData.filter(function (data, index) {
            (0, _newArrowCheck2.default)(this, _this5);

            if (data.key === targetKey) {
              this.leftData.splice(index, 1);
              return true;
            }

            return false;
          }.bind(this));

          if (filteredData && filteredData.length > 0) {
            this.rightData.push(filteredData[0]);
          }
        }.bind(this));
      }

      if (init) {
        this.splitSelectedKey();
      }
    },
    splitSelectedKey: function splitSelectedKey() {
      var _this6 = this;

      var selectedKeys = this.selectedKeys;

      if (selectedKeys.length > 0) {
        this.leftCheckedKeys = this.leftData.filter(function (data) {
          (0, _newArrowCheck2.default)(this, _this6);
          return selectedKeys.indexOf(data.key) > -1;
        }.bind(this)).map(function (data) {
          (0, _newArrowCheck2.default)(this, _this6);
          return data.key;
        }.bind(this));
        this.rightCheckedKeys = this.rightData.filter(function (data) {
          (0, _newArrowCheck2.default)(this, _this6);
          return selectedKeys.indexOf(data.key) > -1;
        }.bind(this)).map(function (data) {
          (0, _newArrowCheck2.default)(this, _this6);
          return data.key;
        }.bind(this));
      }
    }
  },
  render: function render(h) {
    var _this8 = this;

    function cloneVNode(vnode) {
      var _this7 = this;

      var clonedChildren = vnode.children && vnode.children.map(function (vNode) {
        (0, _newArrowCheck2.default)(this, _this7);
        return cloneVNode(vNode);
      }.bind(this));
      var cloned = h(vnode.tag, vnode.data, clonedChildren);
      cloned.text = vnode.text;
      cloned.isComment = vnode.isComment;
      cloned.componentOptions = vnode.componentOptions;
      cloned.elm = vnode.elm;
      cloned.context = vnode.context;
      cloned.ns = vnode.ns;
      cloned.isStatic = vnode.isStatic;
      cloned.key = vnode.key;
      return cloned;
    }

    var vNodes = this.$slots.default === undefined ? [] : this.$slots.default;
    var clonedVNodes = this.$slots.default === undefined ? [] : vNodes.map(function (vnode) {
      (0, _newArrowCheck2.default)(this, _this8);
      return cloneVNode(vnode);
    }.bind(this));
    return h('div', {
      class: this.classes
    }, [h(_list.default, {
      on: {
        'on-checked-keys-change': this.handleLeftCheckedKeysChange
      },
      props: {
        checkedKeys: this.leftCheckedKeys,
        data: this.leftData,
        filterable: this.filterable,
        filterMethod: this.filterMethod,
        filterPlaceholder: this.localeFilterPlaceholder,
        listStyle: this.listStyle,
        notFoundText: this.localeNotFoundText,
        prefixCls: "".concat(this.prefixCls, "-list"),
        renderFormat: this.renderFormat,
        title: this.localeTitles[0],
        validKeysCount: this.leftValidKeysCount
      },
      ref: 'left'
    }, vNodes), h(_operation.default, {
      props: {
        leftActive: this.leftValidKeysCount > 0,
        operations: this.operations,
        prefixCls: this.prefixCls,
        rightActive: this.rightValidKeysCount > 0
      }
    }), h(_list.default, {
      on: {
        'on-checked-keys-change': this.handleRightCheckedKeysChange
      },
      props: {
        checkedKeys: this.rightCheckedKeys,
        data: this.rightData,
        filterable: this.filterable,
        filterMethod: this.filterMethod,
        filterPlaceholder: this.localeFilterPlaceholder,
        listStyle: this.listStyle,
        notFoundText: this.localeNotFoundText,
        prefixCls: "".concat(this.prefixCls, "-list"),
        renderFormat: this.renderFormat,
        title: this.localeTitles[1],
        validKeysCount: this.rightValidKeysCount
      },
      ref: 'right'
    }, clonedVNodes)]);
  }
};
exports.default = _default2;

/***/ }),
/* 235 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_list_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(236);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_list_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_list_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_list_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_list_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_list_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _search = _interopRequireDefault(__webpack_require__(658));

var _checkbox = _interopRequireDefault(__webpack_require__(38));

var logger = __webpack_require__(0).get("iview:components:transfer:list.vue");

var _default = {
  name: 'TransferList',
  components: {
    Checkbox: _checkbox.default,
    Search: _search.default
  },
  props: {
    checkedKeys: {
      default: undefined,
      type: Array
    },
    data: {
      default: undefined,
      type: Array
    },
    filterable: {
      default: false,
      type: Boolean
    },
    filterMethod: {
      default: undefined,
      type: Function
    },
    filterPlaceholder: {
      default: undefined,
      type: String
    },
    listStyle: {
      default: undefined,
      type: Object
    },
    notFoundText: {
      default: undefined,
      type: String
    },
    prefixCls: {
      default: undefined,
      type: String
    },
    renderFormat: {
      default: undefined,
      type: Function
    },
    title: {
      default: undefined,
      type: [String, Number]
    },
    validKeysCount: {
      default: undefined,
      type: Number
    }
  },
  data: function data() {
    return {
      query: '',
      showFooter: true,
      showItems: []
    };
  },
  computed: {
    bodyClasses: function bodyClasses() {
      var _ref;

      return ["".concat(this.prefixCls, "-body"), (_ref = {}, (0, _defineProperty2.default)(_ref, "".concat(this.prefixCls, "-body-with-search"), this.filterable), (0, _defineProperty2.default)(_ref, "".concat(this.prefixCls, "-body-with-footer"), this.showFooter), _ref)];
    },
    checkedAll: function checkedAll() {
      var _this = this;

      return this.data.filter(function (data) {
        (0, _newArrowCheck2.default)(this, _this);
        return !data.disabled;
      }.bind(this)).length === this.validKeysCount && this.validKeysCount !== 0;
    },
    checkedAllDisabled: function checkedAllDisabled() {
      var _this2 = this;

      return this.data.filter(function (data) {
        (0, _newArrowCheck2.default)(this, _this2);
        return !data.disabled;
      }.bind(this)).length <= 0;
    },
    classes: function classes() {
      return ["".concat(this.prefixCls), (0, _defineProperty2.default)({}, "".concat(this.prefixCls, "-with-footer"), this.showFooter)];
    },
    count: function count() {
      var validKeysCount = this.validKeysCount;
      return "".concat(validKeysCount > 0 ? "".concat(validKeysCount, "/") : '').concat(this.data.length);
    },
    filterData: function filterData() {
      var _this3 = this;

      return this.showItems.filter(function (item) {
        (0, _newArrowCheck2.default)(this, _this3);
        return this.filterMethod(item, this.query);
      }.bind(this));
    }
  },
  watch: {
    data: function data() {
      this.updateFilteredData();
    }
  },
  created: function created() {
    this.updateFilteredData();
  },
  mounted: function mounted() {
    this.showFooter = this.$slots.default !== undefined;
  },
  methods: {
    handleQueryChange: function handleQueryChange(val) {
      this.query = val;
    },
    handleQueryClear: function handleQueryClear() {
      this.query = '';
    },
    isCheck: function isCheck(item) {
      var _this4 = this;

      return this.checkedKeys.some(function (key) {
        (0, _newArrowCheck2.default)(this, _this4);
        return key === item.key;
      }.bind(this));
    },
    itemClasses: function itemClasses(item) {
      return ["".concat(this.prefixCls, "-content-item"), (0, _defineProperty2.default)({}, "".concat(this.prefixCls, "-content-item-disabled"), item.disabled)];
    },
    select: function select(item) {
      if (item.disabled) {
        return;
      }

      var index = this.checkedKeys.indexOf(item.key);

      if (index > -1) {
        this.checkedKeys.splice(index, 1);
      } else {
        this.checkedKeys.push(item.key);
      }

      this.$parent.handleCheckedKeys();
    },
    showLabel: function showLabel(item) {
      return this.renderFormat(item);
    },
    toggleSelectAll: function toggleSelectAll(status) {
      var _this5 = this;

      var keys = status ? this.data.filter(function (data) {
        (0, _newArrowCheck2.default)(this, _this5);
        return !data.disabled || this.checkedKeys.indexOf(data.key) > -1;
      }.bind(this)).map(function (data) {
        (0, _newArrowCheck2.default)(this, _this5);
        return data.key;
      }.bind(this)) : this.data.filter(function (data) {
        (0, _newArrowCheck2.default)(this, _this5);
        return data.disabled && this.checkedKeys.indexOf(data.key) > -1;
      }.bind(this)).map(function (data) {
        (0, _newArrowCheck2.default)(this, _this5);
        return data.key;
      }.bind(this));
      this.$emit('on-checked-keys-change', keys);
    },
    updateFilteredData: function updateFilteredData() {
      this.showItems = this.data;
    }
  }
};
exports.default = _default;

/***/ }),
/* 237 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_search_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(238);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_search_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_search_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_search_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_search_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_search_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _input = _interopRequireDefault(__webpack_require__(37));

var logger = __webpack_require__(0).get("iview:components:transfer:search.vue");

var _default = {
  name: 'Search',
  components: {
    iInput: _input.default
  },
  props: {
    placeholder: {
      default: undefined,
      type: String
    },
    prefixCls: {
      default: undefined,
      type: String
    },
    query: {
      default: undefined,
      type: String
    }
  },
  data: function data() {
    return {
      currentQuery: this.query
    };
  },
  computed: {
    icon: function icon() {
      return this.query === '' ? 'ios-search' : 'ios-close';
    }
  },
  watch: {
    currentQuery: function currentQuery(val) {
      this.$emit('on-query-change', val);
    },
    query: function query(val) {
      this.currentQuery = val;
    }
  },
  methods: {
    handleClick: function handleClick() {
      if (this.currentQuery === '') {
        return;
      }

      this.currentQuery = '';
      this.$emit('on-query-clear');
    }
  }
};
exports.default = _default;

/***/ }),
/* 239 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_operation_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(240);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_operation_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_operation_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_operation_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_operation_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_operation_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 240 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _button = _interopRequireDefault(__webpack_require__(22));

var _icon = _interopRequireDefault(__webpack_require__(12));

var logger = __webpack_require__(0).get("iview:components:transfer:operation.vue");

var _default = {
  name: 'Operation',
  components: {
    iButton: _button.default,
    Icon: _icon.default
  },
  props: {
    leftActive: {
      default: false,
      type: Boolean
    },
    operations: {
      default: undefined,
      type: Array
    },
    prefixCls: {
      default: undefined,
      type: String
    },
    rightActive: {
      default: false,
      type: Boolean
    }
  },
  methods: {
    moveToLeft: function moveToLeft() {
      this.$parent.moveTo('left');
    },
    moveToRight: function moveToRight() {
      this.$parent.moveTo('right');
    }
  }
};
exports.default = _default;

/***/ }),
/* 241 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_tree_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(242);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_tree_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_tree_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_tree_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_tree_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_tree_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 242 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _stubArray = _interopRequireDefault(__webpack_require__(14));

var _node = _interopRequireDefault(__webpack_require__(662));

var _emitter = _interopRequireDefault(__webpack_require__(9));

var _locale = _interopRequireDefault(__webpack_require__(10));

var logger = __webpack_require__(0).get("iview:components:tree:tree.vue");

var prefixCls = 'ivu-tree';
var _default = {
  name: 'Tree',
  components: {
    TreeNode: _node.default
  },
  mixins: [_emitter.default, _locale.default],
  props: {
    childrenKey: {
      default: 'children',
      type: String
    },
    data: {
      default: _stubArray.default,
      type: Array
    },
    emptyText: {
      default: undefined,
      type: String
    },
    loadData: {
      default: undefined,
      type: Function
    },
    multiple: {
      default: false,
      type: Boolean
    },
    render: {
      default: undefined,
      type: Function
    },
    showCheckbox: {
      default: false,
      type: Boolean
    }
  },
  data: function data() {
    return {
      flatState: [],
      prefixCls: prefixCls,
      stateTree: this.data
    };
  },
  computed: {
    localeEmptyText: function localeEmptyText() {
      if (typeof this.emptyText === 'undefined') {
        return this.t('i.tree.emptyText');
      }

      return this.emptyText;
    }
  },
  watch: {
    data: {
      deep: true,
      handler: function handler() {
        this.stateTree = this.data;
        this.flatState = this.compileFlatState();
        this.rebuildTree();
      }
    }
  },
  created: function created() {
    this.flatState = this.compileFlatState();
    this.rebuildTree();
  },
  mounted: function mounted() {
    var _this = this;

    this.$on('on-check', this.handleCheck);
    this.$on('on-selected', this.handleSelect);
    this.$on('toggle-expand', function (node) {
      (0, _newArrowCheck2.default)(this, _this);
      return this.$emit('on-toggle-expand', node);
    }.bind(this));
  },
  methods: {
    compileFlatState: function compileFlatState() {
      var _this3 = this;

      // so we have always a relation parent/children of each node
      var keyCounter = 0;
      var childrenKey = this.childrenKey;
      var flatTree = [];

      function flattenChildren(node, parent) {
        var _this2 = this;

        node.nodeKey = keyCounter;
        keyCounter += 1;
        flatTree[node.nodeKey] = {
          node: node,
          nodeKey: node.nodeKey
        };

        if (typeof parent !== 'undefined') {
          flatTree[node.nodeKey].parent = parent.nodeKey;
          flatTree[parent.nodeKey][childrenKey].push(node.nodeKey);
        }

        if (node[childrenKey]) {
          flatTree[node.nodeKey][childrenKey] = [];
          node[childrenKey].forEach(function (child) {
            (0, _newArrowCheck2.default)(this, _this2);
            return flattenChildren(child, node);
          }.bind(this));
        }
      }

      this.stateTree.forEach(function (rootNode) {
        (0, _newArrowCheck2.default)(this, _this3);
        flattenChildren(rootNode);
      }.bind(this));
      return flatTree;
    },
    getCheckedNodes: function getCheckedNodes() {
      var _this4 = this;

      /* public API */
      return this.flatState.filter(function (obj) {
        (0, _newArrowCheck2.default)(this, _this4);
        return obj.node.checked;
      }.bind(this)).map(function (obj) {
        (0, _newArrowCheck2.default)(this, _this4);
        return obj.node;
      }.bind(this));
    },
    getSelectedNodes: function getSelectedNodes() {
      var _this5 = this;

      /* public API */
      return this.flatState.filter(function (obj) {
        (0, _newArrowCheck2.default)(this, _this5);
        return obj.node.selected;
      }.bind(this)).map(function (obj) {
        (0, _newArrowCheck2.default)(this, _this5);
        return obj.node;
      }.bind(this));
    },
    handleCheck: function handleCheck(_ref) {
      var checked = _ref.checked,
          nodeKey = _ref.nodeKey;
      var node = this.flatState[nodeKey].node;
      this.$set(node, 'checked', checked);
      this.$set(node, 'indeterminate', false);
      this.updateTreeUp(nodeKey); // propagate up

      this.updateTreeDown(node, {
        checked: checked,
        indeterminate: false
      }); // reset `indeterminate` when going down

      this.$emit('on-check-change', this.getCheckedNodes());
    },
    handleSelect: function handleSelect(nodeKey) {
      var _this6 = this;

      var node = this.flatState[nodeKey].node;

      if (!this.multiple) {
        // reset previously selected node
        var currentSelectedKey = this.flatState.findIndex(function (obj) {
          (0, _newArrowCheck2.default)(this, _this6);
          return obj.node.selected;
        }.bind(this));

        if (currentSelectedKey >= 0 && currentSelectedKey !== nodeKey) {
          this.$set(this.flatState[currentSelectedKey].node, 'selected', false);
        }
      }

      this.$set(node, 'selected', !node.selected);
      this.$emit('on-select-change', this.getSelectedNodes());
    },
    rebuildTree: function rebuildTree() {
      var _this7 = this;

      // only called when `data` prop changes
      var checkedNodes = this.getCheckedNodes();
      checkedNodes.forEach(function (node) {
        (0, _newArrowCheck2.default)(this, _this7);
        this.updateTreeDown(node, {
          checked: true
        }); // propagate upwards

        var parentKey = this.flatState[node.nodeKey].parent;

        if (!parentKey && parentKey !== 0) {
          return;
        }

        var parent = this.flatState[parentKey].node;
        var childHasCheckSetter = typeof node.checked !== 'undefined' && node.checked;

        if (childHasCheckSetter && parent.checked !== node.checked) {
          this.updateTreeUp(node.nodeKey); // update tree upwards
        }
      }.bind(this));
    },
    updateTreeDown: function updateTreeDown(node) {
      var _this8 = this;

      var changes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      Object.keys(changes).forEach(function (key) {
        (0, _newArrowCheck2.default)(this, _this8);
        this.$set(node, key, changes[key]);
      }.bind(this));

      if (node[this.childrenKey]) {
        node[this.childrenKey].forEach(function (child) {
          (0, _newArrowCheck2.default)(this, _this8);
          this.updateTreeDown(child, changes);
        }.bind(this));
      }
    },
    updateTreeUp: function updateTreeUp(nodeKey) {
      var _this9 = this;

      var parentKey = this.flatState[nodeKey].parent;

      if (typeof parentKey === 'undefined') {
        return;
      }

      var node = this.flatState[nodeKey].node;
      var parent = this.flatState[parentKey].node;

      if (node.checked === parent.checked && node.indeterminate === parent.indeterminate) {
        return;
      } // no need to update upwards


      if (node.checked === true) {
        this.$set(parent, 'checked', parent[this.childrenKey].every(function (childNode) {
          (0, _newArrowCheck2.default)(this, _this9);
          return childNode.checked;
        }.bind(this)));
        this.$set(parent, 'indeterminate', !parent.checked);
      } else {
        this.$set(parent, 'checked', false);
        this.$set(parent, 'indeterminate', parent[this.childrenKey].some(function (childNode) {
          (0, _newArrowCheck2.default)(this, _this9);
          return childNode.checked || childNode.indeterminate;
        }.bind(this)));
      }

      this.updateTreeUp(parentKey);
    }
  }
};
exports.default = _default;

/***/ }),
/* 243 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_node_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(244);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_node_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_node_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_node_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_node_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_node_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 244 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _stubObject = _interopRequireDefault(__webpack_require__(45));

var _checkbox = _interopRequireDefault(__webpack_require__(38));

var _icon = _interopRequireDefault(__webpack_require__(12));

var _render = _interopRequireDefault(__webpack_require__(663));

var _collapseTransition = _interopRequireDefault(__webpack_require__(262));

var _emitter = _interopRequireDefault(__webpack_require__(9));

var _assist = __webpack_require__(6);

var logger = __webpack_require__(0).get("iview:components:tree:node.vue");

var prefixCls = 'ivu-tree';
var _default = {
  name: 'TreeNode',
  components: {
    Checkbox: _checkbox.default,
    CollapseTransition: _collapseTransition.default,
    Icon: _icon.default,
    Render: _render.default
  },
  mixins: [_emitter.default],
  props: {
    childrenKey: {
      default: 'children',
      type: String
    },
    data: {
      default: _stubObject.default,
      type: Object
    },
    multiple: {
      default: false,
      type: Boolean
    },
    showCheckbox: {
      default: false,
      type: Boolean
    }
  },
  data: function data() {
    return {
      prefixCls: prefixCls
    };
  },
  computed: {
    arrowClasses: function arrowClasses() {
      var _ref;

      return ["".concat(prefixCls, "-arrow"), (_ref = {}, (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-arrow-disabled"), this.data.disabled), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-arrow-open"), this.data.expand), _ref)];
    },
    children: function children() {
      return this.data[this.childrenKey];
    },
    classes: function classes() {
      return ["".concat(prefixCls, "-children")];
    },
    isParentRender: function isParentRender() {
      var Tree = (0, _assist.findComponentUpward)(this, 'Tree');
      return Tree && Tree.render;
    },
    node: function node() {
      var _this = this;

      var Tree = (0, _assist.findComponentUpward)(this, 'Tree');

      if (Tree) {
        // 将所有的 node（即flatState）和当前 node 都传递
        return [Tree.flatState, Tree.flatState.find(function (item) {
          (0, _newArrowCheck2.default)(this, _this);
          return item.nodeKey === this.data.nodeKey;
        }.bind(this))];
      }

      return [];
    },
    parentRender: function parentRender() {
      var Tree = (0, _assist.findComponentUpward)(this, 'Tree');

      if (Tree && Tree.render) {
        return Tree.render;
      }

      return null;
    },
    selectedCls: function selectedCls() {
      return [(0, _defineProperty2.default)({}, "".concat(prefixCls, "-node-selected"), this.data.selected)];
    },
    showArrow: function showArrow() {
      return this.data[this.childrenKey] && this.data[this.childrenKey].length || 'loading' in this.data && !this.data.loading;
    },
    showLoading: function showLoading() {
      return 'loading' in this.data && this.data.loading;
    },
    titleClasses: function titleClasses() {
      return ["".concat(prefixCls, "-title"), (0, _defineProperty2.default)({}, "".concat(prefixCls, "-title-selected"), this.data.selected)];
    }
  },
  methods: {
    handleCheck: function handleCheck() {
      if (this.data.disabled) {
        return;
      }

      var changes = {
        checked: !this.data.checked && !this.data.indeterminate,
        nodeKey: this.data.nodeKey
      };
      this.dispatch('Tree', 'on-check', changes);
    },
    handleExpand: function handleExpand() {
      var _this2 = this;

      var item = this.data;

      if (item.disabled) {
        return;
      } // async loading


      if (item[this.childrenKey].length === 0) {
        var tree = (0, _assist.findComponentUpward)(this, 'Tree');

        if (tree && tree.loadData) {
          this.$set(this.data, 'loading', true);
          tree.loadData(item, function (children) {
            var _this3 = this;

            (0, _newArrowCheck2.default)(this, _this2);
            this.$set(this.data, 'loading', false);

            if (children.length) {
              this.$set(this.data, this.childrenKey, children);
              this.$nextTick(function () {
                (0, _newArrowCheck2.default)(this, _this3);
                return this.handleExpand();
              }.bind(this));
            }
          }.bind(this));
          return;
        }
      }

      if (item[this.childrenKey] && item[this.childrenKey].length) {
        this.$set(this.data, 'expand', !this.data.expand);
        this.dispatch('Tree', 'toggle-expand', this.data);
      }
    },
    handleSelect: function handleSelect() {
      if (this.data.disabled) {
        return;
      }

      this.dispatch('Tree', 'on-selected', this.data.nodeKey);
    }
  }
};
exports.default = _default;

/***/ }),
/* 245 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_upload_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(246);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_upload_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_upload_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_upload_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_upload_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_upload_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 246 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _stubArray = _interopRequireDefault(__webpack_require__(14));

var _stubObject = _interopRequireDefault(__webpack_require__(45));

var _noop = _interopRequireDefault(__webpack_require__(13));

var _uploadList = _interopRequireDefault(__webpack_require__(666));

var _ajax = _interopRequireDefault(__webpack_require__(667));

var _assist = __webpack_require__(6);

var _emitter = _interopRequireDefault(__webpack_require__(9));

var logger = __webpack_require__(0).get("iview:components:upload:upload.vue");

var prefixCls = 'ivu-upload';
var _default = {
  name: 'Upload',
  components: {
    UploadList: _uploadList.default
  },
  mixins: [_emitter.default],
  props: {
    accept: {
      default: undefined,
      type: String
    },
    action: {
      required: true,
      type: String
    },
    beforeUpload: {
      default: undefined,
      type: Function
    },
    data: {
      default: undefined,
      type: Object
    },
    defaultFileList: {
      default: _stubArray.default,
      type: Array
    },
    format: {
      default: _stubArray.default,
      type: Array
    },
    headers: {
      default: _stubObject.default,
      type: Object
    },
    maxSize: {
      default: undefined,
      type: Number
    },
    multiple: {
      default: false,
      type: Boolean
    },
    name: {
      default: 'file',
      type: String
    },
    onError: {
      default: _stubObject.default,
      type: Function
    },
    onExceededSize: {
      default: _stubObject.default,
      type: Function
    },
    onFormatError: {
      default: _stubObject.default,
      type: Function
    },
    onPreview: {
      default: _stubObject.default,
      type: Function
    },
    onProgress: {
      default: _stubObject.default,
      type: Function
    },
    onRemove: {
      default: _stubObject.default,
      type: Function
    },
    onSuccess: {
      default: _stubObject.default,
      type: Function
    },
    showUploadList: {
      default: true,
      type: Boolean
    },
    type: {
      default: 'select',
      type: String,
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['select', 'drag']);
      }
    },
    withCredentials: {
      default: false,
      type: Boolean
    }
  },
  data: function data() {
    return {
      dragOver: false,
      fileList: [],
      prefixCls: prefixCls,
      tempIndex: 1
    };
  },
  computed: {
    classes: function classes() {
      var _ref;

      return ["".concat(prefixCls), (_ref = {}, (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-select"), this.type === 'select'), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-drag"), this.type === 'drag'), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-dragOver"), this.type === 'drag' && this.dragOver), _ref)];
    }
  },
  watch: {
    defaultFileList: {
      handler: function handler(fileList) {
        var _this = this;

        this.fileList = fileList.map(function (item) {
          (0, _newArrowCheck2.default)(this, _this);
          item.status = 'finished';
          item.percentage = 100;
          item.uid = Date.now() + this.tempIndex;
          this.tempIndex += 1;
          return item;
        }.bind(this));
      },
      immediate: true
    }
  },
  methods: {
    clearFiles: function clearFiles() {
      this.fileList = [];
    },
    getFile: function getFile(file) {
      var _this2 = this;

      var fileList = this.fileList;
      var target;
      fileList.every(function (item) {
        (0, _newArrowCheck2.default)(this, _this2);
        target = file.uid === item.uid ? item : null;
        return !target;
      }.bind(this));
      return target;
    },
    handleChange: function handleChange(e) {
      var files = e.target.files;

      if (!files) {
        return;
      }

      this.uploadFiles(files);
      this.$refs.input.value = null;
    },
    handleClick: function handleClick() {
      this.$refs.input.click();
    },
    handleError: function handleError(err, response, file) {
      var item = this.getFile(file);
      var fileList = this.fileList;
      item.status = 'fail';
      fileList.splice(fileList.indexOf(item), 1);
      this.onError(err, response, file);
    },
    handlePreview: function handlePreview(file) {
      if (file.status === 'finished') {
        this.onPreview(file);
      }
    },
    handleProgress: function handleProgress(e, file) {
      var item = this.getFile(file);
      this.onProgress(e, item, this.fileList);
      item.percentage = e.percent || 0;
    },
    handleRemove: function handleRemove(file) {
      var fileList = this.fileList;
      fileList.splice(fileList.indexOf(file), 1);
      this.onRemove(file, fileList);
    },
    handleStart: function handleStart(file) {
      file.uid = Date.now() + this.tempIndex;
      this.tempIndex += 1;
      var item = {
        name: file.name,
        percentage: 0,
        showProgress: true,
        size: file.size,
        status: 'uploading',
        uid: file.uid
      };
      this.fileList.push(item);
    },
    handleSuccess: function handleSuccess(res, file) {
      var _this3 = this;

      var item = this.getFile(file);

      if (item) {
        item.status = 'finished';
        item.response = res;
        this.dispatch('FormItem', 'on-form-change', item);
        this.onSuccess(res, item, this.fileList);
        setTimeout(function () {
          (0, _newArrowCheck2.default)(this, _this3);
          item.showProgress = false;
        }.bind(this), 1000);
      }
    },
    onDrop: function onDrop(e) {
      this.dragOver = false;
      this.uploadFiles(e.dataTransfer.files);
    },
    post: function post(file) {
      var _this4 = this;

      // check format
      if (this.format.length) {
        var fileFormat = file.name.split('.').pop().toLocaleLowerCase();
        var checked = this.format.some(function (item) {
          (0, _newArrowCheck2.default)(this, _this4);
          return item.toLocaleLowerCase() === fileFormat;
        }.bind(this));

        if (!checked) {
          this.onFormatError(file, this.fileList);
          return;
        }
      } // check maxSize


      if (this.maxSize) {
        if (file.size > this.maxSize * 1024) {
          this.onExceededSize(file, this.fileList);
          return;
        }
      }

      this.handleStart(file);
      var formData = new FormData();
      formData.append(this.name, file);
      (0, _ajax.default)({
        action: this.action,
        data: this.data,
        file: file,
        filename: this.name,
        headers: this.headers,
        onError: function onError(err, response) {
          (0, _newArrowCheck2.default)(this, _this4);
          this.handleError(err, response, file);
        }.bind(this),
        onProgress: function onProgress(e) {
          (0, _newArrowCheck2.default)(this, _this4);
          this.handleProgress(e, file);
        }.bind(this),
        onSuccess: function onSuccess(res) {
          (0, _newArrowCheck2.default)(this, _this4);
          this.handleSuccess(res, file);
        }.bind(this),
        withCredentials: this.withCredentials
      });
    },
    upload: function upload(file) {
      var _this5 = this;

      if (!this.beforeUpload) {
        this.post(file);
        return;
      }

      var before = this.beforeUpload(file);

      if (before && before.then) {
        before.then(function (processedFile) {
          (0, _newArrowCheck2.default)(this, _this5);

          if (Object.prototype.toString.call(processedFile) === '[object File]') {
            this.post(processedFile);
          } else {
            this.post(file);
          }

          return null;
        }.bind(this), _noop.default // () => {
        //   this.$emit('cancel', file);
        // },
        ).catch(function (error) {
          (0, _newArrowCheck2.default)(this, _this5);
          throw error;
        }.bind(this));
      } else if (before !== false) {
        this.post(file);
      } else {// this.$emit('cancel', file);
      }
    },
    uploadFiles: function uploadFiles(files) {
      var _this6 = this;

      var postFiles = Array.prototype.slice.call(files);

      if (!this.multiple) {
        postFiles = postFiles.slice(0, 1);
      }

      if (postFiles.length === 0) {
        return;
      }

      postFiles.forEach(function (file) {
        (0, _newArrowCheck2.default)(this, _this6);
        this.upload(file);
      }.bind(this));
    }
  }
};
exports.default = _default;

/***/ }),
/* 247 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_upload_list_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(248);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_upload_list_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_upload_list_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_upload_list_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_upload_list_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_upload_list_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 248 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _stubArray = _interopRequireDefault(__webpack_require__(14));

var _icon = _interopRequireDefault(__webpack_require__(12));

var _progress = _interopRequireDefault(__webpack_require__(420));

var logger = __webpack_require__(0).get("iview:components:upload:upload-list.vue");

var prefixCls = 'ivu-upload';
var _default = {
  name: 'UploadList',
  components: {
    Icon: _icon.default,
    iProgress: _progress.default
  },
  props: {
    files: {
      default: _stubArray.default,
      type: Array
    }
  },
  data: function data() {
    return {
      prefixCls: prefixCls
    };
  },
  methods: {
    fileCls: function fileCls(file) {
      return ["".concat(prefixCls, "-list-file"), (0, _defineProperty2.default)({}, "".concat(prefixCls, "-list-file-finish"), file.status === 'finished')];
    },
    format: function format(file) {
      var format = file.name.split('.').pop().toLocaleLowerCase() || '';
      var type = 'document';

      if (['gif', 'jpg', 'jpeg', 'png', 'bmp', 'webp'].indexOf(format) > -1) {
        type = 'image';
      }

      if (['mp4', 'm3u8', 'rmvb', 'avi', 'swf', '3gp', 'mkv', 'flv'].indexOf(format) > -1) {
        type = 'ios-film';
      }

      if (['mp3', 'wav', 'wma', 'ogg', 'aac', 'flac'].indexOf(format) > -1) {
        type = 'ios-musical-notes';
      }

      if (['doc', 'txt', 'docx', 'pages', 'epub', 'pdf'].indexOf(format) > -1) {
        type = 'document-text';
      }

      if (['numbers', 'csv', 'xls', 'xlsx'].indexOf(format) > -1) {
        type = 'stats-bars';
      }

      if (['keynote', 'ppt', 'pptx'].indexOf(format) > -1) {
        type = 'ios-videocam';
      }

      return type;
    },
    handleClick: function handleClick(file) {
      this.$emit('on-file-click', file);
    },
    handlePreview: function handlePreview(file) {
      this.$emit('on-file-preview', file);
    },
    handleRemove: function handleRemove(file) {
      this.$emit('on-file-remove', file);
    },
    parsePercentage: function parsePercentage(val) {
      return parseInt(val, 10);
    }
  }
};
exports.default = _default;

/***/ }),
/* 249 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_row_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(250);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_row_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_row_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_row_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_row_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_row_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 250 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _assist = __webpack_require__(6);

var logger = __webpack_require__(0).get("iview:components:grid:row.vue");

var prefixCls = 'ivu-row';
var _default = {
  name: 'Row',
  props: {
    align: {
      default: undefined,
      type: String,
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['top', 'middle', 'bottom']);
      }
    },
    className: {
      default: undefined,
      type: String
    },
    gutter: {
      default: 0,
      type: Number
    },
    justify: {
      default: undefined,
      type: String,
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['start', 'end', 'center', 'space-around', 'space-between']);
      }
    },
    type: {
      default: undefined,
      type: String,
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['flex']);
      }
    }
  },
  computed: {
    classes: function classes() {
      var _ref;

      return [(_ref = {}, (0, _defineProperty2.default)(_ref, "".concat(prefixCls), !this.type), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-").concat(this.type), !!this.type), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-").concat(this.type, "-").concat(this.align), !!this.align), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-").concat(this.type, "-").concat(this.justify), !!this.justify), (0, _defineProperty2.default)(_ref, "".concat(this.className), !!this.className), _ref)];
    },
    styles: function styles() {
      var style = {};

      if (this.gutter !== 0) {
        style = {
          marginLeft: "".concat(this.gutter / -2, "px"),
          marginRight: "".concat(this.gutter / -2, "px")
        };
      }

      return style;
    }
  },
  watch: {
    gutter: function gutter(val) {
      this.updateGutter(val);
    }
  },
  methods: {
    updateGutter: function updateGutter(val) {
      var _this = this;

      // 这里会嵌套寻找，把 Col 里的 Row 里的 Col 也找到，所以用 兄弟找
      //                const Cols = findComponentsDownward(this, 'iCol');
      var Col = (0, _assist.findComponentDownward)(this, 'iCol');
      var Cols = (0, _assist.findBrothersComponents)(Col, 'iCol', false);

      if (Cols.length) {
        Cols.forEach(function (child) {
          (0, _newArrowCheck2.default)(this, _this);

          if (val !== 0) {
            child.gutter = val;
          }
        }.bind(this));
      }
    }
  }
};
exports.default = _default;

/***/ }),
/* 251 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_col_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(252);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_col_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_col_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_col_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_col_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_col_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 252 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _typeof2 = _interopRequireDefault(__webpack_require__(36));

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _assist = __webpack_require__(6);

var logger = __webpack_require__(0).get("iview:components:grid:col.vue");

var prefixCls = 'ivu-col';
var _default = {
  name: 'ICol',
  props: {
    className: {
      default: undefined,
      type: String
    },
    lg: {
      default: undefined,
      type: [Number, Object]
    },
    md: {
      default: undefined,
      type: [Number, Object]
    },
    offset: {
      default: undefined,
      type: [Number, String]
    },
    order: {
      default: undefined,
      type: [Number, String]
    },
    pull: {
      default: undefined,
      type: [Number, String]
    },
    push: {
      default: undefined,
      type: [Number, String]
    },
    sm: {
      default: undefined,
      type: [Number, Object]
    },
    span: {
      default: undefined,
      type: [Number, String]
    },
    xs: {
      default: undefined,
      type: [Number, Object]
    }
  },
  data: function data() {
    return {
      gutter: 0
    };
  },
  computed: {
    classes: function classes() {
      var _ref,
          _this = this;

      var classList = ["".concat(prefixCls), (_ref = {}, (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-span-").concat(this.span), this.span), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-order-").concat(this.order), this.order), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-offset-").concat(this.offset), this.offset), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-push-").concat(this.push), this.push), (0, _defineProperty2.default)(_ref, "".concat(prefixCls, "-pull-").concat(this.pull), this.pull), (0, _defineProperty2.default)(_ref, "".concat(this.className), !!this.className), _ref)];
      ['xs', 'sm', 'md', 'lg'].forEach(function (size) {
        var _this2 = this;

        (0, _newArrowCheck2.default)(this, _this);

        if (typeof this[size] === 'number') {
          classList.push("".concat(prefixCls, "-span-").concat(size, "-").concat(this[size]));
        } else if ((0, _typeof2.default)(this[size]) === 'object') {
          var props = this[size];
          Object.keys(props).forEach(function (prop) {
            (0, _newArrowCheck2.default)(this, _this2);
            classList.push(prop !== 'span' ? "".concat(prefixCls, "-").concat(size, "-").concat(prop, "-").concat(props[prop]) : "".concat(prefixCls, "-span-").concat(size, "-").concat(props[prop]));
          }.bind(this));
        }
      }.bind(this));
      return classList;
    },
    styles: function styles() {
      var style = {};

      if (this.gutter !== 0) {
        style = {
          paddingLeft: "".concat(this.gutter / 2, "px"),
          paddingRight: "".concat(this.gutter / 2, "px")
        };
      }

      return style;
    }
  },
  mounted: function mounted() {
    this.updateGutter();
  },
  beforeDestroy: function beforeDestroy() {
    this.updateGutter();
  },
  methods: {
    updateGutter: function updateGutter() {
      var Row = (0, _assist.findComponentUpward)(this, 'Row');

      if (Row) {
        Row.updateGutter(Row.gutter);
      }
    }
  }
};
exports.default = _default;

/***/ }),
/* 253 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_option_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(254);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_option_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_option_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_option_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_option_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_option_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),
/* 254 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var logger = __webpack_require__(0).get("iview:components:select:option-group.vue");

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var prefixCls = 'byx-select-group';
var _default = {
  name: 'OptionGroup',
  props: {
    label: {
      default: '',
      type: String
    }
  },
  data: function data() {
    return {
      // for search
      hidden: false,
      prefixCls: prefixCls
    };
  },
  mounted: function mounted() {
    var _this = this;

    this.$on('on-query-change', function () {
      (0, _newArrowCheck2.default)(this, _this);
      this.queryChange();
      return true;
    }.bind(this));
  },
  methods: {
    queryChange: function queryChange() {
      var _this2 = this;

      this.$nextTick(function () {
        (0, _newArrowCheck2.default)(this, _this2);
        var options = this.$refs.options.querySelectorAll('.ivu-select-item');
        var hasVisibleOption = false;

        for (var i = 0; i < options.length; i += 1) {
          if (options[i].style.display !== 'none') {
            hasVisibleOption = true;
            break;
          }
        }

        this.hidden = !hasVisibleOption;
      }.bind(this));
    }
  }
};
exports.default = _default;

/***/ }),
/* 255 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 256 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isOneOf;

var _oneOf = _interopRequireDefault(__webpack_require__(458));

var logger = __webpack_require__(0).get("iview:Assets:isOneOf");

function isOneOf(comparate, comparates) {
  return Boolean((0, _oneOf.default)(comparate, comparates));
}

/***/ }),
/* 257 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _select_vue_vue_type_template_id_60a901a6_xmlns_3Av_click_outside_http_3A_2F_2Fwww_w3_org_2F1999_2Fxhtml___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(283);
/* harmony import */ var _select_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(63);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _select_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _select_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _select_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _select_vue_vue_type_template_id_60a901a6_xmlns_3Av_click_outside_http_3A_2F_2Fwww_w3_org_2F1999_2Fxhtml___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _select_vue_vue_type_template_id_60a901a6_xmlns_3Av_click_outside_http_3A_2F_2Fwww_w3_org_2F1999_2Fxhtml___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 258 */
/***/ (function(module, exports) {

/**
 * Checks if `value` is `null` or `undefined`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
 * @example
 *
 * _.isNil(null);
 * // => true
 *
 * _.isNil(void 0);
 * // => true
 *
 * _.isNil(NaN);
 * // => false
 */
function isNil(value) {
  return value == null;
}

module.exports = isNil;


/***/ }),
/* 259 */
/***/ (function(module, exports, __webpack_require__) {

var baseHas = __webpack_require__(469),
    hasPath = __webpack_require__(470);

/**
 * Checks if `path` is a direct property of `object`.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 * @example
 *
 * var object = { 'a': { 'b': 2 } };
 * var other = _.create({ 'a': _.create({ 'b': 2 }) });
 *
 * _.has(object, 'a');
 * // => true
 *
 * _.has(object, 'a.b');
 * // => true
 *
 * _.has(object, ['a', 'b']);
 * // => true
 *
 * _.has(other, 'a');
 * // => false
 */
function has(object, path) {
  return object != null && hasPath(object, path, baseHas);
}

module.exports = has;


/***/ }),
/* 260 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _lang = _interopRequireDefault(__webpack_require__(8));

var logger = __webpack_require__(0).get("iview:locale:lang:en-US");

var lang = {
  i: {
    datepicker: {
      clear: 'Clear',
      datePanelLabel: '[mmmm] [yyyy]',
      endTime: 'End Time',
      month: 'Month',
      month1: 'January',
      month10: 'October',
      month11: 'November',
      month12: 'December',
      month2: 'February',
      month3: 'March',
      month4: 'April',
      month5: 'May',
      month6: 'June',
      month7: 'July',
      month8: 'August',
      month9: 'September',
      months: {
        m1: 'Jan',
        m10: 'Oct',
        m11: 'Nov',
        m12: 'Dec',
        m2: 'Feb',
        m3: 'Mar',
        m4: 'Apr',
        m5: 'May',
        m6: 'Jun',
        m7: 'Jul',
        m8: 'Aug',
        m9: 'Sep'
      },
      ok: 'OK',
      selectDate: 'Select date',
      selectTime: 'Select time',
      startTime: 'Start Time',
      weeks: {
        fri: 'Fri',
        mon: 'Mon',
        sat: 'Sat',
        sun: 'Sun',
        thu: 'Thu',
        tue: 'Tue',
        wed: 'Wed'
      },
      weekStartDay: '0',
      year: 'Year'
    },
    locale: 'en-US',
    modal: {
      cancelText: 'Cancel',
      okText: 'OK'
    },
    page: {
      goto: 'Goto',
      item: 'item',
      items: 'items',
      next: 'Next Page',
      next5: 'Next 5 Pages',
      p: '',
      page: '/page',
      prev: 'Previous Page',
      prev5: 'Previous 5 Pages',
      total: 'Total'
    },
    poptip: {
      cancelText: 'Cancel',
      okText: 'OK'
    },
    rate: {
      star: 'Star',
      stars: 'Stars'
    },
    select: {
      loading: 'Loading',
      noMatch: 'No matching data',
      placeholder: 'Select'
    },
    table: {
      clearFilter: 'All',
      confirmFilter: 'Confirm',
      noDataText: 'No Data',
      noFilteredDataText: 'No filter data',
      resetFilter: 'Reset'
    },
    transfer: {
      filterPlaceholder: 'Search here',
      notFoundText: 'Not Found',
      titles: {
        source: 'Source',
        target: 'Target'
      }
    },
    tree: {
      emptyText: 'No Data'
    }
  }
};
(0, _lang.default)(lang);
var _default = lang;
exports.default = _default;

/***/ }),
/* 261 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _option_vue_vue_type_template_id_4799cd74___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(286);
/* harmony import */ var _option_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(71);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _option_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _option_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _option_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _option_vue_vue_type_template_id_4799cd74___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _option_vue_vue_type_template_id_4799cd74___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 262 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _assist = __webpack_require__(6);

var logger = __webpack_require__(0).get("iview:components:base:collapse-transition");

var Transition = {
  afterEnter: function afterEnter(el) {
    // for safari: remove class then reset height is necessary
    (0, _assist.removeClass)(el, 'collapse-transition');
    el.style.height = '';
    el.style.overflow = el.dataset.oldOverflow;
  },
  afterLeave: function afterLeave(el) {
    (0, _assist.removeClass)(el, 'collapse-transition');
    el.style.height = '';
    el.style.overflow = el.dataset.oldOverflow;
    el.style.paddingTop = el.dataset.oldPaddingTop;
    el.style.paddingBottom = el.dataset.oldPaddingBottom;
  },
  beforeEnter: function beforeEnter(el) {
    (0, _assist.addClass)(el, 'collapse-transition');

    if (!el.dataset) {
      el.dataset = {};
    }

    el.dataset.oldPaddingTop = el.style.paddingTop;
    el.dataset.oldPaddingBottom = el.style.paddingBottom;
    el.style.height = '0';
    el.style.paddingTop = 0;
    el.style.paddingBottom = 0;
  },
  beforeLeave: function beforeLeave(el) {
    if (!el.dataset) {
      el.dataset = {};
    }

    el.dataset.oldPaddingTop = el.style.paddingTop;
    el.dataset.oldPaddingBottom = el.style.paddingBottom;
    el.dataset.oldOverflow = el.style.overflow;
    el.style.height = "".concat(el.scrollHeight, "px");
    el.style.overflow = 'hidden';
  },
  enter: function enter(el) {
    el.dataset.oldOverflow = el.style.overflow;

    if (el.scrollHeight !== 0) {
      el.style.height = "".concat(el.scrollHeight, "px");
      el.style.paddingTop = el.dataset.oldPaddingTop;
      el.style.paddingBottom = el.dataset.oldPaddingBottom;
    } else {
      el.style.height = '';
      el.style.paddingTop = el.dataset.oldPaddingTop;
      el.style.paddingBottom = el.dataset.oldPaddingBottom;
    }

    el.style.overflow = 'hidden';
  },
  leave: function leave(el) {
    if (el.scrollHeight !== 0) {
      // for safari: add class after set height, or it will jump to zero height suddenly, weired
      (0, _assist.addClass)(el, 'collapse-transition');
      el.style.height = 0;
      el.style.paddingTop = 0;
      el.style.paddingBottom = 0;
    }
  }
};
var _default = {
  functional: true,
  name: 'CollapseTransition',
  render: function render(h, _ref) {
    var children = _ref.children;
    var data = {
      on: Transition
    };
    return h('transition', data, children);
  }
};
exports.default = _default;

/***/ }),
/* 263 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _emitter = _interopRequireDefault(__webpack_require__(9));

var _handleEscapeMixin = _interopRequireDefault(__webpack_require__(388));

var _utils = __webpack_require__(29);

var _dom = __webpack_require__(18);

var logger = __webpack_require__(0).get("iview:components:color-picker:hsaMixin");

var _default = {
  beforeDestroy: function beforeDestroy() {
    this.unbindEventListeners();
  },
  created: function created() {
    var _this = this;

    if (this.focused) {
      setTimeout(function () {
        (0, _newArrowCheck2.default)(this, _this);
        return this.$el.focus();
      }.bind(this), 1);
    }
  },
  methods: {
    getLeft: function getLeft(e) {
      var container = this.$refs.container;
      var xOffset = container.getBoundingClientRect().left + window.pageXOffset;
      var pageX = e.pageX || (0, _utils.getTouches)(e, 'PageX');
      return pageX - xOffset;
    },
    getTop: function getTop(e) {
      var container = this.$refs.container;
      var yOffset = container.getBoundingClientRect().top + window.pageYOffset;
      var pageY = e.pageY || (0, _utils.getTouches)(e, 'PageY');
      return pageY - yOffset;
    },
    handleDown: function handleDown(e) {
      this.handleSlide(e, this.down, 'down');
    },
    handleLeft: function handleLeft(e) {
      this.handleSlide(e, this.left, 'left');
    },
    handleMouseDown: function handleMouseDown(e) {
      this.dispatch('ColorPicker', 'on-dragging', true);
      this.handleChange(e, true); // window.addEventListener('mousemove', this.handleChange, false);
      // window.addEventListener('mouseup', this.handleMouseUp, false);

      (0, _dom.on)(window, 'mousemove', this.handleChange);
      (0, _dom.on)(window, 'mouseup', this.handleMouseUp);
    },
    handleMouseUp: function handleMouseUp() {
      this.unbindEventListeners();
    },
    handleRight: function handleRight(e) {
      this.handleSlide(e, this.right, 'right');
    },
    handleUp: function handleUp(e) {
      this.handleSlide(e, this.up, 'up');
    },
    unbindEventListeners: function unbindEventListeners() {
      var _this2 = this;

      // window.removeEventListener('mousemove', this.handleChange);
      // window.removeEventListener('mouseup', this.handleMouseUp);
      (0, _dom.off)(window, 'mousemove', this.handleChange);
      (0, _dom.off)(window, 'mouseup', this.handleMouseUp); // This timeout is required so that the click handler for click-outside
      // has the chance to run before the mouseup removes the dragging flag.

      setTimeout(function () {
        (0, _newArrowCheck2.default)(this, _this2);
        return this.dispatch('ColorPicker', 'on-dragging', false);
      }.bind(this), 1);
    }
  },
  mixins: [_emitter.default, _handleEscapeMixin.default],
  props: {
    focused: {
      default: false,
      type: Boolean
    },
    value: {
      default: undefined,
      type: Object
    }
  }
};
exports.default = _default;

/***/ }),
/* 264 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _util = __webpack_require__(17);

var _this = void 0;

var logger = __webpack_require__(0).get("iview:components:date-picker:base:mixin");

var _default2 = {
  computed: {
    dates: function dates() {
      var selectionMode = this.selectionMode,
          value = this.value,
          rangeState = this.rangeState;
      var rangeSelecting = selectionMode === 'range' && rangeState.selecting;
      return rangeSelecting ? [rangeState.from] : value;
    }
  },
  methods: {
    handleClick: function handleClick(cell) {
      if (cell.disabled || cell.type === 'weekLabel') {
        return;
      }

      var newDate = new Date((0, _util.clearHours)(cell.date));
      this.$emit('on-pick', newDate);
      this.$emit('on-pick-click');
    },
    handleMouseMove: function handleMouseMove(cell) {
      if (!this.rangeState.selecting) {
        return;
      }

      if (cell.disabled) {
        return;
      }

      var newDate = cell.date;
      this.$emit('on-change-range', newDate);
    }
  },
  name: 'PanelTable',
  props: {
    disabledDate: {
      type: Function
    },
    focusedDate: {
      required: true,
      type: Date
    },
    rangeState: {
      default: function _default() {
        (0, _newArrowCheck2.default)(this, _this);
        return {
          from: null,
          selecting: false,
          to: null
        };
      }.bind(void 0),
      type: Object
    },
    selectionMode: {
      required: true,
      type: String
    },
    tableDate: {
      required: true,
      type: Date
    },
    value: {
      required: true,
      type: Array
    }
  }
};
exports.default = _default2;

/***/ }),
/* 265 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var logger = __webpack_require__(0).get("iview:components:date-picker:base:prefixCls");

var _default = 'ivu-date-picker-cells';
exports.default = _default;

/***/ }),
/* 266 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(23);
var core = __webpack_require__(40);
var ctx = __webpack_require__(537);
var hide = __webpack_require__(30);
var has = __webpack_require__(25);
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var IS_WRAP = type & $export.W;
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE];
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
  var key, own, out;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    if (own && has(exports, key)) continue;
    // export native or passed
    out = own ? target[key] : source[key];
    // prevent global pollution for namespaces
    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
    // bind timers to global for call from export context
    : IS_BIND && own ? ctx(out, global)
    // wrap global constructors for prevent change them in library
    : IS_WRAP && target[key] == out ? (function (C) {
      var F = function (a, b, c) {
        if (this instanceof C) {
          switch (arguments.length) {
            case 0: return new C();
            case 1: return new C(a);
            case 2: return new C(a, b);
          } return new C(a, b, c);
        } return C.apply(this, arguments);
      };
      F[PROTOTYPE] = C[PROTOTYPE];
      return F;
    // make static versions for prototype methods
    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
    if (IS_PROTO) {
      (exports.virtual || (exports.virtual = {}))[key] = out;
      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
    }
  }
};
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;


/***/ }),
/* 267 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__(41);
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),
/* 268 */
/***/ (function(module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};


/***/ }),
/* 269 */
/***/ (function(module, exports) {

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};


/***/ }),
/* 270 */
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__(271)('keys');
var uid = __webpack_require__(53);
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};


/***/ }),
/* 271 */
/***/ (function(module, exports, __webpack_require__) {

var core = __webpack_require__(40);
var global = __webpack_require__(23);
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: __webpack_require__(52) ? 'pure' : 'global',
  copyright: '© 2018 Denis Pushkarev (zloirock.ru)'
});


/***/ }),
/* 272 */
/***/ (function(module, exports) {

// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');


/***/ }),
/* 273 */
/***/ (function(module, exports) {

exports.f = Object.getOwnPropertySymbols;


/***/ }),
/* 274 */
/***/ (function(module, exports) {

module.exports = {};


/***/ }),
/* 275 */
/***/ (function(module, exports, __webpack_require__) {

var def = __webpack_require__(31).f;
var has = __webpack_require__(25);
var TAG = __webpack_require__(34)('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};


/***/ }),
/* 276 */
/***/ (function(module, exports, __webpack_require__) {

exports.f = __webpack_require__(34);


/***/ }),
/* 277 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(23);
var core = __webpack_require__(40);
var LIBRARY = __webpack_require__(52);
var wksExt = __webpack_require__(276);
var defineProperty = __webpack_require__(31).f;
module.exports = function (name) {
  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
};


/***/ }),
/* 278 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _assist = __webpack_require__(6);

var logger = __webpack_require__(0).get("iview:components:menu:mixin");

var _default = {
  computed: {
    hasParentSubmenu: function hasParentSubmenu() {
      return !!(0, _assist.findComponentUpward)(this, 'Submenu');
    },
    mode: function mode() {
      return this.menu.mode;
    },
    parentSubmenuNum: function parentSubmenuNum() {
      return (0, _assist.findComponentsUpward)(this, 'Submenu').length;
    }
  },
  data: function data() {
    return {
      menu: (0, _assist.findComponentUpward)(this, 'Menu')
    };
  }
};
exports.default = _default;

/***/ }),
/* 279 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/radio/radio-group.vue?vue&type=template&id=35e4800f&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.classes,attrs:{"name":_vm.name}},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/radio/radio-group.vue?vue&type=template&id=35e4800f&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 280 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/alert/alert.vue?vue&type=template&id=aa84f252&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('transition',{attrs:{"name":"fade"}},[(!_vm.closed)?_c('div',{class:_vm.baseClasses},[(_vm.showIcon)?_c('div',{class:_vm.iconClasses},[_vm._t("icon",[_c('icon',{attrs:{"type":_vm.iconType,"fw":"","weight":_vm.iconWeightData}})])],2):_vm._e(),_vm._v(" "),_c('div',{class:_vm.messageClasses},[(_vm.hasHeader)?_c('h4',[_vm._t("header")],2):_vm._e(),_vm._v(" "),_vm._t("default")],2),_vm._v(" "),(_vm.hasAction)?_c('div',{class:_vm.actionClasses},[_vm._t("action")],2):_vm._e(),_vm._v(" "),(_vm.closable)?_c('div',{class:_vm.closeClasses,on:{"click":_vm.close}},[_vm._t("close",[_c('icon',{attrs:{"type":"times","fw":""}})])],2):_vm._e()]):_vm._e()])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/alert/alert.vue?vue&type=template&id=aa84f252&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 281 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/icon/icon.vue?vue&type=template&id=bbbaab2a&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('font-awesome-icon',_vm._g(_vm._b({attrs:{"icon":_vm.icon,"fixed-width":_vm.fw}},'font-awesome-icon',_vm.$attrs,false),_vm.$listeners))}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/icon/icon.vue?vue&type=template&id=bbbaab2a&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 282 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/auto-complete/auto-complete.vue?vue&type=template&id=9e11444c&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('i-select',{ref:"select",staticClass:"ivu-auto-complete",attrs:{"label":_vm.label,"disabled":_vm.disabled,"clearable":_vm.clearable,"placeholder":_vm.placeholder,"size":_vm.size,"placement":_vm.placement,"value":_vm.currentValue,"filterable":"","remote":"","auto-complete":"","remote-method":_vm.remoteMethod,"transfer":_vm.transfer},on:{"on-change":_vm.handleChange}},[_vm._t("input",[_c('i-input',{ref:"input",attrs:{"slot":"input","element-id":_vm.elementId,"name":_vm.name,"placeholder":_vm.placeholder,"disabled":_vm.disabled,"size":_vm.size,"icon":_vm.inputIcon},on:{"on-click":_vm.handleClear,"on-focus":_vm.handleFocus,"on-blur":_vm.handleBlur},slot:"input",model:{value:(_vm.currentValue),callback:function ($$v) {_vm.currentValue=$$v},expression:"currentValue"}})]),_vm._v(" "),_vm._t("default",_vm._l((_vm.filteredData),function(item){return _c('i-option',{key:item,attrs:{"value":item}},[_vm._v("\n      "+_vm._s(item)+"\n    ")])}))],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/auto-complete/auto-complete.vue?vue&type=template&id=9e11444c&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 283 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/select/select.vue?vue&type=template&id=60a901a6&xmlns%3Av-click-outside=http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:"click-outside",rawName:"v-click-outside.capture",value:(_vm.onClickOutside),expression:"onClickOutside",modifiers:{"capture":true}},{name:"click-outside",rawName:"v-click-outside:mousedown.capture",value:(_vm.onClickOutside),expression:"onClickOutside",arg:"mousedown",modifiers:{"capture":true}}],class:_vm.classes},[_c('div',{ref:"reference",class:_vm.selectionCls,attrs:{"tabindex":_vm.selectTabindex},on:{"blur":_vm.toggleHeaderFocus,"focus":_vm.toggleHeaderFocus,"click":_vm.toggleMenu,"keydown":_vm.onKeydown,"mouseenter":function($event){_vm.hasMouseHoverHead = true},"mouseleave":function($event){_vm.hasMouseHoverHead = false}}},[_vm._t("input",[_c('input',{attrs:{"type":"hidden","name":_vm.name},domProps:{"value":_vm.publicValue}}),_vm._v(" "),_c('select-head',{attrs:{"filterable":_vm.filterable,"multiple":_vm.multiple,"values":_vm.values,"clearable":_vm.canBeCleared,"disabled":_vm.disabled,"remote":_vm.remote,"input-element-id":_vm.elementId,"initial-label":_vm.initialLabel,"placeholder":_vm.placeholder,"query-prop":_vm.query},on:{"on-query-change":_vm.onQueryChange,"on-input-focus":function($event){_vm.isFocused = true},"on-input-blur":function($event){_vm.isFocused = false},"on-clear":_vm.clearSingleSelect}})])],2),_vm._v(" "),_c('transition',{attrs:{"name":"transition-drop"}},[_c('drop',{directives:[{name:"show",rawName:"v-show",value:(_vm.dropVisible),expression:"dropVisible"},{name:"transfer-dom",rawName:"v-transfer-dom"}],ref:"dropdown",class:_vm.dropdownCls,attrs:{"placement":_vm.placement,"data-transfer":_vm.transfer}},[_c('ul',{directives:[{name:"show",rawName:"v-show",value:(_vm.showNotFoundLabel),expression:"showNotFoundLabel"}],class:[_vm.prefixCls + '-not-found']},[_c('li',[_vm._v(_vm._s(_vm.localeNotFoundText))])]),_vm._v(" "),_c('ul',{class:_vm.prefixCls + '-dropdown-list'},[((!_vm.remote) || (_vm.remote && !_vm.loading))?_c('functional-options',{attrs:{"options":_vm.selectOptions,"slot-update-hook":_vm.updateSlotOptions,"slot-options":_vm.slotOptions}}):_vm._e()],1),_vm._v(" "),_c('ul',{directives:[{name:"show",rawName:"v-show",value:(_vm.loading),expression:"loading"}],class:[_vm.prefixCls + '-loading']},[_vm._v("\n        "+_vm._s(_vm.localeLoadingText)+"\n      ")])])],1)],1)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/select/select.vue?vue&type=template&id=60a901a6&xmlns%3Av-click-outside=http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 284 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/select/option-group.vue?vue&type=template&id=146db649&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{directives:[{name:"show",rawName:"v-show",value:(!_vm.hidden),expression:"!hidden"}],class:[_vm.prefixCls + '-wrap']},[_c('div',{class:[_vm.prefixCls + '-title']},[_vm._v("\n    "+_vm._s(_vm.label)+"\n  ")]),_vm._v(" "),_c('ul',[_c('li',{ref:"options",class:[_vm.prefixCls]},[_vm._t("default")],2)])])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/select/option-group.vue?vue&type=template&id=146db649&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 285 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/grid/col.vue?vue&type=template&id=628db20a&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.classes,style:(_vm.styles)},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/grid/col.vue?vue&type=template&id=628db20a&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 286 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/select/option.vue?vue&type=template&id=4799cd74&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{class:_vm.classes,on:{"click":function($event){$event.stopPropagation();return _vm.select($event)},"touchend":function($event){$event.stopPropagation();return _vm.select($event)},"mousedown":function($event){$event.preventDefault();},"touchstart":function($event){$event.preventDefault();}}},[(_vm.preIconName)?_c('i',{class:_vm.preIconName}):_vm._e(),_vm._v(" "),_vm._t("default",[_vm._v(_vm._s(_vm.showLabel))]),_vm._v(" "),(_vm.postIconName)?_c('i',{class:_vm.postIconName}):_vm._e()],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/select/option.vue?vue&type=template&id=4799cd74&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 287 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/input/input.vue?vue&type=template&id=4ffe882a&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.wrapClasses},[(_vm.type !== 'textarea')?[(_vm.prepend)?_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.slotReady),expression:"slotReady"}],class:[_vm.prefixCls + '-group-prepend']},[_vm._t("prepend")],2):_vm._e(),_vm._v(" "),(_vm.clearable && _vm.currentValue)?_c('i',{staticClass:"ivu-icon",class:['ivu-icon-ios-close', _vm.prefixCls + '-icon', _vm.prefixCls + '-icon-clear' , _vm.prefixCls + '-icon-normal'],on:{"click":_vm.handleClear}}):(_vm.icon)?_c('i',{staticClass:"ivu-icon",class:['ivu-icon-' + _vm.icon, _vm.prefixCls + '-icon', _vm.prefixCls + '-icon-normal'],on:{"click":_vm.handleIconClick}}):_vm._e(),_vm._v(" "),_c('transition',{attrs:{"name":"fade"}},[(!_vm.icon)?_c('i',{staticClass:"ivu-icon ivu-icon-load-c ivu-load-loop",class:[_vm.prefixCls + '-icon', _vm.prefixCls + '-icon-validate']}):_vm._e()]),_vm._v(" "),_c('label',[_c('input',{ref:"input",class:_vm.inputClasses,attrs:{"id":_vm.elementId,"autocomplete":_vm.autocomplete,"spellcheck":_vm.spellcheck,"type":_vm.type,"placeholder":_vm.placeholder,"disabled":_vm.disabled,"maxlength":_vm.maxlength,"readonly":_vm.readonly,"name":_vm.name,"number":_vm.number,"autofocus":_vm.autofocus},domProps:{"value":_vm.currentValue},on:{"keyup":_vm.onKeyup,"keypress":_vm.handleKeypress,"keydown":_vm.handleKeydown,"focus":_vm.handleFocus,"blur":_vm.handleBlur,"input":_vm.handleInput,"change":_vm.handleChange}})]),_vm._v(" "),(_vm.append)?_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.slotReady),expression:"slotReady"}],class:[_vm.prefixCls + '-group-append']},[_vm._t("append")],2):_vm._e()]:[_c('label',[_c('textarea',{ref:"textarea",class:_vm.textareaClasses,style:(_vm.textareaStyles),attrs:{"id":_vm.elementId,"wrap":_vm.wrap,"autocomplete":_vm.autocomplete,"spellcheck":_vm.spellcheck,"placeholder":_vm.placeholder,"disabled":_vm.disabled,"rows":_vm.rows,"maxlength":_vm.maxlength,"readonly":_vm.readonly,"name":_vm.name,"autofocus":_vm.autofocus},domProps:{"value":_vm.currentValue},on:{"keyup":_vm.onKeyup,"keypress":_vm.handleKeypress,"keydown":_vm.handleKeydown,"focus":_vm.handleFocus,"blur":_vm.handleBlur,"input":_vm.handleInput}})])]],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/input/input.vue?vue&type=template&id=4ffe882a&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 288 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/avatar/avatar.vue?vue&type=template&id=fc2236e6&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{class:_vm.classes},[(_vm.src)?_c('img',{attrs:{"src":_vm.src,"alt":""}}):(_vm.icon)?_c('icon',{attrs:{"type":_vm.icon}}):_c('span',{ref:"children",class:[_vm.prefixCls + '-string'],style:(_vm.childrenStyle)},[_vm._t("default")],2)],1)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/avatar/avatar.vue?vue&type=template&id=fc2236e6&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 289 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/back-top/back-top.vue?vue&type=template&id=69a1abee&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.classes,style:(_vm.styles),on:{"click":_vm.back}},[_vm._t("default",[_c('div',{class:_vm.innerClasses},[_c('i',{staticClass:"ivu-icon ivu-icon-chevron-up"})])])],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/back-top/back-top.vue?vue&type=template&id=69a1abee&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 290 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/badge/badge.vue?vue&type=template&id=76b1278c&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.dot)?_c('span',{ref:"badge",class:_vm.classes},[_vm._t("default"),_vm._v(" "),_c('sup',{directives:[{name:"show",rawName:"v-show",value:(_vm.badge),expression:"badge"}],class:_vm.dotClasses})],2):_c('span',{ref:"badge",class:_vm.classes},[_vm._t("default"),_vm._v(" "),(_vm.count)?_c('sup',{directives:[{name:"show",rawName:"v-show",value:(_vm.badge),expression:"badge"}],class:_vm.countClasses},[_vm._v("\n    "+_vm._s(_vm.finalCount)+"\n  ")]):_vm._e()],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/badge/badge.vue?vue&type=template&id=76b1278c&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 291 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/breadcrumb/breadcrumb.vue?vue&type=template&id=07fc0b84&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.classes},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/breadcrumb/breadcrumb.vue?vue&type=template&id=07fc0b84&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 292 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/breadcrumb/breadcrumb-item.vue?vue&type=template&id=10b8d7f3&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',[(_vm.to || _vm.href)?_c('a',{class:_vm.linkClasses,on:{"click":_vm.handleClick}},[_vm._t("default")],2):_c('span',{class:_vm.linkClasses},[_vm._t("default")],2),_vm._v(" "),(!_vm.showSeparator)?_c('span',{class:_vm.separatorClasses,domProps:{"innerHTML":_vm._s(_vm.separator)}}):_c('span',{class:_vm.separatorClasses},[_vm._t("separator")],2)])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/breadcrumb/breadcrumb-item.vue?vue&type=template&id=10b8d7f3&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 293 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/button/button.vue?vue&type=template&id=717367fe&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('button',_vm._g({class:_vm.classes,attrs:{"type":_vm.htmlType,"disabled":_vm.disabled}},_vm.$listeners),[(_vm.loading)?_c('icon',{attrs:{"type":"circle-notch","spin":true,"fw":true}}):_vm._e(),_vm._v(" "),(_vm.showIcon)?_c('icon',{attrs:{"type":_vm.icon,"weight":_vm.iconWeight,"fw":true}}):_vm._e(),_vm._v(" "),(_vm.showSlot)?_c('span',{ref:"slot"},[_vm._t("default")],2):_vm._e()],1)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/button/button.vue?vue&type=template&id=717367fe&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 294 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/button/button-group.vue?vue&type=template&id=0be81369&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.classes},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/button/button-group.vue?vue&type=template&id=0be81369&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 295 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/card/card.vue?vue&type=template&id=22e5c905&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.classes},[(_vm.showHead)?_c('div',{class:_vm.headClasses},[_vm._t("title",[(_vm.title)?_c('p',[(_vm.icon)?_c('icon',{attrs:{"type":_vm.icon}}):_vm._e(),_vm._v("\n        "+_vm._s(_vm.title)+"\n      ")],1):_vm._e()])],2):_vm._e(),_vm._v(" "),(_vm.showExtra)?_c('div',{class:_vm.extraClasses},[_vm._t("extra")],2):_vm._e(),_vm._v(" "),_c('div',{class:_vm.bodyClasses,style:(_vm.bodyStyles)},[_vm._t("default")],2)])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/card/card.vue?vue&type=template&id=22e5c905&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 296 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/carousel/carousel.vue?vue&type=template&id=8c3b26a6&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.classes},[_c('button',{staticClass:"left",class:_vm.arrowClasses,attrs:{"type":"button"},on:{"click":function($event){return _vm.arrowEvent(-1)}}},[_c('icon',{attrs:{"type":"chevron-left"}})],1),_vm._v(" "),_c('div',{class:[_vm.prefixCls + '-list']},[_c('div',{ref:"originTrack",class:[_vm.prefixCls + '-track', _vm.showCopyTrack ? '' : 'higher'],style:(_vm.trackStyles)},[_vm._t("default")],2),_vm._v(" "),(_vm.loop)?_c('div',{ref:"copyTrack",class:[_vm.prefixCls + '-track', _vm.showCopyTrack ? 'higher' : ''],style:(_vm.copyTrackStyles)}):_vm._e()]),_vm._v(" "),_c('button',{staticClass:"right",class:_vm.arrowClasses,attrs:{"type":"button"},on:{"click":function($event){return _vm.arrowEvent(1)}}},[_c('icon',{attrs:{"type":"chevron-right"}})],1),_vm._v(" "),_c('ul',{class:_vm.dotsClasses},[_vm._l((_vm.slides.length),function(n){return [_c('li',{key:n,class:[n - 1 === _vm.currentIndex ? _vm.prefixCls + '-active' : ''],on:{"click":function($event){return _vm.dotsEvent('click', n - 1)},"mouseover":function($event){return _vm.dotsEvent('hover', n - 1)}}},[_c('button',{class:[_vm.radiusDot ? 'radius' : ''],attrs:{"type":"button"}})])]})],2)])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/carousel/carousel.vue?vue&type=template&id=8c3b26a6&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 297 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/carousel/carousel-item.vue?vue&type=template&id=4bbbf789&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.prefixCls,style:(_vm.styles)},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/carousel/carousel-item.vue?vue&type=template&id=4bbbf789&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 298 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cascader/cascader.vue?vue&type=template&id=b46893aa&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:"click-outside",rawName:"v-click-outside",value:(_vm.handleClose),expression:"handleClose"}],class:_vm.classes},[_c('div',{ref:"reference",class:[_vm.prefixCls + '-rel'],on:{"click":_vm.toggleOpen}},[_c('input',{attrs:{"type":"hidden","name":_vm.name},domProps:{"value":_vm.currentValue}}),_vm._v(" "),_vm._t("default",[_c('i-input',{ref:"input",attrs:{"element-id":_vm.elementId,"readonly":!_vm.filterable,"disabled":_vm.disabled,"value":_vm.displayInputRender,"size":_vm.size,"placeholder":_vm.inputPlaceholder},on:{"on-change":_vm.handleInput}}),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.filterable && _vm.query === ''),expression:"filterable && query === ''"}],class:[_vm.prefixCls + '-label'],on:{"click":_vm.handleFocus}},[_vm._v("\n        "+_vm._s(_vm.displayRender)+"\n      ")]),_vm._v(" "),_c('icon',{directives:[{name:"show",rawName:"v-show",value:(_vm.showCloseIcon),expression:"showCloseIcon"}],class:[_vm.prefixCls + '-arrow'],attrs:{"type":"ios-close"},nativeOn:{"click":function($event){$event.stopPropagation();return _vm.clearSelect($event)}}}),_vm._v(" "),_c('icon',{class:[_vm.prefixCls + '-arrow'],attrs:{"type":"chevron-down"}})])],2),_vm._v(" "),_c('transition',{attrs:{"name":"transition-drop"}},[_c('drop',{directives:[{name:"show",rawName:"v-show",value:(_vm.visible),expression:"visible"},{name:"transfer-dom",rawName:"v-transfer-dom"}],ref:"drop",class:( _obj = {}, _obj[_vm.prefixCls + '-transfer'] = _vm.transfer, _obj ),attrs:{"data-transfer":_vm.transfer}},[_c('div',[_c('caspanel',{directives:[{name:"show",rawName:"v-show",value:(!_vm.filterable || (_vm.filterable && _vm.query === '')),expression:"!filterable || (filterable && query === '')"}],ref:"caspanel",attrs:{"prefix-cls":_vm.prefixCls,"data":_vm.data,"disabled":_vm.disabled,"change-on-select":_vm.changeOnSelect,"trigger":_vm.trigger}}),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.filterable && _vm.query !== '' && _vm.querySelections.length),expression:"filterable && query !== '' && querySelections.length"}],class:[_vm.prefixCls + '-dropdown']},[_c('ul',{class:[_vm.selectPrefixCls + '-dropdown-list']},_vm._l((_vm.querySelections),function(item,index){return _c('li',{key:index,class:[_vm.selectPrefixCls + '-item', ( _obj = {}, _obj[_vm.selectPrefixCls + '-item-disabled'] = item.disabled, _obj )],domProps:{"innerHTML":_vm._s(item.display)},on:{"click":function($event){return _vm.handleSelectItem(index)}}})
var _obj;}),0)]),_vm._v(" "),_c('ul',{directives:[{name:"show",rawName:"v-show",value:(_vm.filterable && _vm.query !== '' && !_vm.querySelections.length),expression:"filterable && query !== '' && !querySelections.length"}],class:[_vm.prefixCls + '-not-found-tip']},[_c('li',[_vm._v(_vm._s(_vm.localeNotFoundText))])])],1)])],1)],1)
var _obj;}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cascader/cascader.vue?vue&type=template&id=b46893aa&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 299 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/grid/row.vue?vue&type=template&id=af66bc7a&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.classes,style:(_vm.styles)},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/grid/row.vue?vue&type=template&id=af66bc7a&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 300 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/upload/upload.vue?vue&type=template&id=bbc4c5fc&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:[_vm.prefixCls]},[_c('div',{class:_vm.classes,on:{"click":_vm.handleClick,"drop":function($event){$event.preventDefault();return _vm.onDrop($event)},"dragover":function($event){$event.preventDefault();_vm.dragOver = true},"dragleave":function($event){$event.preventDefault();_vm.dragOver = false}}},[_c('input',{ref:"input",class:[_vm.prefixCls + '-input'],attrs:{"type":"file","multiple":_vm.multiple,"accept":_vm.accept},on:{"change":_vm.handleChange}}),_vm._v(" "),_vm._t("default")],2),_vm._v(" "),_vm._t("tip"),_vm._v(" "),(_vm.showUploadList)?_c('upload-list',{attrs:{"files":_vm.fileList},on:{"on-file-remove":_vm.handleRemove,"on-file-preview":_vm.handlePreview}}):_vm._e()],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/upload/upload.vue?vue&type=template&id=bbc4c5fc&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 301 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/checkbox/checkbox.vue?vue&type=template&id=bb1543fa&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('label',{class:_vm.wrapClasses},[_c('span',{class:_vm.checkboxClasses},[_c('span',{class:_vm.innerClasses}),_vm._v(" "),(_vm.group)?_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.model),expression:"model"}],class:_vm.inputClasses,attrs:{"type":"checkbox","disabled":_vm.disabled,"name":_vm.name},domProps:{"value":_vm.label,"checked":Array.isArray(_vm.model)?_vm._i(_vm.model,_vm.label)>-1:(_vm.model)},on:{"change":[function($event){var $$a=_vm.model,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=_vm.label,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.model=$$a.concat([$$v]))}else{$$i>-1&&(_vm.model=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.model=$$c}},_vm.change],"focus":_vm.onFocus,"blur":_vm.onBlur}}):_c('input',{class:_vm.inputClasses,attrs:{"type":"checkbox","disabled":_vm.disabled,"name":_vm.name},domProps:{"checked":_vm.currentValue},on:{"change":_vm.change,"focus":_vm.onFocus,"blur":_vm.onBlur}})]),_vm._v(" "),_vm._t("default",[(_vm.showSlot)?_c('span',[_vm._v("\n      "+_vm._s(_vm.label)+"\n    ")]):_vm._e()])],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/checkbox/checkbox.vue?vue&type=template&id=bb1543fa&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 302 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/checkbox/checkbox-group.vue?vue&type=template&id=64240056&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.classes},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/checkbox/checkbox-group.vue?vue&type=template&id=64240056&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 303 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/circle/circle.vue?vue&type=template&id=3a5da672&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.wrapClasses,style:(_vm.circleSize)},[_c('svg',{attrs:{"viewBox":"0 0 100 100"}},[_c('path',{attrs:{"d":_vm.pathString,"stroke":_vm.trailColor,"stroke-width":_vm.trailWidth,"fill-opacity":0}}),_vm._v(" "),_c('path',{style:(_vm.pathStyle),attrs:{"d":_vm.pathString,"stroke-linecap":_vm.strokeLinecap,"stroke":_vm.strokeColor,"stroke-width":_vm.strokeWidth,"fill-opacity":"0"}})]),_vm._v(" "),_c('div',{class:_vm.innerClasses},[_vm._t("default")],2)])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/circle/circle.vue?vue&type=template&id=3a5da672&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 304 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/collapse/collapse.vue?vue&type=template&id=7260a934&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.classes},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/collapse/collapse.vue?vue&type=template&id=7260a934&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 305 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/collapse/panel.vue?vue&type=template&id=3a3c2c33&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.itemClasses},[_c('div',{class:_vm.headerClasses,on:{"click":_vm.toggle}},[_c('icon',{attrs:{"type":"arrow-right-b"}}),_vm._v(" "),_vm._t("default")],2),_vm._v(" "),_c('collapse-transition',[_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.isActive),expression:"isActive"}],class:_vm.contentClasses},[_c('div',{class:_vm.boxClasses},[_vm._t("content")],2)])])],1)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/collapse/panel.vue?vue&type=template&id=3a3c2c33&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 306 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/color-picker/color-picker.vue?vue&type=template&id=593e2101&xmlns%3Av-click-outside=http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:"click-outside",rawName:"v-click-outside.capture",value:(_vm.handleClose),expression:"handleClose",modifiers:{"capture":true}},{name:"click-outside",rawName:"v-click-outside:mousedown.capture",value:(_vm.handleClose),expression:"handleClose",arg:"mousedown",modifiers:{"capture":true}}],class:_vm.classes},[_c('div',{ref:"reference",class:_vm.wrapClasses,on:{"click":_vm.toggleVisible}},[_c('input',{attrs:{"name":_vm.name,"type":"hidden"},domProps:{"value":_vm.currentValue}}),_vm._v(" "),_c('i',{class:_vm.arrowClasses}),_vm._v(" "),_c('div',{ref:"input",class:_vm.inputClasses,attrs:{"tabindex":_vm.disabled ? undefined : 0},on:{"keydown":_vm.onKeydown}},[_c('div',{class:[_vm.prefixCls + '-color']},[_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.value === '' && !_vm.visible),expression:"value === '' && !visible"}],class:[_vm.prefixCls + '-color-empty']},[_c('i',{class:[_vm.iconPrefixCls, _vm.iconPrefixCls + '-ios-close-empty']})]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.value || _vm.visible),expression:"value || visible"}],style:(_vm.displayedColorStyle)})])])]),_vm._v(" "),_c('transition',{attrs:{"name":"transition-drop"}},[_c('drop',{directives:[{name:"show",rawName:"v-show",value:(_vm.visible),expression:"visible"},{name:"transfer-dom",rawName:"v-transfer-dom"}],ref:"drop",class:_vm.dropClasses,attrs:{"placement":_vm.placement,"data-transfer":_vm.transfer}},[_c('transition',{attrs:{"name":"fade"}},[(_vm.visible)?_c('div',{class:[_vm.prefixCls + '-picker']},[_c('div',{class:[_vm.prefixCls + '-picker-wrapper']},[_c('div',{class:[_vm.prefixCls + '-picker-panel']},[_c('saturation',{ref:"saturation",attrs:{"focused":_vm.visible},on:{"change":_vm.childChange},nativeOn:{"keydown":function($event){return _vm.handleFirstTab($event)}},model:{value:(_vm.saturationColors),callback:function ($$v) {_vm.saturationColors=$$v},expression:"saturationColors"}})],1),_vm._v(" "),(_vm.hue)?_c('div',{class:[_vm.prefixCls + '-picker-hue-slider']},[_c('hue',{on:{"change":_vm.childChange},model:{value:(_vm.saturationColors),callback:function ($$v) {_vm.saturationColors=$$v},expression:"saturationColors"}})],1):_vm._e(),_vm._v(" "),(_vm.alpha)?_c('div',{class:[_vm.prefixCls + '-picker-alpha-slider']},[_c('alpha',{on:{"change":_vm.childChange},model:{value:(_vm.saturationColors),callback:function ($$v) {_vm.saturationColors=$$v},expression:"saturationColors"}})],1):_vm._e(),_vm._v(" "),(_vm.colors.length)?_c('recommend-colors',{class:[_vm.prefixCls + '-picker-colors'],attrs:{"list":_vm.colors},on:{"picker-color":_vm.handleSelectColor}}):_vm._e(),_vm._v(" "),(!_vm.colors.length && _vm.recommend)?_c('recommend-colors',{class:[_vm.prefixCls + '-picker-colors'],attrs:{"list":_vm.recommendedColor},on:{"picker-color":_vm.handleSelectColor}}):_vm._e()],1),_vm._v(" "),_c('div',{class:[_vm.prefixCls + '-confirm']},[_c('span',{class:[_vm.prefixCls + '-confirm-color']},[_vm._v("\n              "+_vm._s(_vm.formatColor)+"\n            ")]),_vm._v(" "),_c('i-button',{ref:"clear",attrs:{"tabindex":0,"size":"small","type":"ghost"},on:{"keydown":function($event){if($event.ctrlKey||$event.shiftKey||$event.altKey||$event.metaKey){ return null; }return _vm.onClear($event)}},nativeOn:{"click":function($event){return _vm.handleClear($event)},"keydown":function($event){return _vm.onClearNative($event)}}},[_vm._v("\n              "+_vm._s(_vm.t('i.datepicker.clear'))+"\n            ")]),_vm._v(" "),_c('i-button',{ref:"ok",attrs:{"tabindex":0,"size":"small","type":"primary"},on:{"keydown":function($event){if($event.ctrlKey||$event.shiftKey||$event.altKey||$event.metaKey){ return null; }return _vm.onOk($event)}},nativeOn:{"click":function($event){return _vm.handleSuccess($event)},"keydown":function($event){return _vm.onOkNative($event)}}},[_vm._v("\n              "+_vm._s(_vm.t('i.datepicker.ok'))+"\n            ")])],1)]):_vm._e()])],1)],1)],1)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/color-picker/color-picker.vue?vue&type=template&id=593e2101&xmlns%3Av-click-outside=http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 307 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/tree/tree.vue?vue&type=template&id=11bafa8e&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.prefixCls},[_vm._l((_vm.stateTree),function(item,i){return _c('tree-node',{key:i,attrs:{"data":item,"visible":"","multiple":_vm.multiple,"show-checkbox":_vm.showCheckbox,"children-key":_vm.childrenKey}})}),_vm._v(" "),(!_vm.stateTree.length)?_c('div',{class:[_vm.prefixCls + '-empty']},[_vm._v("\n    "+_vm._s(_vm.localeEmptyText)+"\n  ")]):_vm._e()],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/tree/tree.vue?vue&type=template&id=11bafa8e&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 308 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/timeline/timeline-item.vue?vue&type=template&id=6d3dfad7&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{class:_vm.itemClasses},[_c('div',{class:_vm.tailClasses}),_vm._v(" "),_c('div',{ref:"dot",class:_vm.headClasses,style:(_vm.customColor)},[_vm._t("dot")],2),_vm._v(" "),_c('div',{class:_vm.contentClasses},[_vm._t("default")],2)])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/timeline/timeline-item.vue?vue&type=template&id=6d3dfad7&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 309 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/timeline/timeline.vue?vue&type=template&id=8357ce04&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',{class:_vm.classes},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/timeline/timeline.vue?vue&type=template&id=8357ce04&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 310 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/layout/content.vue?vue&type=template&id=2d34f778&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.wrapClasses},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/layout/content.vue?vue&type=template&id=2d34f778&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 311 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/tabs/pane.vue?vue&type=template&id=9d23af5c&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.show),expression:"show"}],class:_vm.prefixCls},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/tabs/pane.vue?vue&type=template&id=9d23af5c&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 312 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/tabs/tabs.vue?vue&type=template&id=5a012fca&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.classes},[_c('div',{class:[_vm.prefixCls + '-bar']},[(_vm.showSlot)?_c('div',{class:[_vm.prefixCls + '-nav-right']},[_vm._t("extra")],2):_vm._e(),_vm._v(" "),_c('div',{ref:"navContainer",class:[_vm.prefixCls + '-nav-container'],attrs:{"tabindex":"0"},on:{"keydown":[function($event){if($event.ctrlKey||$event.shiftKey||$event.altKey||$event.metaKey){ return null; }return _vm.onKeydown($event)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"space",32,$event.key,[" ","Spacebar"])){ return null; }$event.preventDefault();return _vm.handleTabKeyboardSelect(false)}]}},[_c('div',{ref:"navWrap",class:[_vm.prefixCls + '-nav-wrap', _vm.scrollable ? _vm.prefixCls + '-nav-scrollable' : '']},[_c('span',{class:[_vm.prefixCls + '-nav-prev', _vm.scrollable ? '' : _vm.prefixCls + '-nav-scroll-disabled'],on:{"click":_vm.scrollPrev}},[_c('icon',{attrs:{"type":"chevron-left"}})],1),_vm._v(" "),_c('span',{class:[_vm.prefixCls + '-nav-next', _vm.scrollable ? '' : _vm.prefixCls + '-nav-scroll-disabled'],on:{"click":_vm.scrollNext}},[_c('icon',{attrs:{"type":"chevron-right"}})],1),_vm._v(" "),_c('div',{ref:"navScroll",class:[_vm.prefixCls + '-nav-scroll']},[_c('div',{ref:"nav",staticClass:"nav-text",class:[_vm.prefixCls + '-nav'],style:(_vm.navStyle)},[_c('div',{class:_vm.barClasses,style:(_vm.barStyle)}),_vm._v(" "),_vm._l((_vm.navList),function(item,index){return _c('div',{key:index,class:_vm.tabCls(item),on:{"click":function($event){return _vm.handleChange(index)}}},[(item.icon !== '')?_c('icon',{attrs:{"type":item.icon}}):_vm._e(),_vm._v(" "),(item.labelType === 'function')?_c('render',{attrs:{"render":item.label}}):[_vm._v("\n                "+_vm._s(item.label)+"\n              ")],_vm._v(" "),(_vm.showClose(item))?_c('icon',{attrs:{"type":"times","weight":"regular"},nativeOn:{"click":function($event){$event.stopPropagation();return _vm.handleRemove(index)}}}):_vm._e()],2)})],2)])])])]),_vm._v(" "),_c('div',{ref:"panes",class:_vm.contentClasses,style:(_vm.contentStyle)},[_vm._t("default")],2)])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/tabs/tabs.vue?vue&type=template&id=5a012fca&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 313 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/table/table.vue?vue&type=template&id=3fee1b83&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.wrapClasses,style:(_vm.styles)},[_c('div',{class:_vm.classes},[(_vm.showSlotHeader)?_c('div',{ref:"title",class:[_vm.prefixCls + '-title']},[_vm._t("header")],2):_vm._e(),_vm._v(" "),(_vm.showHeader)?_c('div',{ref:"header",class:[_vm.prefixCls + '-header'],on:{"mousewheel":_vm.handleMouseWheel}},[_c('table-head',{attrs:{"prefix-cls":_vm.prefixCls,"style-object":_vm.tableHeaderStyle,"columns":_vm.cloneColumns,"column-rows":_vm.columnRows,"obj-data":_vm.objData,"columns-width":_vm.columnsWidth,"data":_vm.rebuildData}})],1):_vm._e(),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(!((!!_vm.localeNoDataText && (!_vm.data || _vm.data.length === 0)) || (!!_vm.localeNoFilteredDataText && (!_vm.rebuildData || _vm.rebuildData.length === 0)))),expression:"!((!!localeNoDataText && (!data || data.length === 0)) || (!!localeNoFilteredDataText && (!rebuildData || rebuildData.length === 0)))"}],ref:"body",class:[_vm.prefixCls + '-body'],style:(_vm.bodyStyle),on:{"scroll":_vm.handleBodyScroll}},[_c('table-body',{ref:"tbody",attrs:{"prefix-cls":_vm.prefixCls,"style-object":_vm.tableStyle,"columns":_vm.cloneColumns,"data":_vm.rebuildData,"columns-width":_vm.columnsWidth,"obj-data":_vm.objData}})],1),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(((!!_vm.localeNoDataText && (!_vm.data || _vm.data.length === 0)) || (!!_vm.localeNoFilteredDataText && (!_vm.rebuildData || _vm.rebuildData.length === 0)))),expression:"((!!localeNoDataText && (!data || data.length === 0)) || (!!localeNoFilteredDataText && (!rebuildData || rebuildData.length === 0)))"}],class:[_vm.prefixCls + '-tip'],style:(_vm.bodyStyle),on:{"scroll":_vm.handleBodyScroll}},[_c('table',{attrs:{"cellspacing":"0","cellpadding":"0","border":"0"}},[_c('tbody',[_c('tr',[_c('td',{style:({'height':_vm.bodyStyle.height,'width':(_vm.headerWidth + "px")})},[(!_vm.data || _vm.data.length === 0)?_c('span',{domProps:{"innerHTML":_vm._s(_vm.localeNoDataText)}}):_c('span',{domProps:{"innerHTML":_vm._s(_vm.localeNoFilteredDataText)}})])])])])]),_vm._v(" "),(_vm.isLeftFixed)?_c('div',{class:[_vm.prefixCls + '-fixed'],style:(_vm.fixedTableStyle)},[(_vm.showHeader)?_c('div',{class:_vm.fixedHeaderClasses},[_c('table-head',{attrs:{"fixed":"left","prefix-cls":_vm.prefixCls,"style-object":_vm.fixedTableStyle,"columns":_vm.leftFixedColumns,"column-rows":_vm.columnRows,"fixed-column-rows":_vm.leftFixedColumnRows,"obj-data":_vm.objData,"columns-width":_vm.columnsWidth,"data":_vm.rebuildData}})],1):_vm._e(),_vm._v(" "),_c('div',{ref:"fixedBody",class:[_vm.prefixCls + '-fixed-body'],style:(_vm.fixedBodyStyle),on:{"mousewheel":_vm.handleFixedMousewheel,"DOMMouseScroll":_vm.handleFixedMousewheel}},[_c('table-body',{attrs:{"fixed":"left","prefix-cls":_vm.prefixCls,"style-object":_vm.fixedTableStyle,"columns":_vm.leftFixedColumns,"data":_vm.rebuildData,"columns-width":_vm.columnsWidth,"obj-data":_vm.objData}})],1)]):_vm._e(),_vm._v(" "),(_vm.isRightFixed)?_c('div',{class:[_vm.prefixCls + '-fixed-right'],style:(_vm.fixedRightTableStyle)},[(_vm.showHeader)?_c('div',{class:_vm.fixedHeaderClasses},[_c('table-head',{attrs:{"fixed":"right","prefix-cls":_vm.prefixCls,"style-object":_vm.fixedRightTableStyle,"columns":_vm.rightFixedColumns,"column-rows":_vm.columnRows,"fixed-column-rows":_vm.rightFixedColumnRows,"obj-data":_vm.objData,"columns-width":_vm.columnsWidth,"data":_vm.rebuildData}})],1):_vm._e(),_vm._v(" "),_c('div',{ref:"fixedRightBody",class:[_vm.prefixCls + '-fixed-body'],style:(_vm.fixedBodyStyle),on:{"mousewheel":_vm.handleFixedMousewheel,"DOMMouseScroll":_vm.handleFixedMousewheel}},[_c('table-body',{attrs:{"fixed":"right","prefix-cls":_vm.prefixCls,"style-object":_vm.fixedRightTableStyle,"columns":_vm.rightFixedColumns,"data":_vm.rebuildData,"columns-width":_vm.columnsWidth,"obj-data":_vm.objData}})],1)]):_vm._e(),_vm._v(" "),(_vm.isRightFixed)?_c('div',{class:[_vm.prefixCls + '-fixed-right-header'],style:(_vm.fixedRightHeaderStyle)}):_vm._e(),_vm._v(" "),(_vm.showSlotFooter)?_c('div',{ref:"footer",class:[_vm.prefixCls + '-footer']},[_vm._t("footer")],2):_vm._e()]),_vm._v(" "),(_vm.loading)?_c('spin',{attrs:{"fix":"","size":"large"}},[_vm._t("loading")],2):_vm._e()],1)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/table/table.vue?vue&type=template&id=3fee1b83&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 314 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/switch/switch.vue?vue&type=template&id=0d4a50e2&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{class:_vm.wrapClasses,attrs:{"tabindex":"0"},on:{"click":_vm.toggle,"keydown":_vm.onKeydown}},[_c('input',{attrs:{"type":"hidden","name":_vm.name},domProps:{"value":_vm.currentValue}}),_vm._v(" "),_c('span',{class:_vm.innerClasses},[(_vm.currentValue === _vm.trueValue)?_vm._t("open"):_vm._e(),_vm._v(" "),(_vm.currentValue === _vm.falseValue)?_vm._t("close"):_vm._e()],2)])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/switch/switch.vue?vue&type=template&id=0d4a50e2&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 315 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/steps/step.vue?vue&type=template&id=e819f72a&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.wrapClasses,style:(_vm.styles)},[_c('div',{class:[_vm.prefixCls + '-tail']},[_c('i')]),_vm._v(" "),_c('div',{class:[_vm.prefixCls + '-head']},[_c('div',{class:[_vm.prefixCls + '-head-inner']},[(!_vm.icon && _vm.currentStatus !== 'finish' && _vm.currentStatus !== 'error')?_c('span',[_vm._v("\n        "+_vm._s(_vm.stepNumber)+"\n      ")]):_c('span',{class:_vm.iconClasses})])]),_vm._v(" "),_c('div',{class:[_vm.prefixCls + '-main']},[_c('div',{class:[_vm.prefixCls + '-title']},[_vm._v("\n      "+_vm._s(_vm.title)+"\n    ")]),_vm._v(" "),_vm._t("default",[(_vm.content)?_c('div',{class:[_vm.prefixCls + '-content']},[_vm._v("\n        "+_vm._s(_vm.content)+"\n      ")]):_vm._e()])],2)])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/steps/step.vue?vue&type=template&id=e819f72a&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 316 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/steps/steps.vue?vue&type=template&id=026fbbb3&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.classes},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/steps/steps.vue?vue&type=template&id=026fbbb3&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 317 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/tooltip/tooltip.vue?vue&type=template&id=8e7fc2c2&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:[_vm.prefixCls],on:{"mouseenter":_vm.handleShowPopper,"mouseleave":_vm.handleClosePopper}},[_c('div',{ref:"reference",class:[_vm.prefixCls + '-rel']},[_vm._t("default")],2),_vm._v(" "),_c('transition',{attrs:{"name":"fade"}},[_c('div',{directives:[{name:"show",rawName:"v-show",value:(!_vm.disabled && (_vm.visible || _vm.always)),expression:"!disabled && (visible || always)"},{name:"transfer-dom",rawName:"v-transfer-dom"}],ref:"popper",class:[_vm.prefixCls + '-popper'],attrs:{"data-transfer":_vm.transfer},on:{"mouseenter":_vm.handleShowPopper,"mouseleave":_vm.handleClosePopper}},[_c('div',{class:[_vm.prefixCls + '-content']},[_c('div',{class:[_vm.prefixCls + '-arrow']}),_vm._v(" "),_c('div',{class:[_vm.prefixCls + '-inner']},[_vm._t("content",[_vm._v("\n            "+_vm._s(_vm.content)+"\n          ")])],2)])])])],1)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/tooltip/tooltip.vue?vue&type=template&id=8e7fc2c2&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 318 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/slider/slider.vue?vue&type=template&id=7b934eb8&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.classes},[(!_vm.range && _vm.showInput)?_c('input-number',{attrs:{"min":_vm.min,"size":_vm.inputSize,"max":_vm.max,"step":_vm.step,"value":_vm.exportValue[0],"disabled":_vm.disabled},on:{"on-change":_vm.handleInputChange}}):_vm._e(),_vm._v(" "),_c('div',{ref:"slider",class:[_vm.prefixCls + '-wrap'],on:{"click":function($event){if($event.target !== $event.currentTarget){ return null; }return _vm.sliderClick($event)}}},[_c('input',{attrs:{"type":"hidden","name":_vm.name},domProps:{"value":_vm.exportValue}}),_vm._v(" "),(_vm.showStops)?_vm._l((_vm.stops),function(item,i){return _c('div',{key:i,class:[_vm.prefixCls + '-stop'],style:({ 'left': item + '%' }),on:{"click":function($event){if($event.target !== $event.currentTarget){ return null; }return _vm.sliderClick($event)}}})}):_vm._e(),_vm._v(" "),_c('div',{class:[_vm.prefixCls + '-bar'],style:(_vm.barStyle),on:{"click":function($event){if($event.target !== $event.currentTarget){ return null; }return _vm.sliderClick($event)}}}),_vm._v(" "),_c('div',{class:[_vm.prefixCls + '-button-wrap'],style:({left: _vm.minPosition + '%'}),on:{"touchstart":function($event){return _vm.onPointerDown($event, 'min')},"mousedown":function($event){return _vm.onPointerDown($event, 'min')}}},[_c('tooltip',{ref:"minTooltip",attrs:{"controlled":_vm.pointerDown === 'min',"placement":"top","content":_vm.tipFormat(_vm.exportValue[0]),"disabled":_vm.tipDisabled,"always":_vm.showTip === 'always'}},[_c('div',{class:_vm.minButtonClasses,attrs:{"tabindex":"0"},on:{"focus":function($event){return _vm.handleFocus('min')},"blur":function($event){return _vm.handleBlur('min')},"keydown":function($event){return _vm.onKeydown($event, 'min')}}})])],1),_vm._v(" "),(_vm.range)?_c('div',{class:[_vm.prefixCls + '-button-wrap'],style:({left: _vm.maxPosition + '%'}),on:{"touchstart":function($event){return _vm.onPointerDown($event, 'max')},"mousedown":function($event){return _vm.onPointerDown($event, 'max')}}},[_c('tooltip',{ref:"maxTooltip",attrs:{"controlled":_vm.pointerDown === 'max',"placement":"top","content":_vm.tipFormat(_vm.exportValue[1]),"disabled":_vm.tipDisabled,"always":_vm.showTip === 'always'}},[_c('div',{class:_vm.maxButtonClasses,attrs:{"tabindex":"0"},on:{"focus":function($event){return _vm.handleFocus('max')},"blur":function($event){return _vm.handleBlur('max')},"keydown":function($event){return _vm.onKeydown($event, 'max')}}})])],1):_vm._e()],2)],1)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/slider/slider.vue?vue&type=template&id=7b934eb8&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 319 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/dropdown/dropdown.vue?vue&type=template&id=bb932a8e&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:"click-outside",rawName:"v-click-outside",value:(_vm.onClickoutside),expression:"onClickoutside"}],class:[_vm.prefixCls],on:{"mouseenter":_vm.handleMouseenter,"mouseleave":_vm.handleMouseleave}},[_c('div',{ref:"reference",class:[_vm.prefixCls + '-rel'],on:{"click":_vm.handleClick}},[_vm._t("default")],2),_vm._v(" "),_c('transition',{attrs:{"name":"transition-drop"}},[_c('drop',{directives:[{name:"show",rawName:"v-show",value:(_vm.currentVisible),expression:"currentVisible"},{name:"transfer-dom",rawName:"v-transfer-dom"}],ref:"drop",class:_vm.dropdownCls,attrs:{"placement":_vm.placement,"data-transfer":_vm.transfer},nativeOn:{"mouseenter":function($event){return _vm.handleMouseenter($event)},"mouseleave":function($event){return _vm.handleMouseleave($event)}}},[_vm._t("list")],2)],1)],1)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/dropdown/dropdown.vue?vue&type=template&id=bb932a8e&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 320 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/dropdown/dropdown-menu.vue?vue&type=template&id=03758086&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',{staticClass:"ivu-dropdown-menu"},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/dropdown/dropdown-menu.vue?vue&type=template&id=03758086&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 321 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/dropdown/dropdown-item.vue?vue&type=template&id=a1b67670&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{class:_vm.classes,on:{"click":_vm.handleClick}},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/dropdown/dropdown-item.vue?vue&type=template&id=a1b67670&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 322 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/layout/footer.vue?vue&type=template&id=63082e02&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.wrapClasses},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/layout/footer.vue?vue&type=template&id=63082e02&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 323 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/form/form.vue?vue&type=template&id=44ca2750&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('form',{class:_vm.classes,attrs:{"autocomplete":_vm.autocomplete}},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/form/form.vue?vue&type=template&id=44ca2750&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 324 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/form/form-item.vue?vue&type=template&id=e6ee5b8e&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.classes},[(_vm.label || _vm.$slots.label)?_c('label',{class:[_vm.prefixCls + '-label'],style:(_vm.labelStyles),attrs:{"for":_vm.labelFor}},[_vm._t("label",[_vm._v("\n      "+_vm._s(_vm.label)+"\n    ")])],2):_vm._e(),_vm._v(" "),_c('div',{class:[_vm.prefixCls + '-content'],style:(_vm.contentStyles)},[_vm._t("default"),_vm._v(" "),_c('transition',{attrs:{"name":"fade"}},[(_vm.validateState === 'error' && _vm.showMessage && _vm.form.showMessage)?_c('div',{class:[_vm.prefixCls + '-error-tip']},[_vm._v("\n        "+_vm._s(_vm.validateMessage)+"\n      ")]):_vm._e()])],2)])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/form/form-item.vue?vue&type=template&id=e6ee5b8e&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 325 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/richtext/Richtext.vue?vue&type=template&id=923524ca&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:"redactor",class:_vm.prefixCls},[_vm._v("\n  "+_vm._s(_vm.value)+"\n")])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/richtext/Richtext.vue?vue&type=template&id=923524ca&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 326 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/rate/rate.vue?vue&type=template&id=cf716570&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.classes,on:{"mouseleave":_vm.handleMouseleave}},[_c('input',{attrs:{"type":"hidden","name":_vm.name},domProps:{"value":_vm.currentValue}}),_vm._v(" "),_vm._l((_vm.count),function(item){return _c('div',{key:item,class:_vm.starCls(item),on:{"mousemove":function($event){return _vm.handleMousemove(item, $event)},"click":function($event){return _vm.handleClick(item)}}},[_c('span',{class:[_vm.prefixCls + '-star-content'],attrs:{"type":"half"}})])}),_vm._v(" "),(_vm.showText)?_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.currentValue > 0),expression:"currentValue > 0"}],class:[_vm.prefixCls + '-text']},[_vm._t("default",[_c('span',[_vm._v(_vm._s(_vm.currentValue))]),_vm._v(" "),(_vm.currentValue <= 1)?_c('span',[_vm._v("\n        "+_vm._s(_vm.t('i.rate.star'))+"\n      ")]):_c('span',[_vm._v("\n        "+_vm._s(_vm.t('i.rate.stars'))+"\n      ")])])],2):_vm._e()],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/rate/rate.vue?vue&type=template&id=cf716570&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 327 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/affix/affix.vue?vue&type=template&id=5ad72c0a&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{ref:"point",class:_vm.classes,style:(_vm.styles)},[_vm._t("default")],2),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.slot),expression:"slot"}],style:(_vm.slotStyle)})])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/affix/affix.vue?vue&type=template&id=5ad72c0a&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 328 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/radio/radio.vue?vue&type=template&id=611cf534&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('label',{class:_vm.wrapClasses},[_c('span',{class:_vm.radioClasses},[_c('span',{class:_vm.innerClasses}),_vm._v(" "),_c('input',{class:_vm.inputClasses,attrs:{"type":"radio","disabled":_vm.disabled,"name":_vm.groupName},domProps:{"checked":_vm.currentValue},on:{"change":_vm.change,"focus":_vm.onFocus,"blur":_vm.onBlur}})]),_vm._t("default",[_vm._v(_vm._s(_vm.label))])],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/radio/radio.vue?vue&type=template&id=611cf534&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 329 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/progress/progress.vue?vue&type=template&id=558db4a3&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.wrapClasses},[_c('div',{class:_vm.outerClasses},[_c('div',{class:_vm.innerClasses},[_c('div',{class:_vm.bgClasses,style:(_vm.bgStyle)})])]),_vm._v(" "),(!_vm.hideInfo)?_c('span',{class:_vm.textClasses},[_vm._t("default",[(_vm.isStatus)?_c('span',{class:_vm.textInnerClasses},[_c('icon',{attrs:{"type":_vm.statusIcon}})],1):_c('span',{class:_vm.textInnerClasses},[_vm._v("\n        "+_vm._s(_vm.percent)+"%\n      ")])])],2):_vm._e()])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/progress/progress.vue?vue&type=template&id=558db4a3&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 330 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/poptip/poptip.vue?vue&type=template&id=02a62074&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:"click-outside",rawName:"v-click-outside",value:(_vm.handleClose),expression:"handleClose"}],class:_vm.classes,on:{"mouseenter":_vm.handleMouseenter,"mouseleave":_vm.handleMouseleave}},[_c('div',{ref:"reference",class:[_vm.prefixCls + '-rel'],on:{"click":_vm.handleClick,"mousedown":function($event){return _vm.handleFocus(false)},"mouseup":function($event){return _vm.handleBlur(false)}}},[_vm._t("default")],2),_vm._v(" "),_c('transition',{attrs:{"name":"fade"}},[_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.visible),expression:"visible"},{name:"transfer-dom",rawName:"v-transfer-dom"}],ref:"popper",class:_vm.popperClasses,style:(_vm.styles),attrs:{"data-transfer":_vm.transfer},on:{"click":_vm.handleTransferClick,"mouseenter":_vm.handleMouseenter,"mouseleave":_vm.handleMouseleave}},[_c('div',{class:[_vm.prefixCls + '-content']},[_c('div',{class:[_vm.prefixCls + '-arrow']}),_vm._v(" "),(_vm.confirm)?_c('div',{class:[_vm.prefixCls + '-inner']},[_c('div',{class:[_vm.prefixCls + '-body']},[_c('i',{staticClass:"ivu-icon ivu-icon-help-circled"}),_vm._v(" "),_c('div',{class:[_vm.prefixCls + '-body-message']},[_vm._t("title",[_vm._v("\n                "+_vm._s(_vm.title)+"\n              ")])],2)]),_vm._v(" "),_c('div',{class:[_vm.prefixCls + '-footer']},[_c('i-button',{attrs:{"type":"text","size":"small"},nativeOn:{"click":function($event){return _vm.cancel($event)}}},[_vm._v("\n              "+_vm._s(_vm.localeCancelText)+"\n            ")]),_vm._v(" "),_c('i-button',{attrs:{"type":"primary","size":"small"},nativeOn:{"click":function($event){return _vm.ok($event)}}},[_vm._v("\n              "+_vm._s(_vm.localeOkText)+"\n            ")])],1)]):_vm._e(),_vm._v(" "),(!_vm.confirm)?_c('div',{class:[_vm.prefixCls + '-inner']},[(_vm.showTitle)?_c('div',{ref:"title",class:[_vm.prefixCls + '-title']},[_vm._t("title",[_c('div',{class:[_vm.prefixCls + '-title-inner']},[_vm._v("\n                "+_vm._s(_vm.title)+"\n              ")])])],2):_vm._e(),_vm._v(" "),_c('div',{class:[_vm.prefixCls + '-body']},[_c('div',{class:[_vm.prefixCls + '-body-content']},[_vm._t("content",[_c('div',{class:[_vm.prefixCls + '-body-content-inner']},[_vm._v("\n                  "+_vm._s(_vm.content)+"\n                ")])])],2)])]):_vm._e()])])])],1)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/poptip/poptip.vue?vue&type=template&id=02a62074&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 331 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/page/page.vue?vue&type=template&id=4604846c&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.simple)?_c('ul',{class:_vm.simpleWrapClasses,style:(_vm.styles)},[_c('li',{class:_vm.prevClasses,attrs:{"title":_vm.t('i.page.prev')},on:{"click":_vm.prev}},[_vm._m(0)]),_vm._v(" "),_c('div',{class:_vm.simplePagerClasses,attrs:{"title":_vm.currentPage + '/' + _vm.allPages}},[_c('label',[_c('input',{attrs:{"type":"text","autocomplete":"off","spellcheck":"false"},domProps:{"value":_vm.currentPage},on:{"keydown":_vm.keyDown,"keyup":_vm.keyUp,"change":_vm.keyUp}})]),_vm._v(" "),_c('span',[_vm._v("/")]),_vm._v("\n    "+_vm._s(_vm.allPages)+"\n  ")]),_vm._v(" "),_c('li',{class:_vm.nextClasses,attrs:{"title":_vm.t('i.page.next')},on:{"click":_vm.next}},[_vm._m(1)])]):_c('ul',{class:_vm.wrapClasses,style:(_vm.styles)},[(_vm.showTotal)?_c('span',{class:[_vm.prefixCls + '-total']},[_vm._t("default",[_vm._v("\n      "+_vm._s(_vm.t('i.page.total'))+" "+_vm._s(_vm.total)+" "),(_vm.total <= 1)?[_vm._v("\n        "+_vm._s(_vm.t('i.page.item'))+"\n      ")]:[_vm._v("\n        "+_vm._s(_vm.t('i.page.items'))+"\n      ")]])],2):_vm._e(),_vm._v(" "),_c('li',{class:_vm.prevClasses,attrs:{"title":_vm.t('i.page.prev')},on:{"click":_vm.prev}},[_vm._m(2)]),_vm._v(" "),_c('li',{class:_vm.firstPageClasses,attrs:{"title":"1"},on:{"click":function($event){return _vm.changePage(1)}}},[_c('a',[_vm._v("1")])]),_vm._v(" "),(_vm.currentPage - 3 > 1)?_c('li',{class:[_vm.prefixCls + '-item-jump-prev'],attrs:{"title":_vm.t('i.page.prev5')},on:{"click":_vm.fastPrev}},[_vm._m(3)]):_vm._e(),_vm._v(" "),(_vm.currentPage - 2 > 1)?_c('li',{class:[_vm.prefixCls + '-item'],attrs:{"title":_vm.currentPage - 2},on:{"click":function($event){return _vm.changePage(_vm.currentPage - 2)}}},[_c('a',[_vm._v(_vm._s(_vm.currentPage - 2))])]):_vm._e(),_vm._v(" "),(_vm.currentPage - 1 > 1)?_c('li',{class:[_vm.prefixCls + '-item'],attrs:{"title":_vm.currentPage - 1},on:{"click":function($event){return _vm.changePage(_vm.currentPage - 1)}}},[_c('a',[_vm._v(_vm._s(_vm.currentPage - 1))])]):_vm._e(),_vm._v(" "),(_vm.currentPage !== 1 && _vm.currentPage !== _vm.allPages)?_c('li',{class:[_vm.prefixCls + '-item',_vm.prefixCls + '-item-active'],attrs:{"title":_vm.currentPage}},[_c('a',[_vm._v(_vm._s(_vm.currentPage))])]):_vm._e(),_vm._v(" "),(_vm.currentPage + 1 < _vm.allPages)?_c('li',{class:[_vm.prefixCls + '-item'],attrs:{"title":_vm.currentPage + 1},on:{"click":function($event){return _vm.changePage(_vm.currentPage + 1)}}},[_c('a',[_vm._v(_vm._s(_vm.currentPage + 1))])]):_vm._e(),_vm._v(" "),(_vm.currentPage + 2 < _vm.allPages)?_c('li',{class:[_vm.prefixCls + '-item'],attrs:{"title":_vm.currentPage + 2},on:{"click":function($event){return _vm.changePage(_vm.currentPage + 2)}}},[_c('a',[_vm._v(_vm._s(_vm.currentPage + 2))])]):_vm._e(),_vm._v(" "),(_vm.currentPage + 3 < _vm.allPages)?_c('li',{class:[_vm.prefixCls + '-item-jump-next'],attrs:{"title":_vm.t('i.page.next5')},on:{"click":_vm.fastNext}},[_vm._m(4)]):_vm._e(),_vm._v(" "),(_vm.allPages > 1)?_c('li',{class:_vm.lastPageClasses,attrs:{"title":_vm.allPages},on:{"click":function($event){return _vm.changePage(_vm.allPages)}}},[_c('a',[_vm._v(_vm._s(_vm.allPages))])]):_vm._e(),_vm._v(" "),_c('li',{class:_vm.nextClasses,attrs:{"title":_vm.t('i.page.next')},on:{"click":_vm.next}},[_vm._m(5)]),_vm._v(" "),_c('options',{attrs:{"show-sizer":_vm.showSizer,"page-size":_vm.currentPageSize,"page-size-opts":_vm.pageSizeOpts,"placement":_vm.placement,"transfer":_vm.transfer,"show-elevator":_vm.showElevator,"score-current":_vm.currentPage,"current":_vm.currentPage,"all-pages":_vm.allPages,"is-small":_vm.isSmall},on:{"on-size":_vm.onSize,"on-page":_vm.onPage}})],1)}
var staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('a',[_c('i',{staticClass:"ivu-icon ivu-icon-ios-arrow-left"})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('a',[_c('i',{staticClass:"ivu-icon ivu-icon-ios-arrow-right"})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('a',[_c('i',{staticClass:"ivu-icon ivu-icon-ios-arrow-left"})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('a',[_c('i',{staticClass:"ivu-icon ivu-icon-ios-arrow-left"})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('a',[_c('i',{staticClass:"ivu-icon ivu-icon-ios-arrow-right"})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('a',[_c('i',{staticClass:"ivu-icon ivu-icon-ios-arrow-right"})])}]


// CONCATENATED MODULE: ./src/components/page/page.vue?vue&type=template&id=4604846c&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 332 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/menu/submenu.vue?vue&type=template&id=6cb8a29d&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{class:_vm.classes,on:{"mouseenter":_vm.handleMouseenter,"mouseleave":_vm.handleMouseleave}},[_c('div',{ref:"reference",class:[_vm.prefixCls + '-submenu-title'],style:(_vm.titleStyle),on:{"click":function($event){$event.stopPropagation();return _vm.handleClick($event)}}},[_vm._t("title"),_vm._v(" "),_c('icon',{class:[_vm.prefixCls + '-submenu-title-icon'],attrs:{"type":"ios-arrow-down"}})],2),_vm._v(" "),(_vm.mode === 'vertical')?_c('collapse-transition',[_c('ul',{directives:[{name:"show",rawName:"v-show",value:(_vm.opened),expression:"opened"}],class:[_vm.prefixCls]},[_vm._t("default")],2)]):_c('transition',{attrs:{"name":"slide-up"}},[_c('drop',{directives:[{name:"show",rawName:"v-show",value:(_vm.opened),expression:"opened"}],ref:"drop",style:(_vm.dropStyle),attrs:{"placement":"bottom"}},[_c('ul',{class:[_vm.prefixCls + '-drop-list']},[_vm._t("default")],2)])],1)],1)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/menu/submenu.vue?vue&type=template&id=6cb8a29d&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 333 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/menu/menu-item.vue?vue&type=template&id=6cdf0091&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{class:_vm.classes,style:(_vm.itemStyle),on:{"click":function($event){$event.stopPropagation();return _vm.handleClick($event)}}},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/menu/menu-item.vue?vue&type=template&id=6cdf0091&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 334 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/menu/menu-group.vue?vue&type=template&id=7c5fc7ae&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{class:[_vm.prefixCls + '-item-group']},[_c('div',{class:[_vm.prefixCls + '-item-group-title'],style:(_vm.groupStyle)},[_vm._v("\n    "+_vm._s(_vm.title)+"\n  ")]),_vm._v(" "),_c('ul',[_vm._t("default")],2)])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/menu/menu-group.vue?vue&type=template&id=7c5fc7ae&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 335 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/menu/menu.vue?vue&type=template&id=5d329a5a&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',{class:_vm.classes,style:(_vm.styles)},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/menu/menu.vue?vue&type=template&id=5d329a5a&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 336 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/layout/header.vue?vue&type=template&id=a7002d98&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.wrapClasses},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/layout/header.vue?vue&type=template&id=a7002d98&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 337 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/input-number/input-number.vue?vue&type=template&id=17ae3fbc&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.wrapClasses},[_c('div',{class:_vm.handlerClasses},[_c('a',{class:_vm.upClasses,on:{"click":_vm.up,"mousedown":_vm.preventDefault}},[_c('span',{class:_vm.innerUpClasses,on:{"click":_vm.preventDefault}})]),_vm._v(" "),_c('a',{class:_vm.downClasses,on:{"click":_vm.down,"mousedown":_vm.preventDefault}},[_c('span',{class:_vm.innerDownClasses,on:{"click":_vm.preventDefault}})])]),_vm._v(" "),_c('div',{class:_vm.inputWrapClasses},[_c('label',[_c('input',{class:_vm.inputClasses,attrs:{"id":_vm.elementId,"disabled":_vm.disabled,"autocomplete":"off","spellcheck":"false","autofocus":_vm.autofocus,"readonly":_vm.readonly || !_vm.editable,"name":_vm.name,"placeholder":_vm.placeholder},domProps:{"value":_vm.formatterValue},on:{"focus":_vm.focus,"blur":_vm.blur,"keydown":function($event){$event.stopPropagation();return _vm.keyDown($event)},"input":_vm.change,"mouseup":_vm.preventDefault,"change":_vm.change}})])])])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/input-number/input-number.vue?vue&type=template&id=17ae3fbc&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 338 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/scroll/scroll.vue?vue&type=template&id=024887be&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.wrapClasses,staticStyle:{"touch-action":"none"}},[_c('div',{ref:"scrollContainer",class:_vm.scrollContainerClasses,style:({height: _vm.height + 'px'}),on:{"scroll":_vm.handleScroll,"wheel":_vm.onWheel,"touchstart":_vm.onPointerDown}},[_c('div',{ref:"toploader",class:_vm.loaderClasses,style:({paddingTop: _vm.wrapperPadding.paddingTop})},[_c('loader',{attrs:{"text":_vm.localeLoadingText,"active":_vm.showTopLoader}})],1),_vm._v(" "),_c('div',{ref:"scrollContent",class:_vm.slotContainerClasses},[_vm._t("default")],2),_vm._v(" "),_c('div',{ref:"bottomLoader",class:_vm.loaderClasses,style:({paddingBottom: _vm.wrapperPadding.paddingBottom})},[_c('loader',{attrs:{"text":_vm.localeLoadingText,"active":_vm.showBottomLoader}})],1)])])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/scroll/scroll.vue?vue&type=template&id=024887be&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 339 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/layout/sider.vue?vue&type=template&id=cd2954c2&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.wrapClasses,style:(_vm.wrapStyles)},[_c('span',{directives:[{name:"show",rawName:"v-show",value:(_vm.showZeroTrigger),expression:"showZeroTrigger"}],class:_vm.zeroWidthTriggerClasses,on:{"click":_vm.toggleCollapse}},[_c('i',{staticClass:"ivu-icon ivu-icon-navicon-round"})]),_vm._v(" "),_c('div',{class:_vm.childClasses},[_vm._t("default")],2),_vm._v(" "),_vm._t("trigger",[_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.showBottomTrigger),expression:"showBottomTrigger"}],class:_vm.triggerClasses,style:({width: _vm.siderWidth + 'px'}),on:{"click":_vm.toggleCollapse}},[_c('i',{class:_vm.triggerIconClasses})])])],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/layout/sider.vue?vue&type=template&id=cd2954c2&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 340 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/layout/layout.vue?vue&type=template&id=f384befc&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.wrapClasses},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/layout/layout.vue?vue&type=template&id=f384befc&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 341 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/date-picker/picker.vue?vue&type=template&id=69903ecf&xmlns%3Av-click-outside=http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:"click-outside",rawName:"v-click-outside:mousedown.capture",value:(_vm.handleClose),expression:"handleClose",arg:"mousedown",modifiers:{"capture":true}},{name:"click-outside",rawName:"v-click-outside.capture",value:(_vm.handleClose),expression:"handleClose",modifiers:{"capture":true}}],class:_vm.wrapperClasses},[_c('div',{ref:"reference",class:[_vm.prefixCls + '-rel']},[_vm._t("default",[_c('i-input',{key:_vm.forceInputRerender,ref:"input",class:[_vm.prefixCls + '-editor'],attrs:{"element-id":_vm.elementId,"readonly":!_vm.editable || _vm.readonly,"disabled":_vm.disabled,"size":_vm.size,"placeholder":_vm.placeholder,"value":_vm.visualValue,"name":_vm.name,"icon":_vm.iconType},on:{"on-input-change":_vm.handleInputChange,"on-focus":_vm.handleFocus,"on-blur":_vm.handleBlur,"on-click":_vm.handleIconClick},nativeOn:{"click":function($event){return _vm.handleFocus($event)},"keydown":function($event){return _vm.handleKeydown($event)},"mouseenter":function($event){return _vm.handleInputMouseenter($event)},"mouseleave":function($event){return _vm.handleInputMouseleave($event)}}})])],2),_vm._v(" "),_c('transition',{attrs:{"name":"transition-drop"}},[_c('drop',{directives:[{name:"show",rawName:"v-show",value:(_vm.opened),expression:"opened"},{name:"transfer-dom",rawName:"v-transfer-dom"}],ref:"drop",class:( _obj = {}, _obj[_vm.prefixCls + '-transfer'] = _vm.transfer, _obj ),attrs:{"placement":_vm.placement,"data-transfer":_vm.transfer},nativeOn:{"click":function($event){return _vm.handleTransferClick($event)}}},[_c('div',[_c(_vm.panel,_vm._b({ref:"pickerPanel",tag:"component",attrs:{"visible":_vm.visible,"show-time":_vm.type === 'datetime' || _vm.type === 'datetimerange',"confirm":_vm.isConfirm,"selection-mode":_vm.selectionMode,"steps":_vm.steps,"format":_vm.format,"value":_vm.internalValue,"start-date":_vm.startDate,"split-panels":_vm.splitPanels,"show-week-numbers":_vm.showWeekNumbers,"picker-type":_vm.type,"multiple":_vm.multiple,"focused-date":_vm.focusedDate,"time-picker-options":_vm.timePickerOptions},on:{"on-pick":_vm.onPick,"on-pick-clear":_vm.handleClear,"on-pick-success":_vm.onPickSuccess,"on-pick-click":function($event){_vm.disableClickOutSide = true},"on-selection-mode-change":_vm.onSelectionModeChange}},'component',_vm.ownPickerProps,false))],1)])],1)],1)
var _obj;}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/date-picker/picker.vue?vue&type=template&id=69903ecf&xmlns%3Av-click-outside=http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 342 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/date-picker/panel/Date/date.vue?vue&type=template&id=5591d0bf&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.classes,on:{"mousedown":function($event){$event.preventDefault();}}},[(_vm.shortcuts.length)?_c('div',{class:[_vm.prefixCls + '-sidebar']},_vm._l((_vm.shortcuts),function(shortcut,i){return _c('div',{key:i,class:[_vm.prefixCls + '-shortcut'],on:{"click":function($event){return _vm.handleShortcutClick(shortcut)}}},[_vm._v("\n      "+_vm._s(shortcut.text)+"\n    ")])}),0):_vm._e(),_vm._v(" "),_c('div',{class:[_vm.prefixCls + '-body']},[_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.currentView !== 'time'),expression:"currentView !== 'time'"}],class:[_vm.datePrefixCls + '-header']},[_c('span',{class:_vm.iconBtnCls('prev', '-double'),on:{"click":function($event){return _vm.changeYear(-1)}}},[_c('icon',{attrs:{"type":"ios-arrow-left"}})],1),_vm._v(" "),(_vm.pickerTable === 'date-table')?_c('span',{directives:[{name:"show",rawName:"v-show",value:(_vm.currentView === 'date'),expression:"currentView === 'date'"}],class:_vm.iconBtnCls('prev'),on:{"click":function($event){return _vm.changeMonth(-1)}}},[_c('icon',{attrs:{"type":"ios-arrow-left"}})],1):_vm._e(),_vm._v(" "),_c('date-panel-label',{attrs:{"date-panel-label":_vm.datePanelLabel,"current-view":_vm.pickerTable.split('-').shift(),"date-prefix-cls":_vm.datePrefixCls}}),_vm._v(" "),_c('span',{class:_vm.iconBtnCls('next', '-double'),on:{"click":function($event){return _vm.changeYear(+1)}}},[_c('icon',{attrs:{"type":"ios-arrow-right"}})],1),_vm._v(" "),(_vm.pickerTable === 'date-table')?_c('span',{directives:[{name:"show",rawName:"v-show",value:(_vm.currentView === 'date'),expression:"currentView === 'date'"}],class:_vm.iconBtnCls('next'),on:{"click":function($event){return _vm.changeMonth(+1)}}},[_c('icon',{attrs:{"type":"ios-arrow-right"}})],1):_vm._e()],1),_vm._v(" "),_c('div',{class:[_vm.prefixCls + '-content']},[(_vm.currentView !== 'time')?_c(_vm.pickerTable,{ref:"pickerTable",tag:"component",attrs:{"table-date":_vm.panelDate,"show-week-numbers":_vm.showWeekNumbers,"value":_vm.dates,"selection-mode":_vm.selectionMode,"disabled-date":_vm.disabledDate,"focused-date":_vm.focusedDate},on:{"on-pick":_vm.panelPickerHandlers,"on-pick-click":_vm.handlePickClick}}):_vm._e()],1),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.isTime),expression:"isTime"}],class:[_vm.prefixCls + '-content']},[(_vm.currentView === 'time')?_c('time-picker',_vm._b({ref:"timePicker",attrs:{"value":_vm.dates,"format":_vm.format,"time-disabled":_vm.timeDisabled,"disabled-date":_vm.disabledDate,"focused-date":_vm.focusedDate},on:{"on-pick":_vm.handlePick,"on-pick-click":_vm.handlePickClick,"on-pick-clear":_vm.handlePickClear,"on-pick-success":_vm.handlePickSuccess,"on-pick-toggle-time":_vm.handleToggleTime}},'time-picker',_vm.timePickerOptions,false)):_vm._e()],1),_vm._v(" "),(_vm.confirm)?_c('confirm',{attrs:{"show-time":_vm.showTime,"is-time":_vm.isTime},on:{"on-pick-toggle-time":_vm.handleToggleTime,"on-pick-clear":_vm.handlePickClear,"on-pick-success":_vm.handlePickSuccess}}):_vm._e()],1)])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/date-picker/panel/Date/date.vue?vue&type=template&id=5591d0bf&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 343 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/date-picker/panel/Time/time.vue?vue&type=template&id=a7567520&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:[_vm.prefixCls + '-body-wrapper'],on:{"mousedown":function($event){$event.preventDefault();}}},[_c('div',{class:[_vm.prefixCls + '-body']},[(_vm.showDate)?_c('div',{class:[_vm.timePrefixCls + '-header']},[_vm._v("\n      "+_vm._s(_vm.visibleDate)+"\n    ")]):_vm._e(),_vm._v(" "),_c('div',{class:[_vm.prefixCls + '-content']},[_c('time-spinner',{ref:"timeSpinner",attrs:{"show-seconds":_vm.showSeconds,"steps":_vm.steps,"hours":_vm.timeSlots[0],"minutes":_vm.timeSlots[1],"seconds":_vm.timeSlots[2],"disabled-hours":_vm.disabledHMS.disabledHours,"disabled-minutes":_vm.disabledHMS.disabledMinutes,"disabled-seconds":_vm.disabledHMS.disabledSeconds,"hide-disabled-options":_vm.hideDisabledOptions},on:{"on-change":_vm.handleChange,"on-pick-click":_vm.handlePickClick}})],1),_vm._v(" "),(_vm.confirm)?_c('confirm',{on:{"on-pick-clear":_vm.handlePickClear,"on-pick-success":_vm.handlePickSuccess}}):_vm._e()],1)])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/date-picker/panel/Time/time.vue?vue&type=template&id=a7567520&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 344 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/spin/spin.vue?vue&type=template&id=0d6ed834&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('transition',{attrs:{"name":"fade"}},[(_vm.fullscreenVisible)?_c('div',{class:_vm.classes},[_c('div',{class:_vm.mainClasses},[_c('span',{class:_vm.dotClasses}),_vm._v(" "),_c('div',{class:_vm.textClasses},[_vm._t("default")],2)])]):_vm._e()])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/spin/spin.vue?vue&type=template&id=0d6ed834&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 345 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/date-picker/panel/Date/date-range.vue?vue&type=template&id=157542aa&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.classes,on:{"mousedown":function($event){$event.preventDefault();}}},[(_vm.shortcuts.length)?_c('div',{class:[_vm.prefixCls + '-sidebar']},_vm._l((_vm.shortcuts),function(shortcut,i){return _c('div',{key:i,class:[_vm.prefixCls + '-shortcut'],on:{"click":function($event){return _vm.handleShortcutClick(shortcut)}}},[_vm._v("\n      "+_vm._s(shortcut.text)+"\n    ")])}),0):_vm._e(),_vm._v(" "),_c('div',{class:_vm.panelBodyClasses},[_c('div',{directives:[{name:"show",rawName:"v-show",value:(!_vm.isTime),expression:"!isTime"}],class:[_vm.prefixCls + '-content', _vm.prefixCls + '-content-left']},[_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.currentView !== 'time'),expression:"currentView !== 'time'"}],class:[_vm.datePrefixCls + '-header']},[_c('span',{class:_vm.iconBtnCls('prev', '-double'),on:{"click":function($event){return _vm.prevYear('left')}}},[_c('icon',{attrs:{"type":"ios-arrow-left"}})],1),_vm._v(" "),(_vm.leftPickerTable === 'date-table')?_c('span',{directives:[{name:"show",rawName:"v-show",value:(_vm.currentView === 'date'),expression:"currentView === 'date'"}],class:_vm.iconBtnCls('prev'),on:{"click":function($event){return _vm.prevMonth('left')}}},[_c('icon',{attrs:{"type":"ios-arrow-left"}})],1):_vm._e(),_vm._v(" "),_c('date-panel-label',{attrs:{"date-panel-label":_vm.leftDatePanelLabel,"current-view":_vm.leftDatePanelView,"date-prefix-cls":_vm.datePrefixCls}}),_vm._v(" "),(_vm.splitPanels || _vm.leftPickerTable !== 'date-table')?_c('span',{class:_vm.iconBtnCls('next', '-double'),on:{"click":function($event){return _vm.nextYear('left')}}},[_c('icon',{attrs:{"type":"ios-arrow-right"}})],1):_vm._e(),_vm._v(" "),(_vm.splitPanels && _vm.leftPickerTable === 'date-table')?_c('span',{directives:[{name:"show",rawName:"v-show",value:(_vm.currentView === 'date'),expression:"currentView === 'date'"}],class:_vm.iconBtnCls('next'),on:{"click":function($event){return _vm.nextMonth('left')}}},[_c('icon',{attrs:{"type":"ios-arrow-right"}})],1):_vm._e()],1),_vm._v(" "),(_vm.currentView !== 'time')?_c(_vm.leftPickerTable,{ref:"leftYearTable",tag:"component",attrs:{"table-date":_vm.leftPanelDate,"selection-mode":"range","disabled-date":_vm.disabledDate,"range-state":_vm.rangeState,"show-week-numbers":_vm.showWeekNumbers,"value":_vm.preSelecting.left ? [_vm.dates[0]] : _vm.dates,"focused-date":_vm.focusedDate},on:{"on-change-range":_vm.handleChangeRange,"on-pick":_vm.panelPickerHandlers.left,"on-pick-click":_vm.handlePickClick}}):_vm._e()],1),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(!_vm.isTime),expression:"!isTime"}],class:[_vm.prefixCls + '-content', _vm.prefixCls + '-content-right']},[_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.currentView !== 'time'),expression:"currentView !== 'time'"}],class:[_vm.datePrefixCls + '-header']},[(_vm.splitPanels || _vm.rightPickerTable !== 'date-table')?_c('span',{class:_vm.iconBtnCls('prev', '-double'),on:{"click":function($event){return _vm.prevYear('right')}}},[_c('icon',{attrs:{"type":"ios-arrow-left"}})],1):_vm._e(),_vm._v(" "),(_vm.splitPanels && _vm.rightPickerTable === 'date-table')?_c('span',{directives:[{name:"show",rawName:"v-show",value:(_vm.currentView === 'date'),expression:"currentView === 'date'"}],class:_vm.iconBtnCls('prev'),on:{"click":function($event){return _vm.prevMonth('right')}}},[_c('icon',{attrs:{"type":"ios-arrow-left"}})],1):_vm._e(),_vm._v(" "),_c('date-panel-label',{attrs:{"date-panel-label":_vm.rightDatePanelLabel,"current-view":_vm.rightDatePanelView,"date-prefix-cls":_vm.datePrefixCls}}),_vm._v(" "),_c('span',{class:_vm.iconBtnCls('next', '-double'),on:{"click":function($event){return _vm.nextYear('right')}}},[_c('icon',{attrs:{"type":"ios-arrow-right"}})],1),_vm._v(" "),(_vm.rightPickerTable === 'date-table')?_c('span',{directives:[{name:"show",rawName:"v-show",value:(_vm.currentView === 'date'),expression:"currentView === 'date'"}],class:_vm.iconBtnCls('next'),on:{"click":function($event){return _vm.nextMonth('right')}}},[_c('icon',{attrs:{"type":"ios-arrow-right"}})],1):_vm._e()],1),_vm._v(" "),(_vm.currentView !== 'time')?_c(_vm.rightPickerTable,{ref:"rightYearTable",tag:"component",attrs:{"table-date":_vm.rightPanelDate,"selection-mode":"range","range-state":_vm.rangeState,"disabled-date":_vm.disabledDate,"show-week-numbers":_vm.showWeekNumbers,"value":_vm.preSelecting.right ? [_vm.dates[_vm.dates.length - 1]] : _vm.dates,"focused-date":_vm.focusedDate},on:{"on-change-range":_vm.handleChangeRange,"on-pick":_vm.panelPickerHandlers.right,"on-pick-click":_vm.handlePickClick}}):_vm._e()],1),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.isTime),expression:"isTime"}],class:[_vm.prefixCls + '-content']},[(_vm.currentView === 'time')?_c('time-picker',_vm._b({ref:"timePicker",attrs:{"value":_vm.dates,"format":_vm.format,"time-disabled":_vm.timeDisabled},on:{"on-pick":_vm.handleRangePick,"on-pick-click":_vm.handlePickClick,"on-pick-clear":_vm.handlePickClear,"on-pick-success":_vm.handlePickSuccess,"on-pick-toggle-time":_vm.handleToggleTime}},'time-picker',_vm.timePickerOptions,false)):_vm._e()],1),_vm._v(" "),(_vm.confirm)?_c('confirm',{attrs:{"show-time":_vm.showTime,"is-time":_vm.isTime,"time-disabled":_vm.timeDisabled},on:{"on-pick-toggle-time":_vm.handleToggleTime,"on-pick-clear":_vm.handlePickClear,"on-pick-success":_vm.handlePickSuccess}}):_vm._e()],1)])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/date-picker/panel/Date/date-range.vue?vue&type=template&id=157542aa&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 346 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/date-picker/panel/Time/time-range.vue?vue&type=template&id=76dde5da&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.classes,on:{"mousedown":function($event){$event.preventDefault();}}},[_c('div',{class:[_vm.prefixCls + '-body']},[_c('div',{class:[_vm.prefixCls + '-content', _vm.prefixCls + '-content-left']},[_c('div',{class:[_vm.timePrefixCls + '-header']},[(_vm.showDate)?[_vm._v("\n          "+_vm._s(_vm.leftDatePanelLabel)+"\n        ")]:[_vm._v("\n          "+_vm._s(_vm.t('i.datepicker.startTime'))+"\n        ")]],2),_vm._v(" "),_c('time-spinner',{ref:"timeSpinner",attrs:{"steps":_vm.steps,"show-seconds":_vm.showSeconds,"hours":_vm.value[0] && _vm.dateStart.getHours(),"minutes":_vm.value[0] && _vm.dateStart.getMinutes(),"seconds":_vm.value[0] && _vm.dateStart.getSeconds(),"disabled-hours":_vm.disabledHours,"disabled-minutes":_vm.disabledMinutes,"disabled-seconds":_vm.disabledSeconds,"hide-disabled-options":_vm.hideDisabledOptions},on:{"on-change":_vm.handleStartChange,"on-pick-click":_vm.handlePickClick}})],1),_vm._v(" "),_c('div',{class:[_vm.prefixCls + '-content', _vm.prefixCls + '-content-right']},[_c('div',{class:[_vm.timePrefixCls + '-header']},[(_vm.showDate)?[_vm._v("\n          "+_vm._s(_vm.rightDatePanelLabel)+"\n        ")]:[_vm._v("\n          "+_vm._s(_vm.t('i.datepicker.endTime'))+"\n        ")]],2),_vm._v(" "),_c('time-spinner',{ref:"timeSpinnerEnd",attrs:{"steps":_vm.steps,"show-seconds":_vm.showSeconds,"hours":_vm.value[1] && _vm.dateEnd.getHours(),"minutes":_vm.value[1] && _vm.dateEnd.getMinutes(),"seconds":_vm.value[1] && _vm.dateEnd.getSeconds(),"disabled-hours":_vm.disabledHours,"disabled-minutes":_vm.disabledMinutes,"disabled-seconds":_vm.disabledSeconds,"hide-disabled-options":_vm.hideDisabledOptions},on:{"on-change":_vm.handleEndChange,"on-pick-click":_vm.handlePickClick}})],1),_vm._v(" "),(_vm.confirm)?_c('confirm',{on:{"on-pick-clear":_vm.handlePickClear,"on-pick-success":_vm.handlePickSuccess}}):_vm._e()],1)])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/date-picker/panel/Time/time-range.vue?vue&type=template&id=76dde5da&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 347 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/modal/modal.vue?vue&type=template&id=33e01428&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:"transfer-dom",rawName:"v-transfer-dom"}],attrs:{"data-transfer":_vm.transfer}},[_c('transition',{attrs:{"name":_vm.transitionNames[1]}},[_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.visible),expression:"visible"}],class:_vm.maskClasses,on:{"click":_vm.mask}})]),_vm._v(" "),_c('div',{class:_vm.wrapClasses,on:{"click":_vm.handleWrapClick}},[_c('transition',{attrs:{"name":_vm.transitionNames[0]},on:{"after-leave":_vm.animationFinish}},[_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.visible),expression:"visible"}],class:_vm.classes,style:(_vm.mainStyles)},[_c('div',{class:[_vm.prefixCls + '-content']},[(_vm.closable)?_c('a',{class:[_vm.prefixCls + '-close'],on:{"click":_vm.close}},[_vm._t("close",[_c('icon',{attrs:{"type":"times","weight":"regular"}})])],2):_vm._e(),_vm._v(" "),(_vm.showHead)?_c('div',{class:[_vm.prefixCls + '-header']},[_vm._t("header",[_c('div',{class:[_vm.prefixCls + '-header-inner']},[_vm._v("\n                "+_vm._s(_vm.title)+"\n              ")])])],2):_vm._e(),_vm._v(" "),_c('div',{class:[_vm.prefixCls + '-body']},[_vm._t("default")],2),_vm._v(" "),(!_vm.footerHide)?_c('div',{class:[_vm.prefixCls + '-footer']},[_vm._t("footer",[_c('i-button',{attrs:{"type":"text","size":"large"},nativeOn:{"click":function($event){return _vm.cancel($event)}}},[_vm._v("\n                "+_vm._s(_vm.localeCancelText)+"\n              ")]),_vm._v(" "),_c('i-button',{attrs:{"type":"primary","size":"large","loading":_vm.buttonLoading},nativeOn:{"click":function($event){return _vm.ok($event)}}},[_vm._v("\n                "+_vm._s(_vm.localeOkText)+"\n              ")])])],2):_vm._e()])])])],1)],1)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/modal/modal.vue?vue&type=template&id=33e01428&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 348 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/base/notification/notification.vue?vue&type=template&id=16007b60&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.classes,style:(_vm.styles)},_vm._l((_vm.notices),function(notice){return _c('notice',{key:notice.name,attrs:{"prefix-cls":_vm.prefixCls,"styles":notice.styles,"type":notice.type,"content":notice.content,"duration":notice.duration,"render":notice.render,"has-title":notice.hasTitle,"with-icon":notice.withIcon,"closable":notice.closable,"name":notice.name,"transition-name":notice.transitionName,"on-close":notice.onClose}})}),1)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/base/notification/notification.vue?vue&type=template&id=16007b60&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 349 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/loading-bar/loading-bar.vue?vue&type=template&id=6b85ac7c&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('transition',{attrs:{"name":"fade"}},[_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.show),expression:"show"}],class:_vm.classes,style:(_vm.outerStyles)},[_c('div',{class:_vm.innerClasses,style:(_vm.styles)})])])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/loading-bar/loading-bar.vue?vue&type=template&id=6b85ac7c&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 350 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/tag/tag.vue?vue&type=template&id=74b6cd12&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.fade)?_c('transition',{attrs:{"name":"fade"}},[_c('div',{class:_vm.classes,style:(_vm.wraperStyles),on:{"click":function($event){$event.stopPropagation();return _vm.check($event)}}},[(_vm.showDot)?_c('span',{class:_vm.dotClasses,style:(_vm.bgColorStyle)}):_vm._e(),_vm._v(" "),_c('span',{class:_vm.textClasses,style:(_vm.textColorStyle)},[_vm._t("default")],2),_vm._v(" "),(_vm.closable)?_c('icon',{class:_vm.iconClass,attrs:{"color":_vm.lineColor,"type":"times","weight":"regular"},nativeOn:{"click":function($event){$event.stopPropagation();return _vm.close($event)}}}):_vm._e()],1)]):_c('div',{class:_vm.classes,style:(_vm.wraperStyles),on:{"click":function($event){$event.stopPropagation();return _vm.check($event)}}},[(_vm.showDot)?_c('span',{class:_vm.dotClasses,style:(_vm.bgColorStyle)}):_vm._e(),_vm._v(" "),_c('span',{class:_vm.textClasses,style:(_vm.textColorStyle)},[_vm._t("default")],2),_vm._v(" "),(_vm.closable)?_c('icon',{class:_vm.iconClass,attrs:{"color":_vm.lineColor,"type":"times","weight":"regular"},nativeOn:{"click":function($event){$event.stopPropagation();return _vm.close($event)}}}):_vm._e()],1)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/tag/tag.vue?vue&type=template&id=74b6cd12&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 351 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/transfer/operation.vue?vue&type=template&id=36cdafef&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.prefixCls + '-operation'},[_c('i-button',{attrs:{"type":"primary","size":"small","disabled":!_vm.rightActive},nativeOn:{"click":function($event){return _vm.moveToLeft($event)}}},[_c('icon',{attrs:{"type":"ios-arrow-left"}}),_vm._v(" "+_vm._s(_vm.operations[0])+"\n  ")],1),_vm._v(" "),_c('i-button',{attrs:{"type":"primary","size":"small","disabled":!_vm.leftActive},nativeOn:{"click":function($event){return _vm.moveToRight($event)}}},[_vm._v("\n    "+_vm._s(_vm.operations[1])+" "),_c('icon',{attrs:{"type":"ios-arrow-right"}})],1)],1)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/transfer/operation.vue?vue&type=template&id=36cdafef&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 352 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/page/options.vue?vue&type=template&id=42021fb2&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.showSizer || _vm.showElevator)?_c('div',{class:_vm.optsClasses},[(_vm.showSizer)?_c('div',{class:_vm.sizerClasses},[_c('i-select',{attrs:{"size":_vm.size,"placement":_vm.placement,"transfer":_vm.transfer},on:{"on-change":_vm.changeSize},model:{value:(_vm.currentPageSize),callback:function ($$v) {_vm.currentPageSize=$$v},expression:"currentPageSize"}},_vm._l((_vm.pageSizeOpts),function(item){return _c('i-option',{key:item,staticStyle:{"text-align":"center"},attrs:{"value":item}},[_vm._v("\n        "+_vm._s(item)+" "+_vm._s(_vm.t('i.page.page'))+"\n      ")])}),1)],1):_vm._e(),_vm._v(" "),(_vm.showElevator)?_c('div',{class:_vm.ElevatorClasses},[_vm._v("\n    "+_vm._s(_vm.t('i.page.goto'))+"\n    "),_c('label',[_c('input',{attrs:{"type":"text","autocomplete":"off","spellcheck":"false"},domProps:{"value":_vm.scoreCurrent},on:{"keyup":_vm.onKeyup}})]),_vm._v("\n    "+_vm._s(_vm.t('i.page.p'))+"\n  ")]):_vm._e()]):_vm._e()}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/page/options.vue?vue&type=template&id=42021fb2&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 353 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/select/dropdown.vue?vue&type=template&id=efcf2562&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"byx-select-dropdown",class:_vm.className,style:(_vm.styles)},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/select/dropdown.vue?vue&type=template&id=efcf2562&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 354 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/select/select-head.vue?vue&type=template&id=932b3bda&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{on:{"click":_vm.onHeaderClick}},[_vm._l((_vm.selectedMultiple),function(item,i){return _c('div',{key:i,staticClass:"ivu-tag ivu-tag-checked"},[_c('span',{staticClass:"ivu-tag-text"},[_vm._v("\n      "+_vm._s(item.label)+"\n    ")]),_vm._v(" "),_c('icon',{attrs:{"type":"times","weight":"regular"},nativeOn:{"click":function($event){$event.stopPropagation();return _vm.removeTag(item)}}})],1)}),_vm._v(" "),_c('span',{directives:[{name:"show",rawName:"v-show",value:(_vm.singleDisplayValue),expression:"singleDisplayValue"}],class:_vm.singleDisplayClasses},[_vm._v("\n    "+_vm._s(_vm.singleDisplayValue)+"\n  ")]),_vm._v(" "),_c('label',[(_vm.filterable)?_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.query),expression:"query"}],ref:"input",class:[_vm.prefixCls + '-input'],style:(_vm.inputStyle),attrs:{"id":_vm.inputElementId,"type":"text","disabled":_vm.disabled,"placeholder":_vm.showPlaceholder ? _vm.localePlaceholder : '',"autocomplete":"off","spellcheck":"false"},domProps:{"value":(_vm.query)},on:{"keydown":_vm.onKeydown,"focus":_vm.onInputFocus,"blur":_vm.onInputFocus,"input":function($event){if($event.target.composing){ return; }_vm.query=$event.target.value}}}):_vm._e()]),_vm._v(" "),(_vm.resetSelect)?_c('icon',{class:[_vm.prefixCls + '-arrow'],attrs:{"type":"chevron-down","weight":"solid"},nativeOn:{"click":function($event){$event.stopPropagation();return _vm.onClear($event)}}}):_vm._e(),_vm._v(" "),(!_vm.resetSelect && !_vm.remote && !_vm.disabled)?_c('icon',{class:_vm.iconClasses,attrs:{"type":"sort","weight":"solid"}}):_vm._e()],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/select/select-head.vue?vue&type=template&id=932b3bda&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 355 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cascader/caspanel.vue?vue&type=template&id=e83b9154&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',[(_vm.data && _vm.data.length)?_c('ul',{class:[_vm.prefixCls + '-menu']},_vm._l((_vm.data),function(item){return _c('casitem',{key:_vm.getKey(item),attrs:{"prefix-cls":_vm.prefixCls,"data":item,"tmp-item":_vm.tmpItem},nativeOn:{"click":function($event){$event.stopPropagation();return _vm.handleClickItem(item)},"mouseenter":function($event){$event.stopPropagation();return _vm.handleHoverItem(item)}}})}),1):_vm._e(),_vm._v(" "),(_vm.sublist && _vm.sublist.length)?_c('caspanel',{attrs:{"prefix-cls":_vm.prefixCls,"data":_vm.sublist,"disabled":_vm.disabled,"trigger":_vm.trigger,"change-on-select":_vm.changeOnSelect}}):_vm._e()],1)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cascader/caspanel.vue?vue&type=template&id=e83b9154&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 356 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/scroll/loading-component.vue?vue&type=template&id=0166749f&lang=html&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.wrapperClasses},[_c('div',{class:_vm.spinnerClasses},[_c('spin',{attrs:{"fix":""}},[_c('icon',{class:_vm.iconClasses,attrs:{"type":"load-c","size":"18"}}),_vm._v(" "),(_vm.text)?_c('div',{class:_vm.textClasses},[_vm._v("\n        "+_vm._s(_vm.text)+"\n      ")]):_vm._e()],1)],1)])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/scroll/loading-component.vue?vue&type=template&id=0166749f&lang=html&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 357 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/table/table-head.vue?vue&type=template&id=5b1e9d30&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('table',{style:(_vm.styles),attrs:{"cellspacing":"0","cellpadding":"0","border":"0"}},[_c('colgroup',[_vm._l((_vm.columns),function(column,i){return _c('col',{key:i,attrs:{"width":_vm.setCellWidth(column)}})}),_vm._v(" "),(_vm.$parent.showVerticalScrollBar)?_c('col',{attrs:{"width":_vm.$parent.scrollBarWidth}}):_vm._e()],2),_vm._v(" "),_c('thead',_vm._l((_vm.headRows),function(cols,rowIndex){return _c('tr',{key:rowIndex},[_vm._l((cols),function(column,index){return _c('th',{key:index,class:_vm.alignCls(column),attrs:{"colspan":column.colSpan,"rowspan":column.rowSpan}},[_c('div',{class:_vm.cellClasses(column)},[(column.type === 'expand')?[(!column.renderHeader)?_c('span',[_vm._v("\n              "+_vm._s(column.title || '')+"\n            ")]):_c('render-header',{attrs:{"render":column.renderHeader,"column":column,"index":index}})]:(column.type === 'selection')?[_c('checkbox',{attrs:{"value":_vm.isSelectAll,"disabled":!_vm.data.length},on:{"on-change":_vm.selectAll}})]:[(!column.renderHeader)?_c('span',{class:( _obj = {}, _obj[_vm.prefixCls + '-cell-sort'] = column.sortable, _obj ),on:{"click":function($event){_vm.handleSortByHead(_vm.getColumn(rowIndex, index)._index)}}},[_vm._v("\n              "+_vm._s(column.title || '#')+"\n            ")]):_c('render-header',{attrs:{"render":column.renderHeader,"column":column,"index":index}}),_vm._v(" "),(column.sortable)?_c('span',{class:[_vm.prefixCls + '-sort']},[_c('icon',{class:{on: _vm.getColumn(rowIndex, index)._sortType === 'asc'},attrs:{"type":"arrow-up","weight":"solid"},on:{"click":function($event){_vm.handleSort(_vm.getColumn(rowIndex, index)._index, 'asc')}}}),_vm._v(" "),_c('icon',{class:{on: _vm.getColumn(rowIndex, index)._sortType === 'desc'},attrs:{"type":"chevron-down","weight":"solid"},on:{"click":function($event){_vm.handleSort(_vm.getColumn(rowIndex, index)._index, 'desc')}}})],1):_vm._e(),_vm._v(" "),(_vm.isPopperShow(column))?_c('poptip',{attrs:{"placement":"bottom","popper-class":"ivu-table-popper","transfer":""},on:{"on-popper-hide":function($event){_vm.handleFilterHide(_vm.getColumn(rowIndex, index)._index)}},model:{value:(_vm.getColumn(rowIndex, index)._filterVisible),callback:function ($$v) {_vm.$set(_vm.getColumn(rowIndex, index), "_filterVisible", $$v)},expression:"getColumn(rowIndex, index)._filterVisible"}},[_c('span',{class:[_vm.prefixCls + '-filter']},[_c('i',{staticClass:"ivu-icon ivu-icon-funnel",class:{on: _vm.getColumn(rowIndex, index)._isFiltered}})]),_vm._v(" "),(_vm.getColumn(rowIndex, index)._filterMultiple)?_c('div',{class:[_vm.prefixCls + '-filter-list'],attrs:{"slot":"content"},slot:"content"},[_c('div',{class:[_vm.prefixCls + '-filter-list-item']},[_c('checkbox-group',{model:{value:(_vm.getColumn(rowIndex, index)._filterChecked),callback:function ($$v) {_vm.$set(_vm.getColumn(rowIndex, index), "_filterChecked", $$v)},expression:"getColumn(rowIndex, index)._filterChecked"}},_vm._l((column.filters),function(item,idx){return _c('checkbox',{key:idx,attrs:{"label":item.value}},[_vm._v("\n                      "+_vm._s(item.label)+"\n                    ")])}),1)],1),_vm._v(" "),_c('div',{class:[_vm.prefixCls + '-filter-footer']},[_c('i-button',{attrs:{"type":"text","size":"small","disabled":!_vm.getColumn(rowIndex, index)._filterChecked.length},nativeOn:{"click":function($event){_vm.handleFilter(_vm.getColumn(rowIndex, index)._index)}}},[_vm._v("\n                    "+_vm._s(_vm.t('i.table.confirmFilter'))+"\n                  ")]),_vm._v(" "),_c('i-button',{attrs:{"type":"text","size":"small"},nativeOn:{"click":function($event){_vm.handleReset(_vm.getColumn(rowIndex, index)._index)}}},[_vm._v("\n                    "+_vm._s(_vm.t('i.table.resetFilter'))+"\n                  ")])],1)]):_c('div',{class:[_vm.prefixCls + '-filter-list'],attrs:{"slot":"content"},slot:"content"},[_c('ul',{class:[_vm.prefixCls + '-filter-list-single']},[_c('li',{class:_vm.itemAllClasses(_vm.getColumn(rowIndex, index)),on:{"click":function($event){_vm.handleReset(_vm.getColumn(rowIndex, index)._index)}}},[_vm._v("\n                    "+_vm._s(_vm.t('i.table.clearFilter'))+"\n                  ")]),_vm._v(" "),_vm._l((column.filters),function(item,j){return _c('li',{key:j,class:_vm.itemClasses(_vm.getColumn(rowIndex, index), item),on:{"click":function($event){_vm.handleSelect(_vm.getColumn(rowIndex, index)._index, item.value)}}},[_vm._v("\n                    "+_vm._s(item.label)+"\n                  ")])})],2)])]):_vm._e()]],2)])
var _obj;}),_vm._v(" "),(_vm.$parent.showVerticalScrollBar && rowIndex===0)?_c('th',{class:_vm.scrollBarCellClass(),attrs:{"rowspan":_vm.headRows.length}}):_vm._e()],2)}),0)])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/table/table-head.vue?vue&type=template&id=5b1e9d30&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 358 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/table/table-body.vue?vue&type=template&id=a9f9cbea&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('table',{style:(_vm.styleObject),attrs:{"cellspacing":"0","cellpadding":"0","border":"0"}},[_c('colgroup',_vm._l((_vm.columns),function(column,i){return _c('col',{key:i,attrs:{"width":_vm.setCellWidth(column)}})}),0),_vm._v(" "),_c('tbody',{class:[_vm.prefixCls + '-tbody']},[_vm._l((_vm.data),function(row,index){return [_c('table-tr',{key:row._rowKey,attrs:{"row":row,"prefix-cls":_vm.prefixCls},nativeOn:{"mouseenter":function($event){$event.stopPropagation();return _vm.handleMouseIn(row._index)},"mouseleave":function($event){$event.stopPropagation();return _vm.handleMouseOut(row._index)},"click":function($event){return _vm.clickCurrentRow(row._index)},"dblclick":function($event){$event.stopPropagation();return _vm.dblclickCurrentRow(row._index)}}},_vm._l((_vm.columns),function(column,i){return _c('td',{key:i,class:_vm.alignCls(column, row)},[_c('cell',{key:column._columnKey,attrs:{"fixed":_vm.fixed,"prefix-cls":_vm.prefixCls,"row":row,"column":column,"natural-index":index,"index":row._index,"checked":_vm.rowChecked(row._index),"disabled":_vm.rowDisabled(row._index),"expanded":_vm.rowExpanded(row._index)}})],1)}),0),_vm._v(" "),(_vm.rowExpanded(row._index))?_c('tr',{key:row._index,class:( _obj = {}, _obj[_vm.prefixCls + '-expanded-hidden'] = _vm.fixed, _obj )},[_c('td',{class:_vm.prefixCls + '-expanded-cell',attrs:{"colspan":_vm.columns.length}},[_c('expand',{key:row._rowKey,attrs:{"row":row,"render":_vm.expandRender,"index":row._index}})],1)]):_vm._e()]
var _obj;})],2)])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/table/table-body.vue?vue&type=template&id=a9f9cbea&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 359 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/upload/upload-list.vue?vue&type=template&id=75f1ba71&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',{class:[_vm.prefixCls + '-list']},_vm._l((_vm.files),function(file,i){return _c('li',{key:i,class:_vm.fileCls(file),on:{"click":function($event){return _vm.handleClick(file)}}},[_c('span',{on:{"click":function($event){return _vm.handlePreview(file)}}},[_c('icon',{attrs:{"type":_vm.format(file)}}),_vm._v(" "+_vm._s(file.name)+"\n    ")],1),_vm._v(" "),_c('icon',{directives:[{name:"show",rawName:"v-show",value:(file.status === 'finished'),expression:"file.status === 'finished'"}],class:[_vm.prefixCls + '-list-remove'],attrs:{"type":"times","weight":"regular"},nativeOn:{"click":function($event){return _vm.handleRemove(file)}}}),_vm._v(" "),_c('transition',{attrs:{"name":"fade"}},[(file.showProgress)?_c('i-progress',{attrs:{"stroke-width":2,"percent":_vm.parsePercentage(file.percentage),"status":file.status === 'finished' && file.showProgress ? 'success' : 'normal'}}):_vm._e()],1)],1)}),0)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/upload/upload-list.vue?vue&type=template&id=75f1ba71&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 360 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/color-picker/alpha.vue?vue&type=template&id=08e4466a&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:[_vm.prefixCls + '-alpha'],attrs:{"tabindex":"0"},on:{"click":function($event){return _vm.$el.focus()},"keydown":_vm.onKeydown}},[_c('div',{class:[_vm.prefixCls + '-alpha-checkboard-wrap']},[_c('div',{class:[_vm.prefixCls + '-alpha-checkerboard']})]),_vm._v(" "),_c('div',{class:[_vm.prefixCls + '-alpha-gradient'],style:(_vm.gradientStyle)}),_vm._v(" "),_c('div',{ref:"container",class:[_vm.prefixCls + '-alpha-container'],on:{"mousedown":_vm.handleMouseDown,"touchmove":_vm.handleChange,"touchstart":_vm.handleChange}},[_c('div',{class:[_vm.prefixCls + '-alpha-pointer'],style:({top: 0, left: ((_vm.value.a * 100) + "%")})},[_c('div',{class:[_vm.prefixCls + '-alpha-picker']})])])])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/color-picker/alpha.vue?vue&type=template&id=08e4466a&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 361 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/color-picker/hue.vue?vue&type=template&id=595666f8&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:[_vm.prefixCls + '-hue'],attrs:{"tabindex":"0"},on:{"click":function($event){return _vm.$el.focus()},"keydown":_vm.onKeydown}},[_c('div',{ref:"container",class:[_vm.prefixCls + '-hue-container'],on:{"mousedown":_vm.handleMouseDown,"touchmove":_vm.handleChange,"touchstart":_vm.handleChange}},[_c('div',{class:[_vm.prefixCls + '-hue-pointer'],style:({top: 0, left: (_vm.percent + "%")})},[_c('div',{class:[_vm.prefixCls + '-hue-picker']})])])])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/color-picker/hue.vue?vue&type=template&id=595666f8&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 362 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/color-picker/saturation.vue?vue&type=template&id=8bde1686&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:[_vm.prefixCls + '-saturation-wrapper'],attrs:{"tabindex":"0"},on:{"click":function($event){return _vm.$el.focus()},"keydown":_vm.onKeydown}},[_c('div',{ref:"container",class:[_vm.prefixCls + '-saturation'],style:(_vm.bgColorStyle),on:{"mousedown":_vm.handleMouseDown}},[_c('div',{class:[_vm.prefixCls + '-saturation--white']}),_vm._v(" "),_c('div',{class:[_vm.prefixCls + '-saturation--black']}),_vm._v(" "),_c('div',{class:[_vm.prefixCls + '-saturation-pointer'],style:(_vm.pointerStyle)},[_c('div',{class:[_vm.prefixCls + '-saturation-circle']})])])])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/color-picker/saturation.vue?vue&type=template&id=8bde1686&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 363 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/transfer/list.vue?vue&type=template&id=30380a50&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.classes,style:(_vm.listStyle)},[_c('div',{class:_vm.prefixCls + '-header'},[_c('checkbox',{attrs:{"value":_vm.checkedAll,"disabled":_vm.checkedAllDisabled},on:{"on-change":_vm.toggleSelectAll}}),_vm._v(" "),_c('span',{class:_vm.prefixCls + '-header-title',on:{"click":function($event){return _vm.toggleSelectAll(!_vm.checkedAll)}}},[_vm._v("\n      "+_vm._s(_vm.title)+"\n    ")]),_vm._v(" "),_c('span',{class:_vm.prefixCls + '-header-count'},[_vm._v("\n      "+_vm._s(_vm.count)+"\n    ")])],1),_vm._v(" "),_c('div',{class:_vm.bodyClasses},[(_vm.filterable)?_c('div',{class:_vm.prefixCls + '-body-search-wrapper'},[_c('search',{attrs:{"prefix-cls":_vm.prefixCls + '-search',"query":_vm.query,"placeholder":_vm.filterPlaceholder},on:{"on-query-clear":_vm.handleQueryClear,"on-query-change":_vm.handleQueryChange}})],1):_vm._e(),_vm._v(" "),_c('ul',{class:_vm.prefixCls + '-content'},[_vm._l((_vm.filterData),function(item,i){return _c('li',{key:i,class:_vm.itemClasses(item),on:{"click":function($event){$event.preventDefault();return _vm.select(item)}}},[_c('checkbox',{attrs:{"value":_vm.isCheck(item),"disabled":item.disabled}}),_vm._v(" "),_c('span',{domProps:{"innerHTML":_vm._s(_vm.showLabel(item))}})],1)}),_vm._v(" "),_c('li',{class:_vm.prefixCls + '-content-not-found'},[_vm._v("\n        "+_vm._s(_vm.notFoundText)+"\n      ")])],2)]),_vm._v(" "),(_vm.showFooter)?_c('div',{class:_vm.prefixCls + '-footer'},[_vm._t("default")],2):_vm._e()])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/transfer/list.vue?vue&type=template&id=30380a50&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 364 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/tree/node.vue?vue&type=template&id=67a2eb85&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('collapse-transition',[_c('ul',{class:_vm.classes},[_c('li',[_c('span',{class:_vm.arrowClasses,on:{"click":_vm.handleExpand}},[(_vm.showArrow)?_c('icon',{attrs:{"type":"arrow-right-b"}}):_vm._e(),_vm._v(" "),(_vm.showLoading)?_c('icon',{staticClass:"ivu-load-loop",attrs:{"type":"load-c"}}):_vm._e()],1),_vm._v(" "),(_vm.showCheckbox)?_c('checkbox',{attrs:{"value":_vm.data.checked,"indeterminate":_vm.data.indeterminate,"disabled":_vm.data.disabled || _vm.data.disableCheckbox},nativeOn:{"click":function($event){$event.preventDefault();return _vm.handleCheck($event)}}}):_vm._e(),_vm._v(" "),(_vm.data.render)?_c('render',{attrs:{"render":_vm.data.render,"data":_vm.data,"node":_vm.node}}):(_vm.isParentRender)?_c('render',{attrs:{"render":_vm.parentRender,"data":_vm.data,"node":_vm.node}}):_c('span',{class:_vm.titleClasses,on:{"click":_vm.handleSelect}},[_vm._v("\n        "+_vm._s(_vm.data.title)+"\n      ")]),_vm._v(" "),(_vm.data.expand)?_vm._l((_vm.children),function(item,i){return _c('tree-node',{key:i,attrs:{"data":item,"multiple":_vm.multiple,"show-checkbox":_vm.showCheckbox,"children-key":_vm.childrenKey}})}):_vm._e()],2)])])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/tree/node.vue?vue&type=template&id=67a2eb85&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 365 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/color-picker/recommend-colors.vue?vue&type=template&id=5a9dc9d0&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:"reference",attrs:{"tabindex":"0"},on:{"click":_vm.handleClick,"keydown":_vm.onKeydown,"blur":_vm.blurColor,"focus":_vm.focusColor}},[_vm._l((_vm.list),function(item,index){return [_c('div',{key:item + ':' + index,class:[_vm.prefixCls + '-picker-colors-wrapper']},[_c('div',{attrs:{"data-color-id":index}},[_c('div',{class:[_vm.prefixCls + '-picker-colors-wrapper-color'],style:({background: item})}),_vm._v(" "),_c('div',{ref:'color-circle-' + index,refInFor:true,class:[_vm.prefixCls + '-picker-colors-wrapper-circle', _vm.hideClass]})])]),_vm._v(" "),(_vm.lineBreak(_vm.list, index))?_c('br',{key:item + ':br:' + index}):_vm._e()]})],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/color-picker/recommend-colors.vue?vue&type=template&id=5a9dc9d0&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 366 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/date-picker/panel/Date/date-panel-label.vue?vue&type=template&id=612ede7c&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',[(_vm.datePanelLabel)?_c('span',{directives:[{name:"show",rawName:"v-show",value:(_vm.datePanelLabel.labels[0].type === 'year' || _vm.currentView === 'date'),expression:"datePanelLabel.labels[0].type === 'year' || currentView === 'date'"}],class:[_vm.datePrefixCls + '-header-label'],on:{"click":_vm.datePanelLabel.labels[0].handler}},[_vm._v("\n    "+_vm._s(_vm.datePanelLabel.labels[0].label)+"\n  ")]):_vm._e(),_vm._v(" "),(_vm.datePanelLabel && _vm.currentView === 'date')?[_vm._v("\n    "+_vm._s(_vm.datePanelLabel.separator)+"\n  ")]:_vm._e(),_vm._v(" "),(_vm.datePanelLabel)?_c('span',{directives:[{name:"show",rawName:"v-show",value:(_vm.datePanelLabel.labels[1].type === 'year' || _vm.currentView === 'date'),expression:"datePanelLabel.labels[1].type === 'year' || currentView === 'date'"}],class:[_vm.datePrefixCls + '-header-label'],on:{"click":_vm.datePanelLabel.labels[1].handler}},[_vm._v("\n    "+_vm._s(_vm.datePanelLabel.labels[1].label)+"\n  ")]):_vm._e()],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/date-picker/panel/Date/date-panel-label.vue?vue&type=template&id=612ede7c&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 367 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/base/notification/notice.vue?vue&type=template&id=b15f0d60&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('transition',{attrs:{"name":_vm.transitionName},on:{"enter":_vm.handleEnter,"leave":_vm.handleLeave}},[_c('div',{class:_vm.classes,style:(_vm.styles)},[(_vm.type === 'notice')?[_c('div',{ref:"content",class:_vm.contentClasses,domProps:{"innerHTML":_vm._s(_vm.content)}}),_vm._v(" "),_c('div',{class:_vm.contentWithIcon},[_c('render-cell',{attrs:{"render":_vm.renderFunc}})],1),_vm._v(" "),(_vm.closable)?_c('a',{class:[_vm.baseClass + '-close'],on:{"click":_vm.close}},[_c('i',{staticClass:"ivu-icon ivu-icon-ios-close-empty"})]):_vm._e()]:_vm._e(),_vm._v(" "),(_vm.type === 'message')?[_c('div',{ref:"content",class:[_vm.baseClass + '-content']},[_c('div',{class:[_vm.baseClass + '-content-text'],domProps:{"innerHTML":_vm._s(_vm.content)}}),_vm._v(" "),_c('div',{class:[_vm.baseClass + '-content-text']},[_c('render-cell',{attrs:{"render":_vm.renderFunc}})],1),_vm._v(" "),(_vm.closable)?_c('a',{class:[_vm.baseClass + '-close'],on:{"click":_vm.close}},[_c('i',{staticClass:"ivu-icon ivu-icon-ios-close-empty"})]):_vm._e()])]:_vm._e()],2)])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/base/notification/notice.vue?vue&type=template&id=b15f0d60&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 368 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/date-picker/base/confirm.vue?vue&type=template&id=fdee765a&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:"confirm",class:[_vm.prefixCls + '-confirm'],on:{"!keydown":function($event){return _vm.onKeydown($event)}}},[(_vm.showTime)?_c('i-button',{class:_vm.timeClasses,attrs:{"size":"small","type":"text","disabled":_vm.timeDisabled},on:{"click":_vm.handleToggleTime}},[_vm._v("\n    "+_vm._s(_vm.labels.time)+"\n  ")]):_vm._e(),_vm._v(" "),_c('i-button',{ref:"clear",attrs:{"size":"small","type":"ghost"},nativeOn:{"click":function($event){return _vm.handleClear($event)},"keydown":function($event){return _vm.onKeydown($event)}}},[_vm._v("\n    "+_vm._s(_vm.labels.clear)+"\n  ")]),_vm._v(" "),_c('i-button',{ref:"success",attrs:{"size":"small","type":"primary"},nativeOn:{"click":function($event){return _vm.handleSuccess($event)},"keydown":function($event){return _vm.onKeydown($event)}}},[_vm._v("\n    "+_vm._s(_vm.labels.ok)+"\n  ")])],1)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/date-picker/base/confirm.vue?vue&type=template&id=fdee765a&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 369 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/date-picker/base/time-spinner.vue?vue&type=template&id=43ef8164&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.classes},[_c('div',{ref:"hours",class:[_vm.prefixCls+ '-list']},[_c('ul',{class:[_vm.prefixCls + '-ul']},_vm._l((_vm.hoursList),function(item,i){return _c('li',{directives:[{name:"show",rawName:"v-show",value:(!item.hide),expression:"!item.hide"}],key:i,class:_vm.getCellCls(item),on:{"click":function($event){return _vm.handleClick('hours', item)}}},[_vm._v("\n        "+_vm._s(_vm.formatTime(item.text))+"\n      ")])}),0)]),_vm._v(" "),_c('div',{ref:"minutes",class:[_vm.prefixCls+ '-list']},[_c('ul',{class:[_vm.prefixCls + '-ul']},_vm._l((_vm.minutesList),function(item,i){return _c('li',{directives:[{name:"show",rawName:"v-show",value:(!item.hide),expression:"!item.hide"}],key:i,class:_vm.getCellCls(item),on:{"click":function($event){return _vm.handleClick('minutes', item)}}},[_vm._v("\n        "+_vm._s(_vm.formatTime(item.text))+"\n      ")])}),0)]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.showSeconds),expression:"showSeconds"}],ref:"seconds",class:[_vm.prefixCls+ '-list']},[_c('ul',{class:[_vm.prefixCls + '-ul']},_vm._l((_vm.secondsList),function(item,i){return _c('li',{directives:[{name:"show",rawName:"v-show",value:(!item.hide),expression:"!item.hide"}],key:i,class:_vm.getCellCls(item),on:{"click":function($event){return _vm.handleClick('seconds', item)}}},[_vm._v("\n        "+_vm._s(_vm.formatTime(item.text))+"\n      ")])}),0)])])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/date-picker/base/time-spinner.vue?vue&type=template&id=43ef8164&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 370 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/date-picker/base/month-table.vue?vue&type=template&id=adf775e2&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.classes},_vm._l((_vm.cells),function(cell,i){return _c('span',{key:i,class:_vm.getCellCls(cell),on:{"click":function($event){return _vm.handleClick(cell)},"mouseenter":function($event){return _vm.handleMouseMove(cell)}}},[_c('em',[_vm._v(_vm._s(cell.text))])])}),0)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/date-picker/base/month-table.vue?vue&type=template&id=adf775e2&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 371 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/date-picker/base/year-table.vue?vue&type=template&id=292b2908&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.classes},_vm._l((_vm.cells),function(cell,i){return _c('span',{key:i,class:_vm.getCellCls(cell),on:{"click":function($event){return _vm.handleClick(cell)},"mouseenter":function($event){return _vm.handleMouseMove(cell)}}},[_c('em',[_vm._v(_vm._s(cell.date.getFullYear()))])])}),0)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/date-picker/base/year-table.vue?vue&type=template&id=292b2908&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 372 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/date-picker/base/date-table.vue?vue&type=template&id=3860c36a&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.classes},[_c('div',{class:[_vm.prefixCls + '-header']},_vm._l((_vm.headerDays),function(day){return _c('span',{key:day},[_vm._v("\n      "+_vm._s(day)+"\n    ")])}),0),_vm._v(" "),_vm._l((_vm.cells),function(cell,i){return _c('span',{key:String(cell.date) + i,class:_vm.getCellCls(cell),on:{"click":function($event){return _vm.handleClick(cell, $event)},"mouseenter":function($event){return _vm.handleMouseMove(cell)}}},[_c('em',[_vm._v(_vm._s(cell.desc))])])})],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/date-picker/base/date-table.vue?vue&type=template&id=3860c36a&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 373 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/table/table-tr.vue?vue&type=template&id=6bccaa79&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('tr',{class:_vm.rowClasses(_vm.row._index)},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/table/table-tr.vue?vue&type=template&id=6bccaa79&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 374 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/transfer/search.vue?vue&type=template&id=16aa9655&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.prefixCls},[_c('i-input',{attrs:{"size":"small","icon":_vm.icon,"placeholder":_vm.placeholder},on:{"on-click":_vm.handleClick},model:{value:(_vm.currentQuery),callback:function ($$v) {_vm.currentQuery=$$v},expression:"currentQuery"}})],1)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/transfer/search.vue?vue&type=template&id=16aa9655&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 375 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cascader/casitem.vue?vue&type=template&id=18e6d43a&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{class:_vm.classes},[_vm._v("\n  "+_vm._s(_vm.data.label)+"\n  "),(_vm.showArrow)?_c('i',{staticClass:"ivu-icon ivu-icon-ios-arrow-right"}):_vm._e(),_vm._v(" "),(_vm.showLoading)?_c('i',{staticClass:"ivu-icon ivu-icon-load-c ivu-load-loop"}):_vm._e()])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cascader/casitem.vue?vue&type=template&id=18e6d43a&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 376 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/table/cell.vue?vue&type=template&id=b545012a&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:"cell",class:_vm.classes},[(_vm.renderType === 'index')?[_c('span',[_vm._v(_vm._s(_vm.naturalIndex + 1))])]:_vm._e(),_vm._v(" "),(_vm.renderType === 'selection')?[_c('checkbox',{attrs:{"value":_vm.checked,"disabled":_vm.disabled},on:{"on-change":_vm.toggleSelect},nativeOn:{"click":function($event){$event.stopPropagation();return _vm.handleClick($event)}}})]:_vm._e(),_vm._v(" "),(_vm.renderType === 'html')?[_c('span',{domProps:{"innerHTML":_vm._s(_vm.row[_vm.column.key])}})]:_vm._e(),_vm._v(" "),(_vm.renderType === 'normal')?[_c('span',[_vm._v(_vm._s(_vm.row[_vm.column.key]))])]:_vm._e(),_vm._v(" "),(_vm.renderType === 'expand' && !_vm.row._disableExpand)?[_c('div',{class:_vm.expandCls,on:{"click":_vm.toggleExpand}},[_c('icon',{attrs:{"type":"ios-arrow-right"}})],1)]:_vm._e(),_vm._v(" "),(_vm.renderType === 'render')?_c('cell',{attrs:{"row":_vm.row,"column":_vm.column,"index":_vm.index,"render":_vm.column.render}}):_vm._e()],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/table/cell.vue?vue&type=template&id=b545012a&
/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });


/***/ }),
/* 377 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var logger = __webpack_require__(0).get("iview:Assets:isProduction");

/**
 * Indicates if this is the production environment.
 * @type {boolean}
 */
var _default = "production" === 'production';

exports.default = _default;

/***/ }),
/* 378 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE__378__;

/***/ }),
/* 379 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE__379__;

/***/ }),
/* 380 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE__380__;

/***/ }),
/* 381 */
/***/ (function(module, exports, __webpack_require__) {

var isArray = __webpack_require__(44);

/**
 * Casts `value` as an array if it's not one.
 *
 * @static
 * @memberOf _
 * @since 4.4.0
 * @category Lang
 * @param {*} value The value to inspect.
 * @returns {Array} Returns the cast array.
 * @example
 *
 * _.castArray(1);
 * // => [1]
 *
 * _.castArray({ 'a': 1 });
 * // => [{ 'a': 1 }]
 *
 * _.castArray('abc');
 * // => ['abc']
 *
 * _.castArray(null);
 * // => [null]
 *
 * _.castArray(undefined);
 * // => [undefined]
 *
 * _.castArray();
 * // => []
 *
 * var array = [1, 2, 3];
 * console.log(_.castArray(array) === array);
 * // => true
 */
function castArray() {
  if (!arguments.length) {
    return [];
  }
  var value = arguments[0];
  return isArray(value) ? value : [value];
}

module.exports = castArray;


/***/ }),
/* 382 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/**!
 * @fileOverview Kickass library to create and place poppers near their reference elements.
 * @version 1.14.7
 * @license
 * Copyright (c) 2016 Federico Zivolo and contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
(function (global, factory) {
	 true ? module.exports = factory() :
	undefined;
}(this, (function () { 'use strict';

var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';

var longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];
var timeoutDuration = 0;
for (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {
  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {
    timeoutDuration = 1;
    break;
  }
}

function microtaskDebounce(fn) {
  var called = false;
  return function () {
    if (called) {
      return;
    }
    called = true;
    window.Promise.resolve().then(function () {
      called = false;
      fn();
    });
  };
}

function taskDebounce(fn) {
  var scheduled = false;
  return function () {
    if (!scheduled) {
      scheduled = true;
      setTimeout(function () {
        scheduled = false;
        fn();
      }, timeoutDuration);
    }
  };
}

var supportsMicroTasks = isBrowser && window.Promise;

/**
* Create a debounced version of a method, that's asynchronously deferred
* but called in the minimum time possible.
*
* @method
* @memberof Popper.Utils
* @argument {Function} fn
* @returns {Function}
*/
var debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;

/**
 * Check if the given variable is a function
 * @method
 * @memberof Popper.Utils
 * @argument {Any} functionToCheck - variable to check
 * @returns {Boolean} answer to: is a function?
 */
function isFunction(functionToCheck) {
  var getType = {};
  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';
}

/**
 * Get CSS computed property of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Eement} element
 * @argument {String} property
 */
function getStyleComputedProperty(element, property) {
  if (element.nodeType !== 1) {
    return [];
  }
  // NOTE: 1 DOM access here
  var window = element.ownerDocument.defaultView;
  var css = window.getComputedStyle(element, null);
  return property ? css[property] : css;
}

/**
 * Returns the parentNode or the host of the element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} parent
 */
function getParentNode(element) {
  if (element.nodeName === 'HTML') {
    return element;
  }
  return element.parentNode || element.host;
}

/**
 * Returns the scrolling parent of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} scroll parent
 */
function getScrollParent(element) {
  // Return body, `getScroll` will take care to get the correct `scrollTop` from it
  if (!element) {
    return document.body;
  }

  switch (element.nodeName) {
    case 'HTML':
    case 'BODY':
      return element.ownerDocument.body;
    case '#document':
      return element.body;
  }

  // Firefox want us to check `-x` and `-y` variations as well

  var _getStyleComputedProp = getStyleComputedProperty(element),
      overflow = _getStyleComputedProp.overflow,
      overflowX = _getStyleComputedProp.overflowX,
      overflowY = _getStyleComputedProp.overflowY;

  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {
    return element;
  }

  return getScrollParent(getParentNode(element));
}

var isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);
var isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);

/**
 * Determines if the browser is Internet Explorer
 * @method
 * @memberof Popper.Utils
 * @param {Number} version to check
 * @returns {Boolean} isIE
 */
function isIE(version) {
  if (version === 11) {
    return isIE11;
  }
  if (version === 10) {
    return isIE10;
  }
  return isIE11 || isIE10;
}

/**
 * Returns the offset parent of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} offset parent
 */
function getOffsetParent(element) {
  if (!element) {
    return document.documentElement;
  }

  var noOffsetParent = isIE(10) ? document.body : null;

  // NOTE: 1 DOM access here
  var offsetParent = element.offsetParent || null;
  // Skip hidden elements which don't have an offsetParent
  while (offsetParent === noOffsetParent && element.nextElementSibling) {
    offsetParent = (element = element.nextElementSibling).offsetParent;
  }

  var nodeName = offsetParent && offsetParent.nodeName;

  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {
    return element ? element.ownerDocument.documentElement : document.documentElement;
  }

  // .offsetParent will return the closest TH, TD or TABLE in case
  // no offsetParent is present, I hate this job...
  if (['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {
    return getOffsetParent(offsetParent);
  }

  return offsetParent;
}

function isOffsetContainer(element) {
  var nodeName = element.nodeName;

  if (nodeName === 'BODY') {
    return false;
  }
  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;
}

/**
 * Finds the root node (document, shadowDOM root) of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} node
 * @returns {Element} root node
 */
function getRoot(node) {
  if (node.parentNode !== null) {
    return getRoot(node.parentNode);
  }

  return node;
}

/**
 * Finds the offset parent common to the two provided nodes
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element1
 * @argument {Element} element2
 * @returns {Element} common offset parent
 */
function findCommonOffsetParent(element1, element2) {
  // This check is needed to avoid errors in case one of the elements isn't defined for any reason
  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {
    return document.documentElement;
  }

  // Here we make sure to give as "start" the element that comes first in the DOM
  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;
  var start = order ? element1 : element2;
  var end = order ? element2 : element1;

  // Get common ancestor container
  var range = document.createRange();
  range.setStart(start, 0);
  range.setEnd(end, 0);
  var commonAncestorContainer = range.commonAncestorContainer;

  // Both nodes are inside #document

  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {
    if (isOffsetContainer(commonAncestorContainer)) {
      return commonAncestorContainer;
    }

    return getOffsetParent(commonAncestorContainer);
  }

  // one of the nodes is inside shadowDOM, find which one
  var element1root = getRoot(element1);
  if (element1root.host) {
    return findCommonOffsetParent(element1root.host, element2);
  } else {
    return findCommonOffsetParent(element1, getRoot(element2).host);
  }
}

/**
 * Gets the scroll value of the given element in the given side (top and left)
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @argument {String} side `top` or `left`
 * @returns {number} amount of scrolled pixels
 */
function getScroll(element) {
  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';

  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';
  var nodeName = element.nodeName;

  if (nodeName === 'BODY' || nodeName === 'HTML') {
    var html = element.ownerDocument.documentElement;
    var scrollingElement = element.ownerDocument.scrollingElement || html;
    return scrollingElement[upperSide];
  }

  return element[upperSide];
}

/*
 * Sum or subtract the element scroll values (left and top) from a given rect object
 * @method
 * @memberof Popper.Utils
 * @param {Object} rect - Rect object you want to change
 * @param {HTMLElement} element - The element from the function reads the scroll values
 * @param {Boolean} subtract - set to true if you want to subtract the scroll values
 * @return {Object} rect - The modifier rect object
 */
function includeScroll(rect, element) {
  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

  var scrollTop = getScroll(element, 'top');
  var scrollLeft = getScroll(element, 'left');
  var modifier = subtract ? -1 : 1;
  rect.top += scrollTop * modifier;
  rect.bottom += scrollTop * modifier;
  rect.left += scrollLeft * modifier;
  rect.right += scrollLeft * modifier;
  return rect;
}

/*
 * Helper to detect borders of a given element
 * @method
 * @memberof Popper.Utils
 * @param {CSSStyleDeclaration} styles
 * Result of `getStyleComputedProperty` on the given element
 * @param {String} axis - `x` or `y`
 * @return {number} borders - The borders size of the given axis
 */

function getBordersSize(styles, axis) {
  var sideA = axis === 'x' ? 'Left' : 'Top';
  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';

  return parseFloat(styles['border' + sideA + 'Width'], 10) + parseFloat(styles['border' + sideB + 'Width'], 10);
}

function getSize(axis, body, html, computedStyle) {
  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);
}

function getWindowSizes(document) {
  var body = document.body;
  var html = document.documentElement;
  var computedStyle = isIE(10) && getComputedStyle(html);

  return {
    height: getSize('Height', body, html, computedStyle),
    width: getSize('Width', body, html, computedStyle)
  };
}

var classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

var createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();





var defineProperty = function (obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
};

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

/**
 * Given element offsets, generate an output similar to getBoundingClientRect
 * @method
 * @memberof Popper.Utils
 * @argument {Object} offsets
 * @returns {Object} ClientRect like output
 */
function getClientRect(offsets) {
  return _extends({}, offsets, {
    right: offsets.left + offsets.width,
    bottom: offsets.top + offsets.height
  });
}

/**
 * Get bounding client rect of given element
 * @method
 * @memberof Popper.Utils
 * @param {HTMLElement} element
 * @return {Object} client rect
 */
function getBoundingClientRect(element) {
  var rect = {};

  // IE10 10 FIX: Please, don't ask, the element isn't
  // considered in DOM in some circumstances...
  // This isn't reproducible in IE10 compatibility mode of IE11
  try {
    if (isIE(10)) {
      rect = element.getBoundingClientRect();
      var scrollTop = getScroll(element, 'top');
      var scrollLeft = getScroll(element, 'left');
      rect.top += scrollTop;
      rect.left += scrollLeft;
      rect.bottom += scrollTop;
      rect.right += scrollLeft;
    } else {
      rect = element.getBoundingClientRect();
    }
  } catch (e) {}

  var result = {
    left: rect.left,
    top: rect.top,
    width: rect.right - rect.left,
    height: rect.bottom - rect.top
  };

  // subtract scrollbar size from sizes
  var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};
  var width = sizes.width || element.clientWidth || result.right - result.left;
  var height = sizes.height || element.clientHeight || result.bottom - result.top;

  var horizScrollbar = element.offsetWidth - width;
  var vertScrollbar = element.offsetHeight - height;

  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`
  // we make this check conditional for performance reasons
  if (horizScrollbar || vertScrollbar) {
    var styles = getStyleComputedProperty(element);
    horizScrollbar -= getBordersSize(styles, 'x');
    vertScrollbar -= getBordersSize(styles, 'y');

    result.width -= horizScrollbar;
    result.height -= vertScrollbar;
  }

  return getClientRect(result);
}

function getOffsetRectRelativeToArbitraryNode(children, parent) {
  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

  var isIE10 = isIE(10);
  var isHTML = parent.nodeName === 'HTML';
  var childrenRect = getBoundingClientRect(children);
  var parentRect = getBoundingClientRect(parent);
  var scrollParent = getScrollParent(children);

  var styles = getStyleComputedProperty(parent);
  var borderTopWidth = parseFloat(styles.borderTopWidth, 10);
  var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);

  // In cases where the parent is fixed, we must ignore negative scroll in offset calc
  if (fixedPosition && isHTML) {
    parentRect.top = Math.max(parentRect.top, 0);
    parentRect.left = Math.max(parentRect.left, 0);
  }
  var offsets = getClientRect({
    top: childrenRect.top - parentRect.top - borderTopWidth,
    left: childrenRect.left - parentRect.left - borderLeftWidth,
    width: childrenRect.width,
    height: childrenRect.height
  });
  offsets.marginTop = 0;
  offsets.marginLeft = 0;

  // Subtract margins of documentElement in case it's being used as parent
  // we do this only on HTML because it's the only element that behaves
  // differently when margins are applied to it. The margins are included in
  // the box of the documentElement, in the other cases not.
  if (!isIE10 && isHTML) {
    var marginTop = parseFloat(styles.marginTop, 10);
    var marginLeft = parseFloat(styles.marginLeft, 10);

    offsets.top -= borderTopWidth - marginTop;
    offsets.bottom -= borderTopWidth - marginTop;
    offsets.left -= borderLeftWidth - marginLeft;
    offsets.right -= borderLeftWidth - marginLeft;

    // Attach marginTop and marginLeft because in some circumstances we may need them
    offsets.marginTop = marginTop;
    offsets.marginLeft = marginLeft;
  }

  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {
    offsets = includeScroll(offsets, parent);
  }

  return offsets;
}

function getViewportOffsetRectRelativeToArtbitraryNode(element) {
  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  var html = element.ownerDocument.documentElement;
  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);
  var width = Math.max(html.clientWidth, window.innerWidth || 0);
  var height = Math.max(html.clientHeight, window.innerHeight || 0);

  var scrollTop = !excludeScroll ? getScroll(html) : 0;
  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;

  var offset = {
    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,
    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,
    width: width,
    height: height
  };

  return getClientRect(offset);
}

/**
 * Check if the given element is fixed or is inside a fixed parent
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @argument {Element} customContainer
 * @returns {Boolean} answer to "isFixed?"
 */
function isFixed(element) {
  var nodeName = element.nodeName;
  if (nodeName === 'BODY' || nodeName === 'HTML') {
    return false;
  }
  if (getStyleComputedProperty(element, 'position') === 'fixed') {
    return true;
  }
  var parentNode = getParentNode(element);
  if (!parentNode) {
    return false;
  }
  return isFixed(parentNode);
}

/**
 * Finds the first parent of an element that has a transformed property defined
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} first transformed parent or documentElement
 */

function getFixedPositionOffsetParent(element) {
  // This check is needed to avoid errors in case one of the elements isn't defined for any reason
  if (!element || !element.parentElement || isIE()) {
    return document.documentElement;
  }
  var el = element.parentElement;
  while (el && getStyleComputedProperty(el, 'transform') === 'none') {
    el = el.parentElement;
  }
  return el || document.documentElement;
}

/**
 * Computed the boundaries limits and return them
 * @method
 * @memberof Popper.Utils
 * @param {HTMLElement} popper
 * @param {HTMLElement} reference
 * @param {number} padding
 * @param {HTMLElement} boundariesElement - Element used to define the boundaries
 * @param {Boolean} fixedPosition - Is in fixed position mode
 * @returns {Object} Coordinates of the boundaries
 */
function getBoundaries(popper, reference, padding, boundariesElement) {
  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;

  // NOTE: 1 DOM access here

  var boundaries = { top: 0, left: 0 };
  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);

  // Handle viewport case
  if (boundariesElement === 'viewport') {
    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);
  } else {
    // Handle other cases based on DOM element used as boundaries
    var boundariesNode = void 0;
    if (boundariesElement === 'scrollParent') {
      boundariesNode = getScrollParent(getParentNode(reference));
      if (boundariesNode.nodeName === 'BODY') {
        boundariesNode = popper.ownerDocument.documentElement;
      }
    } else if (boundariesElement === 'window') {
      boundariesNode = popper.ownerDocument.documentElement;
    } else {
      boundariesNode = boundariesElement;
    }

    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);

    // In case of HTML, we need a different computation
    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {
      var _getWindowSizes = getWindowSizes(popper.ownerDocument),
          height = _getWindowSizes.height,
          width = _getWindowSizes.width;

      boundaries.top += offsets.top - offsets.marginTop;
      boundaries.bottom = height + offsets.top;
      boundaries.left += offsets.left - offsets.marginLeft;
      boundaries.right = width + offsets.left;
    } else {
      // for all the other DOM elements, this one is good
      boundaries = offsets;
    }
  }

  // Add paddings
  padding = padding || 0;
  var isPaddingNumber = typeof padding === 'number';
  boundaries.left += isPaddingNumber ? padding : padding.left || 0;
  boundaries.top += isPaddingNumber ? padding : padding.top || 0;
  boundaries.right -= isPaddingNumber ? padding : padding.right || 0;
  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;

  return boundaries;
}

function getArea(_ref) {
  var width = _ref.width,
      height = _ref.height;

  return width * height;
}

/**
 * Utility used to transform the `auto` placement to the placement with more
 * available space.
 * @method
 * @memberof Popper.Utils
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {
  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;

  if (placement.indexOf('auto') === -1) {
    return placement;
  }

  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);

  var rects = {
    top: {
      width: boundaries.width,
      height: refRect.top - boundaries.top
    },
    right: {
      width: boundaries.right - refRect.right,
      height: boundaries.height
    },
    bottom: {
      width: boundaries.width,
      height: boundaries.bottom - refRect.bottom
    },
    left: {
      width: refRect.left - boundaries.left,
      height: boundaries.height
    }
  };

  var sortedAreas = Object.keys(rects).map(function (key) {
    return _extends({
      key: key
    }, rects[key], {
      area: getArea(rects[key])
    });
  }).sort(function (a, b) {
    return b.area - a.area;
  });

  var filteredAreas = sortedAreas.filter(function (_ref2) {
    var width = _ref2.width,
        height = _ref2.height;
    return width >= popper.clientWidth && height >= popper.clientHeight;
  });

  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;

  var variation = placement.split('-')[1];

  return computedPlacement + (variation ? '-' + variation : '');
}

/**
 * Get offsets to the reference element
 * @method
 * @memberof Popper.Utils
 * @param {Object} state
 * @param {Element} popper - the popper element
 * @param {Element} reference - the reference element (the popper will be relative to this)
 * @param {Element} fixedPosition - is in fixed position mode
 * @returns {Object} An object containing the offsets which will be applied to the popper
 */
function getReferenceOffsets(state, popper, reference) {
  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);
  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);
}

/**
 * Get the outer sizes of the given element (offset size + margins)
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Object} object containing width and height properties
 */
function getOuterSizes(element) {
  var window = element.ownerDocument.defaultView;
  var styles = window.getComputedStyle(element);
  var x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);
  var y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);
  var result = {
    width: element.offsetWidth + y,
    height: element.offsetHeight + x
  };
  return result;
}

/**
 * Get the opposite placement of the given one
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement
 * @returns {String} flipped placement
 */
function getOppositePlacement(placement) {
  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };
  return placement.replace(/left|right|bottom|top/g, function (matched) {
    return hash[matched];
  });
}

/**
 * Get offsets to the popper
 * @method
 * @memberof Popper.Utils
 * @param {Object} position - CSS position the Popper will get applied
 * @param {HTMLElement} popper - the popper element
 * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)
 * @param {String} placement - one of the valid placement options
 * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper
 */
function getPopperOffsets(popper, referenceOffsets, placement) {
  placement = placement.split('-')[0];

  // Get popper node sizes
  var popperRect = getOuterSizes(popper);

  // Add position, width and height to our offsets object
  var popperOffsets = {
    width: popperRect.width,
    height: popperRect.height
  };

  // depending by the popper placement we have to compute its offsets slightly differently
  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;
  var mainSide = isHoriz ? 'top' : 'left';
  var secondarySide = isHoriz ? 'left' : 'top';
  var measurement = isHoriz ? 'height' : 'width';
  var secondaryMeasurement = !isHoriz ? 'height' : 'width';

  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;
  if (placement === secondarySide) {
    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];
  } else {
    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];
  }

  return popperOffsets;
}

/**
 * Mimics the `find` method of Array
 * @method
 * @memberof Popper.Utils
 * @argument {Array} arr
 * @argument prop
 * @argument value
 * @returns index or -1
 */
function find(arr, check) {
  // use native find if supported
  if (Array.prototype.find) {
    return arr.find(check);
  }

  // use `filter` to obtain the same behavior of `find`
  return arr.filter(check)[0];
}

/**
 * Return the index of the matching object
 * @method
 * @memberof Popper.Utils
 * @argument {Array} arr
 * @argument prop
 * @argument value
 * @returns index or -1
 */
function findIndex(arr, prop, value) {
  // use native findIndex if supported
  if (Array.prototype.findIndex) {
    return arr.findIndex(function (cur) {
      return cur[prop] === value;
    });
  }

  // use `find` + `indexOf` if `findIndex` isn't supported
  var match = find(arr, function (obj) {
    return obj[prop] === value;
  });
  return arr.indexOf(match);
}

/**
 * Loop trough the list of modifiers and run them in order,
 * each of them will then edit the data object.
 * @method
 * @memberof Popper.Utils
 * @param {dataObject} data
 * @param {Array} modifiers
 * @param {String} ends - Optional modifier name used as stopper
 * @returns {dataObject}
 */
function runModifiers(modifiers, data, ends) {
  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));

  modifiersToRun.forEach(function (modifier) {
    if (modifier['function']) {
      // eslint-disable-line dot-notation
      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');
    }
    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation
    if (modifier.enabled && isFunction(fn)) {
      // Add properties to offsets to make them a complete clientRect object
      // we do this before each modifier to make sure the previous one doesn't
      // mess with these values
      data.offsets.popper = getClientRect(data.offsets.popper);
      data.offsets.reference = getClientRect(data.offsets.reference);

      data = fn(data, modifier);
    }
  });

  return data;
}

/**
 * Updates the position of the popper, computing the new offsets and applying
 * the new style.<br />
 * Prefer `scheduleUpdate` over `update` because of performance reasons.
 * @method
 * @memberof Popper
 */
function update() {
  // if popper is destroyed, don't perform any further update
  if (this.state.isDestroyed) {
    return;
  }

  var data = {
    instance: this,
    styles: {},
    arrowStyles: {},
    attributes: {},
    flipped: false,
    offsets: {}
  };

  // compute reference element offsets
  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);

  // compute auto placement, store placement inside the data object,
  // modifiers will be able to edit `placement` if needed
  // and refer to originalPlacement to know the original value
  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);

  // store the computed placement inside `originalPlacement`
  data.originalPlacement = data.placement;

  data.positionFixed = this.options.positionFixed;

  // compute the popper offsets
  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);

  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';

  // run the modifiers
  data = runModifiers(this.modifiers, data);

  // the first `update` will call `onCreate` callback
  // the other ones will call `onUpdate` callback
  if (!this.state.isCreated) {
    this.state.isCreated = true;
    this.options.onCreate(data);
  } else {
    this.options.onUpdate(data);
  }
}

/**
 * Helper used to know if the given modifier is enabled.
 * @method
 * @memberof Popper.Utils
 * @returns {Boolean}
 */
function isModifierEnabled(modifiers, modifierName) {
  return modifiers.some(function (_ref) {
    var name = _ref.name,
        enabled = _ref.enabled;
    return enabled && name === modifierName;
  });
}

/**
 * Get the prefixed supported property name
 * @method
 * @memberof Popper.Utils
 * @argument {String} property (camelCase)
 * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)
 */
function getSupportedPropertyName(property) {
  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];
  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);

  for (var i = 0; i < prefixes.length; i++) {
    var prefix = prefixes[i];
    var toCheck = prefix ? '' + prefix + upperProp : property;
    if (typeof document.body.style[toCheck] !== 'undefined') {
      return toCheck;
    }
  }
  return null;
}

/**
 * Destroys the popper.
 * @method
 * @memberof Popper
 */
function destroy() {
  this.state.isDestroyed = true;

  // touch DOM only if `applyStyle` modifier is enabled
  if (isModifierEnabled(this.modifiers, 'applyStyle')) {
    this.popper.removeAttribute('x-placement');
    this.popper.style.position = '';
    this.popper.style.top = '';
    this.popper.style.left = '';
    this.popper.style.right = '';
    this.popper.style.bottom = '';
    this.popper.style.willChange = '';
    this.popper.style[getSupportedPropertyName('transform')] = '';
  }

  this.disableEventListeners();

  // remove the popper if user explicity asked for the deletion on destroy
  // do not use `remove` because IE11 doesn't support it
  if (this.options.removeOnDestroy) {
    this.popper.parentNode.removeChild(this.popper);
  }
  return this;
}

/**
 * Get the window associated with the element
 * @argument {Element} element
 * @returns {Window}
 */
function getWindow(element) {
  var ownerDocument = element.ownerDocument;
  return ownerDocument ? ownerDocument.defaultView : window;
}

function attachToScrollParents(scrollParent, event, callback, scrollParents) {
  var isBody = scrollParent.nodeName === 'BODY';
  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;
  target.addEventListener(event, callback, { passive: true });

  if (!isBody) {
    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);
  }
  scrollParents.push(target);
}

/**
 * Setup needed event listeners used to update the popper position
 * @method
 * @memberof Popper.Utils
 * @private
 */
function setupEventListeners(reference, options, state, updateBound) {
  // Resize event listener on window
  state.updateBound = updateBound;
  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });

  // Scroll event listener on scroll parents
  var scrollElement = getScrollParent(reference);
  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);
  state.scrollElement = scrollElement;
  state.eventsEnabled = true;

  return state;
}

/**
 * It will add resize/scroll events and start recalculating
 * position of the popper element when they are triggered.
 * @method
 * @memberof Popper
 */
function enableEventListeners() {
  if (!this.state.eventsEnabled) {
    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);
  }
}

/**
 * Remove event listeners used to update the popper position
 * @method
 * @memberof Popper.Utils
 * @private
 */
function removeEventListeners(reference, state) {
  // Remove resize event listener on window
  getWindow(reference).removeEventListener('resize', state.updateBound);

  // Remove scroll event listener on scroll parents
  state.scrollParents.forEach(function (target) {
    target.removeEventListener('scroll', state.updateBound);
  });

  // Reset state
  state.updateBound = null;
  state.scrollParents = [];
  state.scrollElement = null;
  state.eventsEnabled = false;
  return state;
}

/**
 * It will remove resize/scroll events and won't recalculate popper position
 * when they are triggered. It also won't trigger `onUpdate` callback anymore,
 * unless you call `update` method manually.
 * @method
 * @memberof Popper
 */
function disableEventListeners() {
  if (this.state.eventsEnabled) {
    cancelAnimationFrame(this.scheduleUpdate);
    this.state = removeEventListeners(this.reference, this.state);
  }
}

/**
 * Tells if a given input is a number
 * @method
 * @memberof Popper.Utils
 * @param {*} input to check
 * @return {Boolean}
 */
function isNumeric(n) {
  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);
}

/**
 * Set the style to the given popper
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element - Element to apply the style to
 * @argument {Object} styles
 * Object with a list of properties and values which will be applied to the element
 */
function setStyles(element, styles) {
  Object.keys(styles).forEach(function (prop) {
    var unit = '';
    // add unit if the value is numeric and is one of the following
    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {
      unit = 'px';
    }
    element.style[prop] = styles[prop] + unit;
  });
}

/**
 * Set the attributes to the given popper
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element - Element to apply the attributes to
 * @argument {Object} styles
 * Object with a list of properties and values which will be applied to the element
 */
function setAttributes(element, attributes) {
  Object.keys(attributes).forEach(function (prop) {
    var value = attributes[prop];
    if (value !== false) {
      element.setAttribute(prop, attributes[prop]);
    } else {
      element.removeAttribute(prop);
    }
  });
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} data.styles - List of style properties - values to apply to popper element
 * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The same data object
 */
function applyStyle(data) {
  // any property present in `data.styles` will be applied to the popper,
  // in this way we can make the 3rd party modifiers add custom styles to it
  // Be aware, modifiers could override the properties defined in the previous
  // lines of this modifier!
  setStyles(data.instance.popper, data.styles);

  // any property present in `data.attributes` will be applied to the popper,
  // they will be set as HTML attributes of the element
  setAttributes(data.instance.popper, data.attributes);

  // if arrowElement is defined and arrowStyles has some properties
  if (data.arrowElement && Object.keys(data.arrowStyles).length) {
    setStyles(data.arrowElement, data.arrowStyles);
  }

  return data;
}

/**
 * Set the x-placement attribute before everything else because it could be used
 * to add margins to the popper margins needs to be calculated to get the
 * correct popper offsets.
 * @method
 * @memberof Popper.modifiers
 * @param {HTMLElement} reference - The reference element used to position the popper
 * @param {HTMLElement} popper - The HTML element used as popper
 * @param {Object} options - Popper.js options
 */
function applyStyleOnLoad(reference, popper, options, modifierOptions, state) {
  // compute reference element offsets
  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);

  // compute auto placement, store placement inside the data object,
  // modifiers will be able to edit `placement` if needed
  // and refer to originalPlacement to know the original value
  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);

  popper.setAttribute('x-placement', placement);

  // Apply `position` to popper before anything else because
  // without the position applied we can't guarantee correct computations
  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });

  return options;
}

/**
 * @function
 * @memberof Popper.Utils
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Boolean} shouldRound - If the offsets should be rounded at all
 * @returns {Object} The popper's position offsets rounded
 *
 * The tale of pixel-perfect positioning. It's still not 100% perfect, but as
 * good as it can be within reason.
 * Discussion here: https://github.com/FezVrasta/popper.js/pull/715
 *
 * Low DPI screens cause a popper to be blurry if not using full pixels (Safari
 * as well on High DPI screens).
 *
 * Firefox prefers no rounding for positioning and does not have blurriness on
 * high DPI screens.
 *
 * Only horizontal placement and left/right values need to be considered.
 */
function getRoundedOffsets(data, shouldRound) {
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;
  var round = Math.round,
      floor = Math.floor;

  var noRound = function noRound(v) {
    return v;
  };

  var referenceWidth = round(reference.width);
  var popperWidth = round(popper.width);

  var isVertical = ['left', 'right'].indexOf(data.placement) !== -1;
  var isVariation = data.placement.indexOf('-') !== -1;
  var sameWidthParity = referenceWidth % 2 === popperWidth % 2;
  var bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;

  var horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthParity ? round : floor;
  var verticalToInteger = !shouldRound ? noRound : round;

  return {
    left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left),
    top: verticalToInteger(popper.top),
    bottom: verticalToInteger(popper.bottom),
    right: horizontalToInteger(popper.right)
  };
}

var isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function computeStyle(data, options) {
  var x = options.x,
      y = options.y;
  var popper = data.offsets.popper;

  // Remove this legacy support in Popper.js v2

  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {
    return modifier.name === 'applyStyle';
  }).gpuAcceleration;
  if (legacyGpuAccelerationOption !== undefined) {
    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');
  }
  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;

  var offsetParent = getOffsetParent(data.instance.popper);
  var offsetParentRect = getBoundingClientRect(offsetParent);

  // Styles
  var styles = {
    position: popper.position
  };

  var offsets = getRoundedOffsets(data, window.devicePixelRatio < 2 || !isFirefox);

  var sideA = x === 'bottom' ? 'top' : 'bottom';
  var sideB = y === 'right' ? 'left' : 'right';

  // if gpuAcceleration is set to `true` and transform is supported,
  //  we use `translate3d` to apply the position to the popper we
  // automatically use the supported prefixed version if needed
  var prefixedProperty = getSupportedPropertyName('transform');

  // now, let's make a step back and look at this code closely (wtf?)
  // If the content of the popper grows once it's been positioned, it
  // may happen that the popper gets misplaced because of the new content
  // overflowing its reference element
  // To avoid this problem, we provide two options (x and y), which allow
  // the consumer to define the offset origin.
  // If we position a popper on top of a reference element, we can set
  // `x` to `top` to make the popper grow towards its top instead of
  // its bottom.
  var left = void 0,
      top = void 0;
  if (sideA === 'bottom') {
    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)
    // and not the bottom of the html element
    if (offsetParent.nodeName === 'HTML') {
      top = -offsetParent.clientHeight + offsets.bottom;
    } else {
      top = -offsetParentRect.height + offsets.bottom;
    }
  } else {
    top = offsets.top;
  }
  if (sideB === 'right') {
    if (offsetParent.nodeName === 'HTML') {
      left = -offsetParent.clientWidth + offsets.right;
    } else {
      left = -offsetParentRect.width + offsets.right;
    }
  } else {
    left = offsets.left;
  }
  if (gpuAcceleration && prefixedProperty) {
    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';
    styles[sideA] = 0;
    styles[sideB] = 0;
    styles.willChange = 'transform';
  } else {
    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties
    var invertTop = sideA === 'bottom' ? -1 : 1;
    var invertLeft = sideB === 'right' ? -1 : 1;
    styles[sideA] = top * invertTop;
    styles[sideB] = left * invertLeft;
    styles.willChange = sideA + ', ' + sideB;
  }

  // Attributes
  var attributes = {
    'x-placement': data.placement
  };

  // Update `data` attributes, styles and arrowStyles
  data.attributes = _extends({}, attributes, data.attributes);
  data.styles = _extends({}, styles, data.styles);
  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);

  return data;
}

/**
 * Helper used to know if the given modifier depends from another one.<br />
 * It checks if the needed modifier is listed and enabled.
 * @method
 * @memberof Popper.Utils
 * @param {Array} modifiers - list of modifiers
 * @param {String} requestingName - name of requesting modifier
 * @param {String} requestedName - name of requested modifier
 * @returns {Boolean}
 */
function isModifierRequired(modifiers, requestingName, requestedName) {
  var requesting = find(modifiers, function (_ref) {
    var name = _ref.name;
    return name === requestingName;
  });

  var isRequired = !!requesting && modifiers.some(function (modifier) {
    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;
  });

  if (!isRequired) {
    var _requesting = '`' + requestingName + '`';
    var requested = '`' + requestedName + '`';
    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');
  }
  return isRequired;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function arrow(data, options) {
  var _data$offsets$arrow;

  // arrow depends on keepTogether in order to work
  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {
    return data;
  }

  var arrowElement = options.element;

  // if arrowElement is a string, suppose it's a CSS selector
  if (typeof arrowElement === 'string') {
    arrowElement = data.instance.popper.querySelector(arrowElement);

    // if arrowElement is not found, don't run the modifier
    if (!arrowElement) {
      return data;
    }
  } else {
    // if the arrowElement isn't a query selector we must check that the
    // provided DOM node is child of its popper node
    if (!data.instance.popper.contains(arrowElement)) {
      console.warn('WARNING: `arrow.element` must be child of its popper element!');
      return data;
    }
  }

  var placement = data.placement.split('-')[0];
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;

  var isVertical = ['left', 'right'].indexOf(placement) !== -1;

  var len = isVertical ? 'height' : 'width';
  var sideCapitalized = isVertical ? 'Top' : 'Left';
  var side = sideCapitalized.toLowerCase();
  var altSide = isVertical ? 'left' : 'top';
  var opSide = isVertical ? 'bottom' : 'right';
  var arrowElementSize = getOuterSizes(arrowElement)[len];

  //
  // extends keepTogether behavior making sure the popper and its
  // reference have enough pixels in conjunction
  //

  // top/left side
  if (reference[opSide] - arrowElementSize < popper[side]) {
    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);
  }
  // bottom/right side
  if (reference[side] + arrowElementSize > popper[opSide]) {
    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];
  }
  data.offsets.popper = getClientRect(data.offsets.popper);

  // compute center of the popper
  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;

  // Compute the sideValue using the updated popper offsets
  // take popper margin in account because we don't have this info available
  var css = getStyleComputedProperty(data.instance.popper);
  var popperMarginSide = parseFloat(css['margin' + sideCapitalized], 10);
  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width'], 10);
  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;

  // prevent arrowElement from being placed not contiguously to its popper
  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);

  data.arrowElement = arrowElement;
  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);

  return data;
}

/**
 * Get the opposite placement variation of the given one
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement variation
 * @returns {String} flipped placement variation
 */
function getOppositeVariation(variation) {
  if (variation === 'end') {
    return 'start';
  } else if (variation === 'start') {
    return 'end';
  }
  return variation;
}

/**
 * List of accepted placements to use as values of the `placement` option.<br />
 * Valid placements are:
 * - `auto`
 * - `top`
 * - `right`
 * - `bottom`
 * - `left`
 *
 * Each placement can have a variation from this list:
 * - `-start`
 * - `-end`
 *
 * Variations are interpreted easily if you think of them as the left to right
 * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`
 * is right.<br />
 * Vertically (`left` and `right`), `start` is top and `end` is bottom.
 *
 * Some valid examples are:
 * - `top-end` (on top of reference, right aligned)
 * - `right-start` (on right of reference, top aligned)
 * - `bottom` (on bottom, centered)
 * - `auto-end` (on the side with more space available, alignment depends by placement)
 *
 * @static
 * @type {Array}
 * @enum {String}
 * @readonly
 * @method placements
 * @memberof Popper
 */
var placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];

// Get rid of `auto` `auto-start` and `auto-end`
var validPlacements = placements.slice(3);

/**
 * Given an initial placement, returns all the subsequent placements
 * clockwise (or counter-clockwise).
 *
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement - A valid placement (it accepts variations)
 * @argument {Boolean} counter - Set to true to walk the placements counterclockwise
 * @returns {Array} placements including their variations
 */
function clockwise(placement) {
  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  var index = validPlacements.indexOf(placement);
  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));
  return counter ? arr.reverse() : arr;
}

var BEHAVIORS = {
  FLIP: 'flip',
  CLOCKWISE: 'clockwise',
  COUNTERCLOCKWISE: 'counterclockwise'
};

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function flip(data, options) {
  // if `inner` modifier is enabled, we can't use the `flip` modifier
  if (isModifierEnabled(data.instance.modifiers, 'inner')) {
    return data;
  }

  if (data.flipped && data.placement === data.originalPlacement) {
    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides
    return data;
  }

  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);

  var placement = data.placement.split('-')[0];
  var placementOpposite = getOppositePlacement(placement);
  var variation = data.placement.split('-')[1] || '';

  var flipOrder = [];

  switch (options.behavior) {
    case BEHAVIORS.FLIP:
      flipOrder = [placement, placementOpposite];
      break;
    case BEHAVIORS.CLOCKWISE:
      flipOrder = clockwise(placement);
      break;
    case BEHAVIORS.COUNTERCLOCKWISE:
      flipOrder = clockwise(placement, true);
      break;
    default:
      flipOrder = options.behavior;
  }

  flipOrder.forEach(function (step, index) {
    if (placement !== step || flipOrder.length === index + 1) {
      return data;
    }

    placement = data.placement.split('-')[0];
    placementOpposite = getOppositePlacement(placement);

    var popperOffsets = data.offsets.popper;
    var refOffsets = data.offsets.reference;

    // using floor because the reference offsets may contain decimals we are not going to consider here
    var floor = Math.floor;
    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);

    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);
    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);
    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);
    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);

    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;

    // flip the variation if required
    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;
    var flippedVariation = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);

    if (overlapsRef || overflowsBoundaries || flippedVariation) {
      // this boolean to detect any flip loop
      data.flipped = true;

      if (overlapsRef || overflowsBoundaries) {
        placement = flipOrder[index + 1];
      }

      if (flippedVariation) {
        variation = getOppositeVariation(variation);
      }

      data.placement = placement + (variation ? '-' + variation : '');

      // this object contains `position`, we want to preserve it along with
      // any additional property we may add in the future
      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));

      data = runModifiers(data.instance.modifiers, data, 'flip');
    }
  });
  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function keepTogether(data) {
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;

  var placement = data.placement.split('-')[0];
  var floor = Math.floor;
  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;
  var side = isVertical ? 'right' : 'bottom';
  var opSide = isVertical ? 'left' : 'top';
  var measurement = isVertical ? 'width' : 'height';

  if (popper[side] < floor(reference[opSide])) {
    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];
  }
  if (popper[opSide] > floor(reference[side])) {
    data.offsets.popper[opSide] = floor(reference[side]);
  }

  return data;
}

/**
 * Converts a string containing value + unit into a px value number
 * @function
 * @memberof {modifiers~offset}
 * @private
 * @argument {String} str - Value + unit string
 * @argument {String} measurement - `height` or `width`
 * @argument {Object} popperOffsets
 * @argument {Object} referenceOffsets
 * @returns {Number|String}
 * Value in pixels, or original string if no values were extracted
 */
function toValue(str, measurement, popperOffsets, referenceOffsets) {
  // separate value from unit
  var split = str.match(/((?:\-|\+)?\d*\.?\d*)(.*)/);
  var value = +split[1];
  var unit = split[2];

  // If it's not a number it's an operator, I guess
  if (!value) {
    return str;
  }

  if (unit.indexOf('%') === 0) {
    var element = void 0;
    switch (unit) {
      case '%p':
        element = popperOffsets;
        break;
      case '%':
      case '%r':
      default:
        element = referenceOffsets;
    }

    var rect = getClientRect(element);
    return rect[measurement] / 100 * value;
  } else if (unit === 'vh' || unit === 'vw') {
    // if is a vh or vw, we calculate the size based on the viewport
    var size = void 0;
    if (unit === 'vh') {
      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
    } else {
      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
    }
    return size / 100 * value;
  } else {
    // if is an explicit pixel unit, we get rid of the unit and keep the value
    // if is an implicit unit, it's px, and we return just the value
    return value;
  }
}

/**
 * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.
 * @function
 * @memberof {modifiers~offset}
 * @private
 * @argument {String} offset
 * @argument {Object} popperOffsets
 * @argument {Object} referenceOffsets
 * @argument {String} basePlacement
 * @returns {Array} a two cells array with x and y offsets in numbers
 */
function parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {
  var offsets = [0, 0];

  // Use height if placement is left or right and index is 0 otherwise use width
  // in this way the first offset will use an axis and the second one
  // will use the other one
  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;

  // Split the offset string to obtain a list of values and operands
  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)
  var fragments = offset.split(/(\+|\-)/).map(function (frag) {
    return frag.trim();
  });

  // Detect if the offset string contains a pair of values or a single one
  // they could be separated by comma or space
  var divider = fragments.indexOf(find(fragments, function (frag) {
    return frag.search(/,|\s/) !== -1;
  }));

  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {
    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');
  }

  // If divider is found, we divide the list of values and operands to divide
  // them by ofset X and Y.
  var splitRegex = /\s*,\s*|\s+/;
  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];

  // Convert the values with units to absolute pixels to allow our computations
  ops = ops.map(function (op, index) {
    // Most of the units rely on the orientation of the popper
    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';
    var mergeWithPrevious = false;
    return op
    // This aggregates any `+` or `-` sign that aren't considered operators
    // e.g.: 10 + +5 => [10, +, +5]
    .reduce(function (a, b) {
      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {
        a[a.length - 1] = b;
        mergeWithPrevious = true;
        return a;
      } else if (mergeWithPrevious) {
        a[a.length - 1] += b;
        mergeWithPrevious = false;
        return a;
      } else {
        return a.concat(b);
      }
    }, [])
    // Here we convert the string values into number values (in px)
    .map(function (str) {
      return toValue(str, measurement, popperOffsets, referenceOffsets);
    });
  });

  // Loop trough the offsets arrays and execute the operations
  ops.forEach(function (op, index) {
    op.forEach(function (frag, index2) {
      if (isNumeric(frag)) {
        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);
      }
    });
  });
  return offsets;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @argument {Number|String} options.offset=0
 * The offset value as described in the modifier description
 * @returns {Object} The data object, properly modified
 */
function offset(data, _ref) {
  var offset = _ref.offset;
  var placement = data.placement,
      _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;

  var basePlacement = placement.split('-')[0];

  var offsets = void 0;
  if (isNumeric(+offset)) {
    offsets = [+offset, 0];
  } else {
    offsets = parseOffset(offset, popper, reference, basePlacement);
  }

  if (basePlacement === 'left') {
    popper.top += offsets[0];
    popper.left -= offsets[1];
  } else if (basePlacement === 'right') {
    popper.top += offsets[0];
    popper.left += offsets[1];
  } else if (basePlacement === 'top') {
    popper.left += offsets[0];
    popper.top -= offsets[1];
  } else if (basePlacement === 'bottom') {
    popper.left += offsets[0];
    popper.top += offsets[1];
  }

  data.popper = popper;
  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function preventOverflow(data, options) {
  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);

  // If offsetParent is the reference element, we really want to
  // go one step up and use the next offsetParent as reference to
  // avoid to make this modifier completely useless and look like broken
  if (data.instance.reference === boundariesElement) {
    boundariesElement = getOffsetParent(boundariesElement);
  }

  // NOTE: DOM access here
  // resets the popper's position so that the document size can be calculated excluding
  // the size of the popper element itself
  var transformProp = getSupportedPropertyName('transform');
  var popperStyles = data.instance.popper.style; // assignment to help minification
  var top = popperStyles.top,
      left = popperStyles.left,
      transform = popperStyles[transformProp];

  popperStyles.top = '';
  popperStyles.left = '';
  popperStyles[transformProp] = '';

  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);

  // NOTE: DOM access here
  // restores the original style properties after the offsets have been computed
  popperStyles.top = top;
  popperStyles.left = left;
  popperStyles[transformProp] = transform;

  options.boundaries = boundaries;

  var order = options.priority;
  var popper = data.offsets.popper;

  var check = {
    primary: function primary(placement) {
      var value = popper[placement];
      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {
        value = Math.max(popper[placement], boundaries[placement]);
      }
      return defineProperty({}, placement, value);
    },
    secondary: function secondary(placement) {
      var mainSide = placement === 'right' ? 'left' : 'top';
      var value = popper[mainSide];
      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {
        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));
      }
      return defineProperty({}, mainSide, value);
    }
  };

  order.forEach(function (placement) {
    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';
    popper = _extends({}, popper, check[side](placement));
  });

  data.offsets.popper = popper;

  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function shift(data) {
  var placement = data.placement;
  var basePlacement = placement.split('-')[0];
  var shiftvariation = placement.split('-')[1];

  // if shift shiftvariation is specified, run the modifier
  if (shiftvariation) {
    var _data$offsets = data.offsets,
        reference = _data$offsets.reference,
        popper = _data$offsets.popper;

    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;
    var side = isVertical ? 'left' : 'top';
    var measurement = isVertical ? 'width' : 'height';

    var shiftOffsets = {
      start: defineProperty({}, side, reference[side]),
      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])
    };

    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);
  }

  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function hide(data) {
  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {
    return data;
  }

  var refRect = data.offsets.reference;
  var bound = find(data.instance.modifiers, function (modifier) {
    return modifier.name === 'preventOverflow';
  }).boundaries;

  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {
    // Avoid unnecessary DOM access if visibility hasn't changed
    if (data.hide === true) {
      return data;
    }

    data.hide = true;
    data.attributes['x-out-of-boundaries'] = '';
  } else {
    // Avoid unnecessary DOM access if visibility hasn't changed
    if (data.hide === false) {
      return data;
    }

    data.hide = false;
    data.attributes['x-out-of-boundaries'] = false;
  }

  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function inner(data) {
  var placement = data.placement;
  var basePlacement = placement.split('-')[0];
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;

  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;

  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;

  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);

  data.placement = getOppositePlacement(placement);
  data.offsets.popper = getClientRect(popper);

  return data;
}

/**
 * Modifier function, each modifier can have a function of this type assigned
 * to its `fn` property.<br />
 * These functions will be called on each update, this means that you must
 * make sure they are performant enough to avoid performance bottlenecks.
 *
 * @function ModifierFn
 * @argument {dataObject} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {dataObject} The data object, properly modified
 */

/**
 * Modifiers are plugins used to alter the behavior of your poppers.<br />
 * Popper.js uses a set of 9 modifiers to provide all the basic functionalities
 * needed by the library.
 *
 * Usually you don't want to override the `order`, `fn` and `onLoad` props.
 * All the other properties are configurations that could be tweaked.
 * @namespace modifiers
 */
var modifiers = {
  /**
   * Modifier used to shift the popper on the start or end of its reference
   * element.<br />
   * It will read the variation of the `placement` property.<br />
   * It can be one either `-end` or `-start`.
   * @memberof modifiers
   * @inner
   */
  shift: {
    /** @prop {number} order=100 - Index used to define the order of execution */
    order: 100,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: shift
  },

  /**
   * The `offset` modifier can shift your popper on both its axis.
   *
   * It accepts the following units:
   * - `px` or unit-less, interpreted as pixels
   * - `%` or `%r`, percentage relative to the length of the reference element
   * - `%p`, percentage relative to the length of the popper element
   * - `vw`, CSS viewport width unit
   * - `vh`, CSS viewport height unit
   *
   * For length is intended the main axis relative to the placement of the popper.<br />
   * This means that if the placement is `top` or `bottom`, the length will be the
   * `width`. In case of `left` or `right`, it will be the `height`.
   *
   * You can provide a single value (as `Number` or `String`), or a pair of values
   * as `String` divided by a comma or one (or more) white spaces.<br />
   * The latter is a deprecated method because it leads to confusion and will be
   * removed in v2.<br />
   * Additionally, it accepts additions and subtractions between different units.
   * Note that multiplications and divisions aren't supported.
   *
   * Valid examples are:
   * ```
   * 10
   * '10%'
   * '10, 10'
   * '10%, 10'
   * '10 + 10%'
   * '10 - 5vh + 3%'
   * '-10px + 5vh, 5px - 6%'
   * ```
   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap
   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.
   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).
   *
   * @memberof modifiers
   * @inner
   */
  offset: {
    /** @prop {number} order=200 - Index used to define the order of execution */
    order: 200,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: offset,
    /** @prop {Number|String} offset=0
     * The offset value as described in the modifier description
     */
    offset: 0
  },

  /**
   * Modifier used to prevent the popper from being positioned outside the boundary.
   *
   * A scenario exists where the reference itself is not within the boundaries.<br />
   * We can say it has "escaped the boundaries" — or just "escaped".<br />
   * In this case we need to decide whether the popper should either:
   *
   * - detach from the reference and remain "trapped" in the boundaries, or
   * - if it should ignore the boundary and "escape with its reference"
   *
   * When `escapeWithReference` is set to`true` and reference is completely
   * outside its boundaries, the popper will overflow (or completely leave)
   * the boundaries in order to remain attached to the edge of the reference.
   *
   * @memberof modifiers
   * @inner
   */
  preventOverflow: {
    /** @prop {number} order=300 - Index used to define the order of execution */
    order: 300,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: preventOverflow,
    /**
     * @prop {Array} [priority=['left','right','top','bottom']]
     * Popper will try to prevent overflow following these priorities by default,
     * then, it could overflow on the left and on top of the `boundariesElement`
     */
    priority: ['left', 'right', 'top', 'bottom'],
    /**
     * @prop {number} padding=5
     * Amount of pixel used to define a minimum distance between the boundaries
     * and the popper. This makes sure the popper always has a little padding
     * between the edges of its container
     */
    padding: 5,
    /**
     * @prop {String|HTMLElement} boundariesElement='scrollParent'
     * Boundaries used by the modifier. Can be `scrollParent`, `window`,
     * `viewport` or any DOM element.
     */
    boundariesElement: 'scrollParent'
  },

  /**
   * Modifier used to make sure the reference and its popper stay near each other
   * without leaving any gap between the two. Especially useful when the arrow is
   * enabled and you want to ensure that it points to its reference element.
   * It cares only about the first axis. You can still have poppers with margin
   * between the popper and its reference element.
   * @memberof modifiers
   * @inner
   */
  keepTogether: {
    /** @prop {number} order=400 - Index used to define the order of execution */
    order: 400,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: keepTogether
  },

  /**
   * This modifier is used to move the `arrowElement` of the popper to make
   * sure it is positioned between the reference element and its popper element.
   * It will read the outer size of the `arrowElement` node to detect how many
   * pixels of conjunction are needed.
   *
   * It has no effect if no `arrowElement` is provided.
   * @memberof modifiers
   * @inner
   */
  arrow: {
    /** @prop {number} order=500 - Index used to define the order of execution */
    order: 500,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: arrow,
    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */
    element: '[x-arrow]'
  },

  /**
   * Modifier used to flip the popper's placement when it starts to overlap its
   * reference element.
   *
   * Requires the `preventOverflow` modifier before it in order to work.
   *
   * **NOTE:** this modifier will interrupt the current update cycle and will
   * restart it if it detects the need to flip the placement.
   * @memberof modifiers
   * @inner
   */
  flip: {
    /** @prop {number} order=600 - Index used to define the order of execution */
    order: 600,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: flip,
    /**
     * @prop {String|Array} behavior='flip'
     * The behavior used to change the popper's placement. It can be one of
     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid
     * placements (with optional variations)
     */
    behavior: 'flip',
    /**
     * @prop {number} padding=5
     * The popper will flip if it hits the edges of the `boundariesElement`
     */
    padding: 5,
    /**
     * @prop {String|HTMLElement} boundariesElement='viewport'
     * The element which will define the boundaries of the popper position.
     * The popper will never be placed outside of the defined boundaries
     * (except if `keepTogether` is enabled)
     */
    boundariesElement: 'viewport'
  },

  /**
   * Modifier used to make the popper flow toward the inner of the reference element.
   * By default, when this modifier is disabled, the popper will be placed outside
   * the reference element.
   * @memberof modifiers
   * @inner
   */
  inner: {
    /** @prop {number} order=700 - Index used to define the order of execution */
    order: 700,
    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */
    enabled: false,
    /** @prop {ModifierFn} */
    fn: inner
  },

  /**
   * Modifier used to hide the popper when its reference element is outside of the
   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can
   * be used to hide with a CSS selector the popper when its reference is
   * out of boundaries.
   *
   * Requires the `preventOverflow` modifier before it in order to work.
   * @memberof modifiers
   * @inner
   */
  hide: {
    /** @prop {number} order=800 - Index used to define the order of execution */
    order: 800,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: hide
  },

  /**
   * Computes the style that will be applied to the popper element to gets
   * properly positioned.
   *
   * Note that this modifier will not touch the DOM, it just prepares the styles
   * so that `applyStyle` modifier can apply it. This separation is useful
   * in case you need to replace `applyStyle` with a custom implementation.
   *
   * This modifier has `850` as `order` value to maintain backward compatibility
   * with previous versions of Popper.js. Expect the modifiers ordering method
   * to change in future major versions of the library.
   *
   * @memberof modifiers
   * @inner
   */
  computeStyle: {
    /** @prop {number} order=850 - Index used to define the order of execution */
    order: 850,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: computeStyle,
    /**
     * @prop {Boolean} gpuAcceleration=true
     * If true, it uses the CSS 3D transformation to position the popper.
     * Otherwise, it will use the `top` and `left` properties
     */
    gpuAcceleration: true,
    /**
     * @prop {string} [x='bottom']
     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.
     * Change this if your popper should grow in a direction different from `bottom`
     */
    x: 'bottom',
    /**
     * @prop {string} [x='left']
     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.
     * Change this if your popper should grow in a direction different from `right`
     */
    y: 'right'
  },

  /**
   * Applies the computed styles to the popper element.
   *
   * All the DOM manipulations are limited to this modifier. This is useful in case
   * you want to integrate Popper.js inside a framework or view library and you
   * want to delegate all the DOM manipulations to it.
   *
   * Note that if you disable this modifier, you must make sure the popper element
   * has its position set to `absolute` before Popper.js can do its work!
   *
   * Just disable this modifier and define your own to achieve the desired effect.
   *
   * @memberof modifiers
   * @inner
   */
  applyStyle: {
    /** @prop {number} order=900 - Index used to define the order of execution */
    order: 900,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: applyStyle,
    /** @prop {Function} */
    onLoad: applyStyleOnLoad,
    /**
     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier
     * @prop {Boolean} gpuAcceleration=true
     * If true, it uses the CSS 3D transformation to position the popper.
     * Otherwise, it will use the `top` and `left` properties
     */
    gpuAcceleration: undefined
  }
};

/**
 * The `dataObject` is an object containing all the information used by Popper.js.
 * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.
 * @name dataObject
 * @property {Object} data.instance The Popper.js instance
 * @property {String} data.placement Placement applied to popper
 * @property {String} data.originalPlacement Placement originally defined on init
 * @property {Boolean} data.flipped True if popper has been flipped by flip modifier
 * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper
 * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier
 * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)
 * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)
 * @property {Object} data.boundaries Offsets of the popper boundaries
 * @property {Object} data.offsets The measurements of popper, reference and arrow elements
 * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values
 * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values
 * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0
 */

/**
 * Default options provided to Popper.js constructor.<br />
 * These can be overridden using the `options` argument of Popper.js.<br />
 * To override an option, simply pass an object with the same
 * structure of the `options` object, as the 3rd argument. For example:
 * ```
 * new Popper(ref, pop, {
 *   modifiers: {
 *     preventOverflow: { enabled: false }
 *   }
 * })
 * ```
 * @type {Object}
 * @static
 * @memberof Popper
 */
var Defaults = {
  /**
   * Popper's placement.
   * @prop {Popper.placements} placement='bottom'
   */
  placement: 'bottom',

  /**
   * Set this to true if you want popper to position it self in 'fixed' mode
   * @prop {Boolean} positionFixed=false
   */
  positionFixed: false,

  /**
   * Whether events (resize, scroll) are initially enabled.
   * @prop {Boolean} eventsEnabled=true
   */
  eventsEnabled: true,

  /**
   * Set to true if you want to automatically remove the popper when
   * you call the `destroy` method.
   * @prop {Boolean} removeOnDestroy=false
   */
  removeOnDestroy: false,

  /**
   * Callback called when the popper is created.<br />
   * By default, it is set to no-op.<br />
   * Access Popper.js instance with `data.instance`.
   * @prop {onCreate}
   */
  onCreate: function onCreate() {},

  /**
   * Callback called when the popper is updated. This callback is not called
   * on the initialization/creation of the popper, but only on subsequent
   * updates.<br />
   * By default, it is set to no-op.<br />
   * Access Popper.js instance with `data.instance`.
   * @prop {onUpdate}
   */
  onUpdate: function onUpdate() {},

  /**
   * List of modifiers used to modify the offsets before they are applied to the popper.
   * They provide most of the functionalities of Popper.js.
   * @prop {modifiers}
   */
  modifiers: modifiers
};

/**
 * @callback onCreate
 * @param {dataObject} data
 */

/**
 * @callback onUpdate
 * @param {dataObject} data
 */

// Utils
// Methods
var Popper = function () {
  /**
   * Creates a new Popper.js instance.
   * @class Popper
   * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper
   * @param {HTMLElement} popper - The HTML element used as the popper
   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)
   * @return {Object} instance - The generated Popper.js instance
   */
  function Popper(reference, popper) {
    var _this = this;

    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    classCallCheck(this, Popper);

    this.scheduleUpdate = function () {
      return requestAnimationFrame(_this.update);
    };

    // make update() debounced, so that it only runs at most once-per-tick
    this.update = debounce(this.update.bind(this));

    // with {} we create a new object with the options inside it
    this.options = _extends({}, Popper.Defaults, options);

    // init state
    this.state = {
      isDestroyed: false,
      isCreated: false,
      scrollParents: []
    };

    // get reference and popper elements (allow jQuery wrappers)
    this.reference = reference && reference.jquery ? reference[0] : reference;
    this.popper = popper && popper.jquery ? popper[0] : popper;

    // Deep merge modifiers options
    this.options.modifiers = {};
    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {
      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});
    });

    // Refactoring modifiers' list (Object => Array)
    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {
      return _extends({
        name: name
      }, _this.options.modifiers[name]);
    })
    // sort the modifiers by order
    .sort(function (a, b) {
      return a.order - b.order;
    });

    // modifiers have the ability to execute arbitrary code when Popper.js get inited
    // such code is executed in the same order of its modifier
    // they could add new properties to their options configuration
    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!
    this.modifiers.forEach(function (modifierOptions) {
      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {
        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);
      }
    });

    // fire the first update to position the popper in the right place
    this.update();

    var eventsEnabled = this.options.eventsEnabled;
    if (eventsEnabled) {
      // setup event listeners, they will take care of update the position in specific situations
      this.enableEventListeners();
    }

    this.state.eventsEnabled = eventsEnabled;
  }

  // We can't use class properties because they don't get listed in the
  // class prototype and break stuff like Sinon stubs


  createClass(Popper, [{
    key: 'update',
    value: function update$$1() {
      return update.call(this);
    }
  }, {
    key: 'destroy',
    value: function destroy$$1() {
      return destroy.call(this);
    }
  }, {
    key: 'enableEventListeners',
    value: function enableEventListeners$$1() {
      return enableEventListeners.call(this);
    }
  }, {
    key: 'disableEventListeners',
    value: function disableEventListeners$$1() {
      return disableEventListeners.call(this);
    }

    /**
     * Schedules an update. It will run on the next UI update available.
     * @method scheduleUpdate
     * @memberof Popper
     */


    /**
     * Collection of utilities useful when writing custom modifiers.
     * Starting from version 1.7, this method is available only if you
     * include `popper-utils.js` before `popper.js`.
     *
     * **DEPRECATION**: This way to access PopperUtils is deprecated
     * and will be removed in v2! Use the PopperUtils module directly instead.
     * Due to the high instability of the methods contained in Utils, we can't
     * guarantee them to follow semver. Use them at your own risk!
     * @static
     * @private
     * @type {Object}
     * @deprecated since version 1.8
     * @member Utils
     * @memberof Popper
     */

  }]);
  return Popper;
}();

/**
 * The `referenceObject` is an object that provides an interface compatible with Popper.js
 * and lets you use it as replacement of a real DOM node.<br />
 * You can use this method to position a popper relatively to a set of coordinates
 * in case you don't have a DOM node to use as reference.
 *
 * ```
 * new Popper(referenceObject, popperNode);
 * ```
 *
 * NB: This feature isn't supported in Internet Explorer 10.
 * @name referenceObject
 * @property {Function} data.getBoundingClientRect
 * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.
 * @property {number} data.clientWidth
 * An ES6 getter that will return the width of the virtual reference element.
 * @property {number} data.clientHeight
 * An ES6 getter that will return the height of the virtual reference element.
 */


Popper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;
Popper.placements = placements;
Popper.Defaults = Defaults;

return Popper;

})));

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(255)))

/***/ }),
/* 383 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.t = t;
exports.use = use;
exports.i18n = i18n;

var _vue = _interopRequireDefault(__webpack_require__(5));

var _deepmerge = _interopRequireDefault(__webpack_require__(467));

var _isNil = _interopRequireDefault(__webpack_require__(258));

var _not = _interopRequireDefault(__webpack_require__(7));

var _format = _interopRequireDefault(__webpack_require__(468));

var _enUS = _interopRequireDefault(__webpack_require__(260));

var logger = __webpack_require__(0).get("iview:locale:index");

var EMPTY_STRING = '';
var PERIOD = '.';
var format = (0, _format.default)(_vue.default);
var lang = _enUS.default;
var merged = false;

var i18nHandler = function _i18nHandler() {
  /* eslint-disable-next-line babel/no-invalid-this */
  var vuei18n = Object.getPrototypeOf(this || _vue.default).$t;

  if (typeof vuei18n === 'function' && Boolean(_vue.default.locale)) {
    if ((0, _not.default)(merged)) {
      merged = true;

      _vue.default.locale(_vue.default.config.lang, (0, _deepmerge.default)(lang, _vue.default.locale(_vue.default.config.lang) || {}, {
        clone: true
      }));
    }
    /* eslint-disable-next-line babel/no-invalid-this */


    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return vuei18n.apply(this, args);
  }

  return undefined;
};

function t() {
  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    args[_key2] = arguments[_key2];
  }

  var path = args[0],
      options = args[1];
  /* eslint-disable-next-line babel/no-invalid-this */

  var value = i18nHandler.apply(this, args);

  if ((0, _not.default)((0, _isNil.default)(value))) {
    return value;
  }

  var array = path.split(PERIOD);
  var current = lang;

  for (var i = 0, j = array.length; i < j; i += 1) {
    var property = array[i];
    value = current[property];

    if (i === j - 1) {
      return format(value, options);
    }

    if ((0, _not.default)(value)) {
      return EMPTY_STRING;
    }

    current = value;
  }

  return EMPTY_STRING;
}

function use(l) {
  lang = l || lang;
}

function i18n(fn) {
  i18nHandler = fn || i18nHandler;
}

/***/ }),
/* 384 */
/***/ (function(module, exports, __webpack_require__) {

var isArray = __webpack_require__(44),
    isKey = __webpack_require__(471),
    stringToPath = __webpack_require__(473),
    toString = __webpack_require__(475);

/**
 * Casts `value` to a path array if it's not one.
 *
 * @private
 * @param {*} value The value to inspect.
 * @param {Object} [object] The object to query keys on.
 * @returns {Array} Returns the cast property path array.
 */
function castPath(value, object) {
  if (isArray(value)) {
    return value;
  }
  return isKey(value, object) ? [value] : stringToPath(toString(value));
}

module.exports = castPath;


/***/ }),
/* 385 */
/***/ (function(module, exports) {

/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */
function identity(value) {
  return value;
}

module.exports = identity;


/***/ }),
/* 386 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _checkbox_group_vue_vue_type_template_id_64240056___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(302);
/* harmony import */ var _checkbox_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(103);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _checkbox_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _checkbox_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _checkbox_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _checkbox_group_vue_vue_type_template_id_64240056___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _checkbox_group_vue_vue_type_template_id_64240056___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 387 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_RESULT__;// TinyColor v1.4.1
// https://github.com/bgrins/TinyColor
// Brian Grinstead, MIT License

(function(Math) {

var trimLeft = /^\s+/,
    trimRight = /\s+$/,
    tinyCounter = 0,
    mathRound = Math.round,
    mathMin = Math.min,
    mathMax = Math.max,
    mathRandom = Math.random;

function tinycolor (color, opts) {

    color = (color) ? color : '';
    opts = opts || { };

    // If input is already a tinycolor, return itself
    if (color instanceof tinycolor) {
       return color;
    }
    // If we are called as a function, call using new instead
    if (!(this instanceof tinycolor)) {
        return new tinycolor(color, opts);
    }

    var rgb = inputToRGB(color);
    this._originalInput = color,
    this._r = rgb.r,
    this._g = rgb.g,
    this._b = rgb.b,
    this._a = rgb.a,
    this._roundA = mathRound(100*this._a) / 100,
    this._format = opts.format || rgb.format;
    this._gradientType = opts.gradientType;

    // Don't let the range of [0,255] come back in [0,1].
    // Potentially lose a little bit of precision here, but will fix issues where
    // .5 gets interpreted as half of the total, instead of half of 1
    // If it was supposed to be 128, this was already taken care of by `inputToRgb`
    if (this._r < 1) { this._r = mathRound(this._r); }
    if (this._g < 1) { this._g = mathRound(this._g); }
    if (this._b < 1) { this._b = mathRound(this._b); }

    this._ok = rgb.ok;
    this._tc_id = tinyCounter++;
}

tinycolor.prototype = {
    isDark: function() {
        return this.getBrightness() < 128;
    },
    isLight: function() {
        return !this.isDark();
    },
    isValid: function() {
        return this._ok;
    },
    getOriginalInput: function() {
      return this._originalInput;
    },
    getFormat: function() {
        return this._format;
    },
    getAlpha: function() {
        return this._a;
    },
    getBrightness: function() {
        //http://www.w3.org/TR/AERT#color-contrast
        var rgb = this.toRgb();
        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;
    },
    getLuminance: function() {
        //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef
        var rgb = this.toRgb();
        var RsRGB, GsRGB, BsRGB, R, G, B;
        RsRGB = rgb.r/255;
        GsRGB = rgb.g/255;
        BsRGB = rgb.b/255;

        if (RsRGB <= 0.03928) {R = RsRGB / 12.92;} else {R = Math.pow(((RsRGB + 0.055) / 1.055), 2.4);}
        if (GsRGB <= 0.03928) {G = GsRGB / 12.92;} else {G = Math.pow(((GsRGB + 0.055) / 1.055), 2.4);}
        if (BsRGB <= 0.03928) {B = BsRGB / 12.92;} else {B = Math.pow(((BsRGB + 0.055) / 1.055), 2.4);}
        return (0.2126 * R) + (0.7152 * G) + (0.0722 * B);
    },
    setAlpha: function(value) {
        this._a = boundAlpha(value);
        this._roundA = mathRound(100*this._a) / 100;
        return this;
    },
    toHsv: function() {
        var hsv = rgbToHsv(this._r, this._g, this._b);
        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };
    },
    toHsvString: function() {
        var hsv = rgbToHsv(this._r, this._g, this._b);
        var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);
        return (this._a == 1) ?
          "hsv("  + h + ", " + s + "%, " + v + "%)" :
          "hsva(" + h + ", " + s + "%, " + v + "%, "+ this._roundA + ")";
    },
    toHsl: function() {
        var hsl = rgbToHsl(this._r, this._g, this._b);
        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };
    },
    toHslString: function() {
        var hsl = rgbToHsl(this._r, this._g, this._b);
        var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);
        return (this._a == 1) ?
          "hsl("  + h + ", " + s + "%, " + l + "%)" :
          "hsla(" + h + ", " + s + "%, " + l + "%, "+ this._roundA + ")";
    },
    toHex: function(allow3Char) {
        return rgbToHex(this._r, this._g, this._b, allow3Char);
    },
    toHexString: function(allow3Char) {
        return '#' + this.toHex(allow3Char);
    },
    toHex8: function(allow4Char) {
        return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);
    },
    toHex8String: function(allow4Char) {
        return '#' + this.toHex8(allow4Char);
    },
    toRgb: function() {
        return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };
    },
    toRgbString: function() {
        return (this._a == 1) ?
          "rgb("  + mathRound(this._r) + ", " + mathRound(this._g) + ", " + mathRound(this._b) + ")" :
          "rgba(" + mathRound(this._r) + ", " + mathRound(this._g) + ", " + mathRound(this._b) + ", " + this._roundA + ")";
    },
    toPercentageRgb: function() {
        return { r: mathRound(bound01(this._r, 255) * 100) + "%", g: mathRound(bound01(this._g, 255) * 100) + "%", b: mathRound(bound01(this._b, 255) * 100) + "%", a: this._a };
    },
    toPercentageRgbString: function() {
        return (this._a == 1) ?
          "rgb("  + mathRound(bound01(this._r, 255) * 100) + "%, " + mathRound(bound01(this._g, 255) * 100) + "%, " + mathRound(bound01(this._b, 255) * 100) + "%)" :
          "rgba(" + mathRound(bound01(this._r, 255) * 100) + "%, " + mathRound(bound01(this._g, 255) * 100) + "%, " + mathRound(bound01(this._b, 255) * 100) + "%, " + this._roundA + ")";
    },
    toName: function() {
        if (this._a === 0) {
            return "transparent";
        }

        if (this._a < 1) {
            return false;
        }

        return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;
    },
    toFilter: function(secondColor) {
        var hex8String = '#' + rgbaToArgbHex(this._r, this._g, this._b, this._a);
        var secondHex8String = hex8String;
        var gradientType = this._gradientType ? "GradientType = 1, " : "";

        if (secondColor) {
            var s = tinycolor(secondColor);
            secondHex8String = '#' + rgbaToArgbHex(s._r, s._g, s._b, s._a);
        }

        return "progid:DXImageTransform.Microsoft.gradient("+gradientType+"startColorstr="+hex8String+",endColorstr="+secondHex8String+")";
    },
    toString: function(format) {
        var formatSet = !!format;
        format = format || this._format;

        var formattedString = false;
        var hasAlpha = this._a < 1 && this._a >= 0;
        var needsAlphaFormat = !formatSet && hasAlpha && (format === "hex" || format === "hex6" || format === "hex3" || format === "hex4" || format === "hex8" || format === "name");

        if (needsAlphaFormat) {
            // Special case for "transparent", all other non-alpha formats
            // will return rgba when there is transparency.
            if (format === "name" && this._a === 0) {
                return this.toName();
            }
            return this.toRgbString();
        }
        if (format === "rgb") {
            formattedString = this.toRgbString();
        }
        if (format === "prgb") {
            formattedString = this.toPercentageRgbString();
        }
        if (format === "hex" || format === "hex6") {
            formattedString = this.toHexString();
        }
        if (format === "hex3") {
            formattedString = this.toHexString(true);
        }
        if (format === "hex4") {
            formattedString = this.toHex8String(true);
        }
        if (format === "hex8") {
            formattedString = this.toHex8String();
        }
        if (format === "name") {
            formattedString = this.toName();
        }
        if (format === "hsl") {
            formattedString = this.toHslString();
        }
        if (format === "hsv") {
            formattedString = this.toHsvString();
        }

        return formattedString || this.toHexString();
    },
    clone: function() {
        return tinycolor(this.toString());
    },

    _applyModification: function(fn, args) {
        var color = fn.apply(null, [this].concat([].slice.call(args)));
        this._r = color._r;
        this._g = color._g;
        this._b = color._b;
        this.setAlpha(color._a);
        return this;
    },
    lighten: function() {
        return this._applyModification(lighten, arguments);
    },
    brighten: function() {
        return this._applyModification(brighten, arguments);
    },
    darken: function() {
        return this._applyModification(darken, arguments);
    },
    desaturate: function() {
        return this._applyModification(desaturate, arguments);
    },
    saturate: function() {
        return this._applyModification(saturate, arguments);
    },
    greyscale: function() {
        return this._applyModification(greyscale, arguments);
    },
    spin: function() {
        return this._applyModification(spin, arguments);
    },

    _applyCombination: function(fn, args) {
        return fn.apply(null, [this].concat([].slice.call(args)));
    },
    analogous: function() {
        return this._applyCombination(analogous, arguments);
    },
    complement: function() {
        return this._applyCombination(complement, arguments);
    },
    monochromatic: function() {
        return this._applyCombination(monochromatic, arguments);
    },
    splitcomplement: function() {
        return this._applyCombination(splitcomplement, arguments);
    },
    triad: function() {
        return this._applyCombination(triad, arguments);
    },
    tetrad: function() {
        return this._applyCombination(tetrad, arguments);
    }
};

// If input is an object, force 1 into "1.0" to handle ratios properly
// String input requires "1.0" as input, so 1 will be treated as 1
tinycolor.fromRatio = function(color, opts) {
    if (typeof color == "object") {
        var newColor = {};
        for (var i in color) {
            if (color.hasOwnProperty(i)) {
                if (i === "a") {
                    newColor[i] = color[i];
                }
                else {
                    newColor[i] = convertToPercentage(color[i]);
                }
            }
        }
        color = newColor;
    }

    return tinycolor(color, opts);
};

// Given a string or object, convert that input to RGB
// Possible string inputs:
//
//     "red"
//     "#f00" or "f00"
//     "#ff0000" or "ff0000"
//     "#ff000000" or "ff000000"
//     "rgb 255 0 0" or "rgb (255, 0, 0)"
//     "rgb 1.0 0 0" or "rgb (1, 0, 0)"
//     "rgba (255, 0, 0, 1)" or "rgba 255, 0, 0, 1"
//     "rgba (1.0, 0, 0, 1)" or "rgba 1.0, 0, 0, 1"
//     "hsl(0, 100%, 50%)" or "hsl 0 100% 50%"
//     "hsla(0, 100%, 50%, 1)" or "hsla 0 100% 50%, 1"
//     "hsv(0, 100%, 100%)" or "hsv 0 100% 100%"
//
function inputToRGB(color) {

    var rgb = { r: 0, g: 0, b: 0 };
    var a = 1;
    var s = null;
    var v = null;
    var l = null;
    var ok = false;
    var format = false;

    if (typeof color == "string") {
        color = stringInputToObject(color);
    }

    if (typeof color == "object") {
        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {
            rgb = rgbToRgb(color.r, color.g, color.b);
            ok = true;
            format = String(color.r).substr(-1) === "%" ? "prgb" : "rgb";
        }
        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {
            s = convertToPercentage(color.s);
            v = convertToPercentage(color.v);
            rgb = hsvToRgb(color.h, s, v);
            ok = true;
            format = "hsv";
        }
        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {
            s = convertToPercentage(color.s);
            l = convertToPercentage(color.l);
            rgb = hslToRgb(color.h, s, l);
            ok = true;
            format = "hsl";
        }

        if (color.hasOwnProperty("a")) {
            a = color.a;
        }
    }

    a = boundAlpha(a);

    return {
        ok: ok,
        format: color.format || format,
        r: mathMin(255, mathMax(rgb.r, 0)),
        g: mathMin(255, mathMax(rgb.g, 0)),
        b: mathMin(255, mathMax(rgb.b, 0)),
        a: a
    };
}


// Conversion Functions
// --------------------

// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:
// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>

// `rgbToRgb`
// Handle bounds / percentage checking to conform to CSS color spec
// <http://www.w3.org/TR/css3-color/>
// *Assumes:* r, g, b in [0, 255] or [0, 1]
// *Returns:* { r, g, b } in [0, 255]
function rgbToRgb(r, g, b){
    return {
        r: bound01(r, 255) * 255,
        g: bound01(g, 255) * 255,
        b: bound01(b, 255) * 255
    };
}

// `rgbToHsl`
// Converts an RGB color value to HSL.
// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]
// *Returns:* { h, s, l } in [0,1]
function rgbToHsl(r, g, b) {

    r = bound01(r, 255);
    g = bound01(g, 255);
    b = bound01(b, 255);

    var max = mathMax(r, g, b), min = mathMin(r, g, b);
    var h, s, l = (max + min) / 2;

    if(max == min) {
        h = s = 0; // achromatic
    }
    else {
        var d = max - min;
        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);
        switch(max) {
            case r: h = (g - b) / d + (g < b ? 6 : 0); break;
            case g: h = (b - r) / d + 2; break;
            case b: h = (r - g) / d + 4; break;
        }

        h /= 6;
    }

    return { h: h, s: s, l: l };
}

// `hslToRgb`
// Converts an HSL color value to RGB.
// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]
// *Returns:* { r, g, b } in the set [0, 255]
function hslToRgb(h, s, l) {
    var r, g, b;

    h = bound01(h, 360);
    s = bound01(s, 100);
    l = bound01(l, 100);

    function hue2rgb(p, q, t) {
        if(t < 0) t += 1;
        if(t > 1) t -= 1;
        if(t < 1/6) return p + (q - p) * 6 * t;
        if(t < 1/2) return q;
        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;
        return p;
    }

    if(s === 0) {
        r = g = b = l; // achromatic
    }
    else {
        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
        var p = 2 * l - q;
        r = hue2rgb(p, q, h + 1/3);
        g = hue2rgb(p, q, h);
        b = hue2rgb(p, q, h - 1/3);
    }

    return { r: r * 255, g: g * 255, b: b * 255 };
}

// `rgbToHsv`
// Converts an RGB color value to HSV
// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]
// *Returns:* { h, s, v } in [0,1]
function rgbToHsv(r, g, b) {

    r = bound01(r, 255);
    g = bound01(g, 255);
    b = bound01(b, 255);

    var max = mathMax(r, g, b), min = mathMin(r, g, b);
    var h, s, v = max;

    var d = max - min;
    s = max === 0 ? 0 : d / max;

    if(max == min) {
        h = 0; // achromatic
    }
    else {
        switch(max) {
            case r: h = (g - b) / d + (g < b ? 6 : 0); break;
            case g: h = (b - r) / d + 2; break;
            case b: h = (r - g) / d + 4; break;
        }
        h /= 6;
    }
    return { h: h, s: s, v: v };
}

// `hsvToRgb`
// Converts an HSV color value to RGB.
// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]
// *Returns:* { r, g, b } in the set [0, 255]
 function hsvToRgb(h, s, v) {

    h = bound01(h, 360) * 6;
    s = bound01(s, 100);
    v = bound01(v, 100);

    var i = Math.floor(h),
        f = h - i,
        p = v * (1 - s),
        q = v * (1 - f * s),
        t = v * (1 - (1 - f) * s),
        mod = i % 6,
        r = [v, q, p, p, t, v][mod],
        g = [t, v, v, q, p, p][mod],
        b = [p, p, t, v, v, q][mod];

    return { r: r * 255, g: g * 255, b: b * 255 };
}

// `rgbToHex`
// Converts an RGB color to hex
// Assumes r, g, and b are contained in the set [0, 255]
// Returns a 3 or 6 character hex
function rgbToHex(r, g, b, allow3Char) {

    var hex = [
        pad2(mathRound(r).toString(16)),
        pad2(mathRound(g).toString(16)),
        pad2(mathRound(b).toString(16))
    ];

    // Return a 3 character hex if possible
    if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {
        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);
    }

    return hex.join("");
}

// `rgbaToHex`
// Converts an RGBA color plus alpha transparency to hex
// Assumes r, g, b are contained in the set [0, 255] and
// a in [0, 1]. Returns a 4 or 8 character rgba hex
function rgbaToHex(r, g, b, a, allow4Char) {

    var hex = [
        pad2(mathRound(r).toString(16)),
        pad2(mathRound(g).toString(16)),
        pad2(mathRound(b).toString(16)),
        pad2(convertDecimalToHex(a))
    ];

    // Return a 4 character hex if possible
    if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {
        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);
    }

    return hex.join("");
}

// `rgbaToArgbHex`
// Converts an RGBA color to an ARGB Hex8 string
// Rarely used, but required for "toFilter()"
function rgbaToArgbHex(r, g, b, a) {

    var hex = [
        pad2(convertDecimalToHex(a)),
        pad2(mathRound(r).toString(16)),
        pad2(mathRound(g).toString(16)),
        pad2(mathRound(b).toString(16))
    ];

    return hex.join("");
}

// `equals`
// Can be called with any tinycolor input
tinycolor.equals = function (color1, color2) {
    if (!color1 || !color2) { return false; }
    return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();
};

tinycolor.random = function() {
    return tinycolor.fromRatio({
        r: mathRandom(),
        g: mathRandom(),
        b: mathRandom()
    });
};


// Modification Functions
// ----------------------
// Thanks to less.js for some of the basics here
// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>

function desaturate(color, amount) {
    amount = (amount === 0) ? 0 : (amount || 10);
    var hsl = tinycolor(color).toHsl();
    hsl.s -= amount / 100;
    hsl.s = clamp01(hsl.s);
    return tinycolor(hsl);
}

function saturate(color, amount) {
    amount = (amount === 0) ? 0 : (amount || 10);
    var hsl = tinycolor(color).toHsl();
    hsl.s += amount / 100;
    hsl.s = clamp01(hsl.s);
    return tinycolor(hsl);
}

function greyscale(color) {
    return tinycolor(color).desaturate(100);
}

function lighten (color, amount) {
    amount = (amount === 0) ? 0 : (amount || 10);
    var hsl = tinycolor(color).toHsl();
    hsl.l += amount / 100;
    hsl.l = clamp01(hsl.l);
    return tinycolor(hsl);
}

function brighten(color, amount) {
    amount = (amount === 0) ? 0 : (amount || 10);
    var rgb = tinycolor(color).toRgb();
    rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * - (amount / 100))));
    rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * - (amount / 100))));
    rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * - (amount / 100))));
    return tinycolor(rgb);
}

function darken (color, amount) {
    amount = (amount === 0) ? 0 : (amount || 10);
    var hsl = tinycolor(color).toHsl();
    hsl.l -= amount / 100;
    hsl.l = clamp01(hsl.l);
    return tinycolor(hsl);
}

// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.
// Values outside of this range will be wrapped into this range.
function spin(color, amount) {
    var hsl = tinycolor(color).toHsl();
    var hue = (hsl.h + amount) % 360;
    hsl.h = hue < 0 ? 360 + hue : hue;
    return tinycolor(hsl);
}

// Combination Functions
// ---------------------
// Thanks to jQuery xColor for some of the ideas behind these
// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>

function complement(color) {
    var hsl = tinycolor(color).toHsl();
    hsl.h = (hsl.h + 180) % 360;
    return tinycolor(hsl);
}

function triad(color) {
    var hsl = tinycolor(color).toHsl();
    var h = hsl.h;
    return [
        tinycolor(color),
        tinycolor({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),
        tinycolor({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })
    ];
}

function tetrad(color) {
    var hsl = tinycolor(color).toHsl();
    var h = hsl.h;
    return [
        tinycolor(color),
        tinycolor({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),
        tinycolor({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),
        tinycolor({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })
    ];
}

function splitcomplement(color) {
    var hsl = tinycolor(color).toHsl();
    var h = hsl.h;
    return [
        tinycolor(color),
        tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l}),
        tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l})
    ];
}

function analogous(color, results, slices) {
    results = results || 6;
    slices = slices || 30;

    var hsl = tinycolor(color).toHsl();
    var part = 360 / slices;
    var ret = [tinycolor(color)];

    for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results; ) {
        hsl.h = (hsl.h + part) % 360;
        ret.push(tinycolor(hsl));
    }
    return ret;
}

function monochromatic(color, results) {
    results = results || 6;
    var hsv = tinycolor(color).toHsv();
    var h = hsv.h, s = hsv.s, v = hsv.v;
    var ret = [];
    var modification = 1 / results;

    while (results--) {
        ret.push(tinycolor({ h: h, s: s, v: v}));
        v = (v + modification) % 1;
    }

    return ret;
}

// Utility Functions
// ---------------------

tinycolor.mix = function(color1, color2, amount) {
    amount = (amount === 0) ? 0 : (amount || 50);

    var rgb1 = tinycolor(color1).toRgb();
    var rgb2 = tinycolor(color2).toRgb();

    var p = amount / 100;

    var rgba = {
        r: ((rgb2.r - rgb1.r) * p) + rgb1.r,
        g: ((rgb2.g - rgb1.g) * p) + rgb1.g,
        b: ((rgb2.b - rgb1.b) * p) + rgb1.b,
        a: ((rgb2.a - rgb1.a) * p) + rgb1.a
    };

    return tinycolor(rgba);
};


// Readability Functions
// ---------------------
// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)

// `contrast`
// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)
tinycolor.readability = function(color1, color2) {
    var c1 = tinycolor(color1);
    var c2 = tinycolor(color2);
    return (Math.max(c1.getLuminance(),c2.getLuminance())+0.05) / (Math.min(c1.getLuminance(),c2.getLuminance())+0.05);
};

// `isReadable`
// Ensure that foreground and background color combinations meet WCAG2 guidelines.
// The third argument is an optional Object.
//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';
//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.
// If the entire object is absent, isReadable defaults to {level:"AA",size:"small"}.

// *Example*
//    tinycolor.isReadable("#000", "#111") => false
//    tinycolor.isReadable("#000", "#111",{level:"AA",size:"large"}) => false
tinycolor.isReadable = function(color1, color2, wcag2) {
    var readability = tinycolor.readability(color1, color2);
    var wcag2Parms, out;

    out = false;

    wcag2Parms = validateWCAG2Parms(wcag2);
    switch (wcag2Parms.level + wcag2Parms.size) {
        case "AAsmall":
        case "AAAlarge":
            out = readability >= 4.5;
            break;
        case "AAlarge":
            out = readability >= 3;
            break;
        case "AAAsmall":
            out = readability >= 7;
            break;
    }
    return out;

};

// `mostReadable`
// Given a base color and a list of possible foreground or background
// colors for that base, returns the most readable color.
// Optionally returns Black or White if the most readable color is unreadable.
// *Example*
//    tinycolor.mostReadable(tinycolor.mostReadable("#123", ["#124", "#125"],{includeFallbackColors:false}).toHexString(); // "#112255"
//    tinycolor.mostReadable(tinycolor.mostReadable("#123", ["#124", "#125"],{includeFallbackColors:true}).toHexString();  // "#ffffff"
//    tinycolor.mostReadable("#a8015a", ["#faf3f3"],{includeFallbackColors:true,level:"AAA",size:"large"}).toHexString(); // "#faf3f3"
//    tinycolor.mostReadable("#a8015a", ["#faf3f3"],{includeFallbackColors:true,level:"AAA",size:"small"}).toHexString(); // "#ffffff"
tinycolor.mostReadable = function(baseColor, colorList, args) {
    var bestColor = null;
    var bestScore = 0;
    var readability;
    var includeFallbackColors, level, size ;
    args = args || {};
    includeFallbackColors = args.includeFallbackColors ;
    level = args.level;
    size = args.size;

    for (var i= 0; i < colorList.length ; i++) {
        readability = tinycolor.readability(baseColor, colorList[i]);
        if (readability > bestScore) {
            bestScore = readability;
            bestColor = tinycolor(colorList[i]);
        }
    }

    if (tinycolor.isReadable(baseColor, bestColor, {"level":level,"size":size}) || !includeFallbackColors) {
        return bestColor;
    }
    else {
        args.includeFallbackColors=false;
        return tinycolor.mostReadable(baseColor,["#fff", "#000"],args);
    }
};


// Big List of Colors
// ------------------
// <http://www.w3.org/TR/css3-color/#svg-color>
var names = tinycolor.names = {
    aliceblue: "f0f8ff",
    antiquewhite: "faebd7",
    aqua: "0ff",
    aquamarine: "7fffd4",
    azure: "f0ffff",
    beige: "f5f5dc",
    bisque: "ffe4c4",
    black: "000",
    blanchedalmond: "ffebcd",
    blue: "00f",
    blueviolet: "8a2be2",
    brown: "a52a2a",
    burlywood: "deb887",
    burntsienna: "ea7e5d",
    cadetblue: "5f9ea0",
    chartreuse: "7fff00",
    chocolate: "d2691e",
    coral: "ff7f50",
    cornflowerblue: "6495ed",
    cornsilk: "fff8dc",
    crimson: "dc143c",
    cyan: "0ff",
    darkblue: "00008b",
    darkcyan: "008b8b",
    darkgoldenrod: "b8860b",
    darkgray: "a9a9a9",
    darkgreen: "006400",
    darkgrey: "a9a9a9",
    darkkhaki: "bdb76b",
    darkmagenta: "8b008b",
    darkolivegreen: "556b2f",
    darkorange: "ff8c00",
    darkorchid: "9932cc",
    darkred: "8b0000",
    darksalmon: "e9967a",
    darkseagreen: "8fbc8f",
    darkslateblue: "483d8b",
    darkslategray: "2f4f4f",
    darkslategrey: "2f4f4f",
    darkturquoise: "00ced1",
    darkviolet: "9400d3",
    deeppink: "ff1493",
    deepskyblue: "00bfff",
    dimgray: "696969",
    dimgrey: "696969",
    dodgerblue: "1e90ff",
    firebrick: "b22222",
    floralwhite: "fffaf0",
    forestgreen: "228b22",
    fuchsia: "f0f",
    gainsboro: "dcdcdc",
    ghostwhite: "f8f8ff",
    gold: "ffd700",
    goldenrod: "daa520",
    gray: "808080",
    green: "008000",
    greenyellow: "adff2f",
    grey: "808080",
    honeydew: "f0fff0",
    hotpink: "ff69b4",
    indianred: "cd5c5c",
    indigo: "4b0082",
    ivory: "fffff0",
    khaki: "f0e68c",
    lavender: "e6e6fa",
    lavenderblush: "fff0f5",
    lawngreen: "7cfc00",
    lemonchiffon: "fffacd",
    lightblue: "add8e6",
    lightcoral: "f08080",
    lightcyan: "e0ffff",
    lightgoldenrodyellow: "fafad2",
    lightgray: "d3d3d3",
    lightgreen: "90ee90",
    lightgrey: "d3d3d3",
    lightpink: "ffb6c1",
    lightsalmon: "ffa07a",
    lightseagreen: "20b2aa",
    lightskyblue: "87cefa",
    lightslategray: "789",
    lightslategrey: "789",
    lightsteelblue: "b0c4de",
    lightyellow: "ffffe0",
    lime: "0f0",
    limegreen: "32cd32",
    linen: "faf0e6",
    magenta: "f0f",
    maroon: "800000",
    mediumaquamarine: "66cdaa",
    mediumblue: "0000cd",
    mediumorchid: "ba55d3",
    mediumpurple: "9370db",
    mediumseagreen: "3cb371",
    mediumslateblue: "7b68ee",
    mediumspringgreen: "00fa9a",
    mediumturquoise: "48d1cc",
    mediumvioletred: "c71585",
    midnightblue: "191970",
    mintcream: "f5fffa",
    mistyrose: "ffe4e1",
    moccasin: "ffe4b5",
    navajowhite: "ffdead",
    navy: "000080",
    oldlace: "fdf5e6",
    olive: "808000",
    olivedrab: "6b8e23",
    orange: "ffa500",
    orangered: "ff4500",
    orchid: "da70d6",
    palegoldenrod: "eee8aa",
    palegreen: "98fb98",
    paleturquoise: "afeeee",
    palevioletred: "db7093",
    papayawhip: "ffefd5",
    peachpuff: "ffdab9",
    peru: "cd853f",
    pink: "ffc0cb",
    plum: "dda0dd",
    powderblue: "b0e0e6",
    purple: "800080",
    rebeccapurple: "663399",
    red: "f00",
    rosybrown: "bc8f8f",
    royalblue: "4169e1",
    saddlebrown: "8b4513",
    salmon: "fa8072",
    sandybrown: "f4a460",
    seagreen: "2e8b57",
    seashell: "fff5ee",
    sienna: "a0522d",
    silver: "c0c0c0",
    skyblue: "87ceeb",
    slateblue: "6a5acd",
    slategray: "708090",
    slategrey: "708090",
    snow: "fffafa",
    springgreen: "00ff7f",
    steelblue: "4682b4",
    tan: "d2b48c",
    teal: "008080",
    thistle: "d8bfd8",
    tomato: "ff6347",
    turquoise: "40e0d0",
    violet: "ee82ee",
    wheat: "f5deb3",
    white: "fff",
    whitesmoke: "f5f5f5",
    yellow: "ff0",
    yellowgreen: "9acd32"
};

// Make it easy to access colors via `hexNames[hex]`
var hexNames = tinycolor.hexNames = flip(names);


// Utilities
// ---------

// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`
function flip(o) {
    var flipped = { };
    for (var i in o) {
        if (o.hasOwnProperty(i)) {
            flipped[o[i]] = i;
        }
    }
    return flipped;
}

// Return a valid alpha value [0,1] with all invalid values being set to 1
function boundAlpha(a) {
    a = parseFloat(a);

    if (isNaN(a) || a < 0 || a > 1) {
        a = 1;
    }

    return a;
}

// Take input from [0, n] and return it as [0, 1]
function bound01(n, max) {
    if (isOnePointZero(n)) { n = "100%"; }

    var processPercent = isPercentage(n);
    n = mathMin(max, mathMax(0, parseFloat(n)));

    // Automatically convert percentage into number
    if (processPercent) {
        n = parseInt(n * max, 10) / 100;
    }

    // Handle floating point rounding errors
    if ((Math.abs(n - max) < 0.000001)) {
        return 1;
    }

    // Convert into [0, 1] range if it isn't already
    return (n % max) / parseFloat(max);
}

// Force a number between 0 and 1
function clamp01(val) {
    return mathMin(1, mathMax(0, val));
}

// Parse a base-16 hex value into a base-10 integer
function parseIntFromHex(val) {
    return parseInt(val, 16);
}

// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1
// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>
function isOnePointZero(n) {
    return typeof n == "string" && n.indexOf('.') != -1 && parseFloat(n) === 1;
}

// Check to see if string passed in is a percentage
function isPercentage(n) {
    return typeof n === "string" && n.indexOf('%') != -1;
}

// Force a hex value to have 2 characters
function pad2(c) {
    return c.length == 1 ? '0' + c : '' + c;
}

// Replace a decimal with it's percentage value
function convertToPercentage(n) {
    if (n <= 1) {
        n = (n * 100) + "%";
    }

    return n;
}

// Converts a decimal to a hex value
function convertDecimalToHex(d) {
    return Math.round(parseFloat(d) * 255).toString(16);
}
// Converts a hex value to a decimal
function convertHexToDecimal(h) {
    return (parseIntFromHex(h) / 255);
}

var matchers = (function() {

    // <http://www.w3.org/TR/css3-values/#integers>
    var CSS_INTEGER = "[-\\+]?\\d+%?";

    // <http://www.w3.org/TR/css3-values/#number-value>
    var CSS_NUMBER = "[-\\+]?\\d*\\.\\d+%?";

    // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.
    var CSS_UNIT = "(?:" + CSS_NUMBER + ")|(?:" + CSS_INTEGER + ")";

    // Actual matching.
    // Parentheses and commas are optional, but not required.
    // Whitespace can take the place of commas or opening paren
    var PERMISSIVE_MATCH3 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?";
    var PERMISSIVE_MATCH4 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?";

    return {
        CSS_UNIT: new RegExp(CSS_UNIT),
        rgb: new RegExp("rgb" + PERMISSIVE_MATCH3),
        rgba: new RegExp("rgba" + PERMISSIVE_MATCH4),
        hsl: new RegExp("hsl" + PERMISSIVE_MATCH3),
        hsla: new RegExp("hsla" + PERMISSIVE_MATCH4),
        hsv: new RegExp("hsv" + PERMISSIVE_MATCH3),
        hsva: new RegExp("hsva" + PERMISSIVE_MATCH4),
        hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
        hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
        hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
        hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/
    };
})();

// `isValidCSSUnit`
// Take in a single string / number and check to see if it looks like a CSS unit
// (see `matchers` above for definition).
function isValidCSSUnit(color) {
    return !!matchers.CSS_UNIT.exec(color);
}

// `stringInputToObject`
// Permissive string parsing.  Take in a number of formats, and output an object
// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`
function stringInputToObject(color) {

    color = color.replace(trimLeft,'').replace(trimRight, '').toLowerCase();
    var named = false;
    if (names[color]) {
        color = names[color];
        named = true;
    }
    else if (color == 'transparent') {
        return { r: 0, g: 0, b: 0, a: 0, format: "name" };
    }

    // Try to match string input using regular expressions.
    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]
    // Just return an object and let the conversion functions handle that.
    // This way the result will be the same whether the tinycolor is initialized with string or object.
    var match;
    if ((match = matchers.rgb.exec(color))) {
        return { r: match[1], g: match[2], b: match[3] };
    }
    if ((match = matchers.rgba.exec(color))) {
        return { r: match[1], g: match[2], b: match[3], a: match[4] };
    }
    if ((match = matchers.hsl.exec(color))) {
        return { h: match[1], s: match[2], l: match[3] };
    }
    if ((match = matchers.hsla.exec(color))) {
        return { h: match[1], s: match[2], l: match[3], a: match[4] };
    }
    if ((match = matchers.hsv.exec(color))) {
        return { h: match[1], s: match[2], v: match[3] };
    }
    if ((match = matchers.hsva.exec(color))) {
        return { h: match[1], s: match[2], v: match[3], a: match[4] };
    }
    if ((match = matchers.hex8.exec(color))) {
        return {
            r: parseIntFromHex(match[1]),
            g: parseIntFromHex(match[2]),
            b: parseIntFromHex(match[3]),
            a: convertHexToDecimal(match[4]),
            format: named ? "name" : "hex8"
        };
    }
    if ((match = matchers.hex6.exec(color))) {
        return {
            r: parseIntFromHex(match[1]),
            g: parseIntFromHex(match[2]),
            b: parseIntFromHex(match[3]),
            format: named ? "name" : "hex"
        };
    }
    if ((match = matchers.hex4.exec(color))) {
        return {
            r: parseIntFromHex(match[1] + '' + match[1]),
            g: parseIntFromHex(match[2] + '' + match[2]),
            b: parseIntFromHex(match[3] + '' + match[3]),
            a: convertHexToDecimal(match[4] + '' + match[4]),
            format: named ? "name" : "hex8"
        };
    }
    if ((match = matchers.hex3.exec(color))) {
        return {
            r: parseIntFromHex(match[1] + '' + match[1]),
            g: parseIntFromHex(match[2] + '' + match[2]),
            b: parseIntFromHex(match[3] + '' + match[3]),
            format: named ? "name" : "hex"
        };
    }

    return false;
}

function validateWCAG2Parms(parms) {
    // return valid WCAG2 parms for isReadable.
    // If input parms are invalid, return {"level":"AA", "size":"small"}
    var level, size;
    parms = parms || {"level":"AA", "size":"small"};
    level = (parms.level || "AA").toUpperCase();
    size = (parms.size || "small").toLowerCase();
    if (level !== "AA" && level !== "AAA") {
        level = "AA";
    }
    if (size !== "small" && size !== "large") {
        size = "small";
    }
    return {"level":level, "size":size};
}

// Node: Export function
if ( true && module.exports) {
    module.exports = tinycolor;
}
// AMD/requirejs: Define the module
else if (true) {
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {return tinycolor;}).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
}
// Browser: Expose to window
else {}

})(Math);


/***/ }),
/* 388 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var logger = __webpack_require__(0).get("iview:components:color-picker:handleEscapeMixin");

var _default = {
  methods: {
    handleEscape: function handleEscape(e) {
      this.dispatch('ColorPicker', 'on-escape-keydown', e);
    }
  }
};
exports.default = _default;

/***/ }),
/* 389 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _content_vue_vue_type_template_id_2d34f778___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(310);
/* harmony import */ var _content_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(121);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _content_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _content_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _content_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _content_vue_vue_type_template_id_2d34f778___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _content_vue_vue_type_template_id_2d34f778___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 390 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _picker_vue_vue_type_template_id_69903ecf_xmlns_3Av_click_outside_http_3A_2F_2Fwww_w3_org_2F1999_2Fxhtml___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(341);
/* harmony import */ var _picker_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(123);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _picker_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _picker_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _picker_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _picker_vue_vue_type_template_id_69903ecf_xmlns_3Av_click_outside_http_3A_2F_2Fwww_w3_org_2F1999_2Fxhtml___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _picker_vue_vue_type_template_id_69903ecf_xmlns_3Av_click_outside_http_3A_2F_2Fwww_w3_org_2F1999_2Fxhtml___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 391 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _date_table_vue_vue_type_template_id_3860c36a___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(372);
/* harmony import */ var _date_table_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(127);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _date_table_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _date_table_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _date_table_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _date_table_vue_vue_type_template_id_3860c36a___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _date_table_vue_vue_type_template_id_3860c36a___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 392 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _year_table_vue_vue_type_template_id_292b2908___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(371);
/* harmony import */ var _year_table_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(129);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _year_table_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _year_table_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _year_table_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _year_table_vue_vue_type_template_id_292b2908___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _year_table_vue_vue_type_template_id_292b2908___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 393 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _month_table_vue_vue_type_template_id_adf775e2___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(370);
/* harmony import */ var _month_table_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(131);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _month_table_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _month_table_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _month_table_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _month_table_vue_vue_type_template_id_adf775e2___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _month_table_vue_vue_type_template_id_adf775e2___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 394 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _time_vue_vue_type_template_id_a7567520___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(343);
/* harmony import */ var _time_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(133);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _time_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _time_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _time_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _time_vue_vue_type_template_id_a7567520___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _time_vue_vue_type_template_id_a7567520___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 395 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _time_spinner_vue_vue_type_template_id_43ef8164___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(369);
/* harmony import */ var _time_spinner_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(135);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _time_spinner_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _time_spinner_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _time_spinner_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _time_spinner_vue_vue_type_template_id_43ef8164___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _time_spinner_vue_vue_type_template_id_43ef8164___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 396 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _date_panel_label_vue_vue_type_template_id_612ede7c___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(366);
/* harmony import */ var _date_panel_label_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(139);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _date_panel_label_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _date_panel_label_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _date_panel_label_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _date_panel_label_vue_vue_type_template_id_612ede7c___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _date_panel_label_vue_vue_type_template_id_612ede7c___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 397 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _assist = __webpack_require__(6);

var _util = __webpack_require__(17);

var _this = void 0;

var logger = __webpack_require__(0).get("iview:components:date-picker:panel:Date:date-panel-mixin");

var _default2 = {
  computed: {
    isTime: function isTime() {
      return this.currentView === 'time';
    }
  },
  methods: {
    handleToggleTime: function handleToggleTime() {
      this.currentView = this.currentView === 'time' ? 'date' : 'time';
    }
  },
  props: {
    disabledDate: {
      default: function _default() {
        (0, _newArrowCheck2.default)(this, _this);
        return false;
      }.bind(void 0),
      type: Function
    },
    focusedDate: {
      required: true,
      type: Date
    },
    format: {
      default: 'yyyy-MM-dd',
      type: String
    },
    pickerType: {
      require: true,
      type: String
    },
    selectionMode: {
      default: 'date',
      type: String,
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['year', 'month', 'date', 'time']);
      }
    },
    shortcuts: {
      default: function _default() {
        (0, _newArrowCheck2.default)(this, _this);
        return [];
      }.bind(void 0),
      type: Array
    },
    showTime: {
      default: false,
      type: Boolean
    },
    showWeekNumbers: {
      default: false,
      type: Boolean
    },
    startDate: {
      type: Date
    },
    timePickerOptions: {
      default: function _default() {
        (0, _newArrowCheck2.default)(this, _this);
        return {};
      }.bind(void 0),
      type: Object
    },
    value: {
      default: function _default() {
        (0, _newArrowCheck2.default)(this, _this);
        return [(0, _util.initTimeDate)(), (0, _util.initTimeDate)()];
      }.bind(void 0),
      type: Array
    }
  }
};
exports.default = _default2;

/***/ }),
/* 398 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _time_range_vue_vue_type_template_id_76dde5da___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(346);
/* harmony import */ var _time_range_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(143);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _time_range_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _time_range_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _time_range_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _time_range_vue_vue_type_template_id_76dde5da___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _time_range_vue_vue_type_template_id_76dde5da___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 399 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _footer_vue_vue_type_template_id_63082e02___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(322);
/* harmony import */ var _footer_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(151);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _footer_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _footer_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _footer_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _footer_vue_vue_type_template_id_63082e02___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _footer_vue_vue_type_template_id_63082e02___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 400 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = !__webpack_require__(32) && !__webpack_require__(42)(function () {
  return Object.defineProperty(__webpack_require__(401)('div'), 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),
/* 401 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(41);
var document = __webpack_require__(23).document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};


/***/ }),
/* 402 */
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__(25);
var toIObject = __webpack_require__(33);
var arrayIndexOf = __webpack_require__(540)(false);
var IE_PROTO = __webpack_require__(270)('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),
/* 403 */
/***/ (function(module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __webpack_require__(404);
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};


/***/ }),
/* 404 */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),
/* 405 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.13 ToObject(argument)
var defined = __webpack_require__(268);
module.exports = function (it) {
  return Object(defined(it));
};


/***/ }),
/* 406 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__(52);
var $export = __webpack_require__(266);
var redefine = __webpack_require__(407);
var hide = __webpack_require__(30);
var Iterators = __webpack_require__(274);
var $iterCreate = __webpack_require__(547);
var setToStringTag = __webpack_require__(275);
var getPrototypeOf = __webpack_require__(550);
var ITERATOR = __webpack_require__(34)('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};


/***/ }),
/* 407 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(30);


/***/ }),
/* 408 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = __webpack_require__(49);
var dPs = __webpack_require__(548);
var enumBugKeys = __webpack_require__(272);
var IE_PROTO = __webpack_require__(270)('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = __webpack_require__(401)('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  __webpack_require__(549).appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};


/***/ }),
/* 409 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys = __webpack_require__(402);
var hiddenKeys = __webpack_require__(272).concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return $keys(O, hiddenKeys);
};


/***/ }),
/* 410 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _header_vue_vue_type_template_id_a7002d98___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(336);
/* harmony import */ var _header_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(157);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _header_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _header_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _header_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _header_vue_vue_type_template_id_a7002d98___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _header_vue_vue_type_template_id_a7002d98___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 411 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _input_number_vue_vue_type_template_id_17ae3fbc___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(337);
/* harmony import */ var _input_number_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(159);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _input_number_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _input_number_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _input_number_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _input_number_vue_vue_type_template_id_17ae3fbc___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _input_number_vue_vue_type_template_id_17ae3fbc___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 412 */
/***/ (function(module, exports) {

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

module.exports = isObject;


/***/ }),
/* 413 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _sider_vue_vue_type_template_id_cd2954c2___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(339);
/* harmony import */ var _sider_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(167);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _sider_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _sider_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _sider_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _sider_vue_vue_type_template_id_cd2954c2___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _sider_vue_vue_type_template_id_cd2954c2___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 414 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _vue = _interopRequireDefault(__webpack_require__(5));

var _notification = _interopRequireDefault(__webpack_require__(590));

var _this = void 0;

var logger = __webpack_require__(0).get("iview:components:base:notification:index");

_notification.default.newInstance = function (properties) {
  (0, _newArrowCheck2.default)(this, _this);
  var props = properties || {};
  var Instance = new _vue.default({
    render: function render(h) {
      return h(_notification.default, {
        props: props
      });
    }
  });
  var component = Instance.$mount();
  document.body.appendChild(component.$el);
  var notification = Instance.$children[0];
  return {
    component: notification,
    destroy: function destroy(element) {
      var _this2 = this;

      notification.closeAll();
      setTimeout(function () {
        (0, _newArrowCheck2.default)(this, _this2);
        document.body.removeChild(document.getElementsByClassName(element)[0]);
      }.bind(this), 500);
    },
    notice: function notice(noticeProps) {
      notification.add(noticeProps);
    },
    remove: function remove(name) {
      notification.close(name);
    }
  };
}.bind(void 0);

var _default = _notification.default;
exports.default = _default;

/***/ }),
/* 415 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _this = void 0;

var logger = __webpack_require__(0).get("iview:components:base:render");

var _default = {
  functional: true,
  name: 'RenderCell',
  props: {
    render: Function
  },
  render: function render(h, ctx) {
    (0, _newArrowCheck2.default)(this, _this);
    return ctx.props.render(h);
  }.bind(void 0)
};
exports.default = _default;

/***/ }),
/* 416 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _assist = __webpack_require__(6);

var logger = __webpack_require__(0).get("iview:components:modal:mixins-scrollbar");

var _default = {
  methods: {
    addScrollEffect: function addScrollEffect() {
      this.checkScrollBar();
      this.setScrollBar();
      document.body.style.overflow = 'hidden';
    },
    checkMaskInVisible: function checkMaskInVisible() {
      var _this = this;

      var masks = document.getElementsByClassName('ivu-modal-mask') || [];
      return Array.from(masks).every(function (m) {
        (0, _newArrowCheck2.default)(this, _this);
        return m.style.display === 'none' || m.classList.contains('fade-leave-to');
      }.bind(this));
    },
    checkScrollBar: function checkScrollBar() {
      var fullWindowWidth = window.innerWidth;

      if (!fullWindowWidth) {
        // workaround for missing window.innerWidth in IE8
        var documentElementRect = document.documentElement.getBoundingClientRect();
        fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left);
      }

      this.bodyIsOverflowing = document.body.clientWidth < fullWindowWidth;

      if (this.bodyIsOverflowing) {
        this.scrollBarWidth = (0, _assist.getScrollBarSize)();
      }
    },
    removeScrollEffect: function removeScrollEffect() {
      if (this.checkMaskInVisible()) {
        document.body.style.overflow = '';
        this.resetScrollBar();
      }
    },
    resetScrollBar: function resetScrollBar() {
      document.body.style.paddingRight = '';
    },
    setScrollBar: function setScrollBar() {
      if (this.bodyIsOverflowing && this.scrollBarWidth !== undefined) {
        document.body.style.paddingRight = "".concat(this.scrollBarWidth, "px");
      }
    }
  }
};
exports.default = _default;

/***/ }),
/* 417 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _poptip_vue_vue_type_template_id_02a62074___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(330);
/* harmony import */ var _poptip_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(189);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _poptip_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _poptip_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _poptip_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _poptip_vue_vue_type_template_id_02a62074___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _poptip_vue_vue_type_template_id_02a62074___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 418 */
/***/ (function(module, exports) {

/**
 * Gets the first element of `array`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @alias first
 * @category Array
 * @param {Array} array The array to query.
 * @returns {*} Returns the first element of `array`.
 * @example
 *
 * _.head([1, 2, 3]);
 * // => 1
 *
 * _.head([]);
 * // => undefined
 */
function head(array) {
  return (array && array.length) ? array[0] : undefined;
}

module.exports = head;


/***/ }),
/* 419 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _vue = _interopRequireDefault(__webpack_require__(5));

var _noop = _interopRequireDefault(__webpack_require__(13));

var _has = _interopRequireDefault(__webpack_require__(259));

var logger = __webpack_require__(0).get("iview:components:base:popper");

var isServer = _vue.default.prototype.$isServer;
var Popper = isServer ? _noop.default : __webpack_require__(382);
var _default2 = {
  beforeDestroy: function beforeDestroy() {
    if (isServer) {
      return;
    }

    if (this.popperJS) {
      this.popperJS.destroy();
    }
  },
  data: function data() {
    return {
      visible: this.value
    };
  },
  methods: {
    createPopper: function createPopper() {
      var _this = this;

      if (isServer) {
        return;
      }

      if (!/^(top|bottom|left|right)(-start|-end)?$/g.test(this.placement)) {
        return;
      }

      var options = this.options;
      var popper = this.popper || this.$refs.popper;
      var reference = this.reference || this.$refs.reference;

      if (!popper || !reference) {
        return;
      }

      if (this.popperJS && (0, _has.default)(this.popperJS, 'destroy')) {
        this.popperJS.destroy();
      }

      options.placement = this.placement;

      if (!options.modifiers.offset) {
        options.modifiers.offset = {};
      }

      options.modifiers.offset.offset = this.offset;

      options.onCreate = function () {
        (0, _newArrowCheck2.default)(this, _this);
        this.$nextTick(this.updatePopper);
        this.$emit('created', this);
      }.bind(this);

      this.popperJS = new Popper(reference, popper, options);
    },
    doDestroy: function doDestroy() {
      if (isServer) {
        return;
      }

      if (this.visible) {
        return;
      }

      this.popperJS.destroy();
      this.popperJS = null;
    },
    updatePopper: function updatePopper() {
      if (isServer) {
        return;
      }

      if (this.popperJS) {
        this.popperJS.update();
      } else {
        this.createPopper();
      }
    }
  },
  props: {
    boundariesPadding: {
      default: 5,
      type: Number
    },
    offset: {
      default: 0
    },
    // visible: {
    //     type: Boolean,
    //     default: false
    // }
    options: {
      default: function _default() {
        return {
          modifiers: {
            computeStyle: {
              gpuAcceleration: false
            },
            preventOverflow: {
              boundariesElement: 'window'
            }
          }
        };
      },
      type: Object
    },
    placement: {
      default: 'bottom',
      type: String
    },
    popper: Object,
    reference: Object,
    transition: String,
    value: {
      default: false,
      type: Boolean
    }
  },
  updated: function updated() {
    var _this2 = this;

    this.$nextTick(function () {
      (0, _newArrowCheck2.default)(this, _this2);
      return this.updatePopper();
    }.bind(this));
  },
  watch: {
    value: {
      handler: function handler(val) {
        this.visible = val;
        this.$emit('input', val);
      },
      immediate: true
    },
    visible: function visible(val) {
      if (val) {
        this.updatePopper();
        this.$emit('on-popper-show');
      } else {
        this.$emit('on-popper-hide');
      }

      this.$emit('input', val);
    }
  }
};
exports.default = _default2;

/***/ }),
/* 420 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _progress_vue_vue_type_template_id_558db4a3___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(329);
/* harmony import */ var _progress_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(191);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _progress_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _progress_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _progress_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _progress_vue_vue_type_template_id_558db4a3___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _progress_vue_vue_type_template_id_558db4a3___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 421 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _tooltip_vue_vue_type_template_id_8e7fc2c2___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(317);
/* harmony import */ var _tooltip_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(203);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _tooltip_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _tooltip_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _tooltip_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _tooltip_vue_vue_type_template_id_8e7fc2c2___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _tooltip_vue_vue_type_template_id_8e7fc2c2___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 422 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _spin_vue_vue_type_template_id_0d6ed834___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(344);
/* harmony import */ var _spin_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(205);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _spin_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _spin_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _spin_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _spin_vue_vue_type_template_id_0d6ed834___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _spin_vue_vue_type_template_id_0d6ed834___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 423 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var forEach                 = __webpack_require__(424).forEach;
var elementUtilsMaker       = __webpack_require__(626);
var listenerHandlerMaker    = __webpack_require__(627);
var idGeneratorMaker        = __webpack_require__(628);
var idHandlerMaker          = __webpack_require__(629);
var reporterMaker           = __webpack_require__(630);
var browserDetector         = __webpack_require__(425);
var batchProcessorMaker     = __webpack_require__(631);
var stateHandler            = __webpack_require__(633);

//Detection strategies.
var objectStrategyMaker     = __webpack_require__(634);
var scrollStrategyMaker     = __webpack_require__(635);

function isCollection(obj) {
    return Array.isArray(obj) || obj.length !== undefined;
}

function toArray(collection) {
    if (!Array.isArray(collection)) {
        var array = [];
        forEach(collection, function (obj) {
            array.push(obj);
        });
        return array;
    } else {
        return collection;
    }
}

function isElement(obj) {
    return obj && obj.nodeType === 1;
}

/**
 * @typedef idHandler
 * @type {object}
 * @property {function} get Gets the resize detector id of the element.
 * @property {function} set Generate and sets the resize detector id of the element.
 */

/**
 * @typedef Options
 * @type {object}
 * @property {boolean} callOnAdd    Determines if listeners should be called when they are getting added.
                                    Default is true. If true, the listener is guaranteed to be called when it has been added.
                                    If false, the listener will not be guarenteed to be called when it has been added (does not prevent it from being called).
 * @property {idHandler} idHandler  A custom id handler that is responsible for generating, setting and retrieving id's for elements.
                                    If not provided, a default id handler will be used.
 * @property {reporter} reporter    A custom reporter that handles reporting logs, warnings and errors.
                                    If not provided, a default id handler will be used.
                                    If set to false, then nothing will be reported.
 * @property {boolean} debug        If set to true, the the system will report debug messages as default for the listenTo method.
 */

/**
 * Creates an element resize detector instance.
 * @public
 * @param {Options?} options Optional global options object that will decide how this instance will work.
 */
module.exports = function(options) {
    options = options || {};

    //idHandler is currently not an option to the listenTo function, so it should not be added to globalOptions.
    var idHandler;

    if (options.idHandler) {
        // To maintain compatability with idHandler.get(element, readonly), make sure to wrap the given idHandler
        // so that readonly flag always is true when it's used here. This may be removed next major version bump.
        idHandler = {
            get: function (element) { return options.idHandler.get(element, true); },
            set: options.idHandler.set
        };
    } else {
        var idGenerator = idGeneratorMaker();
        var defaultIdHandler = idHandlerMaker({
            idGenerator: idGenerator,
            stateHandler: stateHandler
        });
        idHandler = defaultIdHandler;
    }

    //reporter is currently not an option to the listenTo function, so it should not be added to globalOptions.
    var reporter = options.reporter;

    if(!reporter) {
        //If options.reporter is false, then the reporter should be quiet.
        var quiet = reporter === false;
        reporter = reporterMaker(quiet);
    }

    //batchProcessor is currently not an option to the listenTo function, so it should not be added to globalOptions.
    var batchProcessor = getOption(options, "batchProcessor", batchProcessorMaker({ reporter: reporter }));

    //Options to be used as default for the listenTo function.
    var globalOptions = {};
    globalOptions.callOnAdd     = !!getOption(options, "callOnAdd", true);
    globalOptions.debug         = !!getOption(options, "debug", false);

    var eventListenerHandler    = listenerHandlerMaker(idHandler);
    var elementUtils            = elementUtilsMaker({
        stateHandler: stateHandler
    });

    //The detection strategy to be used.
    var detectionStrategy;
    var desiredStrategy = getOption(options, "strategy", "object");
    var importantCssRules = getOption(options, "important", false);
    var strategyOptions = {
        reporter: reporter,
        batchProcessor: batchProcessor,
        stateHandler: stateHandler,
        idHandler: idHandler,
        important: importantCssRules
    };

    if(desiredStrategy === "scroll") {
        if (browserDetector.isLegacyOpera()) {
            reporter.warn("Scroll strategy is not supported on legacy Opera. Changing to object strategy.");
            desiredStrategy = "object";
        } else if (browserDetector.isIE(9)) {
            reporter.warn("Scroll strategy is not supported on IE9. Changing to object strategy.");
            desiredStrategy = "object";
        }
    }

    if(desiredStrategy === "scroll") {
        detectionStrategy = scrollStrategyMaker(strategyOptions);
    } else if(desiredStrategy === "object") {
        detectionStrategy = objectStrategyMaker(strategyOptions);
    } else {
        throw new Error("Invalid strategy name: " + desiredStrategy);
    }

    //Calls can be made to listenTo with elements that are still being installed.
    //Also, same elements can occur in the elements list in the listenTo function.
    //With this map, the ready callbacks can be synchronized between the calls
    //so that the ready callback can always be called when an element is ready - even if
    //it wasn't installed from the function itself.
    var onReadyCallbacks = {};

    /**
     * Makes the given elements resize-detectable and starts listening to resize events on the elements. Calls the event callback for each event for each element.
     * @public
     * @param {Options?} options Optional options object. These options will override the global options. Some options may not be overriden, such as idHandler.
     * @param {element[]|element} elements The given array of elements to detect resize events of. Single element is also valid.
     * @param {function} listener The callback to be executed for each resize event for each element.
     */
    function listenTo(options, elements, listener) {
        function onResizeCallback(element) {
            var listeners = eventListenerHandler.get(element);
            forEach(listeners, function callListenerProxy(listener) {
                listener(element);
            });
        }

        function addListener(callOnAdd, element, listener) {
            eventListenerHandler.add(element, listener);

            if(callOnAdd) {
                listener(element);
            }
        }

        //Options object may be omitted.
        if(!listener) {
            listener = elements;
            elements = options;
            options = {};
        }

        if(!elements) {
            throw new Error("At least one element required.");
        }

        if(!listener) {
            throw new Error("Listener required.");
        }

        if (isElement(elements)) {
            // A single element has been passed in.
            elements = [elements];
        } else if (isCollection(elements)) {
            // Convert collection to array for plugins.
            // TODO: May want to check so that all the elements in the collection are valid elements.
            elements = toArray(elements);
        } else {
            return reporter.error("Invalid arguments. Must be a DOM element or a collection of DOM elements.");
        }

        var elementsReady = 0;

        var callOnAdd = getOption(options, "callOnAdd", globalOptions.callOnAdd);
        var onReadyCallback = getOption(options, "onReady", function noop() {});
        var debug = getOption(options, "debug", globalOptions.debug);

        forEach(elements, function attachListenerToElement(element) {
            if (!stateHandler.getState(element)) {
                stateHandler.initState(element);
                idHandler.set(element);
            }

            var id = idHandler.get(element);

            debug && reporter.log("Attaching listener to element", id, element);

            if(!elementUtils.isDetectable(element)) {
                debug && reporter.log(id, "Not detectable.");
                if(elementUtils.isBusy(element)) {
                    debug && reporter.log(id, "System busy making it detectable");

                    //The element is being prepared to be detectable. Do not make it detectable.
                    //Just add the listener, because the element will soon be detectable.
                    addListener(callOnAdd, element, listener);
                    onReadyCallbacks[id] = onReadyCallbacks[id] || [];
                    onReadyCallbacks[id].push(function onReady() {
                        elementsReady++;

                        if(elementsReady === elements.length) {
                            onReadyCallback();
                        }
                    });
                    return;
                }

                debug && reporter.log(id, "Making detectable...");
                //The element is not prepared to be detectable, so do prepare it and add a listener to it.
                elementUtils.markBusy(element, true);
                return detectionStrategy.makeDetectable({ debug: debug, important: importantCssRules }, element, function onElementDetectable(element) {
                    debug && reporter.log(id, "onElementDetectable");

                    if (stateHandler.getState(element)) {
                        elementUtils.markAsDetectable(element);
                        elementUtils.markBusy(element, false);
                        detectionStrategy.addListener(element, onResizeCallback);
                        addListener(callOnAdd, element, listener);

                        // Since the element size might have changed since the call to "listenTo", we need to check for this change,
                        // so that a resize event may be emitted.
                        // Having the startSize object is optional (since it does not make sense in some cases such as unrendered elements), so check for its existance before.
                        // Also, check the state existance before since the element may have been uninstalled in the installation process.
                        var state = stateHandler.getState(element);
                        if (state && state.startSize) {
                            var width = element.offsetWidth;
                            var height = element.offsetHeight;
                            if (state.startSize.width !== width || state.startSize.height !== height) {
                                onResizeCallback(element);
                            }
                        }

                        if(onReadyCallbacks[id]) {
                            forEach(onReadyCallbacks[id], function(callback) {
                                callback();
                            });
                        }
                    } else {
                        // The element has been unisntalled before being detectable.
                        debug && reporter.log(id, "Element uninstalled before being detectable.");
                    }

                    delete onReadyCallbacks[id];

                    elementsReady++;
                    if(elementsReady === elements.length) {
                        onReadyCallback();
                    }
                });
            }

            debug && reporter.log(id, "Already detecable, adding listener.");

            //The element has been prepared to be detectable and is ready to be listened to.
            addListener(callOnAdd, element, listener);
            elementsReady++;
        });

        if(elementsReady === elements.length) {
            onReadyCallback();
        }
    }

    function uninstall(elements) {
        if(!elements) {
            return reporter.error("At least one element is required.");
        }

        if (isElement(elements)) {
            // A single element has been passed in.
            elements = [elements];
        } else if (isCollection(elements)) {
            // Convert collection to array for plugins.
            // TODO: May want to check so that all the elements in the collection are valid elements.
            elements = toArray(elements);
        } else {
            return reporter.error("Invalid arguments. Must be a DOM element or a collection of DOM elements.");
        }

        forEach(elements, function (element) {
            eventListenerHandler.removeAllListeners(element);
            detectionStrategy.uninstall(element);
            stateHandler.cleanState(element);
        });
    }

    function initDocument(targetDocument) {
        detectionStrategy.initDocument && detectionStrategy.initDocument(targetDocument);
    }

    return {
        listenTo: listenTo,
        removeListener: eventListenerHandler.removeListener,
        removeAllListeners: eventListenerHandler.removeAllListeners,
        uninstall: uninstall,
        initDocument: initDocument
    };
};

function getOption(options, name, defaultValue) {
    var value = options[name];

    if((value === undefined || value === null) && defaultValue !== undefined) {
        return defaultValue;
    }

    return value;
}


/***/ }),
/* 424 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = module.exports = {};

/**
 * Loops through the collection and calls the callback for each element. if the callback returns truthy, the loop is broken and returns the same value.
 * @public
 * @param {*} collection The collection to loop through. Needs to have a length property set and have indices set from 0 to length - 1.
 * @param {function} callback The callback to be called for each element. The element will be given as a parameter to the callback. If this callback returns truthy, the loop is broken and the same value is returned.
 * @returns {*} The value that a callback has returned (if truthy). Otherwise nothing.
 */
utils.forEach = function(collection, callback) {
    for(var i = 0; i < collection.length; i++) {
        var result = callback(collection[i]);
        if(result) {
            return result;
        }
    }
};


/***/ }),
/* 425 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var detector = module.exports = {};

detector.isIE = function(version) {
    function isAnyIeVersion() {
        var agent = navigator.userAgent.toLowerCase();
        return agent.indexOf("msie") !== -1 || agent.indexOf("trident") !== -1 || agent.indexOf(" edge/") !== -1;
    }

    if(!isAnyIeVersion()) {
        return false;
    }

    if(!version) {
        return true;
    }

    //Shamelessly stolen from https://gist.github.com/padolsey/527683
    var ieVersion = (function(){
        var undef,
            v = 3,
            div = document.createElement("div"),
            all = div.getElementsByTagName("i");

        do {
            div.innerHTML = "<!--[if gt IE " + (++v) + "]><i></i><![endif]-->";
        }
        while (all[0]);

        return v > 4 ? v : undef;
    }());

    return version === ieVersion;
};

detector.isLegacyOpera = function() {
    return !!window.opera;
};


/***/ }),
/* 426 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(4));

var _get = _interopRequireDefault(__webpack_require__(26));

var logger = __webpack_require__(0).get("iview:components:table:mixin");

var _default = {
  methods: {
    alignCls: function alignCls(column) {
      var _ref;

      var row = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var cellClassName = '';

      if (row.cellClassName && column.key && row.cellClassName[column.key]) {
        cellClassName = row.cellClassName[column.key];
      }

      return [(_ref = {}, (0, _defineProperty2.default)(_ref, "".concat(cellClassName), cellClassName), (0, _defineProperty2.default)(_ref, "".concat(column.className), column.className), (0, _defineProperty2.default)(_ref, "".concat(this.prefixCls, "-column-").concat(column.align), column.align), (0, _defineProperty2.default)(_ref, "".concat(this.prefixCls, "-hidden"), this.fixed === 'left' && column.fixed !== 'left' || this.fixed === 'right' && column.fixed !== 'right' || !this.fixed && column.fixed && (column.fixed === 'left' || column.fixed === 'right')), _ref)];
    },
    isPopperShow: function isPopperShow(column) {
      return column.filters && (!this.fixed && !column.fixed || this.fixed === 'left' && column.fixed === 'left' || this.fixed === 'right' && column.fixed === 'right');
    },
    setCellWidth: function setCellWidth(column) {
      var width = '';

      if (column.width) {
        width = (0, _get.default)(column, 'width');
        /* eslint-disable-next-line no-underscore-dangle */
      } else if (this.columnsWidth[column._index]) {
        /* eslint-disable-next-line no-underscore-dangle */
        width = (0, _get.default)(this.columnsWidth[column._index], 'width');
      }

      if (width === '0') {
        width = '';
      }

      return width;
    }
  }
};
exports.default = _default;

/***/ }),
/* 427 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _this = void 0;

var logger = __webpack_require__(0).get("iview:components:table:expand");

var _default = {
  functional: true,
  name: 'TableExpand',
  props: {
    column: {
      default: null,
      type: Object
    },
    index: Number,
    render: Function,
    row: Object
  },
  render: function render(h, ctx) {
    (0, _newArrowCheck2.default)(this, _this);
    var params = {
      index: ctx.props.index,
      row: ctx.props.row
    };

    if (ctx.props.column) {
      params.column = ctx.props.column;
    }

    return ctx.props.render(h, params);
  }.bind(void 0)
};
exports.default = _default;

/***/ }),
/* 428 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(429);
module.exports = __webpack_require__(430);


/***/ }),
/* 429 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 430 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

var _interopRequireWildcard = __webpack_require__(35);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _objectSpread2 = _interopRequireDefault(__webpack_require__(11));

__webpack_require__(431);

var _fontawesomeSvgCore = __webpack_require__(436);

var _proSolidSvgIcons = __webpack_require__(378);

var _proRegularSvgIcons = __webpack_require__(379);

var _proLightSvgIcons = __webpack_require__(380);

var _vueFontawesome = __webpack_require__(437);

var _affix = _interopRequireDefault(__webpack_require__(438));

var _alert = _interopRequireDefault(__webpack_require__(440));

var _autoComplete = _interopRequireDefault(__webpack_require__(459));

var _avatar = _interopRequireDefault(__webpack_require__(482));

var _backTop = _interopRequireDefault(__webpack_require__(484));

var _badge = _interopRequireDefault(__webpack_require__(486));

var _breadcrumb = _interopRequireDefault(__webpack_require__(488));

var _button = _interopRequireDefault(__webpack_require__(491));

var _card = _interopRequireDefault(__webpack_require__(493));

var _carousel = _interopRequireDefault(__webpack_require__(495));

var _cascader = _interopRequireDefault(__webpack_require__(498));

var _checkbox = _interopRequireDefault(__webpack_require__(502));

var _circle = _interopRequireDefault(__webpack_require__(503));

var _collapse = _interopRequireDefault(__webpack_require__(505));

var _colorPicker = _interopRequireDefault(__webpack_require__(508));

var _content = _interopRequireDefault(__webpack_require__(514));

var _datePicker = _interopRequireDefault(__webpack_require__(515));

var _dropdown = _interopRequireDefault(__webpack_require__(526));

var _footer = _interopRequireDefault(__webpack_require__(530));

var _form = _interopRequireDefault(__webpack_require__(531));

var _header = _interopRequireDefault(__webpack_require__(566));

var _icon = _interopRequireDefault(__webpack_require__(19));

var _input = _interopRequireDefault(__webpack_require__(567));

var _inputNumber = _interopRequireDefault(__webpack_require__(568));

var _scroll = _interopRequireDefault(__webpack_require__(569));

var _layout = _interopRequireDefault(__webpack_require__(578));

var _loadingBar = _interopRequireDefault(__webpack_require__(580));

var _menu = _interopRequireDefault(__webpack_require__(584));

var _message = _interopRequireDefault(__webpack_require__(589));

var _modal = _interopRequireDefault(__webpack_require__(592));

var _notice = _interopRequireDefault(__webpack_require__(595));

var _page = _interopRequireDefault(__webpack_require__(596));

var _poptip = _interopRequireDefault(__webpack_require__(599));

var _progress = _interopRequireDefault(__webpack_require__(600));

var _radio = _interopRequireDefault(__webpack_require__(601));

var _rate = _interopRequireDefault(__webpack_require__(604));

var _richtext = _interopRequireDefault(__webpack_require__(606));

var _sider = _interopRequireDefault(__webpack_require__(611));

var _slider = _interopRequireDefault(__webpack_require__(612));

var _spin = _interopRequireDefault(__webpack_require__(617));

var _steps = _interopRequireDefault(__webpack_require__(619));

var _switch = _interopRequireDefault(__webpack_require__(622));

var _table = _interopRequireDefault(__webpack_require__(624));

var _tabs = _interopRequireDefault(__webpack_require__(644));

var _tag = _interopRequireDefault(__webpack_require__(647));

var _timeline = _interopRequireDefault(__webpack_require__(649));

var _timePicker = _interopRequireDefault(__webpack_require__(652));

var _tooltip = _interopRequireDefault(__webpack_require__(654));

var _transfer = _interopRequireDefault(__webpack_require__(655));

var _tree = _interopRequireDefault(__webpack_require__(660));

var _upload = _interopRequireDefault(__webpack_require__(664));

var _grid = __webpack_require__(668);

var _select = __webpack_require__(671);

var locale = _interopRequireWildcard(__webpack_require__(383));

var _this2 = void 0;

var logger = __webpack_require__(0).get("iview:index");

_fontawesomeSvgCore.library.add(_proSolidSvgIcons.fas);

_fontawesomeSvgCore.library.add(_proRegularSvgIcons.far);

_fontawesomeSvgCore.library.add(_proLightSvgIcons.fal);

var components = {
  Affix: _affix.default,
  Alert: _alert.default,
  AutoComplete: _autoComplete.default,
  Avatar: _avatar.default,
  BackTop: _backTop.default,
  Badge: _badge.default,
  Breadcrumb: _breadcrumb.default,
  BreadcrumbItem: _breadcrumb.default.Item,
  Button: _button.default,
  ButtonGroup: _button.default.Group,
  Card: _card.default,
  Carousel: _carousel.default,
  CarouselItem: _carousel.default.Item,
  Cascader: _cascader.default,
  Checkbox: _checkbox.default,
  CheckboxGroup: _checkbox.default.Group,
  Col: _grid.Col,
  Collapse: _collapse.default,
  ColorPicker: _colorPicker.default,
  Content: _content.default,
  DatePicker: _datePicker.default,
  Dropdown: _dropdown.default,
  DropdownItem: _dropdown.default.Item,
  DropdownMenu: _dropdown.default.Menu,
  Footer: _footer.default,
  Form: _form.default,
  FormItem: _form.default.Item,
  Header: _header.default,
  Icon: _icon.default,
  Input: _input.default,
  InputNumber: _inputNumber.default,
  Layout: _layout.default,
  LoadingBar: _loadingBar.default,
  Menu: _menu.default,
  MenuGroup: _menu.default.Group,
  MenuItem: _menu.default.Item,
  Message: _message.default,
  Modal: _modal.default,
  Notice: _notice.default,
  Option: _select.Option,
  OptionGroup: _select.OptionGroup,
  Page: _page.default,
  Panel: _collapse.default.Panel,
  Poptip: _poptip.default,
  Progress: _progress.default,
  Radio: _radio.default,
  RadioGroup: _radio.default.Group,
  Rate: _rate.default,
  Richtext: _richtext.default,
  Row: _grid.Row,
  Scroll: _scroll.default,
  Select: _select.Select,
  Sider: _sider.default,
  Slider: _slider.default,
  Spin: _spin.default,
  Step: _steps.default.Step,
  Steps: _steps.default,
  Submenu: _menu.default.Sub,
  Table: _table.default,
  TabPane: _tabs.default.Pane,
  Tabs: _tabs.default,
  Tag: _tag.default,
  Timeline: _timeline.default,
  TimelineItem: _timeline.default.Item,
  TimePicker: _timePicker.default,
  Tooltip: _tooltip.default,
  Transfer: _transfer.default,
  Tree: _tree.default,
  Upload: _upload.default
};
var iview = (0, _objectSpread2.default)({}, components, {
  iButton: _button.default,
  iCircle: _circle.default,
  iCol: _grid.Col,
  iContent: _content.default,
  iFooter: _footer.default,
  iForm: _form.default,
  iHeader: _header.default,
  iInput: _input.default,
  iMenu: _menu.default,
  iOption: _select.Option,
  iProgress: _progress.default,
  iSelect: _select.Select,
  iSwitch: _switch.default,
  iTable: _table.default
});

var install = function _install(Vue) {
  var _this = this;

  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  if (install.installed) {
    return;
  }

  locale.use(opts.locale);
  locale.i18n(opts.i18n);
  Object.keys(iview).forEach(function (key) {
    (0, _newArrowCheck2.default)(this, _this);
    Vue.component(key, iview[key]);
  }.bind(this));
  Vue.component('font-awesome-icon', _vueFontawesome.FontAwesomeIcon);
  Vue.component('font-awesome-layers', _vueFontawesome.FontAwesomeLayers);
  Vue.component('font-awesome-layers-text', _vueFontawesome.FontAwesomeLayersText);
  Vue.prototype.$Loading = _loadingBar.default;
  Vue.prototype.$Message = _message.default;
  Vue.prototype.$Modal = _modal.default;
  Vue.prototype.$Notice = _notice.default;
  Vue.prototype.$Spin = _spin.default;
}; // auto install


if (typeof window !== 'undefined' && window.Vue) {
  install(window.Vue);
}

var API = (0, _objectSpread2.default)({}, components, {
  Circle: _circle.default,
  i18n: locale.i18n,
  install: install,
  locale: locale.use,
  Switch: _switch.default,
  version: "'3.0.0-alpha.8'"
});

API.lang = function (code) {
  (0, _newArrowCheck2.default)(this, _this2);
  var langObject = window['iview/locale'].default;

  if (code === langObject.i.locale) {
    locale.use(langObject);
  } else {
    /* eslint-disable-next-line no-console */
    console.log("The ".concat(code, " language pack is not loaded."));
  }
}.bind(void 0);

var _default = API;
exports.default = _default;

/***/ }),
/* 431 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__(432);

__webpack_require__(433);

__webpack_require__(434);

__webpack_require__(435);

var logger = __webpack_require__(0).get("iview:Config:index");

/***/ }),
/* 432 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

var _jsLogger = _interopRequireDefault(__webpack_require__(0));

var _isProduction = _interopRequireDefault(__webpack_require__(377));

var logger = __webpack_require__(0).get("iview:Config:logger.config");

/**
 * Lightweight, unobtrusive, configurable JavaScript logger.
 *
 * @namespace logger
 * @type {ILogger}
 */
var developmentLevel = _jsLogger.default.DEBUG;
var productionLevel = _jsLogger.default.WARN;

_jsLogger.default.useDefaults({
  defaultLevel: _isProduction.default ? productionLevel : developmentLevel,

  /**
   * @param {Array} messages - The array of messages.
   * @param {Object} context - The context of the messages.
   */
  formatter: function formatter(messages, context) {
    messages.unshift("".concat(context.name, ":"));
  }
});

/***/ }),
/* 433 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var logger = __webpack_require__(0).get("iview:Config:vue.config");

/***/ }),
/* 434 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireWildcard = __webpack_require__(35);

var _interopRequireDefault = __webpack_require__(1);

var _vue = _interopRequireDefault(__webpack_require__(5));

var vClickOutside = _interopRequireWildcard(__webpack_require__(24));

var logger = __webpack_require__(0).get("iview:Config:vue.directives.config");

_vue.default.use(vClickOutside);

/***/ }),
/* 435 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var logger = __webpack_require__(0).get("iview:Config:vue.components.config");

/***/ }),
/* 436 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE__436__;

/***/ }),
/* 437 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE__437__;

/***/ }),
/* 438 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _affix = _interopRequireDefault(__webpack_require__(439));

var logger = __webpack_require__(0).get("iview:components:affix:index");

var _default = _affix.default;
exports.default = _default;

/***/ }),
/* 439 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _affix_vue_vue_type_template_id_5ad72c0a___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(327);
/* harmony import */ var _affix_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(55);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _affix_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _affix_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _affix_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _affix_vue_vue_type_template_id_5ad72c0a___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _affix_vue_vue_type_template_id_5ad72c0a___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 440 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _alert = _interopRequireDefault(__webpack_require__(441));

var logger = __webpack_require__(0).get("iview:components:alert:index");

var _default = _alert.default;
exports.default = _default;

/***/ }),
/* 441 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _alert_vue_vue_type_template_id_aa84f252___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(280);
/* harmony import */ var _alert_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(57);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _alert_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _alert_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _alert_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _alert_vue_vue_type_template_id_aa84f252___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _alert_vue_vue_type_template_id_aa84f252___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 442 */
/***/ (function(module, exports, __webpack_require__) {

var baseFindKey = __webpack_require__(443),
    baseForOwn = __webpack_require__(444),
    baseIteratee = __webpack_require__(449);

/**
 * This method is like `_.find` except that it returns the key of the first
 * element `predicate` returns truthy for instead of the element itself.
 *
 * @static
 * @memberOf _
 * @since 1.1.0
 * @category Object
 * @param {Object} object The object to inspect.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @returns {string|undefined} Returns the key of the matched element,
 *  else `undefined`.
 * @example
 *
 * var users = {
 *   'barney':  { 'age': 36, 'active': true },
 *   'fred':    { 'age': 40, 'active': false },
 *   'pebbles': { 'age': 1,  'active': true }
 * };
 *
 * _.findKey(users, function(o) { return o.age < 40; });
 * // => 'barney' (iteration order is not guaranteed)
 *
 * // The `_.matches` iteratee shorthand.
 * _.findKey(users, { 'age': 1, 'active': true });
 * // => 'pebbles'
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.findKey(users, ['active', false]);
 * // => 'fred'
 *
 * // The `_.property` iteratee shorthand.
 * _.findKey(users, 'active');
 * // => 'barney'
 */
function findKey(object, predicate) {
  return baseFindKey(object, baseIteratee(predicate, 3), baseForOwn);
}

module.exports = findKey;


/***/ }),
/* 443 */
/***/ (function(module, exports) {

/**
 * The base implementation of methods like `_.findKey` and `_.findLastKey`,
 * without support for iteratee shorthands, which iterates over `collection`
 * using `eachFunc`.
 *
 * @private
 * @param {Array|Object} collection The collection to inspect.
 * @param {Function} predicate The function invoked per iteration.
 * @param {Function} eachFunc The function to iterate over `collection`.
 * @returns {*} Returns the found element or its key, else `undefined`.
 */
function baseFindKey(collection, predicate, eachFunc) {
  var result;
  eachFunc(collection, function(value, key, collection) {
    if (predicate(value, key, collection)) {
      result = key;
      return false;
    }
  });
  return result;
}

module.exports = baseFindKey;


/***/ }),
/* 444 */
/***/ (function(module, exports, __webpack_require__) {

var baseFor = __webpack_require__(445),
    keys = __webpack_require__(447);

/**
 * The base implementation of `_.forOwn` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Object} Returns `object`.
 */
function baseForOwn(object, iteratee) {
  return object && baseFor(object, iteratee, keys);
}

module.exports = baseForOwn;


/***/ }),
/* 445 */
/***/ (function(module, exports, __webpack_require__) {

var createBaseFor = __webpack_require__(446);

/**
 * The base implementation of `baseForOwn` which iterates over `object`
 * properties returned by `keysFunc` and invokes `iteratee` for each property.
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @returns {Object} Returns `object`.
 */
var baseFor = createBaseFor();

module.exports = baseFor;


/***/ }),
/* 446 */
/***/ (function(module, exports) {

/**
 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseFor(fromRight) {
  return function(object, iteratee, keysFunc) {
    var index = -1,
        iterable = Object(object),
        props = keysFunc(object),
        length = props.length;

    while (length--) {
      var key = props[fromRight ? length : ++index];
      if (iteratee(iterable[key], key, iterable) === false) {
        break;
      }
    }
    return object;
  };
}

module.exports = createBaseFor;


/***/ }),
/* 447 */
/***/ (function(module, exports, __webpack_require__) {

var overArg = __webpack_require__(448);

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeKeys = overArg(Object.keys, Object);

module.exports = nativeKeys;


/***/ }),
/* 448 */
/***/ (function(module, exports) {

/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

module.exports = overArg;


/***/ }),
/* 449 */
/***/ (function(module, exports) {

/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */
function identity(value) {
  return value;
}

module.exports = identity;


/***/ }),
/* 450 */
/***/ (function(module, exports, __webpack_require__) {

var MapCache = __webpack_require__(451);

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a function that memoizes the result of `func`. If `resolver` is
 * provided, it determines the cache key for storing the result based on the
 * arguments provided to the memoized function. By default, the first argument
 * provided to the memoized function is used as the map cache key. The `func`
 * is invoked with the `this` binding of the memoized function.
 *
 * **Note:** The cache is exposed as the `cache` property on the memoized
 * function. Its creation may be customized by replacing the `_.memoize.Cache`
 * constructor with one whose instances implement the
 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
 * method interface of `clear`, `delete`, `get`, `has`, and `set`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to have its output memoized.
 * @param {Function} [resolver] The function to resolve the cache key.
 * @returns {Function} Returns the new memoized function.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 * var other = { 'c': 3, 'd': 4 };
 *
 * var values = _.memoize(_.values);
 * values(object);
 * // => [1, 2]
 *
 * values(other);
 * // => [3, 4]
 *
 * object.a = 2;
 * values(object);
 * // => [1, 2]
 *
 * // Modify the result cache.
 * values.cache.set(object, ['a', 'b']);
 * values(object);
 * // => ['a', 'b']
 *
 * // Replace `_.memoize.Cache`.
 * _.memoize.Cache = WeakMap;
 */
function memoize(func, resolver) {
  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  var memoized = function() {
    var args = arguments,
        key = resolver ? resolver.apply(this, args) : args[0],
        cache = memoized.cache;

    if (cache.has(key)) {
      return cache.get(key);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key, result) || cache;
    return result;
  };
  memoized.cache = new (memoize.Cache || MapCache);
  return memoized;
}

// Expose `MapCache`.
memoize.Cache = MapCache;

module.exports = memoize;


/***/ }),
/* 451 */
/***/ (function(module, exports, __webpack_require__) {

var listCacheClear = __webpack_require__(452),
    listCacheDelete = __webpack_require__(453),
    listCacheGet = __webpack_require__(455),
    listCacheHas = __webpack_require__(456),
    listCacheSet = __webpack_require__(457);

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;

module.exports = ListCache;


/***/ }),
/* 452 */
/***/ (function(module, exports) {

/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}

module.exports = listCacheClear;


/***/ }),
/* 453 */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(43);

/** Used for built-in method references. */
var arrayProto = Array.prototype;

/** Built-in value references. */
var splice = arrayProto.splice;

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}

module.exports = listCacheDelete;


/***/ }),
/* 454 */
/***/ (function(module, exports) {

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

module.exports = eq;


/***/ }),
/* 455 */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(43);

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

module.exports = listCacheGet;


/***/ }),
/* 456 */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(43);

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

module.exports = listCacheHas;


/***/ }),
/* 457 */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(43);

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

module.exports = listCacheSet;


/***/ }),
/* 458 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = oneOf;

var _castArray = _interopRequireDefault(__webpack_require__(381));

var logger = __webpack_require__(0).get("iview:Assets:oneOf");

/**
 * Tests if a comparate exists in a list of comparates an then returns the comparate if there
 * is a match; otherwise returns the fallback value.
 *
 * @param {*} comparate - The value to compare against the supplied list of comparates.
 * @param {Array|*} [comparates=[]] - An array of values or a single value for comparison.
 * @param {*} [fallback=undefined] - The returned value if no match exists.
 * @returns {*} - The comparate upon a match; otherwise the fallback value.
 */
function oneOf(comparate, comparates, fallback) {
  return (0, _castArray.default)(comparates).includes(comparate) ? comparate : fallback;
}

/***/ }),
/* 459 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _autoComplete = _interopRequireDefault(__webpack_require__(460));

var logger = __webpack_require__(0).get("iview:components:auto-complete:index");

var _default = _autoComplete.default;
exports.default = _default;

/***/ }),
/* 460 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _auto_complete_vue_vue_type_template_id_9e11444c___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(282);
/* harmony import */ var _auto_complete_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(61);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _auto_complete_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _auto_complete_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _auto_complete_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _auto_complete_vue_vue_type_template_id_9e11444c___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _auto_complete_vue_vue_type_template_id_9e11444c___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 461 */
/***/ (function(module, exports) {

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

module.exports = _arrayWithHoles;

/***/ }),
/* 462 */
/***/ (function(module, exports) {

function _iterableToArrayLimit(arr, i) {
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

module.exports = _iterableToArrayLimit;

/***/ }),
/* 463 */
/***/ (function(module, exports) {

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance");
}

module.exports = _nonIterableRest;

/***/ }),
/* 464 */
/***/ (function(module, exports) {

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  }
}

module.exports = _arrayWithoutHoles;

/***/ }),
/* 465 */
/***/ (function(module, exports) {

function _iterableToArray(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
}

module.exports = _iterableToArray;

/***/ }),
/* 466 */
/***/ (function(module, exports) {

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}

module.exports = _nonIterableSpread;

/***/ }),
/* 467 */
/***/ (function(module, exports, __webpack_require__) {

(function (global, factory) {
	 true ? module.exports = factory() :
	undefined;
}(this, (function () { 'use strict';

var isMergeableObject = function isMergeableObject(value) {
	return isNonNullObject(value)
		&& !isSpecial(value)
};

function isNonNullObject(value) {
	return !!value && typeof value === 'object'
}

function isSpecial(value) {
	var stringValue = Object.prototype.toString.call(value);

	return stringValue === '[object RegExp]'
		|| stringValue === '[object Date]'
		|| isReactElement(value)
}

// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25
var canUseSymbol = typeof Symbol === 'function' && Symbol.for;
var REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;

function isReactElement(value) {
	return value.$$typeof === REACT_ELEMENT_TYPE
}

function emptyTarget(val) {
	return Array.isArray(val) ? [] : {}
}

function cloneUnlessOtherwiseSpecified(value, options) {
	return (options.clone !== false && options.isMergeableObject(value))
		? deepmerge(emptyTarget(value), value, options)
		: value
}

function defaultArrayMerge(target, source, options) {
	return target.concat(source).map(function(element) {
		return cloneUnlessOtherwiseSpecified(element, options)
	})
}

function getMergeFunction(key, options) {
	if (!options.customMerge) {
		return deepmerge
	}
	var customMerge = options.customMerge(key);
	return typeof customMerge === 'function' ? customMerge : deepmerge
}

function mergeObject(target, source, options) {
	var destination = {};
	if (options.isMergeableObject(target)) {
		Object.keys(target).forEach(function(key) {
			destination[key] = cloneUnlessOtherwiseSpecified(target[key], options);
		});
	}
	Object.keys(source).forEach(function(key) {
		if (!options.isMergeableObject(source[key]) || !target[key]) {
			destination[key] = cloneUnlessOtherwiseSpecified(source[key], options);
		} else {
			destination[key] = getMergeFunction(key, options)(target[key], source[key], options);
		}
	});
	return destination
}

function deepmerge(target, source, options) {
	options = options || {};
	options.arrayMerge = options.arrayMerge || defaultArrayMerge;
	options.isMergeableObject = options.isMergeableObject || isMergeableObject;

	var sourceIsArray = Array.isArray(source);
	var targetIsArray = Array.isArray(target);
	var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;

	if (!sourceAndTargetTypesMatch) {
		return cloneUnlessOtherwiseSpecified(source, options)
	} else if (sourceIsArray) {
		return options.arrayMerge(target, source, options)
	} else {
		return mergeObject(target, source, options)
	}
}

deepmerge.all = function deepmergeAll(array, options) {
	if (!Array.isArray(array)) {
		throw new Error('first argument should be an array')
	}

	return array.reduce(function(prev, next) {
		return deepmerge(prev, next, options)
	}, {})
};

var deepmerge_1 = deepmerge;

return deepmerge_1;

})));


/***/ }),
/* 468 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = formatTemplate;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _typeof2 = _interopRequireDefault(__webpack_require__(36));

var _isNil = _interopRequireDefault(__webpack_require__(258));

var _has = _interopRequireDefault(__webpack_require__(259));

var _not = _interopRequireDefault(__webpack_require__(7));

var logger = __webpack_require__(0).get("iview:locale:format");

var EMPTY_STRING = '';
var OPEN_BRACE = '{';
var CLOSE_BRACE = '}';
var RE_NARGS = new RegExp("(%|)".concat(OPEN_BRACE, "(\\w+)").concat(CLOSE_BRACE), 'g');

function formatTemplate() {
  /**
   * Template.
   *
   * @param {string} string - The string to format.
   * @param {Array} templateArgs - The template arguments.
   * @returns {string} The formatted string.
   */
  return function template(string) {
    var _this = this;

    for (var _len = arguments.length, templateArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      templateArgs[_key - 1] = arguments[_key];
    }

    var first = templateArgs[0];
    var args = templateArgs;

    if (args.length === 1 && (0, _typeof2.default)(first) === 'object') {
      args = first;
    }

    if ((0, _not.default)(args) || (0, _not.default)(args.hasOwnProperty)) {
      args = {};
    }

    return string.replace(RE_NARGS, function (match, prefix, i, index) {
      (0, _newArrowCheck2.default)(this, _this);

      if (string[index - 1] === OPEN_BRACE && string[index + match.length] === CLOSE_BRACE) {
        return i;
      }

      var result = (0, _has.default)(args, i) ? args[i] : null;
      return (0, _isNil.default)(result) ? EMPTY_STRING : result;
    }.bind(this));
  };
}

/***/ }),
/* 469 */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.has` without support for deep paths.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {Array|string} key The key to check.
 * @returns {boolean} Returns `true` if `key` exists, else `false`.
 */
function baseHas(object, key) {
  return object != null && hasOwnProperty.call(object, key);
}

module.exports = baseHas;


/***/ }),
/* 470 */
/***/ (function(module, exports, __webpack_require__) {

var castPath = __webpack_require__(384),
    isArguments = __webpack_require__(476),
    isArray = __webpack_require__(44),
    isIndex = __webpack_require__(477),
    isLength = __webpack_require__(478),
    toKey = __webpack_require__(385);

/**
 * Checks if `path` exists on `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @param {Function} hasFunc The function to check properties.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 */
function hasPath(object, path, hasFunc) {
  path = castPath(path, object);

  var index = -1,
      length = path.length,
      result = false;

  while (++index < length) {
    var key = toKey(path[index]);
    if (!(result = object != null && hasFunc(object, key))) {
      break;
    }
    object = object[key];
  }
  if (result || ++index != length) {
    return result;
  }
  length = object == null ? 0 : object.length;
  return !!length && isLength(length) && isIndex(key, length) &&
    (isArray(object) || isArguments(object));
}

module.exports = hasPath;


/***/ }),
/* 471 */
/***/ (function(module, exports, __webpack_require__) {

var isArray = __webpack_require__(44),
    isSymbol = __webpack_require__(472);

/** Used to match property names within property paths. */
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
    reIsPlainProp = /^\w*$/;

/**
 * Checks if `value` is a property name and not a property path.
 *
 * @private
 * @param {*} value The value to check.
 * @param {Object} [object] The object to query keys on.
 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
 */
function isKey(value, object) {
  if (isArray(value)) {
    return false;
  }
  var type = typeof value;
  if (type == 'number' || type == 'symbol' || type == 'boolean' ||
      value == null || isSymbol(value)) {
    return true;
  }
  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
    (object != null && value in Object(object));
}

module.exports = isKey;


/***/ }),
/* 472 */
/***/ (function(module, exports) {

/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
function stubFalse() {
  return false;
}

module.exports = stubFalse;


/***/ }),
/* 473 */
/***/ (function(module, exports, __webpack_require__) {

var memoizeCapped = __webpack_require__(474);

/** Used to match property names within property paths. */
var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

/** Used to match backslashes in property paths. */
var reEscapeChar = /\\(\\)?/g;

/**
 * Converts `string` to a property path array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the property path array.
 */
var stringToPath = memoizeCapped(function(string) {
  var result = [];
  if (string.charCodeAt(0) === 46 /* . */) {
    result.push('');
  }
  string.replace(rePropName, function(match, number, quote, subString) {
    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
  });
  return result;
});

module.exports = stringToPath;


/***/ }),
/* 474 */
/***/ (function(module, exports) {

/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */
function identity(value) {
  return value;
}

module.exports = identity;


/***/ }),
/* 475 */
/***/ (function(module, exports) {

/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */
function identity(value) {
  return value;
}

module.exports = identity;


/***/ }),
/* 476 */
/***/ (function(module, exports) {

/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
function stubFalse() {
  return false;
}

module.exports = stubFalse;


/***/ }),
/* 477 */
/***/ (function(module, exports) {

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER : length;

  return !!length &&
    (type == 'number' ||
      (type != 'symbol' && reIsUint.test(value))) &&
        (value > -1 && value % 1 == 0 && value < length);
}

module.exports = isIndex;


/***/ }),
/* 478 */
/***/ (function(module, exports) {

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

module.exports = isLength;


/***/ }),
/* 479 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _select_head_vue_vue_type_template_id_932b3bda___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(354);
/* harmony import */ var _select_head_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _select_head_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _select_head_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _select_head_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _select_head_vue_vue_type_template_id_932b3bda___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _select_head_vue_vue_type_template_id_932b3bda___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 480 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _functional_options_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(69);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _functional_options_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _functional_options_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2);
var render, staticRenderFns




/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(
  _functional_options_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"],
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 481 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = calcTextareaHeight;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var logger = __webpack_require__(0).get("iview:utils:calcTextareaHeight");

// Thanks to
// https://github.com/andreypopp/react-textarea-autosize/
// https://github.com/ElemeFE/element/blob/master/packages/input/src/calcTextareaHeight.js
var hiddenTextarea;
var HIDDEN_STYLE = "\n    height:0 !important;\n    min-height:0 !important;\n    max-height:none !important;\n    visibility:hidden !important;\n    overflow:hidden !important;\n    position:absolute !important;\n    z-index:-1000 !important;\n    top:0 !important;\n    right:0 !important\n";
var CONTEXT_STYLE = ['letter-spacing', 'line-height', 'padding-top', 'padding-bottom', 'font-family', 'font-weight', 'font-size', 'text-rendering', 'text-transform', 'width', 'text-indent', 'padding-left', 'padding-right', 'border-width', 'box-sizing'];

function calculateNodeStyling(node) {
  var _this = this;

  var style = window.getComputedStyle(node);
  var boxSizing = style.getPropertyValue('box-sizing');
  var paddingSize = parseFloat(style.getPropertyValue('padding-bottom')) + parseFloat(style.getPropertyValue('padding-top'));
  var borderSize = parseFloat(style.getPropertyValue('border-bottom-width')) + parseFloat(style.getPropertyValue('border-top-width'));
  var contextStyle = CONTEXT_STYLE.map(function (name) {
    (0, _newArrowCheck2.default)(this, _this);
    return "".concat(name, ":").concat(style.getPropertyValue(name));
  }.bind(this)).join(';');
  return {
    borderSize: borderSize,
    boxSizing: boxSizing,
    contextStyle: contextStyle,
    paddingSize: paddingSize
  };
}

function calcTextareaHeight(targetNode) {
  var minRows = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
  var maxRows = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

  if (!hiddenTextarea) {
    hiddenTextarea = document.createElement('textarea');
    document.body.appendChild(hiddenTextarea);
  }

  var _calculateNodeStyling = calculateNodeStyling(targetNode),
      paddingSize = _calculateNodeStyling.paddingSize,
      borderSize = _calculateNodeStyling.borderSize,
      boxSizing = _calculateNodeStyling.boxSizing,
      contextStyle = _calculateNodeStyling.contextStyle;

  hiddenTextarea.setAttribute('style', "".concat(contextStyle, ";").concat(HIDDEN_STYLE));
  hiddenTextarea.value = targetNode.value || targetNode.placeholder || '';
  var height = hiddenTextarea.scrollHeight;
  var minHeight = -Infinity;
  var maxHeight = Infinity;

  if (boxSizing === 'border-box') {
    height += borderSize;
  } else if (boxSizing === 'content-box') {
    height -= paddingSize;
  }

  hiddenTextarea.value = '';
  var singleRowHeight = hiddenTextarea.scrollHeight - paddingSize;

  if (minRows !== null) {
    minHeight = singleRowHeight * minRows;

    if (boxSizing === 'border-box') {
      minHeight = minHeight + paddingSize + borderSize;
    }

    height = Math.max(minHeight, height);
  }

  if (maxRows !== null) {
    maxHeight = singleRowHeight * maxRows;

    if (boxSizing === 'border-box') {
      maxHeight = maxHeight + paddingSize + borderSize;
    }

    height = Math.min(maxHeight, height);
  }

  return {
    height: "".concat(height, "px"),
    maxHeight: "".concat(maxHeight, "px"),
    minHeight: "".concat(minHeight, "px")
  };
}

/***/ }),
/* 482 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _avatar = _interopRequireDefault(__webpack_require__(483));

var logger = __webpack_require__(0).get("iview:components:avatar:index");

var _default = _avatar.default;
exports.default = _default;

/***/ }),
/* 483 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _avatar_vue_vue_type_template_id_fc2236e6___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(288);
/* harmony import */ var _avatar_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(75);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _avatar_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _avatar_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _avatar_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _avatar_vue_vue_type_template_id_fc2236e6___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _avatar_vue_vue_type_template_id_fc2236e6___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 484 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _backTop = _interopRequireDefault(__webpack_require__(485));

var logger = __webpack_require__(0).get("iview:components:back-top:index");

var _default = _backTop.default;
exports.default = _default;

/***/ }),
/* 485 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _back_top_vue_vue_type_template_id_69a1abee___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(289);
/* harmony import */ var _back_top_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(77);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _back_top_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _back_top_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _back_top_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _back_top_vue_vue_type_template_id_69a1abee___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _back_top_vue_vue_type_template_id_69a1abee___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 486 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _badge = _interopRequireDefault(__webpack_require__(487));

var logger = __webpack_require__(0).get("iview:components:badge:index");

var _default = _badge.default;
exports.default = _default;

/***/ }),
/* 487 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _badge_vue_vue_type_template_id_76b1278c___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(290);
/* harmony import */ var _badge_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(79);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _badge_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _badge_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _badge_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _badge_vue_vue_type_template_id_76b1278c___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _badge_vue_vue_type_template_id_76b1278c___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 488 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _breadcrumb = _interopRequireDefault(__webpack_require__(489));

var _breadcrumbItem = _interopRequireDefault(__webpack_require__(490));

var logger = __webpack_require__(0).get("iview:components:breadcrumb:index");

_breadcrumb.default.Item = _breadcrumbItem.default;
var _default = _breadcrumb.default;
exports.default = _default;

/***/ }),
/* 489 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _breadcrumb_vue_vue_type_template_id_07fc0b84___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(291);
/* harmony import */ var _breadcrumb_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(81);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _breadcrumb_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _breadcrumb_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _breadcrumb_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _breadcrumb_vue_vue_type_template_id_07fc0b84___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _breadcrumb_vue_vue_type_template_id_07fc0b84___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 490 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _breadcrumb_item_vue_vue_type_template_id_10b8d7f3___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(292);
/* harmony import */ var _breadcrumb_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(83);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _breadcrumb_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _breadcrumb_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _breadcrumb_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _breadcrumb_item_vue_vue_type_template_id_10b8d7f3___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _breadcrumb_item_vue_vue_type_template_id_10b8d7f3___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 491 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _button = _interopRequireDefault(__webpack_require__(22));

var _buttonGroup = _interopRequireDefault(__webpack_require__(492));

var logger = __webpack_require__(0).get("iview:components:button:index");

_button.default.Group = _buttonGroup.default;
var _default = _button.default;
exports.default = _default;

/***/ }),
/* 492 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _button_group_vue_vue_type_template_id_0be81369___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(294);
/* harmony import */ var _button_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(87);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _button_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _button_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _button_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _button_group_vue_vue_type_template_id_0be81369___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _button_group_vue_vue_type_template_id_0be81369___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 493 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _card = _interopRequireDefault(__webpack_require__(494));

var logger = __webpack_require__(0).get("iview:components:card:index");

var _default = _card.default;
exports.default = _default;

/***/ }),
/* 494 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _card_vue_vue_type_template_id_22e5c905___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(295);
/* harmony import */ var _card_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(89);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _card_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _card_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _card_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _card_vue_vue_type_template_id_22e5c905___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _card_vue_vue_type_template_id_22e5c905___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 495 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _carousel = _interopRequireDefault(__webpack_require__(496));

var _carouselItem = _interopRequireDefault(__webpack_require__(497));

var logger = __webpack_require__(0).get("iview:components:carousel:index");

_carousel.default.Item = _carouselItem.default;
var _default = _carousel.default;
exports.default = _default;

/***/ }),
/* 496 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _carousel_vue_vue_type_template_id_8c3b26a6___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(296);
/* harmony import */ var _carousel_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(91);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _carousel_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _carousel_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _carousel_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _carousel_vue_vue_type_template_id_8c3b26a6___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _carousel_vue_vue_type_template_id_8c3b26a6___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 497 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _carousel_item_vue_vue_type_template_id_4bbbf789___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(297);
/* harmony import */ var _carousel_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(93);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _carousel_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _carousel_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _carousel_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _carousel_item_vue_vue_type_template_id_4bbbf789___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _carousel_item_vue_vue_type_template_id_4bbbf789___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 498 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _cascader = _interopRequireDefault(__webpack_require__(499));

var logger = __webpack_require__(0).get("iview:components:cascader:index");

var _default = _cascader.default;
exports.default = _default;

/***/ }),
/* 499 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _cascader_vue_vue_type_template_id_b46893aa___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(298);
/* harmony import */ var _cascader_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(95);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _cascader_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _cascader_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _cascader_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _cascader_vue_vue_type_template_id_b46893aa___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _cascader_vue_vue_type_template_id_b46893aa___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 500 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _caspanel_vue_vue_type_template_id_e83b9154___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(355);
/* harmony import */ var _caspanel_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(97);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _caspanel_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _caspanel_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _caspanel_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _caspanel_vue_vue_type_template_id_e83b9154___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _caspanel_vue_vue_type_template_id_e83b9154___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 501 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _casitem_vue_vue_type_template_id_18e6d43a___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(375);
/* harmony import */ var _casitem_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(99);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _casitem_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _casitem_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _casitem_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _casitem_vue_vue_type_template_id_18e6d43a___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _casitem_vue_vue_type_template_id_18e6d43a___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 502 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _checkbox = _interopRequireDefault(__webpack_require__(38));

var _checkboxGroup = _interopRequireDefault(__webpack_require__(386));

var logger = __webpack_require__(0).get("iview:components:checkbox:index");

_checkbox.default.Group = _checkboxGroup.default;
var _default = _checkbox.default;
exports.default = _default;

/***/ }),
/* 503 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _circle = _interopRequireDefault(__webpack_require__(504));

var logger = __webpack_require__(0).get("iview:components:circle:index");

var _default = _circle.default;
exports.default = _default;

/***/ }),
/* 504 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _circle_vue_vue_type_template_id_3a5da672___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(303);
/* harmony import */ var _circle_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(105);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _circle_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _circle_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _circle_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _circle_vue_vue_type_template_id_3a5da672___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _circle_vue_vue_type_template_id_3a5da672___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 505 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _collapse = _interopRequireDefault(__webpack_require__(506));

var _panel = _interopRequireDefault(__webpack_require__(507));

var logger = __webpack_require__(0).get("iview:components:collapse:index");

_collapse.default.Panel = _panel.default;
var _default = _collapse.default;
exports.default = _default;

/***/ }),
/* 506 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _collapse_vue_vue_type_template_id_7260a934___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(304);
/* harmony import */ var _collapse_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(107);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _collapse_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _collapse_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _collapse_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _collapse_vue_vue_type_template_id_7260a934___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _collapse_vue_vue_type_template_id_7260a934___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 507 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _panel_vue_vue_type_template_id_3a3c2c33___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(305);
/* harmony import */ var _panel_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(109);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _panel_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _panel_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _panel_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _panel_vue_vue_type_template_id_3a3c2c33___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _panel_vue_vue_type_template_id_3a3c2c33___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 508 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colorPicker = _interopRequireDefault(__webpack_require__(509));

var logger = __webpack_require__(0).get("iview:components:color-picker:index");

var _default = _colorPicker.default;
exports.default = _default;

/***/ }),
/* 509 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _color_picker_vue_vue_type_template_id_593e2101_xmlns_3Av_click_outside_http_3A_2F_2Fwww_w3_org_2F1999_2Fxhtml___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(306);
/* harmony import */ var _color_picker_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(111);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _color_picker_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _color_picker_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _color_picker_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _color_picker_vue_vue_type_template_id_593e2101_xmlns_3Av_click_outside_http_3A_2F_2Fwww_w3_org_2F1999_2Fxhtml___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _color_picker_vue_vue_type_template_id_593e2101_xmlns_3Av_click_outside_http_3A_2F_2Fwww_w3_org_2F1999_2Fxhtml___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 510 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _recommend_colors_vue_vue_type_template_id_5a9dc9d0___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(365);
/* harmony import */ var _recommend_colors_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(113);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _recommend_colors_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _recommend_colors_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _recommend_colors_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _recommend_colors_vue_vue_type_template_id_5a9dc9d0___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _recommend_colors_vue_vue_type_template_id_5a9dc9d0___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 511 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _saturation_vue_vue_type_template_id_8bde1686___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(362);
/* harmony import */ var _saturation_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(115);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _saturation_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _saturation_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _saturation_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _saturation_vue_vue_type_template_id_8bde1686___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _saturation_vue_vue_type_template_id_8bde1686___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 512 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _hue_vue_vue_type_template_id_595666f8___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(361);
/* harmony import */ var _hue_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(117);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _hue_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _hue_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _hue_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _hue_vue_vue_type_template_id_595666f8___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _hue_vue_vue_type_template_id_595666f8___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 513 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _alpha_vue_vue_type_template_id_08e4466a___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(360);
/* harmony import */ var _alpha_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(119);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _alpha_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _alpha_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _alpha_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _alpha_vue_vue_type_template_id_08e4466a___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _alpha_vue_vue_type_template_id_08e4466a___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 514 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _content = _interopRequireDefault(__webpack_require__(389));

var logger = __webpack_require__(0).get("iview:components:content:index");

var _default = _content.default;
exports.default = _default;

/***/ }),
/* 515 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _datePicker = _interopRequireDefault(__webpack_require__(516));

var logger = __webpack_require__(0).get("iview:components:date-picker:index");

var _default = _datePicker.default;
exports.default = _default;

/***/ }),
/* 516 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _picker = _interopRequireDefault(__webpack_require__(390));

var _date = _interopRequireDefault(__webpack_require__(520));

var _dateRange = _interopRequireDefault(__webpack_require__(525));

var _assist = __webpack_require__(6);

var logger = __webpack_require__(0).get("iview:components:date-picker:picker:date-picker");

var _default = {
  components: {
    DatePickerPanel: _date.default,
    RangeDatePickerPanel: _dateRange.default
  },
  computed: {
    ownPickerProps: function ownPickerProps() {
      return this.options;
    },
    panel: function panel() {
      var isRange = this.type === 'daterange' || this.type === 'datetimerange';
      return isRange ? 'RangeDatePickerPanel' : 'DatePickerPanel';
    }
  },
  mixins: [_picker.default],
  name: 'CalendarPicker',
  props: {
    type: {
      default: 'date',
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['year', 'month', 'date', 'daterange', 'datetime', 'datetimerange']);
      }
    }
  }
};
exports.default = _default;

/***/ }),
/* 517 */
/***/ (function(module, exports, __webpack_require__) {

var setPrototypeOf = __webpack_require__(518);

function isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function _construct(Parent, args, Class) {
  if (isNativeReflectConstruct()) {
    module.exports = _construct = Reflect.construct;
  } else {
    module.exports = _construct = function _construct(Parent, args, Class) {
      var a = [null];
      a.push.apply(a, args);
      var Constructor = Function.bind.apply(Parent, a);
      var instance = new Constructor();
      if (Class) setPrototypeOf(instance, Class.prototype);
      return instance;
    };
  }

  return _construct.apply(null, arguments);
}

module.exports = _construct;

/***/ }),
/* 518 */
/***/ (function(module, exports) {

function _setPrototypeOf(o, p) {
  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

module.exports = _setPrototypeOf;

/***/ }),
/* 519 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _noop = _interopRequireDefault(__webpack_require__(13));

var logger = __webpack_require__(0).get("iview:utils:date");

// 把 YYYY-MM-DD 改成了 yyyy-MM-dd

/**
 * Parse or format dates
 * @class fecha
 */
var fecha = {};
var token = /d{1,4}|M{1,4}|yy(?:yy)?|S{1,3}|Do|ZZ|([HhMsDm])\1?|[aA]|"[^"]*"|'[^']*'/g;
var twoDigits = /\d\d?/;
var threeDigits = /\d{3}/;
var fourDigits = /\d{4}/;
var word = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF/]+(\s*?[\u0600-\u06FF]+){1,2}/i;

function shorten(arr, sLen) {
  var newArr = [];

  for (var i = 0, len = arr.length; i < len; i += 1) {
    newArr.push(arr[i].substr(0, sLen));
  }

  return newArr;
}

function monthUpdate(arrName) {
  return function _monthUpdate(d, v, i18n) {
    var index = i18n[arrName].indexOf(v.charAt(0).toUpperCase() + v.substr(1).toLowerCase());

    if (index !== -1) {
      d.month = index;
    }
  };
}

function pad(value, length) {
  var val = String(value);
  var len = length || 2;

  while (val.length < len) {
    val = "0".concat(val);
  }

  return val;
}

var dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
var monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
var monthNamesShort = shorten(monthNames, 3);
var dayNamesShort = shorten(dayNames, 3);
fecha.i18n = {
  amPm: ['am', 'pm'],
  dayNames: dayNames,
  dayNamesShort: dayNamesShort,
  DoFn: function DoFn(D) {
    return D + ['th', 'st', 'nd', 'rd'][D % 10 > 3 ? 0 : (D - D % 10 !== 10) * D % 10];
  },
  monthNames: monthNames,
  monthNamesShort: monthNamesShort
};
var formatFlags = {
  a: function a(dateObj, i18n) {
    return dateObj.getHours() < 12 ? i18n.amPm[0] : i18n.amPm[1];
  },
  A: function A(dateObj, i18n) {
    return dateObj.getHours() < 12 ? i18n.amPm[0].toUpperCase() : i18n.amPm[1].toUpperCase();
  },
  d: function d(dateObj) {
    return dateObj.getDate();
  },
  D: function D(dateObj) {
    return dateObj.getDay();
  },
  dd: function dd(dateObj) {
    return pad(dateObj.getDate());
  },
  DD: function DD(dateObj) {
    return pad(dateObj.getDay());
  },
  ddd: function ddd(dateObj, i18n) {
    return i18n.dayNamesShort[dateObj.getDay()];
  },
  dddd: function dddd(dateObj, i18n) {
    return i18n.dayNames[dateObj.getDay()];
  },
  Do: function Do(dateObj, i18n) {
    /* eslint-disable-next-line babel/new-cap */
    return i18n.DoFn(dateObj.getDate());
  },
  h: function h(dateObj) {
    return dateObj.getHours() % 12 || 12;
  },
  H: function H(dateObj) {
    return dateObj.getHours();
  },
  hh: function hh(dateObj) {
    return pad(dateObj.getHours() % 12 || 12);
  },
  HH: function HH(dateObj) {
    return pad(dateObj.getHours());
  },
  m: function m(dateObj) {
    return dateObj.getMinutes();
  },
  M: function M(dateObj) {
    return dateObj.getMonth() + 1;
  },
  mm: function mm(dateObj) {
    return pad(dateObj.getMinutes());
  },
  MM: function MM(dateObj) {
    return pad(dateObj.getMonth() + 1);
  },
  MMM: function MMM(dateObj, i18n) {
    return i18n.monthNamesShort[dateObj.getMonth()];
  },
  MMMM: function MMMM(dateObj, i18n) {
    return i18n.monthNames[dateObj.getMonth()];
  },
  s: function s(dateObj) {
    return dateObj.getSeconds();
  },
  S: function S(dateObj) {
    return Math.round(dateObj.getMilliseconds() / 100);
  },
  ss: function ss(dateObj) {
    return pad(dateObj.getSeconds());
  },
  SS: function SS(dateObj) {
    return pad(Math.round(dateObj.getMilliseconds() / 10), 2);
  },
  SSS: function SSS(dateObj) {
    return pad(dateObj.getMilliseconds(), 3);
  },
  yy: function yy(dateObj) {
    return String(dateObj.getFullYear()).substr(2);
  },
  yyyy: function yyyy(dateObj) {
    return dateObj.getFullYear();
  },
  ZZ: function ZZ(dateObj) {
    var o = dateObj.getTimezoneOffset();
    return (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4);
  }
};
var parseFlags = {
  a: [word, function _a(d, v, i18n) {
    var val = v.toLowerCase();

    if (val === i18n.amPm[0]) {
      d.isPm = false;
    } else if (val === i18n.amPm[1]) {
      d.isPm = true;
    }
  }],
  d: [twoDigits, function _d(d, v) {
    d.day = v;
  }],
  D: [twoDigits, _noop.default],
  ddd: [word, _noop.default],
  h: [twoDigits, function _h(d, v) {
    d.hour = v;
  }],
  m: [twoDigits, function _m(d, v) {
    d.minute = v;
  }],
  M: [twoDigits, function _M(d, v) {
    d.month = v - 1;
  }],
  MMM: [word, monthUpdate('monthNamesShort')],
  MMMM: [word, monthUpdate('monthNames')],
  s: [twoDigits, function _s(d, v) {
    d.second = v;
  }],
  S: [/\d/, function _S(d, v) {
    d.millisecond = v * 100;
  }],
  SS: [/\d{2}/, function _SS(d, v) {
    d.millisecond = v * 10;
  }],
  SSS: [threeDigits, function _SSS(d, v) {
    d.millisecond = v;
  }],
  yy: [twoDigits, function _yy(d, v) {
    var da = new Date();
    var cent = +"".concat(da.getFullYear()).substr(0, 2);
    d.year = "".concat(v > 68 ? cent - 1 : cent).concat(v);
  }],
  yyyy: [fourDigits, function _yyyy(d, v) {
    d.year = v;
  }],
  ZZ: [/[+-]\d\d:?\d\d/, function _ZZ(d, v) {
    var parts = "".concat(v).match(/([+-]|\d\d)/gi);
    var minutes;

    if (parts) {
      minutes = +(parts[1] * 60) + parseInt(parts[2], 10);
      d.timezoneOffset = parts[0] === '+' ? minutes : -minutes;
    }
  }]
}; // parseFlags.DD = parseFlags.DD;

parseFlags.dddd = parseFlags.ddd;
parseFlags.Do = parseFlags.d;
parseFlags.dd = parseFlags.d;
parseFlags.mm = parseFlags.m;
parseFlags.hh = parseFlags.h;
parseFlags.H = parseFlags.h;
parseFlags.HH = parseFlags.h;
parseFlags.MM = parseFlags.M;
parseFlags.ss = parseFlags.s;
parseFlags.A = parseFlags.a; // Some common format strings

fecha.masks = {
  default: 'ddd MMM dd yyyy HH:mm:ss',
  fullDate: 'dddd, MMMM d, yyyy',
  longDate: 'MMMM d, yyyy',
  longTime: 'HH:mm:ss.SSS',
  mediumDate: 'MMM d, yyyy',
  mediumTime: 'HH:mm:ss',
  shortDate: 'M/D/yy',
  shortTime: 'HH:mm'
};
/**
 * Format a date.
 *
 * @function format
 * @param {Date|number} dateObject - A date object or number to be parsed.
 * @param {string} maskString - Format of the date, i.e. 'mm-dd-yy' or 'shortDate'.
 * @param {Object} i18nSettings - Locale settings.
 */

fecha.format = function _format(dateObject, maskString, i18nSettings) {
  var _this = this;

  var dateObj = dateObject;
  var i18n = i18nSettings || fecha.i18n;

  if (typeof dateObj === 'number') {
    dateObj = new Date(dateObj);
  }

  if (Object.prototype.toString.call(dateObj) !== '[object Date]' || Number.isNaN(dateObj.getTime())) {
    throw new Error('Invalid Date in fecha.format');
  }

  var mask = fecha.masks[maskString] || maskString || fecha.masks.default;
  return mask.replace(token, function ($0) {
    (0, _newArrowCheck2.default)(this, _this);
    return $0 in formatFlags ? formatFlags[$0](dateObj, i18n) : $0.slice(1, $0.length - 1);
  }.bind(this));
};
/**
 * Parse a date string into an object, changes - into /.
 *
 * @function parse
 * @param {string} dateString - Date string.
 * @param {string} formatString - Date parse format.
 * @param {Object} i18nSettings - Locale settings.
 * @returns {Date|boolean} Date or a boolean.
 */


fecha.parse = function _parse(dateString, formatString, i18nSettings) {
  var _this2 = this;

  var dateStr = dateString;
  var format = formatString;
  var i18n = i18nSettings || fecha.i18n;

  if (typeof format !== 'string') {
    throw new Error('Invalid format in fecha.parse');
  }

  format = fecha.masks[format] || format; // Avoid regular expression denial of service, fail early for really long strings
  // https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS

  if (dateStr.length > 1000) {
    return false;
  }

  var isValid = true;
  var dateInfo = {};
  format.replace(token, function ($0) {
    var _this3 = this;

    (0, _newArrowCheck2.default)(this, _this2);

    if (parseFlags[$0]) {
      var info = parseFlags[$0];
      var index = dateStr.search(info[0]);

      if (index === -1) {
        isValid = false;
      } else {
        dateStr.replace(info[0], function (result) {
          (0, _newArrowCheck2.default)(this, _this3);
          info[1](dateInfo, result, i18n);
          dateStr = dateStr.substr(index + result.length);
          return result;
        }.bind(this));
      }
    }

    return parseFlags[$0] ? '' : $0.slice(1, $0.length - 1);
  }.bind(this));

  if (!isValid) {
    return false;
  }

  var today = new Date();

  if (dateInfo.isPm === true && dateInfo.hour != null && +dateInfo.hour !== 12) {
    dateInfo.hour = +dateInfo.hour + 12;
  } else if (dateInfo.isPm === false && +dateInfo.hour === 12) {
    dateInfo.hour = 0;
  }

  var date;

  if (dateInfo.timezoneOffset != null) {
    dateInfo.minute = +(dateInfo.minute || 0) - +dateInfo.timezoneOffset;
    date = new Date(Date.UTC(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1, dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0));
  } else {
    date = new Date(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1, dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0);
  }

  return date;
};

var _default = fecha;
exports.default = _default;

/***/ }),
/* 520 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _date_vue_vue_type_template_id_5591d0bf___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(342);
/* harmony import */ var _date_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(125);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _date_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _date_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _date_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _date_vue_vue_type_template_id_5591d0bf___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _date_vue_vue_type_template_id_5591d0bf___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 521 */
/***/ (function(module, exports, __webpack_require__) {


module.exports = {
	Generator: __webpack_require__(522),
	addLabels: __webpack_require__(523)
}


/***/ }),
/* 522 */
/***/ (function(module, exports) {

// calendar with 8 column x 7 rows

var oneDay = 1000 * 60 * 60 * 24;

function daysInMonth(year, month) {
    return new Date(year, month + 1, 0).getDate();
}

function getYear(year, month, weekNr){
	if (month === 0 && weekNr > 50) return year - 1;
	else if(month === 11 && weekNr < 10) return year + 1;
	else return year;
}

function getDateInfo(y, m, d, iso) {
	if (m > 11){
		m = 0;
		y++;
	}
    var currentDay = new Date(y, m, d);
    if (iso) currentDay.setDate(currentDay.getDate() + 4 - (currentDay.getDay() || 7));
    var year = iso ? currentDay.getFullYear() : y;
    var firstOfJanuary = new Date(year, 0, 1);
    var numberOfDays = 1 + Math.round((currentDay - firstOfJanuary) / oneDay);

    if (!iso) numberOfDays += firstOfJanuary.getDay();
	var w = Math.ceil(numberOfDays / 7);
    if (!iso) {
		var initialDay = new Date(y, m, d);
        var beginOfNextYear = new Date(y + 1, 0, 1);
        var startDayOfNextYear = beginOfNextYear.getDay();
        if (initialDay.getTime() >= beginOfNextYear.getTime() - (oneDay * startDayOfNextYear)) w = 1;
    }
	return w;
}

function getMonthCalender(year, month, iteratorFns){

	// config passed by binding
	var lang = this.lang || 'en';
	var onlyDays = this.onlyDays;
	var weekStart = typeof this.weekStart === 'undefined' ? 1 : this.weekStart;
	var iso = weekStart === 1;
	var cells = [];
	var monthStartDate = new Date(year, month, 1);	// make a date object
	var dayOfWeek = monthStartDate.getDay() || (iso ? 7 : 0);	// month week day for day 1
	var currentDay = weekStart - dayOfWeek; 		// starting position of first day in the week
	var weekNr = getDateInfo(year, month, 1, iso);	// get week number of month start
	var maxDays = daysInMonth(year, month);			// total days in current month
	var lastMonthMaxDays = daysInMonth(year, month - 1);
	var currentMonth, day, dayBefore;
	var currentYear = getYear(year, month, weekNr);

	var returnObject = {
		month: month,
		year: year,
		daysInMonth: maxDays
	};

	for (var i = 0; i < 7; i++){					// 7 rows in the calendar
		dayBefore = currentDay;
		for (var j = 0; j < 8; j++){				// 8 columns: week nr + 7 days p/ week
			if (i > 0 && j > 0) currentDay++;		// not first row, not week nr column

			if (currentDay > maxDays || currentDay < 1){ // day belongs to sibling month
				// calculate day in sibling month
				day = currentDay > maxDays ? currentDay - maxDays : lastMonthMaxDays + currentDay;
				currentMonth = currentDay > maxDays ? month + 1 : month - 1;
			} else {
				day = currentDay;
				currentMonth = month;
			}

			var type = (function(){
				if (j === 0) return 'weekLabel';
				else if (i === 0) return 'dayLabel';
				else if (currentDay < 1) return 'prevMonth';
				else if (currentDay > maxDays) return 'nextMonth';
				else return 'monthDay';
			})();
			var isDay = dayBefore !== currentDay && i > 0;

			var dayData = {
				desc: isDay ? day : weekNr,
				week: weekNr,
				type: type,
				format: iso ? 'ISO 8601' : 'US',
				date: isDay ? new Date(Date.UTC(year, currentMonth, day)) : false,
				year: currentYear,
				index: cells.length
			};

			if (iteratorFns){
				if (typeof iteratorFns === "function") dayData = iteratorFns.call(returnObject, dayData, lang);
				else iteratorFns.forEach(function(fn){
					dayData = fn.call(returnObject, dayData, lang);
				});
			}
			if (onlyDays && isDay) cells.push(dayData);	// add only days
			else if (!onlyDays) cells.push(dayData);	// add also week numbers and labels
		}
		if (i > 0) weekNr = getDateInfo(year, currentMonth, day + 1, iso);
		currentYear = getYear(year, month, weekNr);
	}

	returnObject.cells = cells;
	return returnObject;
}

module.exports = function (config){
	return getMonthCalender.bind(config);
}


/***/ }),
/* 523 */
/***/ (function(module, exports, __webpack_require__) {

// calendar with 8 column x 7 rows

var labels = __webpack_require__(524);

function isIterable(variable){
	if (variable == null) return false;
	if (variable.constructor === Array) return true;
	if (variable.constructor === Object) return true;
	return false;
}

function merge(_new, _old){
    for (var prop in _new){
        if (!_old[prop]) _old[prop] = _new[prop];
        else if (isIterable(_new[prop])) merge(_new[prop], _old[prop]);
    }
}

function addLabels(dayObject, lang){
	var cssClass = [labels.classes[dayObject.type]];

	if (dayObject.class) dayObject.class = (typeof dayObject.class == 'string' ? [dayObject.class] : dayObject.class).concat(cssClass);
	else dayObject.class = cssClass;

	if (dayObject.type.indexOf('Label') > 0){
		if (dayObject.index == 0 && labels.weekPlaceholder) dayObject.desc = labels.weekPlaceholder;
		else if (dayObject.index < 8) dayObject.desc = labels.columnNames[lang][dayObject.index];
		else if (dayObject.index % 8 == 0) dayObject.desc = dayObject.week;
	}

	if (dayObject.date) dayObject.monthName = labels.monthNames[lang][dayObject.date.getMonth()];
	if (!this.monthName) this.monthName = labels.monthNames[lang][this.month];
	if (!this.labels) this.labels = {
		monthNames: labels.monthNames[lang],
		columnNames: labels.columnNames[lang],
		classes: labels.classes
	}

	return dayObject;
}
addLabels.setLabels = function(newOptions){
	merge(newOptions, labels);
};

module.exports = addLabels;


/***/ }),
/* 524 */
/***/ (function(module, exports) {


module.exports = {
	weekPlaceholder: '',
	columnNames: {
		en: {
			0: 'w',
			1: 'monday',
			2: 'tuesday',
			3: 'wednesday',
			4: 'thursday',
			5: 'friday',
			6: 'saturday',
			7: 'sunday'
		},
		sv: {
			0: 'v',
			1: 'måndag',
			2: 'tisdag',
			3: 'onsdag',
			4: 'torsdag',
			5: 'fredag',
			6: 'lördag',
			7: 'söndag'
		},
		pt: {
			0: 's',
			1: 'segunda',
			2: 'terça',
			3: 'quarta',
			4: 'quinta',
			5: 'sexta',
			6: 'sábado',
			7: 'domingo'
		}
	},
	monthNames: {
		en: [
			"January",
			"February",
			"March",
			"April",
			"May",
			"June",
			"July",
			"August",
			"September",
			"October",
			"November",
			"December"
		],
		sv: [
			"januari",
			"februari",
			"mars",
			"april",
			"maj",
			"juni",
			"juli",
			"augusti",
			"september",
			"oktober",
			"november",
			"december"
		],
		pt: [
			"Janeiro",
			"Fevereiro",
			"Março",
			"Abril",
			"Maio",
			"Junho",
			"Julho",
			"Agosto",
			"Setembro",
			"Outubro",
			"Novembro",
			"Dezembro"
		]
	},
	classes: {
		dayLabel: 'day-of-week',
		weekLabel: 'week-number',
		prevMonth: 'inactive',
		nextMonth: 'inactive',
		monthDay: 'day-in-month'
	}
};


/***/ }),
/* 525 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _date_range_vue_vue_type_template_id_157542aa___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(345);
/* harmony import */ var _date_range_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(141);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _date_range_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _date_range_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _date_range_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _date_range_vue_vue_type_template_id_157542aa___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _date_range_vue_vue_type_template_id_157542aa___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 526 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _dropdown = _interopRequireDefault(__webpack_require__(527));

var _dropdownMenu = _interopRequireDefault(__webpack_require__(528));

var _dropdownItem = _interopRequireDefault(__webpack_require__(529));

var logger = __webpack_require__(0).get("iview:components:dropdown:index");

_dropdown.default.Menu = _dropdownMenu.default;
_dropdown.default.Item = _dropdownItem.default;
var _default = _dropdown.default;
exports.default = _default;

/***/ }),
/* 527 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _dropdown_vue_vue_type_template_id_bb932a8e___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(319);
/* harmony import */ var _dropdown_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(145);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _dropdown_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _dropdown_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _dropdown_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _dropdown_vue_vue_type_template_id_bb932a8e___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _dropdown_vue_vue_type_template_id_bb932a8e___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 528 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _dropdown_menu_vue_vue_type_template_id_03758086___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(320);
/* harmony import */ var _dropdown_menu_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(147);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _dropdown_menu_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _dropdown_menu_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _dropdown_menu_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _dropdown_menu_vue_vue_type_template_id_03758086___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _dropdown_menu_vue_vue_type_template_id_03758086___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 529 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _dropdown_item_vue_vue_type_template_id_a1b67670___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(321);
/* harmony import */ var _dropdown_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(149);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _dropdown_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _dropdown_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _dropdown_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _dropdown_item_vue_vue_type_template_id_a1b67670___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _dropdown_item_vue_vue_type_template_id_a1b67670___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 530 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _footer = _interopRequireDefault(__webpack_require__(399));

var logger = __webpack_require__(0).get("iview:components:footer:index");

var _default = _footer.default;
exports.default = _default;

/***/ }),
/* 531 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _form = _interopRequireDefault(__webpack_require__(532));

var _formItem = _interopRequireDefault(__webpack_require__(533));

var logger = __webpack_require__(0).get("iview:components:form:index");

_form.default.Item = _formItem.default;
var _default = _form.default;
exports.default = _default;

/***/ }),
/* 532 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _form_vue_vue_type_template_id_44ca2750___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(323);
/* harmony import */ var _form_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(153);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _form_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _form_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _form_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _form_vue_vue_type_template_id_44ca2750___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _form_vue_vue_type_template_id_44ca2750___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 533 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _form_item_vue_vue_type_template_id_e6ee5b8e___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(324);
/* harmony import */ var _form_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(155);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _form_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _form_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _form_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _form_item_vue_vue_type_template_id_e6ee5b8e___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _form_item_vue_vue_type_template_id_e6ee5b8e___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 534 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(535), __esModule: true };

/***/ }),
/* 535 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(536);
module.exports = __webpack_require__(40).Object.assign;


/***/ }),
/* 536 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.1 Object.assign(target, source)
var $export = __webpack_require__(266);

$export($export.S + $export.F, 'Object', { assign: __webpack_require__(539) });


/***/ }),
/* 537 */
/***/ (function(module, exports, __webpack_require__) {

// optional / simple context binding
var aFunction = __webpack_require__(538);
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),
/* 538 */
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};


/***/ }),
/* 539 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 19.1.2.1 Object.assign(target, source, ...)
var getKeys = __webpack_require__(51);
var gOPS = __webpack_require__(273);
var pIE = __webpack_require__(54);
var toObject = __webpack_require__(405);
var IObject = __webpack_require__(403);
var $assign = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
module.exports = !$assign || __webpack_require__(42)(function () {
  var A = {};
  var B = {};
  // eslint-disable-next-line no-undef
  var S = Symbol();
  var K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function (k) { B[k] = k; });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
  var T = toObject(target);
  var aLen = arguments.length;
  var index = 1;
  var getSymbols = gOPS.f;
  var isEnum = pIE.f;
  while (aLen > index) {
    var S = IObject(arguments[index++]);
    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
  } return T;
} : $assign;


/***/ }),
/* 540 */
/***/ (function(module, exports, __webpack_require__) {

// false -> Array#indexOf
// true  -> Array#includes
var toIObject = __webpack_require__(33);
var toLength = __webpack_require__(541);
var toAbsoluteIndex = __webpack_require__(542);
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};


/***/ }),
/* 541 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.15 ToLength
var toInteger = __webpack_require__(269);
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};


/***/ }),
/* 542 */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(269);
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};


/***/ }),
/* 543 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(544), __esModule: true };

/***/ }),
/* 544 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(545);
__webpack_require__(551);
module.exports = __webpack_require__(276).f('iterator');


/***/ }),
/* 545 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $at = __webpack_require__(546)(true);

// 21.1.3.27 String.prototype[@@iterator]()
__webpack_require__(406)(String, 'String', function (iterated) {
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});


/***/ }),
/* 546 */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(269);
var defined = __webpack_require__(268);
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};


/***/ }),
/* 547 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var create = __webpack_require__(408);
var descriptor = __webpack_require__(50);
var setToStringTag = __webpack_require__(275);
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
__webpack_require__(30)(IteratorPrototype, __webpack_require__(34)('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};


/***/ }),
/* 548 */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(31);
var anObject = __webpack_require__(49);
var getKeys = __webpack_require__(51);

module.exports = __webpack_require__(32) ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};


/***/ }),
/* 549 */
/***/ (function(module, exports, __webpack_require__) {

var document = __webpack_require__(23).document;
module.exports = document && document.documentElement;


/***/ }),
/* 550 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = __webpack_require__(25);
var toObject = __webpack_require__(405);
var IE_PROTO = __webpack_require__(270)('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};


/***/ }),
/* 551 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(552);
var global = __webpack_require__(23);
var hide = __webpack_require__(30);
var Iterators = __webpack_require__(274);
var TO_STRING_TAG = __webpack_require__(34)('toStringTag');

var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
  'TextTrackList,TouchList').split(',');

for (var i = 0; i < DOMIterables.length; i++) {
  var NAME = DOMIterables[i];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
  Iterators[NAME] = Iterators.Array;
}


/***/ }),
/* 552 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var addToUnscopables = __webpack_require__(553);
var step = __webpack_require__(554);
var Iterators = __webpack_require__(274);
var toIObject = __webpack_require__(33);

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = __webpack_require__(406)(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),
/* 553 */
/***/ (function(module, exports) {

module.exports = function () { /* empty */ };


/***/ }),
/* 554 */
/***/ (function(module, exports) {

module.exports = function (done, value) {
  return { value: value, done: !!done };
};


/***/ }),
/* 555 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(556), __esModule: true };

/***/ }),
/* 556 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(557);
__webpack_require__(563);
__webpack_require__(564);
__webpack_require__(565);
module.exports = __webpack_require__(40).Symbol;


/***/ }),
/* 557 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// ECMAScript 6 symbols shim
var global = __webpack_require__(23);
var has = __webpack_require__(25);
var DESCRIPTORS = __webpack_require__(32);
var $export = __webpack_require__(266);
var redefine = __webpack_require__(407);
var META = __webpack_require__(558).KEY;
var $fails = __webpack_require__(42);
var shared = __webpack_require__(271);
var setToStringTag = __webpack_require__(275);
var uid = __webpack_require__(53);
var wks = __webpack_require__(34);
var wksExt = __webpack_require__(276);
var wksDefine = __webpack_require__(277);
var enumKeys = __webpack_require__(559);
var isArray = __webpack_require__(560);
var anObject = __webpack_require__(49);
var isObject = __webpack_require__(41);
var toIObject = __webpack_require__(33);
var toPrimitive = __webpack_require__(267);
var createDesc = __webpack_require__(50);
var _create = __webpack_require__(408);
var gOPNExt = __webpack_require__(561);
var $GOPD = __webpack_require__(562);
var $DP = __webpack_require__(31);
var $keys = __webpack_require__(51);
var gOPD = $GOPD.f;
var dP = $DP.f;
var gOPN = gOPNExt.f;
var $Symbol = global.Symbol;
var $JSON = global.JSON;
var _stringify = $JSON && $JSON.stringify;
var PROTOTYPE = 'prototype';
var HIDDEN = wks('_hidden');
var TO_PRIMITIVE = wks('toPrimitive');
var isEnum = {}.propertyIsEnumerable;
var SymbolRegistry = shared('symbol-registry');
var AllSymbols = shared('symbols');
var OPSymbols = shared('op-symbols');
var ObjectProto = Object[PROTOTYPE];
var USE_NATIVE = typeof $Symbol == 'function';
var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = DESCRIPTORS && $fails(function () {
  return _create(dP({}, 'a', {
    get: function () { return dP(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (it, key, D) {
  var protoDesc = gOPD(ObjectProto, key);
  if (protoDesc) delete ObjectProto[key];
  dP(it, key, D);
  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
} : dP;

var wrap = function (tag) {
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D) {
  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if (has(AllSymbols, key)) {
    if (!D.enumerable) {
      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
      D = _create(D, { enumerable: createDesc(0, false) });
    } return setSymbolDesc(it, key, D);
  } return dP(it, key, D);
};
var $defineProperties = function defineProperties(it, P) {
  anObject(it);
  var keys = enumKeys(P = toIObject(P));
  var i = 0;
  var l = keys.length;
  var key;
  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P) {
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key) {
  var E = isEnum.call(this, key = toPrimitive(key, true));
  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
  it = toIObject(it);
  key = toPrimitive(key, true);
  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
  var D = gOPD(it, key);
  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it) {
  var names = gOPN(toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
  } return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
  var IS_OP = it === ObjectProto;
  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
  } return result;
};

// 19.4.1.1 Symbol([description])
if (!USE_NATIVE) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function (value) {
      if (this === ObjectProto) $set.call(OPSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    };
    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
    return wrap(tag);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return this._k;
  });

  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f = $defineProperty;
  __webpack_require__(409).f = gOPNExt.f = $getOwnPropertyNames;
  __webpack_require__(54).f = $propertyIsEnumerable;
  __webpack_require__(273).f = $getOwnPropertySymbols;

  if (DESCRIPTORS && !__webpack_require__(52)) {
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }

  wksExt.f = function (name) {
    return wrap(wks(name));
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

for (var es6Symbols = (
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);

for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function (key) {
    return has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
  },
  useSetter: function () { setter = true; },
  useSimple: function () { setter = false; }
});

$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it) {
    var args = [it];
    var i = 1;
    var replacer, $replacer;
    while (arguments.length > i) args.push(arguments[i++]);
    $replacer = replacer = args[1];
    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
    if (!isArray(replacer)) replacer = function (key, value) {
      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
      if (!isSymbol(value)) return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(30)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
setToStringTag(global.JSON, 'JSON', true);


/***/ }),
/* 558 */
/***/ (function(module, exports, __webpack_require__) {

var META = __webpack_require__(53)('meta');
var isObject = __webpack_require__(41);
var has = __webpack_require__(25);
var setDesc = __webpack_require__(31).f;
var id = 0;
var isExtensible = Object.isExtensible || function () {
  return true;
};
var FREEZE = !__webpack_require__(42)(function () {
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function (it) {
  setDesc(it, META, { value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  } });
};
var fastKey = function (it, create) {
  // return primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function (it, create) {
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY: META,
  NEED: false,
  fastKey: fastKey,
  getWeak: getWeak,
  onFreeze: onFreeze
};


/***/ }),
/* 559 */
/***/ (function(module, exports, __webpack_require__) {

// all enumerable object keys, includes symbols
var getKeys = __webpack_require__(51);
var gOPS = __webpack_require__(273);
var pIE = __webpack_require__(54);
module.exports = function (it) {
  var result = getKeys(it);
  var getSymbols = gOPS.f;
  if (getSymbols) {
    var symbols = getSymbols(it);
    var isEnum = pIE.f;
    var i = 0;
    var key;
    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
  } return result;
};


/***/ }),
/* 560 */
/***/ (function(module, exports, __webpack_require__) {

// 7.2.2 IsArray(argument)
var cof = __webpack_require__(404);
module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};


/***/ }),
/* 561 */
/***/ (function(module, exports, __webpack_require__) {

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIObject = __webpack_require__(33);
var gOPN = __webpack_require__(409).f;
var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return gOPN(it);
  } catch (e) {
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
};


/***/ }),
/* 562 */
/***/ (function(module, exports, __webpack_require__) {

var pIE = __webpack_require__(54);
var createDesc = __webpack_require__(50);
var toIObject = __webpack_require__(33);
var toPrimitive = __webpack_require__(267);
var has = __webpack_require__(25);
var IE8_DOM_DEFINE = __webpack_require__(400);
var gOPD = Object.getOwnPropertyDescriptor;

exports.f = __webpack_require__(32) ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = toIObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return gOPD(O, P);
  } catch (e) { /* empty */ }
  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
};


/***/ }),
/* 563 */
/***/ (function(module, exports) {



/***/ }),
/* 564 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(277)('asyncIterator');


/***/ }),
/* 565 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(277)('observable');


/***/ }),
/* 566 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _header = _interopRequireDefault(__webpack_require__(410));

var logger = __webpack_require__(0).get("iview:components:header:index");

var _default = _header.default;
exports.default = _default;

/***/ }),
/* 567 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _input = _interopRequireDefault(__webpack_require__(37));

var logger = __webpack_require__(0).get("iview:components:input:index");

var _default = _input.default;
exports.default = _default;

/***/ }),
/* 568 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _inputNumber = _interopRequireDefault(__webpack_require__(411));

var logger = __webpack_require__(0).get("iview:components:input-number:index");

var _default = _inputNumber.default;
exports.default = _default;

/***/ }),
/* 569 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _scroll = _interopRequireDefault(__webpack_require__(570));

var logger = __webpack_require__(0).get("iview:components:scroll:index");

var _default = _scroll.default;
exports.default = _default;

/***/ }),
/* 570 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _scroll_vue_vue_type_template_id_024887be___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(338);
/* harmony import */ var _scroll_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(161);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _scroll_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _scroll_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _scroll_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _scroll_vue_vue_type_template_id_024887be___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _scroll_vue_vue_type_template_id_024887be___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 571 */
/***/ (function(module, exports, __webpack_require__) {

var debounce = __webpack_require__(572),
    isObject = __webpack_require__(412);

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a throttled function that only invokes `func` at most once per
 * every `wait` milliseconds. The throttled function comes with a `cancel`
 * method to cancel delayed `func` invocations and a `flush` method to
 * immediately invoke them. Provide `options` to indicate whether `func`
 * should be invoked on the leading and/or trailing edge of the `wait`
 * timeout. The `func` is invoked with the last arguments provided to the
 * throttled function. Subsequent calls to the throttled function return the
 * result of the last `func` invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the throttled function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.throttle` and `_.debounce`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to throttle.
 * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=true]
 *  Specify invoking on the leading edge of the timeout.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new throttled function.
 * @example
 *
 * // Avoid excessively updating the position while scrolling.
 * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
 *
 * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
 * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
 * jQuery(element).on('click', throttled);
 *
 * // Cancel the trailing throttled invocation.
 * jQuery(window).on('popstate', throttled.cancel);
 */
function throttle(func, wait, options) {
  var leading = true,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  if (isObject(options)) {
    leading = 'leading' in options ? !!options.leading : leading;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }
  return debounce(func, wait, {
    'leading': leading,
    'maxWait': wait,
    'trailing': trailing
  });
}

module.exports = throttle;


/***/ }),
/* 572 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(412),
    now = __webpack_require__(573),
    toNumber = __webpack_require__(576);

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max,
    nativeMin = Math.min;

/**
 * Creates a debounced function that delays invoking `func` until after `wait`
 * milliseconds have elapsed since the last time the debounced function was
 * invoked. The debounced function comes with a `cancel` method to cancel
 * delayed `func` invocations and a `flush` method to immediately invoke them.
 * Provide `options` to indicate whether `func` should be invoked on the
 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
 * with the last arguments provided to the debounced function. Subsequent
 * calls to the debounced function return the result of the last `func`
 * invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the debounced function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.debounce` and `_.throttle`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to debounce.
 * @param {number} [wait=0] The number of milliseconds to delay.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=false]
 *  Specify invoking on the leading edge of the timeout.
 * @param {number} [options.maxWait]
 *  The maximum time `func` is allowed to be delayed before it's invoked.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // Avoid costly calculations while the window size is in flux.
 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
 *
 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
 * jQuery(element).on('click', _.debounce(sendMail, 300, {
 *   'leading': true,
 *   'trailing': false
 * }));
 *
 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
 * var source = new EventSource('/stream');
 * jQuery(source).on('message', debounced);
 *
 * // Cancel the trailing debounced invocation.
 * jQuery(window).on('popstate', debounced.cancel);
 */
function debounce(func, wait, options) {
  var lastArgs,
      lastThis,
      maxWait,
      result,
      timerId,
      lastCallTime,
      lastInvokeTime = 0,
      leading = false,
      maxing = false,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  wait = toNumber(wait) || 0;
  if (isObject(options)) {
    leading = !!options.leading;
    maxing = 'maxWait' in options;
    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }

  function invokeFunc(time) {
    var args = lastArgs,
        thisArg = lastThis;

    lastArgs = lastThis = undefined;
    lastInvokeTime = time;
    result = func.apply(thisArg, args);
    return result;
  }

  function leadingEdge(time) {
    // Reset any `maxWait` timer.
    lastInvokeTime = time;
    // Start the timer for the trailing edge.
    timerId = setTimeout(timerExpired, wait);
    // Invoke the leading edge.
    return leading ? invokeFunc(time) : result;
  }

  function remainingWait(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime,
        timeWaiting = wait - timeSinceLastCall;

    return maxing
      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)
      : timeWaiting;
  }

  function shouldInvoke(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime;

    // Either this is the first call, activity has stopped and we're at the
    // trailing edge, the system time has gone backwards and we're treating
    // it as the trailing edge, or we've hit the `maxWait` limit.
    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
  }

  function timerExpired() {
    var time = now();
    if (shouldInvoke(time)) {
      return trailingEdge(time);
    }
    // Restart the timer.
    timerId = setTimeout(timerExpired, remainingWait(time));
  }

  function trailingEdge(time) {
    timerId = undefined;

    // Only invoke if we have `lastArgs` which means `func` has been
    // debounced at least once.
    if (trailing && lastArgs) {
      return invokeFunc(time);
    }
    lastArgs = lastThis = undefined;
    return result;
  }

  function cancel() {
    if (timerId !== undefined) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = undefined;
  }

  function flush() {
    return timerId === undefined ? result : trailingEdge(now());
  }

  function debounced() {
    var time = now(),
        isInvoking = shouldInvoke(time);

    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time;

    if (isInvoking) {
      if (timerId === undefined) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        // Handle invocations in a tight loop.
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === undefined) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}

module.exports = debounce;


/***/ }),
/* 573 */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(574);

/**
 * Gets the timestamp of the number of milliseconds that have elapsed since
 * the Unix epoch (1 January 1970 00:00:00 UTC).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Date
 * @returns {number} Returns the timestamp.
 * @example
 *
 * _.defer(function(stamp) {
 *   console.log(_.now() - stamp);
 * }, _.now());
 * // => Logs the number of milliseconds it took for the deferred invocation.
 */
var now = function() {
  return root.Date.now();
};

module.exports = now;


/***/ }),
/* 574 */
/***/ (function(module, exports, __webpack_require__) {

var freeGlobal = __webpack_require__(575);

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

module.exports = root;


/***/ }),
/* 575 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

module.exports = freeGlobal;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(255)))

/***/ }),
/* 576 */
/***/ (function(module, exports) {

/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */
function identity(value) {
  return value;
}

module.exports = identity;


/***/ }),
/* 577 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _loading_component_vue_vue_type_template_id_0166749f_lang_html___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(356);
/* harmony import */ var _loading_component_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(163);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _loading_component_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _loading_component_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _loading_component_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _loading_component_vue_vue_type_template_id_0166749f_lang_html___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _loading_component_vue_vue_type_template_id_0166749f_lang_html___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 578 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _layout = _interopRequireDefault(__webpack_require__(579));

var _header = _interopRequireDefault(__webpack_require__(410));

var _sider = _interopRequireDefault(__webpack_require__(413));

var _content = _interopRequireDefault(__webpack_require__(389));

var _footer = _interopRequireDefault(__webpack_require__(399));

var logger = __webpack_require__(0).get("iview:components:layout:index");

_layout.default.Header = _header.default;
_layout.default.Sider = _sider.default;
_layout.default.Content = _content.default;
_layout.default.Footer = _footer.default;
var _default = _layout.default;
exports.default = _default;

/***/ }),
/* 579 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _layout_vue_vue_type_template_id_f384befc___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(340);
/* harmony import */ var _layout_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(165);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _layout_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _layout_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _layout_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _layout_vue_vue_type_template_id_f384befc___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _layout_vue_vue_type_template_id_f384befc___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 580 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _get = _interopRequireDefault(__webpack_require__(26));

var _loadingBar = _interopRequireDefault(__webpack_require__(582));

var logger = __webpack_require__(0).get("iview:components:loading-bar:index");

var loadingBarInstance;
var color = 'primary';
var failedColor = 'error';
var height = 2;
var timer;

function getLoadingBarInstance() {
  loadingBarInstance = loadingBarInstance || _loadingBar.default.newInstance({
    color: color,
    failedColor: failedColor,
    height: height
  });
  return loadingBarInstance;
}

function _update(options) {
  var instance = getLoadingBarInstance();
  instance.update(options);
}

function hide() {
  var _this = this;

  setTimeout(function () {
    var _this2 = this;

    (0, _newArrowCheck2.default)(this, _this);

    _update({
      show: false
    });

    setTimeout(function () {
      (0, _newArrowCheck2.default)(this, _this2);

      _update({
        percent: 0
      });
    }.bind(this), 200);
  }.bind(this), 800);
}

function clearTimer() {
  if (timer) {
    clearInterval(timer);
    timer = null;
  }
}

var _default = {
  config: function config(options) {
    if (options.color) {
      color = (0, _get.default)(options, 'color');
    }

    if (options.failedColor) {
      failedColor = (0, _get.default)(options, 'failedColor');
    }

    if (options.height) {
      height = (0, _get.default)(options, 'height');
    }
  },
  destroy: function destroy() {
    clearTimer();
    var instance = getLoadingBarInstance();
    loadingBarInstance = null;
    instance.destroy();
  },
  error: function error() {
    clearTimer();

    _update({
      percent: 100,
      show: true,
      status: 'error'
    });

    hide();
  },
  finish: function finish() {
    clearTimer();

    _update({
      percent: 100,
      show: true,
      status: 'success'
    });

    hide();
  },
  start: function start() {
    var _this3 = this;

    if (timer) {
      return;
    }

    var percent = 0;

    _update({
      percent: percent,
      show: true,
      status: 'success'
    });

    timer = setInterval(function () {
      (0, _newArrowCheck2.default)(this, _this3);
      percent += Math.floor(Math.random() * 3 + 5);

      if (percent > 95) {
        clearTimer();
      }

      _update({
        percent: percent,
        show: true,
        status: 'success'
      });
    }.bind(this), 200);
  },
  update: function update(percent) {
    clearTimer();

    _update({
      percent: percent,
      show: true,
      status: 'success'
    });
  }
};
exports.default = _default;

/***/ }),
/* 581 */
/***/ (function(module, exports, __webpack_require__) {

var castPath = __webpack_require__(384),
    toKey = __webpack_require__(385);

/**
 * The base implementation of `_.get` without support for default values.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @returns {*} Returns the resolved value.
 */
function baseGet(object, path) {
  path = castPath(path, object);

  var index = 0,
      length = path.length;

  while (object != null && index < length) {
    object = object[toKey(path[index++])];
  }
  return (index && index == length) ? object : undefined;
}

module.exports = baseGet;


/***/ }),
/* 582 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _vue = _interopRequireDefault(__webpack_require__(5));

var _loadingBar = _interopRequireDefault(__webpack_require__(583));

var _this = void 0;

var logger = __webpack_require__(0).get("iview:components:loading-bar:loading-bar");

_loadingBar.default.newInstance = function (properties) {
  (0, _newArrowCheck2.default)(this, _this);
  var props = properties || {};
  var Instance = new _vue.default({
    data: props,
    render: function render(h) {
      return h(_loadingBar.default, {
        props: props
      });
    }
  });
  var component = Instance.$mount();
  document.body.appendChild(component.$el);
  var loadingBar = Instance.$children[0];
  return {
    component: loadingBar,
    destroy: function destroy() {
      document.body.removeChild(document.getElementsByClassName('ivu-loading-bar')[0]);
    },
    update: function update(options) {
      if ('percent' in options) {
        loadingBar.percent = options.percent;
      }

      if (options.status) {
        loadingBar.status = options.status;
      }

      if ('show' in options) {
        loadingBar.show = options.show;
      }
    }
  };
}.bind(void 0);

var _default = _loadingBar.default;
exports.default = _default;

/***/ }),
/* 583 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _loading_bar_vue_vue_type_template_id_6b85ac7c___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(349);
/* harmony import */ var _loading_bar_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(169);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _loading_bar_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _loading_bar_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _loading_bar_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _loading_bar_vue_vue_type_template_id_6b85ac7c___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _loading_bar_vue_vue_type_template_id_6b85ac7c___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 584 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _menu = _interopRequireDefault(__webpack_require__(585));

var _menuGroup = _interopRequireDefault(__webpack_require__(586));

var _menuItem = _interopRequireDefault(__webpack_require__(587));

var _submenu = _interopRequireDefault(__webpack_require__(588));

var logger = __webpack_require__(0).get("iview:components:menu:index");

_menu.default.Group = _menuGroup.default;
_menu.default.Item = _menuItem.default;
_menu.default.Sub = _submenu.default;
var _default = _menu.default;
exports.default = _default;

/***/ }),
/* 585 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _menu_vue_vue_type_template_id_5d329a5a___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(335);
/* harmony import */ var _menu_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(171);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _menu_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _menu_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _menu_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _menu_vue_vue_type_template_id_5d329a5a___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _menu_vue_vue_type_template_id_5d329a5a___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 586 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _menu_group_vue_vue_type_template_id_7c5fc7ae___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(334);
/* harmony import */ var _menu_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(173);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _menu_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _menu_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _menu_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _menu_group_vue_vue_type_template_id_7c5fc7ae___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _menu_group_vue_vue_type_template_id_7c5fc7ae___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 587 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _menu_item_vue_vue_type_template_id_6cdf0091___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(333);
/* harmony import */ var _menu_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(175);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _menu_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _menu_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _menu_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _menu_item_vue_vue_type_template_id_6cdf0091___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _menu_item_vue_vue_type_template_id_6cdf0091___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 588 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _submenu_vue_vue_type_template_id_6cb8a29d___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(332);
/* harmony import */ var _submenu_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(177);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _submenu_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _submenu_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _submenu_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _submenu_vue_vue_type_template_id_6cb8a29d___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _submenu_vue_vue_type_template_id_6cb8a29d___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 589 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _noop = _interopRequireDefault(__webpack_require__(13));

var _notification = _interopRequireDefault(__webpack_require__(414));

var logger = __webpack_require__(0).get("iview:components:message:index");

var prefixCls = 'ivu-message';
var iconPrefixCls = 'ivu-icon';
var prefixKey = 'ivu_message_key_';
var defaults = {
  duration: 1.5,
  top: 24
};
var messageInstance;
var name = 1;
var iconTypes = {
  error: 'close-circled',
  info: 'information-circled',
  loading: 'load-c',
  success: 'checkmark-circled',
  warning: 'android-alert'
};

function getMessageInstance() {
  messageInstance = messageInstance || _notification.default.newInstance({
    prefixCls: prefixCls,
    styles: {
      top: "".concat(defaults.top, "px")
    }
  });
  return messageInstance;
}

function notice() {
  var content = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaults.duration;
  var type = arguments.length > 2 ? arguments[2] : undefined;
  var onClose = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : _noop.default;
  var closable = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
  var render = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : _noop.default;
  var iconType = iconTypes[type]; // if loading

  var loadCls = type === 'loading' ? ' ivu-load-loop' : '';
  var instance = getMessageInstance();
  instance.notice({
    closable: closable,
    content: "\n            <div class=\"".concat(prefixCls, "-custom-content ").concat(prefixCls, "-").concat(type, "\">\n                <i class=\"").concat(iconPrefixCls, " ").concat(iconPrefixCls, "-").concat(iconType).concat(loadCls, "\"></i>\n                <span>").concat(content, "</span>\n            </div>\n        "),
    duration: duration,
    name: "".concat(prefixKey).concat(name),
    onClose: onClose,
    render: render,
    styles: {},
    transitionName: 'move-up',
    type: 'message'
  }); // 用于手动消除

  return function iife() {
    var target = name;
    name += 1;
    return function _notice() {
      instance.remove("".concat(prefixKey).concat(target));
    };
  }();
}

var _default = {
  config: function config(options) {
    if (options.top || options.top === 0) {
      defaults.top = options.top;
    }

    if (options.duration || options.duration === 0) {
      defaults.duration = options.duration;
    }
  },
  destroy: function destroy() {
    var instance = getMessageInstance();
    messageInstance = null;
    instance.destroy('ivu-message');
  },
  error: function error(options) {
    return this.message('error', options);
  },
  info: function info(options) {
    return this.message('info', options);
  },
  loading: function loading(options) {
    return this.message('loading', options);
  },
  message: function message(type, opts) {
    var options = opts;

    if (typeof options === 'string') {
      options = {
        content: options
      };
    }

    return notice(options.content, options.duration, type, options.onClose, options.closable, options.render);
  },
  name: 'Message',
  success: function success(options) {
    return this.message('success', options);
  },
  warning: function warning(options) {
    return this.message('warning', options);
  }
};
exports.default = _default;

/***/ }),
/* 590 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _notification_vue_vue_type_template_id_16007b60___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(348);
/* harmony import */ var _notification_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(179);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _notification_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _notification_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _notification_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _notification_vue_vue_type_template_id_16007b60___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _notification_vue_vue_type_template_id_16007b60___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 591 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _notice_vue_vue_type_template_id_b15f0d60___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(367);
/* harmony import */ var _notice_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(181);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _notice_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _notice_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _notice_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _notice_vue_vue_type_template_id_b15f0d60___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _notice_vue_vue_type_template_id_b15f0d60___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 592 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _confirm2 = _interopRequireDefault(__webpack_require__(593));

var logger = __webpack_require__(0).get("iview:components:modal:index");

var modalInstance;

function getModalInstance() {
  var render = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;
  modalInstance = modalInstance || _confirm2.default.newInstance({
    closable: false,
    footerHide: true,
    maskClosable: false,
    render: render
  });
  return modalInstance;
}

function confirm(options) {
  var render = 'render' in options ? options.render : undefined;
  var instance = getModalInstance(render);

  options.onRemove = function _onRemove() {
    modalInstance = null;
  };

  instance.show(options);
}

_confirm2.default.info = function _info() {
  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  props.icon = 'info';
  props.showCancel = false;
  return confirm(props);
};

_confirm2.default.success = function _success() {
  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  props.icon = 'success';
  props.showCancel = false;
  return confirm(props);
};

_confirm2.default.warning = function _warning() {
  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  props.icon = 'warning';
  props.showCancel = false;
  return confirm(props);
};

_confirm2.default.error = function _error() {
  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  props.icon = 'error';
  props.showCancel = false;
  return confirm(props);
};

_confirm2.default.confirm = function _confirm() {
  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  props.icon = 'confirm';
  props.showCancel = true;
  return confirm(props);
};

_confirm2.default.remove = function _remove() {
  if (!modalInstance) {
    // at loading status, remove after Cancel
    return;
  }

  var instance = getModalInstance();
  instance.remove();
};

var _default = _confirm2.default;
exports.default = _default;

/***/ }),
/* 593 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectSpread2 = _interopRequireDefault(__webpack_require__(11));

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _vue = _interopRequireDefault(__webpack_require__(5));

var _noop = _interopRequireDefault(__webpack_require__(13));

var _modal = _interopRequireDefault(__webpack_require__(594));

var _button = _interopRequireDefault(__webpack_require__(22));

var _locale = _interopRequireDefault(__webpack_require__(10));

var _this = void 0;

var logger = __webpack_require__(0).get("iview:components:modal:confirm");

var prefixCls = 'ivu-modal-confirm';

_modal.default.newInstance = function (properties) {
  (0, _newArrowCheck2.default)(this, _this);
  var props = properties || {};
  var Instance = new _vue.default({
    mixins: [_locale.default],
    data: (0, _objectSpread2.default)({}, props, {
      body: '',
      buttonLoading: false,
      cancelText: undefined,
      closable: false,
      iconName: '',
      iconType: '',
      loading: false,
      okText: undefined,
      scrollable: false,
      showCancel: false,
      title: '',
      visible: false,
      width: 416
    }),
    computed: {
      iconNameCls: function iconNameCls() {
        return ['ivu-icon', "ivu-icon-".concat(this.iconName)];
      },
      iconTypeCls: function iconTypeCls() {
        return ["".concat(prefixCls, "-body-icon"), "".concat(prefixCls, "-body-icon-").concat(this.iconType)];
      },
      localeCancelText: function localeCancelText() {
        if (this.cancelText) {
          return this.cancelText;
        }

        return this.t('i.modal.cancelText');
      },
      localeOkText: function localeOkText() {
        if (this.okText) {
          return this.okText;
        }

        return this.t('i.modal.okText');
      }
    },
    methods: {
      cancel: function cancel() {
        this.$children[0].visible = false;
        this.buttonLoading = false;
        this.onCancel();
        this.remove();
      },
      destroy: function destroy() {
        this.$destroy();
        document.body.removeChild(this.$el);
        this.onRemove();
      },
      ok: function ok() {
        if (this.loading) {
          this.buttonLoading = true;
        } else {
          this.$children[0].visible = false;
          this.remove();
        }

        this.onOk();
      },
      onCancel: _noop.default,
      onOk: _noop.default,
      onRemove: _noop.default,
      remove: function remove() {
        var _this2 = this;

        setTimeout(function () {
          (0, _newArrowCheck2.default)(this, _this2);
          this.destroy();
        }.bind(this), 300);
      }
    },
    render: function render(h) {
      var _this3 = this;

      var footerVNodes = [];

      if (this.showCancel) {
        footerVNodes.push(h(_button.default, {
          on: {
            click: this.cancel
          },
          props: {
            size: 'large',
            type: 'text'
          }
        }, this.localeCancelText));
      }

      footerVNodes.push(h(_button.default, {
        on: {
          click: this.ok
        },
        props: {
          loading: this.buttonLoading,
          size: 'large',
          type: 'primary'
        }
      }, this.localeOkText)); // render content

      var bodyRender;

      if (this.render) {
        bodyRender = h('div', {
          attrs: {
            class: "".concat(prefixCls, "-body ").concat(prefixCls, "-body-render")
          }
        }, [this.render(h)]);
      } else {
        bodyRender = h('div', {
          attrs: {
            class: "".concat(prefixCls, "-body")
          }
        }, [h('div', {
          class: this.iconTypeCls
        }, [h('i', {
          class: this.iconNameCls
        })]), h('div', {
          domProps: {
            innerHTML: this.body
          }
        })]);
      }

      return h(_modal.default, {
        domProps: {
          value: this.visible
        },
        on: {
          input: function input(status) {
            (0, _newArrowCheck2.default)(this, _this3);
            this.visible = status;
          }.bind(this)
        },
        props: (0, _objectSpread2.default)({}, props, {
          closable: this.closable,
          scrollable: this.scrollable,
          width: this.width
        })
      }, [h('div', {
        attrs: {
          class: prefixCls
        }
      }, [h('div', {
        attrs: {
          class: "".concat(prefixCls, "-head")
        }
      }, [h('div', {
        attrs: {
          class: "".concat(prefixCls, "-head-title")
        },
        domProps: {
          innerHTML: this.title
        }
      })]), bodyRender, h('div', {
        attrs: {
          class: "".concat(prefixCls, "-footer")
        }
      }, footerVNodes)])]);
    }
  });
  var component = Instance.$mount();
  document.body.appendChild(component.$el);
  var modal = Instance.$children[0];
  return {
    component: modal,
    remove: function remove() {
      modal.visible = false;
      modal.$parent.buttonLoading = false;
      modal.$parent.remove();
    },
    show: function show(showProps) {
      modal.$parent.showCancel = showProps.showCancel;
      modal.$parent.iconType = showProps.icon;

      switch (showProps.icon) {
        case 'info':
          modal.$parent.iconName = 'information-circled';
          break;

        case 'success':
          modal.$parent.iconName = 'checkmark-circled';
          break;

        case 'warning':
          modal.$parent.iconName = 'android-alert';
          break;

        case 'error':
          modal.$parent.iconName = 'close-circled';
          break;

        case 'confirm':
          modal.$parent.iconName = 'help-circled';
          break;

        default:
      }

      if ('width' in showProps) {
        modal.$parent.width = showProps.width;
      }

      if ('closable' in showProps) {
        modal.$parent.closable = showProps.closable;
      }

      if ('title' in showProps) {
        modal.$parent.title = showProps.title;
      }

      if ('content' in showProps) {
        modal.$parent.body = showProps.content;
      }

      if ('okText' in showProps) {
        modal.$parent.okText = showProps.okText;
      }

      if ('cancelText' in showProps) {
        modal.$parent.cancelText = showProps.cancelText;
      }

      if ('onCancel' in showProps) {
        modal.$parent.onCancel = showProps.onCancel;
      }

      if ('onOk' in showProps) {
        modal.$parent.onOk = showProps.onOk;
      } // async for ok


      if ('loading' in showProps) {
        modal.$parent.loading = showProps.loading;
      }

      if ('scrollable' in showProps) {
        modal.$parent.scrollable = showProps.scrollable;
      } // notice when component destroy


      modal.$parent.onRemove = showProps.onRemove;
      modal.visible = true;
    }
  };
}.bind(void 0);

var _default = _modal.default;
exports.default = _default;

/***/ }),
/* 594 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _modal_vue_vue_type_template_id_33e01428___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(347);
/* harmony import */ var _modal_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(183);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _modal_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _modal_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _modal_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _modal_vue_vue_type_template_id_33e01428___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _modal_vue_vue_type_template_id_33e01428___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 595 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _noop = _interopRequireDefault(__webpack_require__(13));

var _get = _interopRequireDefault(__webpack_require__(26));

var _notification = _interopRequireDefault(__webpack_require__(414));

var logger = __webpack_require__(0).get("iview:components:notice:index");

var prefixCls = 'ivu-notice';
var iconPrefixCls = 'ivu-icon';
var prefixKey = 'ivu_notice_key_';
var top = 24;
var defaultDuration = 4.5;
var noticeInstance;
var name = 1;
var iconTypes = {
  error: 'close-circled',
  info: 'information-circled',
  success: 'checkmark-circled',
  warning: 'android-alert'
};

function getNoticeInstance() {
  noticeInstance = noticeInstance || _notification.default.newInstance({
    prefixCls: prefixCls,
    styles: {
      right: 0,
      top: "".concat(top, "px")
    }
  });
  return noticeInstance;
}

function notice(type, options) {
  var title = options.title || '';
  var desc = options.desc || '';
  var noticeKey = options.name || "".concat(prefixKey).concat(name);
  var onClose = options.onClose || _noop.default;
  var render = options.render; // todo const btn = options.btn || null;

  var duration = options.duration === 0 ? 0 : options.duration || defaultDuration;
  name += 1;
  var instance = getNoticeInstance();
  var content;
  var withIcon;
  var withDesc;

  if (options.render && !title) {
    withDesc = '';
  } else {
    withDesc = desc || options.render ? " ".concat(prefixCls, "-with-desc") : '';
  }

  if (type === 'normal') {
    withIcon = false;
    content = "\n      <div class=\"".concat(prefixCls, "-custom-content ").concat(prefixCls, "-with-normal ").concat(withDesc, "\">\n        <div class=\"").concat(prefixCls, "-title\">").concat(title, "</div>\n        <div class=\"").concat(prefixCls, "-desc\">").concat(desc, "</div>\n      </div>\n    ");
  } else {
    var iconType = iconTypes[type];
    withIcon = true;
    content = "\n      <div class=\"".concat(prefixCls, "-custom-content ").concat(prefixCls, "-with-icon ").concat(prefixCls, "-with-").concat(type, " ").concat(withDesc, "\">\n        <span class=\"").concat(prefixCls, "-icon ").concat(prefixCls, "-icon-").concat(type, "\">\n          <i class=\"").concat(iconPrefixCls, " ").concat(iconPrefixCls, "-").concat(iconType, "\"></i>\n        </span>\n        <div class=\"").concat(prefixCls, "-title\">").concat(title, "</div>\n        <div class=\"").concat(prefixCls, "-desc\">").concat(desc, "</div>\n      </div>\n    ");
  }

  instance.notice({
    closable: true,
    content: content,
    duration: duration,
    hasTitle: !!title,
    name: noticeKey.toString(),
    onClose: onClose,
    render: render,
    styles: {},
    transitionName: 'move-notice',
    type: 'notice',
    withIcon: withIcon
  });
}

var _default = {
  close: function close(noticeName) {
    if (noticeName) {
      if (noticeInstance) {
        noticeInstance.remove(noticeName.toString());
      }
    }
  },
  config: function config(options) {
    if (options.top) {
      top = (0, _get.default)(options, 'top');
    }

    if (options.duration || options.duration === 0) {
      defaultDuration = options.duration;
    }
  },
  destroy: function destroy() {
    var instance = getNoticeInstance();
    noticeInstance = null;
    instance.destroy('ivu-notice');
  },
  error: function error(options) {
    return notice('error', options);
  },
  info: function info(options) {
    return notice('info', options);
  },
  open: function open(options) {
    return notice('normal', options);
  },
  success: function success(options) {
    return notice('success', options);
  },
  warning: function warning(options) {
    return notice('warning', options);
  }
};
exports.default = _default;

/***/ }),
/* 596 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _page = _interopRequireDefault(__webpack_require__(597));

var logger = __webpack_require__(0).get("iview:components:page:index");

var _default = _page.default;
exports.default = _default;

/***/ }),
/* 597 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _page_vue_vue_type_template_id_4604846c___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(331);
/* harmony import */ var _page_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(185);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _page_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _page_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _page_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _page_vue_vue_type_template_id_4604846c___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _page_vue_vue_type_template_id_4604846c___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 598 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _options_vue_vue_type_template_id_42021fb2___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(352);
/* harmony import */ var _options_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(187);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _options_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _options_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _options_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _options_vue_vue_type_template_id_42021fb2___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _options_vue_vue_type_template_id_42021fb2___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 599 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _poptip = _interopRequireDefault(__webpack_require__(417));

var logger = __webpack_require__(0).get("iview:components:poptip:index");

var _default = _poptip.default;
exports.default = _default;

/***/ }),
/* 600 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _progress = _interopRequireDefault(__webpack_require__(420));

var logger = __webpack_require__(0).get("iview:components:progress:index");

var _default = _progress.default;
exports.default = _default;

/***/ }),
/* 601 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _radio = _interopRequireDefault(__webpack_require__(602));

var _radioGroup = _interopRequireDefault(__webpack_require__(603));

var logger = __webpack_require__(0).get("iview:components:radio:index");

_radio.default.Group = _radioGroup.default;
var _default = _radio.default;
exports.default = _default;

/***/ }),
/* 602 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _radio_vue_vue_type_template_id_611cf534___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(328);
/* harmony import */ var _radio_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(193);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _radio_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _radio_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _radio_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _radio_vue_vue_type_template_id_611cf534___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _radio_vue_vue_type_template_id_611cf534___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 603 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _radio_group_vue_vue_type_template_id_35e4800f___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(279);
/* harmony import */ var _radio_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(195);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _radio_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _radio_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _radio_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _radio_group_vue_vue_type_template_id_35e4800f___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _radio_group_vue_vue_type_template_id_35e4800f___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 604 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _rate = _interopRequireDefault(__webpack_require__(605));

var logger = __webpack_require__(0).get("iview:components:rate:index");

var _default = _rate.default;
exports.default = _default;

/***/ }),
/* 605 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _rate_vue_vue_type_template_id_cf716570___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(326);
/* harmony import */ var _rate_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(197);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _rate_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _rate_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _rate_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _rate_vue_vue_type_template_id_cf716570___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _rate_vue_vue_type_template_id_cf716570___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 606 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function get() {
    return _Richtext.default;
  }
});

var _Richtext = _interopRequireDefault(__webpack_require__(607));

var logger = __webpack_require__(0).get("iview:components:richtext:index");

/***/ }),
/* 607 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Richtext_vue_vue_type_template_id_923524ca___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(325);
/* harmony import */ var _Richtext_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(199);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _Richtext_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _Richtext_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _Richtext_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _Richtext_vue_vue_type_template_id_923524ca___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _Richtext_vue_vue_type_template_id_923524ca___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 608 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = deepFreeze;

var _typeof2 = _interopRequireDefault(__webpack_require__(36));

var logger = __webpack_require__(0).get("iview:Assets:deepFreeze");

function deepFreeze(object) {
  var propNamesIteratee = function _propNamesIteratee(name) {
    var value = object[name];
    object[name] = value && (0, _typeof2.default)(value) === 'object' ? deepFreeze(value) : value;
  }; // Retrieve the property names defined on object


  var propNames = Object.getOwnPropertyNames(object); // Freeze properties before freezing self

  propNames.forEach(propNamesIteratee);
  return Object.freeze(object);
}

/***/ }),
/* 609 */
/***/ (function(module, exports) {

/*
    Redactor
    Version 3.1.6
    Updated: December 7, 2018

    http://imperavi.com/redactor/

    Copyright (c) 2009-2018, Imperavi Ltd.
    License: http://imperavi.com/redactor/license/
*/
(function() {
var Ajax = {};

Ajax.settings = {};
Ajax.post = function(options) { return new AjaxRequest('post', options); };
Ajax.get = function(options) { return new AjaxRequest('get', options); };

var AjaxRequest = function(method, options)
{
    var defaults = {
        method: method,
        url: '',
        before: function() {},
        success: function() {},
        error: function() {},
        data: false,
        async: true,
        headers: {}
    };

    this.p = this.extend(defaults, options);
    this.p = this.extend(this.p, Ajax.settings);
    this.p.method = this.p.method.toUpperCase();

    this.prepareData();

    this.xhr = new XMLHttpRequest();
    this.xhr.open(this.p.method, this.p.url, this.p.async);

    this.setHeaders();

    var before = (typeof this.p.before === 'function') ? this.p.before(this.xhr) : true;
    if (before !== false)
    {
        this.send();
    }
};

AjaxRequest.prototype = {
    extend: function(obj1, obj2)
    {
        if (obj2) for (var name in obj2) { obj1[name] = obj2[name]; }
        return obj1;
    },
    prepareData: function()
    {
        if (this.p.method === 'POST' && !this.isFormData()) this.p.headers['Content-Type'] = 'application/x-www-form-urlencoded';
        if (typeof this.p.data === 'object' && !this.isFormData()) this.p.data = this.toParams(this.p.data);
        if (this.p.method === 'GET') this.p.url = (this.p.data) ? this.p.url + '?' + this.p.data : this.p.url;
    },
    setHeaders: function()
    {
        this.xhr.setRequestHeader('X-Requested-With', this.p.headers['X-Requested-With'] || 'XMLHttpRequest');
        for (var name in this.p.headers)
        {
            this.xhr.setRequestHeader(name, this.p.headers[name]);
        }
    },
    isFormData: function()
    {
        return (typeof window.FormData !== 'undefined' && this.p.data instanceof window.FormData);
    },
    isComplete: function()
    {
        return !(this.xhr.status < 200 || this.xhr.status >= 300 && this.xhr.status !== 304);
    },
    send: function()
    {
        if (this.p.async)
        {
            this.xhr.onload = this.loaded.bind(this);
            this.xhr.send(this.p.data);
        }
        else
        {
            this.xhr.send(this.p.data);
            this.loaded.call(this);
        }
    },
    loaded: function()
    {
        if (this.isComplete())
        {
            var response = this.xhr.response;
            var json = this.parseJson(response);
            response = (json) ? json : response;

            if (typeof this.p.success === 'function') this.p.success(response, this.xhr);
        }
        else
        {
            if (typeof this.p.error === 'function') this.p.error(this.xhr.statusText);
        }
    },
    parseJson: function(str)
    {
        try {
            var o = JSON.parse(str);
            if (o && typeof o === 'object')
            {
                return o;
            }

        } catch (e) {}

        return false;
    },
    toParams: function (obj)
    {
        return Object.keys(obj).map(
            function(k){ return encodeURIComponent(k) + '=' + encodeURIComponent(obj[k]); }
        ).join('&');
    }
};
var DomCache = [0];
var DomExpando = 'data' + +new Date();
var DomHClass = 'is-hidden';
var DomHMClass = 'is-hidden-mobile';

var Dom = function(selector, context)
{
    return this.parse(selector, context);
};

Dom.ready = function(fn)
{
    if (document.readyState != 'loading') fn();
    else document.addEventListener('DOMContentLoaded', fn);
};

Dom.prototype = {
    get dom()
    {
        return true;
    },
    get length()
    {
        return this.nodes.length;
    },
    parse: function(selector, context)
    {
        var nodes;
        var reHtmlTest = /^\s*<(\w+|!)[^>]*>/;

        if (!selector)
        {
            nodes = [];
        }
        else if (selector.dom)
        {
            this.nodes = selector.nodes;
            return selector;
        }
        else if (typeof selector !== 'string')
        {
            if (selector.nodeType && selector.nodeType === 11)
            {
                nodes = selector.childNodes;
            }
            else
            {
                nodes = (selector.nodeType || selector === window) ? [selector] : selector;
            }
        }
        else if (reHtmlTest.test(selector))
        {
            nodes = this.create(selector);
        }
        else
        {
            nodes = this._query(selector, context);
        }

        this.nodes = this._slice(nodes);
    },
    create: function(html)
    {
        if (/^<(\w+)\s*\/?>(?:<\/\1>|)$/.test(html))
        {
            return [document.createElement(RegExp.$1)];
        }

        var elements = [];
        var container = document.createElement('div');
        var children = container.childNodes;

        container.innerHTML = html;

        for (var i = 0, l = children.length; i < l; i++)
        {
            elements.push(children[i]);
        }

        return elements;
    },

    // add
    add: function(nodes)
    {
        this.nodes = this.nodes.concat(this._toArray(nodes));
    },

    // get
    get: function(index)
    {
        return this.nodes[(index || 0)] || false;
    },
    getAll: function()
    {
        return this.nodes;
    },
    eq: function(index)
    {
        return new Dom(this.nodes[index]);
    },
    first: function()
    {
        return new Dom(this.nodes[0]);
    },
    last: function()
    {
        return new Dom(this.nodes[this.nodes.length - 1]);
    },
    contents: function()
    {
        return this.get().childNodes;
    },

    // loop
    each: function(callback)
    {
        var len = this.nodes.length;
        for (var i = 0; i < len; i++)
        {
            callback.call(this, (this.nodes[i].dom) ? this.nodes[i].get() : this.nodes[i], i);
        }

        return this;
    },

    // traversing
    is: function(selector)
    {
        return (this.filter(selector).length > 0);
    },
    filter: function (selector)
    {
        var callback;
        if (selector === undefined)
        {
            return this;
        }
        else if (typeof selector === 'function')
        {
            callback = selector;
        }
        else
        {
            callback = function(node)
            {
                if (selector instanceof Node)
                {
                    return (selector === node);
                }
                else if (selector && selector.dom)
                {
                    return ((selector.nodes).indexOf(node) !== -1);
                }
                else
                {
                    node.matches = node.matches || node.msMatchesSelector || node.webkitMatchesSelector;
                    return (node.nodeType === 1) ? node.matches(selector || '*') : false;
                }
            };
        }

        return new Dom(this.nodes.filter(callback));
    },
    not: function(filter)
    {
        return this.filter(function(node)
        {
            return !new Dom(node).is(filter || true);
        });
    },
    find: function(selector)
    {
        var nodes = [];
        this.each(function(node)
        {
            var ns = this._query(selector || '*', node);
            for (var i = 0; i < ns.length; i++)
            {
                nodes.push(ns[i]);
            }
        });

        return new Dom(nodes);
    },
    children: function(selector)
    {
        var nodes = [];
        this.each(function(node)
        {
            if (node.children)
            {
                var ns = node.children;
                for (var i = 0; i < ns.length; i++)
                {
                    nodes.push(ns[i]);
                }
            }
        });

        return new Dom(nodes).filter(selector);
    },
    parent: function(selector)
    {
        var nodes = [];
        this.each(function(node)
        {
            if (node.parentNode) nodes.push(node.parentNode);
        });

        return new Dom(nodes).filter(selector);
    },
    parents: function(selector, context)
    {
        context = this._getContext(context);

        var nodes = [];
        this.each(function(node)
        {
            var parent = node.parentNode;
            while (parent && parent !== context)
            {
                if (selector)
                {
                    if (new Dom(parent).is(selector)) { nodes.push(parent); }
                }
                else
                {
                    nodes.push(parent);
                }

                parent = parent.parentNode;
            }
        });

        return new Dom(nodes);
    },
    closest: function(selector, context)
    {
        context = this._getContext(context);
        selector = (selector.dom) ? selector.get() : selector;

        var nodes = [];
        var isNode = (selector && selector.nodeType);
        this.each(function(node)
        {
            do {
                if ((isNode && node === selector) || new Dom(node).is(selector)) return nodes.push(node);
            } while ((node = node.parentNode) && node !== context);
        });

        return new Dom(nodes);
    },
    next: function(selector)
    {
         return this._getSibling(selector, 'nextSibling');
    },
    nextElement: function(selector)
    {
        return this._getSibling(selector, 'nextElementSibling');
    },
    prev: function(selector)
    {
        return this._getSibling(selector, 'previousSibling');
    },
    prevElement: function(selector)
    {
        return this._getSibling(selector, 'previousElementSibling');
    },

    // css
    css: function(name, value)
    {
        if (value === undefined && (typeof name !== 'object'))
        {
            var node = this.get();
            if (name === 'width' || name === 'height')
            {
                return (node.style) ? this._getHeightOrWidth(name, node, false) + 'px' : undefined;
            }
            else
            {
                return (node.style) ? getComputedStyle(node, null)[name] : undefined;
            }
        }

        // set
        return this.each(function(node)
        {
            var obj = {};
            if (typeof name === 'object') obj = name;
            else obj[name] = value;

            for (var key in obj)
            {
                if (node.style) node.style[key] = obj[key];
            }
        });
    },

    // attr
    attr: function(name, value, data)
    {
        data = (data) ? 'data-' : '';

        if (value === undefined && (typeof name !== 'object'))
        {
            var node = this.get();
            if (node && node.nodeType !== 3)
            {
                return (name === 'checked') ? node.checked : this._getBooleanFromStr(node.getAttribute(data + name));
            }
            else return;
        }

        // set
        return this.each(function(node)
        {
            var obj = {};
            if (typeof name === 'object') obj = name;
            else obj[name] = value;

            for (var key in obj)
            {
                if (node.nodeType !== 3)
                {
                    if (key === 'checked') node.checked = obj[key];
                    else node.setAttribute(data + key, obj[key]);
                }
            }
        });
    },
    data: function(name, value)
    {
        if (name === undefined)
        {
            var reDataAttr = /^data\-(.+)$/;
            var attrs = this.get().attributes;

            var data = {};
            var replacer = function (g) { return g[1].toUpperCase(); };

            for (var key in attrs)
            {
                if (attrs[key] && reDataAttr.test(attrs[key].nodeName))
                {
                    var dataName = attrs[key].nodeName.match(reDataAttr)[1];
                    var val = attrs[key].value;
                    dataName = dataName.replace(/-([a-z])/g, replacer);

                    if (this._isObjectString(val)) val = this._toObject(val);
                    else val = (this._isNumber(val)) ? parseFloat(val) : this._getBooleanFromStr(val);

                    data[dataName] = val;
                }
            }

            return data;
        }

        return this.attr(name, value, true);
    },
    val: function(value)
    {
        if (value === undefined)
        {
            var el = this.get();
            if (el.type && el.type === 'checkbox') return el.checked;
            else return el.value;
        }

        return this.each(function(node)
        {
            node.value = value;
        });
    },
    removeAttr: function(value)
    {
        return this.each(function(node)
        {
            var rmAttr = function(name) { if (node.nodeType !== 3) node.removeAttribute(name); };
            value.split(' ').forEach(rmAttr);
        });
    },
    removeData: function(value)
    {
        return this.each(function(node)
        {
            var rmData = function(name) { if (node.nodeType !== 3) node.removeAttribute('data-' + name); };
            value.split(' ').forEach(rmData);
        });
    },

    // dataset/dataget
    dataset: function(key, value)
    {
        return this.each(function(node)
        {
            DomCache[this.dataindex(node)][key] = value;
        });
    },
    dataget: function(key)
    {
        return DomCache[this.dataindex(this.get())][key];
    },
    dataindex: function(el)
    {
        var cacheIndex = el[DomExpando];
        var nextCacheIndex = DomCache.length;

        if (!cacheIndex)
        {
            cacheIndex = el[DomExpando] = nextCacheIndex;
            DomCache[cacheIndex] = {};
        }

        return cacheIndex;
    },


    // class
    addClass: function(value)
    {
        return this._eachClass(value, 'add');
    },
    removeClass: function(value)
    {
        return this._eachClass(value, 'remove');
    },
    toggleClass: function(value)
    {
        return this._eachClass(value, 'toggle');
    },
    hasClass: function(value)
    {
        return this.nodes.some(function(node)
        {
            return (node.classList) ? node.classList.contains(value) : false;
        });
    },

    // html & text
    empty: function()
    {
        return this.each(function(node)
        {
            node.innerHTML = '';
        });
    },
    html: function(html)
    {
        return (html === undefined) ? (this.get().innerHTML || '') : this.empty().append(html);
    },
    text: function(text)
    {
        return (text === undefined) ? (this.get().textContent || '') : this.each(function(node) { node.textContent = text; });
    },

    // manipulation
    after: function(html)
    {
        return this._inject(html, function(frag, node)
        {
            if (typeof frag === 'string')
            {
                node.insertAdjacentHTML('afterend', frag);
            }
            else
            {
                var elms = (frag instanceof Node) ? [frag] : this._toArray(frag).reverse();
                for (var i = 0; i < elms.length; i++)
                {
                    node.parentNode.insertBefore(elms[i], node.nextSibling);
                }
            }

            return node;

        });
    },
    before: function(html)
    {
        return this._inject(html, function(frag, node)
        {
            if (typeof frag === 'string')
            {
                node.insertAdjacentHTML('beforebegin', frag);
            }
            else
            {
                var elms = (frag instanceof Node) ? [frag] : this._toArray(frag);
                for (var i = 0; i < elms.length; i++)
                {
                    node.parentNode.insertBefore(elms[i], node);
                }
            }

            return node;
        });
    },
    append: function(html)
    {
        return this._inject(html, function(frag, node)
        {
            if (typeof frag === 'string' || typeof frag === 'number')
            {
                node.insertAdjacentHTML('beforeend', frag);
            }
            else
            {
                var elms = (frag instanceof Node) ? [frag] : this._toArray(frag);
                for (var i = 0; i < elms.length; i++)
                {
                    node.appendChild(elms[i]);
                }
            }

            return node;
        });
    },
    prepend: function(html)
    {
        return this._inject(html, function(frag, node)
        {
            if (typeof frag === 'string' || typeof frag === 'number')
            {
                node.insertAdjacentHTML('afterbegin', frag);
            }
            else
            {
                var elms = (frag instanceof Node) ? [frag] : this._toArray(frag).reverse();
                for (var i = 0; i < elms.length; i++)
                {
                    node.insertBefore(elms[i], node.firstChild);
                }
            }

            return node;
        });
    },
    wrap: function(html)
    {
        return this._inject(html, function(frag, node)
        {
            var wrapper = (typeof frag === 'string' || typeof frag === 'number') ? this.create(frag)[0] : (frag instanceof Node) ? frag : this._toArray(frag)[0];

            if (node.parentNode)
            {
                node.parentNode.insertBefore(wrapper, node);
            }

            wrapper.appendChild(node);

            return new Dom(wrapper);

        });
    },
    unwrap: function()
    {
        return this.each(function(node)
        {
            var $node = new Dom(node);

            return $node.replaceWith($node.contents());
        });
    },
    replaceWith: function(html)
    {
        return this._inject(html, function(frag, node)
        {
            var docFrag = document.createDocumentFragment();
            var elms = (typeof frag === 'string' || typeof frag === 'number') ? this.create(frag) : (frag instanceof Node) ? [frag] : this._toArray(frag);

            for (var i = 0; i < elms.length; i++)
            {
                docFrag.appendChild(elms[i]);
            }

            var result = docFrag.childNodes[0];
            node.parentNode.replaceChild(docFrag, node);

            return result;

        });
    },
    remove: function()
    {
        return this.each(function(node)
        {
            if (node.parentNode) node.parentNode.removeChild(node);
        });
    },
    clone: function(events)
    {
        var nodes = [];
        this.each(function(node)
        {
            var copy = this._clone(node);
            if (events) copy = this._cloneEvents(node, copy);
            nodes.push(copy);
        });

        return new Dom(nodes);
    },

    // show/hide
    show: function()
    {
        return this.each(function(node)
        {
            if (!node.style || !this._hasDisplayNone(node)) return;

            var target = node.getAttribute('domTargetShow');
            var isHidden = (node.classList) ? node.classList.contains(DomHClass) : false;
            var isHiddenMobile = (node.classList) ? node.classList.contains(DomHMClass) : false;
            var type;

            if (isHidden)
            {
                type = DomHClass;
                node.classList.remove(DomHClass);
            }
            else if (isHiddenMobile)
            {
                type = DomHMClass;
                node.classList.remove(DomHMClass);
            }
            else
            {
                node.style.display = (target) ? target : 'block';
            }

            if (type) node.setAttribute('domTargetHide', type);
            node.removeAttribute('domTargetShow');

        }.bind(this));
    },
    hide: function()
    {
        return this.each(function(node)
        {
            if (!node.style || this._hasDisplayNone(node)) return;

            var display = node.style.display;
            var target = node.getAttribute('domTargetHide');

            if (target === DomHClass)
            {
                node.classList.add(DomHClass);
            }
            else if (target === DomHMClass)
            {
                node.classList.add(DomHMClass);
            }
            else
            {
                if (display !== 'block') node.setAttribute('domTargetShow', display);
                node.style.display = 'none';
            }

            node.removeAttribute('domTargetHide');

        });
    },

    // dimensions
    scrollTop: function(value)
    {
        var node = this.get();
        var isWindow = (node === window);
        var isDocument = (node.nodeType === 9);
        var el = (isDocument) ? (document.scrollingElement || document.body.parentNode || document.body || document.documentElement) : node;

        if (value !== undefined)
        {
            if (isWindow) window.scrollTo(0, value);
            else el.scrollTop = value;
            return;
        }

        if (isDocument)
        {
            return (typeof window.pageYOffset != 'undefined') ? window.pageYOffset : ((document.documentElement.scrollTop) ? document.documentElement.scrollTop : ((document.body.scrollTop) ? document.body.scrollTop : 0));
        }
        else
        {
            return (isWindow) ? window.pageYOffset : el.scrollTop;
        }
    },
    offset: function()
    {
        return this._getDim('Offset');
    },
    position: function()
    {
        return this._getDim('Position');
    },
    width: function(value, adjust)
    {
        return this._getSize('width', 'Width', value, adjust);
    },
    height: function(value, adjust)
    {
        return this._getSize('height', 'Height', value, adjust);
    },
    outerWidth: function()
    {
        return this._getInnerOrOuter('width', 'outer');
    },
    outerHeight: function()
    {
        return this._getInnerOrOuter('height', 'outer');
    },
    innerWidth: function()
    {
        return this._getInnerOrOuter('width', 'inner');
    },
    innerHeight: function()
    {
        return this._getInnerOrOuter('height', 'inner');
    },

    // events
    click: function()
    {
        return this._triggerEvent('click');
    },
    focus: function()
    {
        return this._triggerEvent('focus');
    },
    trigger: function(names)
    {
        return this.each(function(node)
        {
            var events = names.split(' ');
            for (var i = 0; i < events.length; i++)
            {
                var ev;
                var opts = { bubbles: true, cancelable: true };

                try {
                    ev = new window.CustomEvent(events[i], opts);
                } catch(e) {
                    ev = document.createEvent('CustomEvent');
                    ev.initCustomEvent(events[i], true, true);
                }

                node.dispatchEvent(ev);
            }
        });
    },
    on: function(names, handler, one)
    {
        return this.each(function(node)
        {
            var events = names.split(' ');
            for (var i = 0; i < events.length; i++)
            {
                var event = this._getEventName(events[i]);
                var namespace = this._getEventNamespace(events[i]);

                handler = (one) ? this._getOneHandler(handler, names) : handler;
                node.addEventListener(event, handler);

                node._e = node._e || {};
                node._e[namespace] = node._e[namespace] || {};
                node._e[namespace][event] = node._e[namespace][event] || [];
                node._e[namespace][event].push(handler);
            }

        });
    },
    one: function(events, handler)
    {
        return this.on(events, handler, true);
    },
    off: function(names, handler)
    {
        var testEvent = function(name, key, event) { return (name === event); };
        var testNamespace = function(name, key, event, namespace) { return (key === namespace); };
        var testEventNamespace = function(name, key, event, namespace) { return (name === event && key === namespace); };
        var testPositive = function() { return true; };

        if (names === undefined)
        {
            // ALL
            return this.each(function(node)
            {
                this._offEvent(node, false, false, handler, testPositive);
            });
        }

        return this.each(function(node)
        {
            var events = names.split(' ');

            for (var i = 0; i < events.length; i++)
            {
                var event = this._getEventName(events[i]);
                var namespace = this._getEventNamespace(events[i]);

                // 1) event without namespace
                if (namespace === '_events') this._offEvent(node, event, namespace, handler, testEvent);
                // 2) only namespace
                else if (!event && namespace !== '_events') this._offEvent(node, event, namespace, handler, testNamespace);
                // 3) event + namespace
                else this._offEvent(node, event, namespace, handler, testEventNamespace);
            }
        });
    },

    // form
    serialize: function(asObject)
    {
        var obj = {};
        var elms = this.get().elements;
        for (var i = 0; i < elms.length; i++)
        {
            var el = elms[i];
            if (/(checkbox|radio)/.test(el.type) && !el.checked) continue;
            if (!el.name || el.disabled || el.type === 'file') continue;

            if (el.type === 'select-multiple')
            {
                for (var z = 0; z < el.options.length; z++)
                {
                    var opt = el.options[z];
                    if (opt.selected) obj[el.name] = opt.value;
                }
            }

            obj[el.name] = (this._isNumber(el.value)) ? parseFloat(el.value) : this._getBooleanFromStr(el.value);
        }

        return (asObject) ? obj : this._toParams(obj);
    },
    ajax: function(success, error)
    {
        if (typeof AjaxRequest !== 'undefined')
        {
            var method = this.attr('method') || 'post';
            var options = {
                url: this.attr('action'),
                data: this.serialize(),
                success: success,
                error: error
            };

            return new AjaxRequest(method, options);
        }
    },

    // private
    _queryContext: function(selector, context)
    {
        context = this._getContext(context);

        return (context.nodeType !== 3 && typeof context.querySelectorAll === 'function') ? context.querySelectorAll(selector) : [];
    },
    _query: function(selector, context)
    {
        if (context)
        {
            return this._queryContext(selector, context);
        }
        else if (/^[.#]?[\w-]*$/.test(selector))
        {
            if (selector[0] === '#')
            {
                var element = document.getElementById(selector.slice(1));
                return element ? [element] : [];
            }

            if (selector[0] === '.')
            {
                return document.getElementsByClassName(selector.slice(1));
            }

            return document.getElementsByTagName(selector);
        }

        return document.querySelectorAll(selector);
    },
    _getContext: function(context)
    {
        context = (typeof context === 'string') ? document.querySelector(context) : context;

        return (context && context.dom) ? context.get() : (context || document);
    },
    _inject: function(html, fn)
    {
        var len = this.nodes.length;
        var nodes = [];
        while (len--)
        {
            var res = (typeof html === 'function') ? html.call(this, this.nodes[len]) : html;
            var el = (len === 0) ? res : this._clone(res);
            var node = fn.call(this, el, this.nodes[len]);

            if (node)
            {
                if (node.dom) nodes.push(node.get());
                else nodes.push(node);
            }
        }

        return new Dom(nodes);
    },
    _cloneEvents: function(node, copy)
    {
        var events = node._e;
        if (events)
        {
            copy._e = events;
            for (var name in events._events)
            {
                for (var i = 0; i < events._events[name].length; i++)
                {
                    copy.addEventListener(name, events._events[name][i]);
                }
            }
        }

        return copy;
    },
    _clone: function(node)
    {
        if (typeof node === 'undefined') return;
        if (typeof node === 'string') return node;
        else if (node instanceof Node || node.nodeType) return node.cloneNode(true);
        else if ('length' in node)
        {
            return [].map.call(this._toArray(node), function(el) { return el.cloneNode(true); });
        }
    },
    _slice: function(obj)
    {
        return (!obj || obj.length === 0) ? [] : (obj.length) ? [].slice.call(obj.nodes || obj) : [obj];
    },
    _eachClass: function(value, type)
    {
        return this.each(function(node)
        {
            if (value)
            {
                var setClass = function(name) { if (node.classList) node.classList[type](name); };
                value.split(' ').forEach(setClass);
            }
        });
    },
    _triggerEvent: function(name)
    {
        var node = this.get();
        if (node && node.nodeType !== 3) node[name]();
        return this;
    },
    _getOneHandler: function(handler, events)
    {
        var self = this;
        return function()
        {
            handler.apply(this, arguments);
            self.off(events);
        };
    },
    _getEventNamespace: function(event)
    {
        var arr = event.split('.');
        var namespace = (arr[1]) ? arr[1] : '_events';
        return (arr[2]) ? namespace + arr[2] : namespace;
    },
    _getEventName: function(event)
    {
        return event.split('.')[0];
    },
    _offEvent: function(node, event, namespace, handler, condition)
    {
        for (var key in node._e)
        {
            for (var name in node._e[key])
            {
                if (condition(name, key, event, namespace))
                {
                    var handlers = node._e[key][name];
                    for (var i = 0; i < handlers.length; i++)
                    {
                        if (typeof handler !== 'undefined' && handlers[i].toString() !== handler.toString())
                        {
                            continue;
                        }

                        node.removeEventListener(name, handlers[i]);
                        node._e[key][name].splice(i, 1);

                        if (node._e[key][name].length === 0) delete node._e[key][name];
                        if (Object.keys(node._e[key]).length === 0) delete node._e[key];
                    }
                }
            }
        }
    },
    _getInnerOrOuter: function(method, type)
    {
        return this[method](undefined, type);
    },
    _getDocSize: function(node, type)
    {
        var body = node.body, html = node.documentElement;
        return Math.max(body['scroll' + type], body['offset' + type], html['client' + type], html['scroll' + type], html['offset' + type]);
    },
    _getSize: function(type, captype, value, adjust)
    {
        if (value === undefined)
        {
            var el = this.get();
            if (el.nodeType === 3)      value = 0;
            else if (el.nodeType === 9) value = this._getDocSize(el, captype);
            else if (el === window)     value = window['inner' + captype];
            else                        value = this._getHeightOrWidth(type, el, adjust || 'normal');

            return Math.round(value);
        }

        return this.each(function(node)
        {
            value = parseFloat(value);
            value = value + this._adjustResultHeightOrWidth(type, node, adjust || 'normal');

            new Dom(node).css(type, value + 'px');

        }.bind(this));
    },
    _getHeightOrWidth: function(type, el, adjust)
    {
        if (!el) return 0;

        var name = type.charAt(0).toUpperCase() + type.slice(1);
        var result = 0;
        var style = getComputedStyle(el, null);
        var $el = new Dom(el);
        var $targets = $el.parents().filter(function(node)
        {
            return (node.nodeType === 1 && getComputedStyle(node, null).display === 'none') ? node : false;
        });

        if (style.display === 'none') $targets.add(el);
        if ($targets.length !== 0)
        {
            var fixStyle = 'visibility: hidden !important; display: block !important;';
            var tmp = [];

            $targets.each(function(node)
            {
                var $node = new Dom(node);
                var thisStyle = $node.attr('style');
                if (thisStyle !== null) tmp.push(thisStyle);
                $node.attr('style', (thisStyle !== null) ? thisStyle + ';' + fixStyle : fixStyle);
            });

            result = $el.get()['offset' + name] - this._adjustResultHeightOrWidth(type, el, adjust);

            $targets.each(function(node, i)
            {
                var $node = new Dom(node);
                if (tmp[i] === undefined) $node.removeAttr('style');
                else $node.attr('style', tmp[i]);
            });
        }
        else
        {
            result = el['offset' + name] - this._adjustResultHeightOrWidth(type, el, adjust);
        }

        return result;
    },
    _adjustResultHeightOrWidth: function(type, el, adjust)
    {
        if (!el || adjust === false) return 0;

        var fix = 0;
        var style = getComputedStyle(el, null);
        var isBorderBox = (style.boxSizing === "border-box");

        if (type === 'height')
        {
            if (adjust === 'inner' || (adjust === 'normal' && isBorderBox))
            {
                fix += (parseFloat(style.borderTopWidth) || 0) + (parseFloat(style.borderBottomWidth) || 0);
            }

            if (adjust === 'outer') fix -= (parseFloat(style.marginTop) || 0) + (parseFloat(style.marginBottom) || 0);
        }
        else
        {
            if (adjust === 'inner' || (adjust === 'normal' && isBorderBox))
            {
                fix += (parseFloat(style.borderLeftWidth) || 0) + (parseFloat(style.borderRightWidth) || 0);
            }

            if (adjust === 'outer') fix -= (parseFloat(style.marginLeft) || 0) + (parseFloat(style.marginRight) || 0);
        }

        return fix;
    },
    _getDim: function(type)
    {
        var node = this.get();
        return (node.nodeType === 3) ? { top: 0, left: 0 } : this['_get' + type](node);
    },
    _getPosition: function(node)
    {
        return { top: node.offsetTop, left: node.offsetLeft };
    },
    _getOffset: function(node)
    {
        var rect = node.getBoundingClientRect();
        var doc = node.ownerDocument;
		var docElem = doc.documentElement;
		var win = doc.defaultView;

		return {
			top: rect.top + win.pageYOffset - docElem.clientTop,
			left: rect.left + win.pageXOffset - docElem.clientLeft
		};
    },
    _getSibling: function(selector, method)
    {
        selector = (selector && selector.dom) ? selector.get() : selector;

        var isNode = (selector && selector.nodeType);
        var sibling;

        this.each(function(node)
        {
            while (node = node[method])
            {
                if ((isNode && node === selector) || new Dom(node).is(selector))
                {
                    sibling = node;
                    return;
                }
            }
        });

        return new Dom(sibling);
    },
    _toArray: function(obj)
    {
        if (obj instanceof NodeList)
        {
            var arr = [];
            for (var i = 0; i < obj.length; i++)
            {
                arr[i] = obj[i];
            }

            return arr;
        }
        else if (obj === undefined) return [];
        else
        {
            return (obj.dom) ? obj.nodes : obj;
        }
    },
    _toParams: function(obj)
    {
        var params = '';
        for (var key in obj)
        {
            params += '&' + this._encodeUri(key) + '=' + this._encodeUri(obj[key]);
        }

        return params.replace(/^&/, '');
    },
    _toObject: function(str)
    {
        return (new Function("return " + str))();
    },
    _encodeUri: function(str)
    {
        return encodeURIComponent(str).replace(/!/g, '%21').replace(/'/g, '%27').replace(/\(/g, '%28').replace(/\)/g, '%29').replace(/\*/g, '%2A').replace(/%20/g, '+');
    },
    _isNumber: function(str)
    {
        return !isNaN(str) && !isNaN(parseFloat(str));
    },
    _isObjectString: function(str)
    {
        return (str.search(/^{/) !== -1);
    },
    _getBooleanFromStr: function(str)
    {
        if (str === 'true') return true;
        else if (str === 'false') return false;

        return str;
    },
    _hasDisplayNone: function(el)
    {
        return (el.style.display === 'none') || ((el.currentStyle) ? el.currentStyle.display : getComputedStyle(el, null).display) === 'none';
    }
};
// Unique ID
var uuid = 0;

// Wrapper
var $R = function(selector, options)
{
    return RedactorApp(selector, options, [].slice.call(arguments, 2));
};

// Globals
$R.app = [];
$R.version = '3.1.6';
$R.options = {};
$R.modules = {};
$R.services = {};
$R.classes = {};
$R.plugins = {};
$R.mixins = {};
$R.modals = {};
$R.lang = {};
$R.dom = function(selector, context) { return new Dom(selector, context); };
$R.ajax = Ajax;
$R.Dom = Dom;
$R.keycodes = {
	BACKSPACE: 8,
	DELETE: 46,
	UP: 38,
	DOWN: 40,
	ENTER: 13,
	SPACE: 32,
	ESC: 27,
	TAB: 9,
	CTRL: 17,
	META: 91,
	SHIFT: 16,
	ALT: 18,
	RIGHT: 39,
	LEFT: 37
};
$R.env = {
    'plugin': 'plugins',
    'module': 'modules',
    'service': 'services',
    'class': 'classes',
    'mixin': 'mixins'
};

// jQuery Wrapper
/*eslint-env jquery*/
if (typeof jQuery !== 'undefined')
{
    (function($) { $.fn.redactor = function(options) { return RedactorApp(this.toArray(), options, [].slice.call(arguments, 1)); }; })(jQuery);
}

// Class
var RedactorApp = function(selector, options, args)
{
    var namespace = 'redactor';
    var nodes = (Array.isArray(selector)) ? selector : (selector && selector.nodeType) ? [selector] : document.querySelectorAll(selector);
    var isApi = (typeof options === 'string' || typeof options === 'function');
    var value = [];
    var instance;

    for (var i = 0; i < nodes.length; i++)
    {
        var el = nodes[i];
        var $el = $R.dom(el);

        instance = $el.dataget(namespace);
        if (!instance && !isApi)
        {
            // Initialization
            instance = new App(el, options, uuid);
            $el.dataset(namespace, instance);
            $R.app[uuid] = instance;
            uuid++;
        }

        // API
        if (instance && isApi)
        {
            var isDestroy = (options === 'destroy');
            options = (isDestroy) ? 'stop' : options;

            var methodValue;
            if (typeof options === 'function')
            {
                methodValue = options.apply(instance, args);
            }
            else
            {
                args.unshift(options);
                methodValue = instance.api.apply(instance, args);
            }
            if (methodValue !== undefined) value.push(methodValue);

            if (isDestroy) $el.dataset(namespace, false);
        }
    }

    return (value.length === 0 || value.length === 1) ? ((value.length === 0) ? instance : value[0]) : value;
};

// add
$R.add = function(type, name, obj)
{
    if (typeof $R.env[type] === 'undefined') return;

    // translations
    if (obj.translations)
    {
        $R.lang = $R.extend(true, {}, $R.lang, obj.translations);
    }

    // modals
    if (obj.modals)
    {
        $R.modals = $R.extend(true, {}, $R.modals, obj.modals);
    }

    // mixin
    if (type === 'mixin')
    {
        $R[$R.env[type]][name] = obj;
    }
    else
    {
        // prototype
        var F = function() {};
        F.prototype = obj;

        // mixins
        if (obj.mixins)
        {
            for (var i = 0; i < obj.mixins.length; i++)
            {
                $R.inherit(F, $R.mixins[obj.mixins[i]]);
            }
        }

        $R[$R.env[type]][name] = F;
    }
};

// add lang
$R.addLang = function(lang, obj)
{
    if (typeof $R.lang[lang] === 'undefined')
    {
        $R.lang[lang] = {};
    }

    $R.lang[lang] = $R.extend($R.lang[lang], obj);
};

// create
$R.create = function(name)
{
    var arr = name.split('.');
    var args = [].slice.call(arguments, 1);

    var type = 'classes';
    if (typeof $R.env[arr[0]] !== 'undefined')
    {
        type = $R.env[arr[0]];
        name = arr.slice(1).join('.');
    }

    // construct
    var instance = new $R[type][name]();

    // init
    if (instance.init)
    {
        var res = instance.init.apply(instance, args);

        return (res) ? res : instance;
    }

    return instance;
};

// inherit
$R.inherit = function(current, parent)
{
    var F = function () {};
    F.prototype = parent;
    var f = new F();

    for (var prop in current.prototype)
    {
        if (current.prototype.__lookupGetter__(prop)) f.__defineGetter__(prop, current.prototype.__lookupGetter__(prop));
        else f[prop] = current.prototype[prop];
    }

    current.prototype = f;
    current.prototype.super = parent;

    return current;
};

// error
$R.error = function(exception)
{
    throw exception;
};

// extend
$R.extend = function()
{
    var extended = {};
    var deep = false;
    var i = 0;
    var length = arguments.length;

    if (Object.prototype.toString.call( arguments[0] ) === '[object Boolean]')
    {
        deep = arguments[0];
        i++;
    }

    var merge = function(obj)
    {
        for (var prop in obj)
        {
            if (Object.prototype.hasOwnProperty.call(obj, prop))
            {
                if (deep && Object.prototype.toString.call(obj[prop]) === '[object Object]') extended[prop] = $R.extend(true, extended[prop], obj[prop]);
                else extended[prop] = obj[prop];
            }
        }
    };

    for (; i < length; i++ )
    {
        var obj = arguments[i];
        merge(obj);
    }

    return extended;
};
$R.opts = {
    animation: true,
    lang: 'en',
    direction: 'ltr',
    spellcheck: true,
    structure: false,
    scrollTarget: false,
    styles: true,
    stylesClass: 'redactor-styles',
    placeholder: false,

    source: true,
    showSource: false,

    inline: false,

    breakline: false,
    markup: 'p',
    enterKey: true,

    clickToEdit: false,
    clickToSave: false,
    clickToCancel: false,

    focus: false,
    focusEnd: false,

    minHeight: false, // string, '100px'
    maxHeight: false, // string, '100px'
    maxWidth: false, // string, '700px'

    plugins: [], // array
    callbacks: {},

    // pre & tab
    preClass: false, // string
    preSpaces: 4, // or false
    tabindex: false, // int
    tabAsSpaces: false, // true or number of spaces
    tabKey: true,

    // autosave
    autosave: false, // false or url
    autosaveName: false,
    autosaveData: false,

    // toolbar
    toolbar: true,
    toolbarFixed: true,
    toolbarFixedTarget: document,
    toolbarFixedTopOffset: 0, // pixels
    toolbarExternal: false, // ID selector
    toolbarContext: true,

    // air
    air: false,

    // formatting
    formatting: ['p', 'blockquote', 'pre', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'],
    formattingAdd: false,
    formattingHide: false,

    // buttons
    buttons: ['html', 'format', 'bold', 'italic', 'deleted', 'lists', 'image', 'file', 'link'],
    // + 'line', 'redo', 'undo', 'underline', 'ol', 'ul', 'indent', 'outdent'
    buttonsTextLabeled: false,
    buttonsAdd: [],
    buttonsAddFirst: [],
    buttonsAddAfter: false,
    buttonsAddBefore: false,
    buttonsHide: [],
    buttonsHideOnMobile: [],

    // image
    imageUpload: false,
    imageUploadParam: 'file',
    imageData: false,
    imageEditable: true,
    imageCaption: true,
    imageLink: true,
    imagePosition: false,
    imageResizable: false,
    imageFloatMargin: '10px',
    imageFigure: true,

    // file
    fileUpload: false,
    fileUploadParam: 'file',
    fileData: false,
    fileAttachment: false,

    // upload opts
    uploadData: false,
    dragUpload: true,
    multipleUpload: true,
    clipboardUpload: true,
    uploadBase64: false,

    // link
    linkTarget: false,
    linkTitle: false,
    linkNewTab: false,
    linkNofollow: false,
    linkSize: 30,
    linkValidation: true,

    // clean
    cleanOnEnter: true,
    cleanInlineOnEnter: false,
    paragraphize: true,
    removeScript: true,
    removeNewLines: false,
    removeComments: true,
    replaceTags: {
        'b': 'strong',
        'i': 'em',
        'strike': 'del'
    },

    // paste
    pastePlainText: false,
    pasteLinkTarget: false,
    pasteImages: true,
    pasteLinks: true,
    pasteClean: true,
    pasteKeepStyle: [],
    pasteKeepClass: [],
    pasteKeepAttrs: ['td', 'th'],
    pasteBlockTags: ['pre', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'table', 'tbody', 'thead', 'tfoot', 'th', 'tr', 'td', 'ul', 'ol', 'li', 'blockquote', 'p', 'figure', 'figcaption'],
    pasteInlineTags: ['a', 'img', 'br', 'strong', 'ins', 'code', 'del', 'span', 'samp', 'kbd', 'sup', 'sub', 'mark', 'var', 'cite', 'small', 'b', 'u', 'em', 'i', 'abbr'],

    // active buttons
    activeButtons: {
        b: 'bold',
        strong: 'bold',
        i: 'italic',
        em: 'italic',
        del: 'deleted',
        strike: 'deleted',
        u: 'underline'
    },
    activeButtonsAdd: {},
    activeButtonsObservers: {},

    // autoparser
    autoparse: true,
    autoparseStart: true,
    autoparsePaste: true,
    autoparseLinks: true,
    autoparseImages: true,
    autoparseVideo: true,

    // shortcodes
    shortcodes: {
        'p.': { format: 'p' },
        'quote.': { format: 'blockquote' },
        'pre.': { format: 'pre' },
        'h1.': { format: 'h1' },
        'h2.': { format: 'h2' },
        'h3.': { format: 'h3' },
        'h4.': { format: 'h4' },
        'h5.': { format: 'h5' },
        'h6.': { format: 'h6' },
        //'1.': { format: 'ol' },
        '*.': { format: 'ul' }
    },
    shortcodesAdd: false, // object

    // shortcuts
    shortcuts: {
        'ctrl+shift+m, meta+shift+m': { api: 'module.inline.clearformat' },
        'ctrl+b, meta+b': { api: 'module.inline.format', args: 'b' },
        'ctrl+i, meta+i': { api: 'module.inline.format', args: 'i' },
        'ctrl+u, meta+u': { api: 'module.inline.format', args: 'u' },
        'ctrl+h, meta+h': { api: 'module.inline.format', args: 'sup' },
        'ctrl+l, meta+l': { api: 'module.inline.format', args: 'sub' },
        'ctrl+k, meta+k': { api: 'module.link.open' },
        'ctrl+alt+0, meta+alt+0': { api: 'module.block.format', args: 'p' },
        'ctrl+alt+1, meta+alt+1': { api: 'module.block.format', args: 'h1' },
        'ctrl+alt+2, meta+alt+2': { api: 'module.block.format', args: 'h2' },
        'ctrl+alt+3, meta+alt+3': { api: 'module.block.format', args: 'h3' },
        'ctrl+alt+4, meta+alt+4': { api: 'module.block.format', args: 'h4' },
        'ctrl+alt+5, meta+alt+5': { api: 'module.block.format', args: 'h5' },
        'ctrl+alt+6, meta+alt+6': { api: 'module.block.format', args: 'h6' },
        'ctrl+shift+7, meta+shift+7': { api: 'module.list.toggle', args: 'ol' },
        'ctrl+shift+8, meta+shift+8': { api: 'module.list.toggle', args: 'ul' }
    },
    shortcutsAdd: false, // object

    // misc
    grammarly: true,
    notranslate: false,

    // private
    bufferLimit: 100,
    emptyHtml: '<p></p>',
    markerChar: '\ufeff',
    imageTypes: ['image/png', 'image/jpeg', 'image/gif'],
    inlineTags: ['a', 'span', 'strong', 'strike', 'b', 'u', 'em', 'i', 'code', 'del', 'ins', 'samp', 'kbd', 'sup', 'sub', 'mark', 'var', 'cite', 'small', 'abbr'],
    blockTags: ['pre', 'ul', 'ol', 'li', 'p', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6',  'dl', 'dt', 'dd', 'div', 'table', 'tbody', 'thead', 'tfoot', 'tr', 'th', 'td', 'blockquote', 'output', 'figcaption', 'figure', 'address', 'section', 'header', 'footer', 'aside', 'article', 'iframe'],
    regex: {
        youtube: /https?:\/\/(?:[0-9A-Z-]+\.)?(?:youtu\.be\/|youtube\.com\S*[^\w\-\s])([\w\-]{11})(?=[^\w\-]|$)(?![?=&+%\w.-]*(?:['"][^<>]*>|<\/a>))[?=&+%\w.-]*/gi,
        vimeo: /(http|https)?:\/\/(?:www.|player.)?vimeo.com\/(?:channels\/(?:\w+\/)?|groups\/(?:[^\/]*)\/videos\/|album\/(?:\d+)\/video\/|video\/|)(\d+)(?:[a-zA-Z0-9_-]+)?/gi,
        imageurl: /((https?|www)[^\s]+\.)(jpe?g|png|gif)(\?[^\s-]+)?/gi,
        url: /(https?:\/\/(?:www\.|(?!www))[^\s\.]+\.[^\s]{2,}|www\.[^\s]+\.[^\s]{2,})/gi
    },
    input: true,
    zindex: false,
    modes: {
        "inline": {
            pastePlainText: true,
            pasteImages: false,
            enterKey: false,
            toolbar: false,
            autoparse: false,
            source: false,
            showSource: false,
            styles: false,
            air: false
        },
        "original": {
            styles: false
        }
    }
};
$R.lang['en'] = {
    "format": "Format",
    "image": "Image",
    "file": "File",
    "link": "Link",
    "bold": "Bold",
    "italic": "Italic",
    "deleted": "Strikethrough",
    "underline": "Underline",
    "superscript": "Superscript",
    "subscript": "Subscript",
    "bold-abbr": "B",
    "italic-abbr": "I",
    "deleted-abbr": "S",
    "underline-abbr": "U",
    "superscript-abbr": "Sup",
    "subscript-abbr": "Sub",
    "lists": "Lists",
    "link-insert": "Insert Link",
    "link-edit": "Edit Link",
    "link-in-new-tab": "Open link in new tab",
    "unlink": "Unlink",
    "cancel": "Cancel",
    "close": "Close",
    "insert": "Insert",
    "save": "Save",
    "delete": "Delete",
    "text": "Text",
    "edit": "Edit",
    "title": "Title",
    "paragraph": "Normal text",
    "quote": "Quote",
    "code": "Code",
    "heading1": "Heading 1",
    "heading2": "Heading 2",
    "heading3": "Heading 3",
    "heading4": "Heading 4",
    "heading5": "Heading 5",
    "heading6": "Heading 6",
    "filename": "Name",
    "optional": "optional",
    "unorderedlist": "Unordered List",
    "orderedlist": "Ordered List",
    "outdent": "Outdent",
    "indent": "Indent",
    "horizontalrule": "Line",
    "upload": "Upload",
    "upload-label": "Drop files here or click to upload",
    "accessibility-help-label": "Rich text editor",
    "caption": "Caption",
    "bulletslist": "Bullets",
    "numberslist": "Numbers",
    "image-position": "Position",
    "none": "None",
    "left": "Left",
    "right": "Right",
    "center": "Center",
    "undo": "Undo",
    "redo": "Redo"
};
$R.buttons = {
    html: {
        title: 'HTML',
        icon: true,
        api: 'module.source.toggle'
    },
    undo: {
        title: '## undo ##',
        icon: true,
        api: 'module.buffer.undo'
    },
    redo: {
        title: '## redo ##',
        icon: true,
        api: 'module.buffer.redo'
    },
    format: {
        title: '## format ##',
        icon: true,
        dropdown: {
            p: {
                title: '## paragraph ##',
                api: 'module.block.format',
                args: {
                    tag: 'p'
                }
            },
            blockquote: {
                title: '## quote ##',
                api: 'module.block.format',
                args: {
                    tag: 'blockquote'
                }
            },
            pre: {
                title: '## code ##',
                api: 'module.block.format',
                args: {
                    tag: 'pre'
                }
            },
            h1: {
                title: '## heading1 ##',
                api: 'module.block.format',
                args: {
                    tag: 'h1'
                }
            },
            h2: {
                title: '## heading2 ##',
                api: 'module.block.format',
                args: {
                    tag: 'h2'
                }
            },
            h3: {
                title: '## heading3 ##',
                api: 'module.block.format',
                args: {
                    tag: 'h3'
                }
            },
            h4: {
                title: '## heading4 ##',
                api: 'module.block.format',
                args: {
                    tag: 'h4'
                }
            },
            h5: {
                title: '## heading5 ##',
                api: 'module.block.format',
                args: {
                    tag: 'h5'
                }
            },
            h6: {
                title: '## heading6 ##',
                api: 'module.block.format',
                args: {
                    tag: 'h6'
                }
            }
        }
    },
    bold: {
        title: '## bold-abbr ##',
        icon: true,
        tooltip: '## bold ##',
        api: 'module.inline.format',
        args: {
            tag: 'b'
        }
    },
    italic: {
        title: '## italic-abbr ##',
        icon: true,
        tooltip: '## italic ##',
        api: 'module.inline.format',
        args: {
            tag: 'i'
        }
    },
    deleted: {
        title: '## deleted-abbr ##',
        icon: true,
        tooltip: '## deleted ##',
        api: 'module.inline.format',
        args: {
            tag: 'del'
        }
    },
    underline: {
        title: '## underline-abbr ##',
        icon: true,
        tooltip: '## underline ##',
        api: 'module.inline.format',
        args: {
            tag: 'u'
        }
    },
    sup: {
        title: '## superscript-abbr ##',
        icon: true,
        tooltip: '## superscript ##',
        api: 'module.inline.format',
        args: {
            tag: 'sup'
        }
    },
    sub: {
        title: '## subscript-abbr ##',
        icon: true,
        tooltip: '## subscript ##',
        api: 'module.inline.format',
        args: {
            tag: 'sub'
        }
    },
    lists: {
        title: '## lists ##',
        icon: true,
        observe: 'list',
        dropdown: {
            observe: 'list',
            unorderedlist: {
                title: '&bull; ## unorderedlist ##',
                api: 'module.list.toggle',
                args: 'ul'
            },
            orderedlist: {
                title: '1. ## orderedlist ##',
                api: 'module.list.toggle',
                args: 'ol'
            },
            outdent: {
                title: '< ## outdent ##',
                api: 'module.list.outdent'
            },
            indent: {
                title: '> ## indent ##',
                api: 'module.list.indent'
            }
        }
    },
    ul: {
        title: '&bull; ## bulletslist ##',
        icon: true,
        api: 'module.list.toggle',
        observe: 'list',
        args: 'ul'
    },
    ol: {
        title: '1. ## numberslist ##',
        icon: true,
        api: 'module.list.toggle',
        observe: 'list',
        args: 'ol'
    },
    outdent: {
        title: '## outdent ##',
        icon: true,
        api: 'module.list.outdent',
        observe: 'list'
    },
    indent: {
        title: '## indent ##',
        icon: true,
        api: 'module.list.indent',
        observe: 'list'
    },
    image: {
        title: '## image ##',
        icon: true,
        api: 'module.image.open'
    },
    file: {
        title: '## file ##',
        icon: true,
        api: 'module.file.open'
    },
    link: {
        title: '## link ##',
        icon: true,
        observe: 'link',
        dropdown: {
            observe: 'link',
            link: {
                title: '## link-insert ##',
                api: 'module.link.open'
            },
            unlink: {
                title: '## unlink ##',
                api: 'module.link.unlink'
            }
        }
    },
    line: {
        title: '## horizontalrule ##',
        icon: true,
        api: 'module.line.insert'
    }
};
var App = function(element, options, uuid)
{
    this.module = {};
    this.plugin = {};
    this.instances = {};

    // start/stop
    this.started = false;
    this.stopped = false;

    // environment
    this.uuid = uuid;
    this.rootElement = element;
    this.rootOpts = options;
    this.dragInside = false;
    this.dragComponentInside = false;
    this.keycodes = $R.keycodes;
    this.namespace = 'redactor';
    this.$win = $R.dom(window);
    this.$doc = $R.dom(document);
    this.$body = $R.dom('body');
    this.editorReadOnly = false;

    // core services
    this.opts = $R.create('service.options', options, element);
    this.lang = $R.create('service.lang', this);

    // build
    this.buildServices();
    this.buildModules();
    this.buildPlugins();

    // start
    this.start();
};

App.prototype = {
    start: function()
    {
        // start
        this.stopped = false;
        this.broadcast('start');
        this.broadcast('startcode');

        if (this.opts.clickToEdit)
        {
            this.broadcast('startclicktoedit');
        }
        else
        {
            this.broadcast('enable');
            if (this.opts.showSource) this.broadcast('startcodeshow');
            this.broadcast('enablefocus');
        }

        // started
        this.broadcast('started');
        this.started = true;
    },
    stop: function()
    {
        this.started = false;
        this.stopped = true;

        this.broadcast('stop');
        this.broadcast('disable');
        this.broadcast('stopped');
    },

    // started & stopped
    isStarted: function()
    {
        return this.started;
    },
    isStopped: function()
    {
        return this.stopped;
    },

    // build
    buildServices: function()
    {
        var core = ['options', 'lang'];
        var bindable = ['uuid', 'keycodes', 'opts', 'lang', '$win', '$doc', '$body'];
        var services = [];
        for (var name in $R.services)
        {
            if (core.indexOf(name) === -1)
            {
                this[name] = $R.create('service.' + name, this);
                services.push(name);
                bindable.push(name);
            }
        }

        // binding
        for (var i = 0; i < services.length; i++)
        {
            var service = services[i];
            for (var z = 0; z < bindable.length; z++)
            {
                var inj = bindable[z];
                if (service !== inj)
                {
                    this[service][inj] = this[inj];
                }
            }
        }
    },
    buildModules: function()
    {
        for (var name in $R.modules)
        {
            this.module[name] = $R.create('module.' + name, this);
            this.instances[name] = this.module[name];
        }
    },
    buildPlugins: function()
    {
        var plugins = this.opts.plugins;
        for (var i = 0; i < plugins.length; i++)
        {
            var name = plugins[i];
            if (typeof $R.plugins[name] !== 'undefined')
            {
                this.plugin[name] = $R.create('plugin.' + name, this);
                this.instances[name] = this.plugin[name];
            }
        }
    },

    // draginside
    isDragInside: function()
    {
        return this.dragInside;
    },
    setDragInside: function(dragInside)
    {
        this.dragInside = dragInside;
    },
    isDragComponentInside: function()
    {
        return this.dragComponentInside;
    },
    setDragComponentInside: function(dragInside)
    {
        this.dragComponentInside = dragInside;
    },
    getDragComponentInside: function()
    {
        return this.dragComponentInside;
    },

    // readonly
    isReadOnly: function()
    {
        return this.editorReadOnly;
    },
    enableReadOnly: function()
    {
        this.editorReadOnly = true;
        this.broadcast('enablereadonly');
        this.component.clearActive();
        this.toolbar.disableButtons();
    },
    disableReadOnly: function()
    {
        this.editorReadOnly = false;
        this.broadcast('disablereadonly');
        this.toolbar.enableButtons();
    },

    // messaging
    callMessageHandler: function(instance, name, args)
    {
        var arr = name.split('.');
        if (arr.length === 1)
        {
            if (typeof instance['on' + name] === 'function')
            {
                instance['on' + name].apply(instance, args);
            }
        }
        else
        {
            arr[0] = 'on' + arr[0];

            var func = this.utils.checkProperty(instance, arr);
            if (typeof func === 'function')
            {
                func.apply(instance, args);
            }
        }
    },
    broadcast: function(name)
    {
        var args = [].slice.call(arguments, 1);
        for (var moduleName in this.instances)
        {
            this.callMessageHandler(this.instances[moduleName], name, args);
        }

        // callback
        return this.callback.trigger(name, args);
    },

    // callback
    on: function(name, func)
    {
        this.callback.add(name, func);
    },
    off: function(name, func)
    {
        this.callback.remove(name, func);
    },

    // api
    api: function(name)
    {
        if (!this.isStarted() && name !== 'start') return;
        if (this.isReadOnly() && name !== 'disableReadOnly') return;

        this.broadcast('state');

        var args = [].slice.call(arguments, 1);
        var arr = name.split('.');

        var isApp = (arr.length === 1);
        var isCallback = (arr[0] === 'on' || arr[0] === 'off');
        var isService = (!isCallback && arr.length === 2);
        var isPlugin = (arr[0] === 'plugin');
        var isModule = (arr[0] === 'module');

        // app
        if (isApp)
        {
            if (typeof this[arr[0]] === 'function')
            {
                return this.callInstanceMethod(this, arr[0], args);
            }
        }
        // callback
        else if (isCallback)
        {
            return (arr[0] === 'on') ? this.on(arr[1], args[0]) : this.off(arr[1], args[0] || undefined);
        }
        // service
        else if (isService)
        {
            if (this.isInstanceExists(this, arr[0]))
            {
                return this.callInstanceMethod(this[arr[0]], arr[1], args);
            }
            else
            {
                $R.error(new Error('Service "' + arr[0] + '" not found'));
            }
        }
        // plugin
        else if (isPlugin)
        {
            if (this.isInstanceExists(this.plugin, arr[1]))
            {
                return this.callInstanceMethod(this.plugin[arr[1]], arr[2], args);
            }
            else
            {
                $R.error(new Error('Plugin "' + arr[1] + '" not found'));
            }
        }
        // module
        else if (isModule)
        {
            if (this.isInstanceExists(this.module, arr[1]))
            {
                return this.callInstanceMethod(this.module[arr[1]], arr[2], args);
            }
            else
            {
                $R.error(new Error('Module "' + arr[1] + '" not found'));
            }
        }

    },
    isInstanceExists: function(obj, name)
    {
        return (typeof obj[name] !== 'undefined');
    },
    callInstanceMethod: function(instance, method, args)
    {
        if (typeof instance[method] === 'function')
        {
            return instance[method].apply(instance, args);
        }
    }
};
$R.add('mixin', 'formatter', {

    // public
    buildArgs: function(args)
    {
        this.args = {
            'class': args['class'] || false,
            'style': args['style'] || false,
            'attr': args['attr'] || false
        };

        if (!this.args['class'] && !this.args['style'] && !this.args['attr'])
        {
            this.args = false;
        }
    },
    applyArgs: function(nodes, selection)
    {
        if (this.args)
        {
            nodes = this[this.type](this.args, false, nodes, selection);
        }
        else
        {
            nodes = this._clearAll(nodes, selection);
        }

        return nodes;
    },
    clearClass: function(tags, nodes)
    {
        this.selection.save();

        var $elements = (nodes) ? $R.dom(nodes) : this.getElements(tags, true);
        $elements.removeAttr('class');

        nodes = this._unwrapSpanWithoutAttr($elements.getAll());

        this.selection.restore();

        return nodes;
    },
    clearStyle: function(tags, nodes)
    {
        this.selection.save();

        var $elements = (nodes) ? $R.dom(nodes) : this.getElements(tags, true);
        $elements.removeAttr('style');

        nodes = this._unwrapSpanWithoutAttr($elements.getAll());

        this.selection.restore();

        return nodes;
    },
    clearAttr: function(tags, nodes)
    {
        this.selection.save();

        var $elements = (nodes) ? $R.dom(nodes) : this.getElements(tags, true);
        this._removeAllAttr($elements);

        nodes = this._unwrapSpanWithoutAttr($elements.getAll());

        this.selection.restore();

        return nodes;
    },
    set: function(args, tags, nodes, selection)
    {
        if (selection !== false) this.selection.save();

        var $elements = (nodes) ? $R.dom(nodes) : this.getElements(tags);

        if (args['class'])
        {
            $elements.removeAttr('class');
            $elements.addClass(args['class']);
        }

        if (args['style'])
        {
            $elements.removeAttr('style');
            $elements.css(args['style']);
            $elements.each(function(node)
            {
                var $node = $R.dom(node);
                $node.attr('data-redactor-style-cache', $node.attr('style'));
            });
        }

        if (args['attr'])
        {
            this._removeAllAttr($elements);
            $elements.attr(args['attr']);
        }

        if (selection !== false) this.selection.restore();

        return $elements.getAll();
    },
    toggle: function(args, tags, nodes, selection)
    {
        if (selection !== false) this.selection.save();

        var $elements = (nodes) ? $R.dom(nodes) : this.getElements(tags);

        if (args['class'])
        {
            $elements.toggleClass(args['class']);
            $elements.each(function(node)
            {
                if (node.className === '') node.removeAttribute('class');
            });
        }

        var params;
        if (args['style'])
        {
            params = args['style'];
            $elements.each(function(node)
            {
                var $node = $R.dom(node);
                for (var key in params)
                {
                    var newVal = params[key];
                    var oldVal = $node.css(key);

                    oldVal = (this.utils.isRgb(oldVal)) ? this.utils.rgb2hex(oldVal) : oldVal.replace(/"/g, '');
                    newVal = (this.utils.isRgb(newVal)) ? this.utils.rgb2hex(newVal) : newVal.replace(/"/g, '');

                    oldVal = this.utils.hex2long(oldVal);
                    newVal = this.utils.hex2long(newVal);

                    var compareNew = (typeof newVal === 'string') ? newVal.toLowerCase() : newVal;
                    var compareOld = (typeof oldVal === 'string') ? oldVal.toLowerCase() : oldVal;

                    if (compareNew === compareOld) $node.css(key, '');
                    else $node.css(key, newVal);
                }

                this._convertStyleQuotes($node);
                if (this.utils.removeEmptyAttr(node, 'style'))
                {
                    $node.removeAttr('data-redactor-style-cache');
                }
                else
                {
                    $node.attr('data-redactor-style-cache', $node.attr('style'));
                }

            }.bind(this));
        }

        if (args['attr'])
        {
            params = args['attr'];
            $elements.each(function(node)
            {
                var $node = $R.dom(node);
                for (var key in params)
                {
                    if ($node.attr(key)) $node.removeAttr(key);
                    else $node.attr(key, params[key]);
                }
            });

        }

        if (selection !== false) this.selection.restore();

        return $elements.getAll();
    },
    add: function(args, tags, nodes, selection)
    {
        if (selection !== false) this.selection.save();

        var $elements = (nodes) ? $R.dom(nodes) : this.getElements(tags);

        if (args['class'])
        {
            $elements.addClass(args['class']);
        }

        if (args['style'])
        {
            var params = args['style'];
            $elements.each(function(node)
            {
                var $node = $R.dom(node);
                $node.css(params);
                $node.attr('data-redactor-style-cache', $node.attr('style'));

                this._convertStyleQuotes($node);

            }.bind(this));
        }

        if (args['attr'])
        {
            $elements.attr(args['attr']);
        }

        if (selection !== false) this.selection.restore();

        return $elements.getAll();
    },
    remove: function(args, tags, nodes, selection)
    {
        if (selection !== false) this.selection.save();

        var $elements = (nodes) ? $R.dom(nodes) : this.getElements(tags);

        if (args['class'])
        {
            $elements.removeClass(args['class']);
            $elements.each(function(node)
            {
                if (node.className === '') node.removeAttribute('class');
            });
        }

        if (args['style'])
        {
            var name = args['style'];
            $elements.each(function(node)
            {
                var $node = $R.dom(node);
                $node.css(name, '');

                if (this.utils.removeEmptyAttr(node, 'style'))
                {
                    $node.removeAttr('data-redactor-style-cache');
                }
                else
                {
                    $node.attr('data-redactor-style-cache', $node.attr('style'));
                }

            }.bind(this));
        }

        if (args['attr'])
        {
            $elements.removeAttr(args['attr']);
        }

        nodes = this._unwrapSpanWithoutAttr($elements.getAll());

        if (selection !== false) this.selection.restore();

        return nodes;
    },

    // private
    _removeAllAttr: function($elements)
    {
        $elements.each(function(node)
        {
            for (var i = node.attributes.length; i-->0;)
            {
                var nodeAttr = node.attributes[i];
                var name = nodeAttr.name;
                if (name !== 'style' && name !== 'class')
                {
                    node.removeAttributeNode(nodeAttr);
                }
            }
        });
    },
    _convertStyleQuotes: function($node)
    {
        var style = $node.attr('style');
        if (style) $node.attr('style', style.replace(/"/g, '\''));
    },
    _clearAll: function(nodes, selection)
    {
        if (selection !== false) this.selection.save();

        for (var i = 0; i < nodes.length; i++)
        {
            var node = nodes[i];
            while (node.attributes.length > 0)
            {
                node.removeAttribute(node.attributes[0].name);
            }
        }

        nodes = this._unwrapSpanWithoutAttr(nodes);

        if (selection !== false) this.selection.restore();

        return nodes;
    },
    _unwrapSpanWithoutAttr: function(nodes)
    {
        var finalNodes = [];
        for (var i = 0; i < nodes.length; i++)
        {
            var node = nodes[i];
            var len = node.attributes.length;
            if (len <= 0 && node.nodeType !== 3 && node.tagName === 'SPAN')
            {
                $R.dom(node).unwrap();
            }
            else
            {
                finalNodes.push(node);
            }
        }

        return finalNodes;
    }
});
$R.add('mixin', 'dom', $R.Dom.prototype);
$R.add('mixin', 'component', {
    get cmnt()
    {
        return true;
    }
});
$R.add('service', 'options', {
    init: function(options, element)
    {
        var $el = $R.dom(element);
        var opts = $R.extend({}, $R.opts, (element) ? $el.data() : {}, $R.options);
        opts = $R.extend(true, opts, options);

        return opts;
    }
});
$R.add('service', 'lang', {
    init: function(app)
    {
        this.app = app;
        this.opts = app.opts;

        // build
        this.vars = this._build(this.opts.lang);
    },

    // public
    rebuild: function(lang)
    {
        this.opts.lang = lang;
        this.vars = this._build(lang);
    },
    extend: function(obj)
    {
        this.vars = $R.extend(this.vars, obj);
    },
    parse: function(str)
    {
        if (str === undefined)
        {
            return '';
        }

        var matches = str.match(/## (.*?) ##/g);
        if (matches)
        {
            for (var i = 0; i < matches.length; i++)
            {
                var key = matches[i].replace(/^##\s/g, '').replace(/\s##$/g, '');
                str = str.replace(matches[i], this.get(key));
            }
        }

        return str;
    },
    get: function(name)
    {
        var str = '';
        if (typeof this.vars[name] !== 'undefined')
        {
            str = this.vars[name];
        }
        else if (this.opts.lang !== 'en' && typeof $R.lang['en'][name] !== 'undefined')
        {
            str = $R.lang['en'][name];
        }

        return str;
    },

    // private
    _build: function(lang)
    {
        var vars = $R.lang['en'];
        if (lang !== 'en')
        {
            vars = ($R.lang[lang] !== undefined) ? $R.lang[lang] : vars;
        }

        return vars;
    }
});
$R.add('service', 'callback', {
    init: function(app)
    {
        this.app = app;
        this.opts = app.opts;

        // local
        this.callbacks = {};

        // build
        if (this.opts.callbacks)
        {
            this._set(this.opts.callbacks, '');
        }
    },
    stop: function()
    {
        this.callbacks = {};
    },
    add: function(name, handler)
    {
        if (!this.callbacks[name]) this.callbacks[name] = [];
        this.callbacks[name].push(handler);
    },
    remove: function(name, handler)
    {
        if (handler === undefined)
        {
            delete this.callbacks[name];
        }
        else
        {
            for (var i = 0; i < this.callbacks[name].length; i++)
            {
                this.callbacks[name].splice(i, 1);
            }

            if (Object.keys(this.callbacks[name]).length === 0) delete this.callbacks[name];
        }
    },
    trigger: function(name, args)
    {
        var value = this._loop(name, args, this.callbacks);
        return (typeof value === 'undefined' && args && args[0] !== false) ? args[0] : value;
    },

    // private
    _set: function(obj, name)
    {
        for (var key in obj)
        {
            var path = (name === '') ? key : name + '.' + key;
            if (typeof obj[key] === 'object')
            {
                this._set(obj[key], path);
            }
            else
            {
                this.callbacks[path] = [];
                this.callbacks[path].push(obj[key]);
            }
        }
    },
    _loop: function(name, args, obj)
    {
        var value;
        for (var key in obj)
        {
            if (name === key)
            {
                for (var i = 0; i < obj[key].length; i++)
                {
                    value = obj[key][i].apply(this.app, args);
                }
            }
        }

        return value;
    }
});
$R.add('service', 'animate', {
    init: function(app)
    {
        this.animationOpt = app.opts.animation;
    },
    start: function(element, animation, options, callback)
    {
        var defaults = {
            duration: false,
            iterate: false,
            delay: false,
            timing: false,
            prefix: 'redactor-'
        };

        defaults = (typeof options === 'function') ? defaults : $R.extend(defaults, options);
        callback = (typeof options === 'function') ? options : callback;

        // play
        return new $R.AnimatePlay(element, animation, defaults, callback, this.animationOpt);
    },
    stop: function(element)
    {
        this.$el = $R.dom(element);
        this.$el.removeClass('redactor-animated');

        var effect = this.$el.attr('redactor-animate-effect');
        this.$el.removeClass(effect);

        this.$el.removeAttr('redactor-animate-effect');
        var hide = this.$el.attr('redactor-animate-hide');
        if (hide)
        {
            this.$el.addClass(hide).removeAttr('redactor-animate-hide');
        }

        this.$el.off('animationend webkitAnimationEnd');
    }
});

$R.AnimatePlay = function(element, animation, defaults, callback, animationOpt)
{
    this.hidableEffects = ['fadeOut', 'flipOut', 'slideUp', 'zoomOut', 'slideOutUp', 'slideOutRight', 'slideOutLeft'];
    this.prefixes = ['', '-webkit-'];

    this.$el = $R.dom(element);
    this.$body = $R.dom('body');
    this.callback = callback;
    this.animation = (!animationOpt) ? this.buildAnimationOff(animation) : animation;
    this.defaults = defaults;

    if (this.animation === 'slideUp')
    {
        this.$el.height(this.$el.height());
    }

    // animate
    return (this.isInanimate()) ? this.inanimate() : this.animate();
};

$R.AnimatePlay.prototype = {
    buildAnimationOff: function(animation)
    {
        return (this.isHidable(animation)) ? 'hide' : 'show';
    },
    buildHideClass: function()
    {
        return 'redactor-animate-hide';
    },
    isInanimate: function()
    {
        return (this.animation === 'show' || this.animation === 'hide');
    },
    isAnimated: function()
    {
        return this.$el.hasClass('redactor-animated');
    },
    isHidable: function(effect)
    {
        return (this.hidableEffects.indexOf(effect) !== -1);
    },
    inanimate: function()
    {
        this.defaults.timing = 'linear';

        var hide;
        if (this.animation === 'show')
        {
            hide = this.buildHideClass();
            this.$el.attr('redactor-animate-hide', hide);
            this.$el.removeClass(hide);
        }
        else
        {
            hide = this.$el.attr('redactor-animate-hide');
            this.$el.addClass(hide).removeAttr('redactor-animate-hide');
        }

        if (typeof this.callback === 'function') this.callback(this);

        return this;
    },
    animate: function()
    {
        var delay = (this.defaults.delay) ? this.defaults.delay : 0;
        setTimeout(function()
        {
            this.$body.addClass('no-scroll-x');
            this.$el.addClass('redactor-animated');
            if (!this.$el.attr('redactor-animate-hide'))
            {
                var hide = this.buildHideClass();
                this.$el.attr('redactor-animate-hide', hide);
                this.$el.removeClass(hide);
            }

            this.$el.addClass(this.defaults.prefix + this.animation);
            this.$el.attr('redactor-animate-effect', this.defaults.prefix + this.animation);

            this.set(this.defaults.duration + 's', this.defaults.iterate, this.defaults.timing);
            this.complete();

        }.bind(this), delay * 1000);

        return this;
    },
    set: function(duration, iterate, timing)
    {
        var len = this.prefixes.length;

        while (len--)
        {
            if (duration !== false || duration === '') this.$el.css(this.prefixes[len] + 'animation-duration', duration);
            if (iterate !== false || iterate === '') this.$el.css(this.prefixes[len] + 'animation-iteration-count', iterate);
            if (timing !== false || timing === '') this.$el.css(this.prefixes[len] + 'animation-timing-function', timing);
        }
    },
    clean: function()
    {
        this.$body.removeClass('no-scroll-x');
        this.$el.removeClass('redactor-animated');
        this.$el.removeClass(this.defaults.prefix + this.animation);
        this.$el.removeAttr('redactor-animate-effect');

        this.set('', '', '');
    },
    complete: function()
    {
        this.$el.one('animationend webkitAnimationEnd', function()
        {
            if (this.$el.hasClass(this.defaults.prefix + this.animation)) this.clean();
            if (this.isHidable(this.animation))
            {
                var hide = this.$el.attr('redactor-animate-hide');
                this.$el.addClass(hide).removeAttr('redactor-animate-hide');
            }

            if (this.animation === 'slideUp') this.$el.height('');
            if (typeof this.callback === 'function') this.callback(this.$el);

        }.bind(this));
    }
};
$R.add('service', 'caret', {
    init: function(app)
    {
        this.app = app;
    },

    // set
    setStart: function(el)
    {
        this._setCaret('Start', el);
    },
    setEnd: function(el)
    {
        this._setCaret('End', el);
    },
    setBefore: function(el)
    {
        this._setCaret('Before', el);
    },
    setAfter: function(el)
    {
        this._setCaret('After', el);
    },

    // is
    isStart: function(el)
    {
        return this._isStartOrEnd(el, 'First');
    },
    isEnd: function(el)
    {
        return this._isStartOrEnd(el, 'Last');
    },

    // set side
    setAtEnd: function(node)
    {
        var data = this.inspector.parse(node);
        var tag = data.getTag();
        var range = document.createRange();
        if (this._isInPage(node))
        {
            if (tag === 'a')
            {
                var textNode = this.utils.createInvisibleChar();
                node.appendChild(textNode);

                range.setStartBefore(textNode);
                range.collapse(true);
            }
            else
            {
                range.selectNodeContents(node);
                range.collapse(false);
            }

            this.selection.setRange(range);
        }
    },
    setAtStart: function(node)
    {
		var range = document.createRange();
		var data = this.inspector.parse(node);
        if (this._isInPage(node))
        {
            range.setStart(node, 0);
            range.collapse(true);

            if (data.isInline() || this.utils.isEmpty(node))
            {
                var textNode = this.utils.createInvisibleChar();
                range.insertNode(textNode);
                range.selectNodeContents(textNode);
                range.collapse(false);
            }

            this.selection.setRange(range);
        }
    },
    setAtBefore: function(node)
    {
        var data = this.inspector.parse(node);
        var range = document.createRange();
        if (this._isInPage(node))
        {
            range.setStartBefore(node);
            range.collapse(true);

            if (data.isInline())
            {
                var textNode = this.utils.createInvisibleChar();
                node.parentNode.insertBefore(textNode, node);
                range.selectNodeContents(textNode);
                range.collapse(false);
            }

            this.selection.setRange(range);
        }
    },
    setAtAfter: function(node)
    {

        var range = document.createRange();
        if (this._isInPage(node))
        {
            range.setStartAfter(node);
            range.collapse(true);

            var textNode = this.utils.createInvisibleChar();
            range.insertNode(textNode);
            range.selectNodeContents(textNode);
            range.collapse(false);

            this.selection.setRange(range);
        }
    },
    setAtPrev: function(node)
    {
        var prev = node.previousSibling;
        if (prev)
        {
            prev = (prev.nodeType === 3 && this._isEmptyTextNode(prev)) ? prev.previousElementSibling : prev;
            if (prev) this.setEnd(prev);
        }
    },
    setAtNext: function(node)
    {
        var next = node.nextSibling;
        if (next)
        {
            next = (next.nodeType === 3 && this._isEmptyTextNode(next)) ? next.nextElementSibling : next;
            if (next) this.setStart(next);
        }
    },

    // private
    _setCaret: function(type, el)
    {
        var data = this.inspector.parse(el);
        var node = data.getNode();

        if (node)
        {
            this.component.clearActive();
            this['_set' + type](node, data, data.getTag());
        }
    },
    _setStart: function(node, data, tag)
    {
        // 1. text
        if (data.isText())
        {
            this.editor.focus();
            return this.setAtStart(node);
        }
        // 2. ul, ol
        else if (tag === 'ul' || tag === 'ol')
        {
            node = data.findFirstNode('li');

            var item = this.utils.getFirstElement(node);
            var dataItem = this.inspector.parse(item);
            if (item && dataItem.isComponent())
            {
                return this.setStart(dataItem.getComponent());
            }
        }
        // 3. dl
        else if (tag === 'dl')
        {
            node = data.findFirstNode('dt');
        }
        // 4. br / hr
        else if (tag === 'br' || tag === 'hr')
        {
            return this.setBefore(node);
        }
        // 5. th, td
        else if (tag === 'td' || tag === 'th')
        {
            var el = data.getFirstElement(node);
            if (el)
            {
                return this.setStart(el);
            }
        }
        // 6. table
        else if (tag === 'table' || tag === 'tr')
        {
            return this.setStart(data.findFirstNode('th, td'));
        }
        // 7. figure code
        else if (data.isComponentType('code') && !data.isFigcaption())
        {
            var code = data.findLastNode('pre, code');

            this.editor.focus();
            return this.setAtStart(code);
        }
        // 8. table component
        else if (tag === 'figure' && data.isComponentType('table'))
        {
            var table = data.getTable();
            var tableData = this.inspector.parse(table);

            return this.setStart(tableData.findFirstNode('th, td'));
        }
        // 9. non editable components
        else if (!data.isComponentType('table') && data.isComponent() && !data.isFigcaption())
        {
            return this.component.setActive(node);
        }

        this.editor.focus();

        // set
        if (!this._setInline(node, 'Start'))
        {
            this.setAtStart(node);
        }
    },
    _setEnd: function(node, data, tag)
    {
        // 1. text
        if (data.isText())
        {
            this.editor.focus();
            return this.setAtEnd(node);
        }
        // 2. ul, ol
        else if (tag === 'ul' || tag === 'ol')
        {
            node = data.findLastNode('li');

            var item = this.utils.getLastElement(node);
            var dataItem = this.inspector.parse(item);
            if (item && dataItem.isComponent())
            {
                return this.setEnd(dataItem.getComponent());
            }
        }
        // 3. dl
        else if (tag === 'dl')
        {
            node = data.findLastNode('dd');
        }
        // 4. br / hr
        else if (tag === 'br' || tag === 'hr')
        {
            return this.setAfter(node);
        }
        // 5. th, td
        else if (tag === 'td' || tag === 'th')
        {
            var el = data.getLastElement();
            if (el)
            {
                return this.setEnd(el);
            }
        }
        // 6. table
        else if (tag === 'table' || tag === 'tr')
        {
            return this.setEnd(data.findLastNode('th, td'));
        }
        // 7. figure code
        else if (data.isComponentType('code') && !data.isFigcaption())
        {
            var code = data.findLastNode('pre, code');

            this.editor.focus();
            return this.setAtEnd(code);
        }
        // 8. table component
        else if (tag === 'figure' && data.isComponentType('table'))
        {
            var table = data.getTable();
            var tableData = this.inspector.parse(table);

            return this.setEnd(tableData.findLastNode('th, td'));
        }
        // 9. non editable components
        else if (!data.isComponentType('table') && data.isComponent() && !data.isFigcaption())
        {
            return this.component.setActive(node);
        }

        this.editor.focus();

        // set
        if (!this._setInline(node, 'End'))
        {
            // is element empty
            if (this.utils.isEmpty(node))
            {
                return this.setStart(node);
            }

            this.setAtEnd(node);
        }
    },
    _setBefore: function(node, data, tag)
    {
        // text
        if (node.nodeType === 3)
        {
            return this.setAtBefore(node);
        }
        // inline
        else if (data.isInline())
        {
            return this.setAtBefore(node);
        }
        // td / th
        else if (data.isFirstTableCell())
        {
            return this.setAtPrev(data.getComponent());
        }
        else if (tag === 'td' || tag === 'th')
        {
            return this.setAtPrev(node);
        }
        // li
        else if (data.isFirstListItem())
        {
            return this.setAtPrev(data.getList());
        }
        // figcaption
        else if (data.isFigcaption())
        {
            return this.setStart(data.getComponent());
        }
        // component
        else if (!data.isComponentType('table') && data.isComponent())
        {
            return this.setAtPrev(data.getComponent());
        }
        // block
        else if (data.isBlock())
        {
            return this.setAtPrev(node);
        }

        this.editor.focus();
        this.setAtBefore(node);

    },
    _setAfter: function(node, data, tag)
    {
        // text
        if (node.nodeType === 3)
        {
            return this.setAtAfter(node);
        }
        // inline
        else if (data.isInline())
        {
            return this.setAtAfter(node);
        }
        // td / th
        else if (data.isLastTableCell())
        {
            return this.setAtNext(data.getComponent());
        }
        else if (tag === 'td' || tag === 'th')
        {
            return this.setAtNext(node);
        }
        // li
        else if (data.isFirstListItem())
        {
            return this.setAtNext(data.getList());
        }
        // component
        else if (!data.isComponentType('table') && data.isComponent())
        {
            return this.setAtNext(data.getComponent());
        }
        // block
        else if (data.isBlock())
        {
            return this.setAtNext(node);
        }

        this.editor.focus();
        this.setAtAfter(node);
    },
    _setInline: function(node, type)
    {
        // is first element inline (FF only)
        var inline = this._hasInlineChild(node, (type === 'Start') ? 'first' : 'last');
        if (inline)
        {
            if (type === 'Start')
            {
                this.setStart(inline);
            }
            else
            {
                this.setEnd(inline);
            }

            return true;
        }
    },
    _isStartOrEnd: function(el, type)
    {
        var node = this.utils.getNode(el);
        if (!node) return false;

        var data = this.inspector.parse(node);
        node = this._getStartEndNode(node, data, type);

        if (node && (node.nodeType !== 3 && node.tagName !== 'LI'))
        {
            var html = (node.nodeType === 3) ? node.textContent : node.innerHTML;
            html = this.utils.trimSpaces(html);
            if (html === '') return true;
        }

        if (!data.isFigcaption() && data.isComponent() && !data.isComponentEditable())
        {
            return true;
        }

        var offset = this.offset.get(node, true);
        if (offset)
        {
            return (type === 'First') ? (offset.start === 0) : (offset.end === this.offset.size(node, true));
        }
        else
        {
            return false;
        }
    },
    _isInPage: function(node)
    {
        if (node && node.nodeType)
        {
            return (node === document.body) ? false : document.body.contains(node);
        }
        else
        {
            return false;
        }
    },
    _hasInlineChild: function(el, pos)
    {
        var data = this.inspector.parse(el);
        var node = (pos === 'first') ? data.getFirstNode() : data.getLastNode();
        var $node = $R.dom(node);

        if (node && node.nodeType !== 3
            && this.inspector.isInlineTag(node.tagName)
            && !$node.hasClass('redactor-component')
             && !$node.hasClass('non-editable'))
        {
            return node;
        }
    },
    _isEmptyTextNode: function(node)
    {
        var text = node.textContent.trim().replace(/\n/, '');
        text = this.utils.removeInvisibleChars(text);

        return (text === '');
    },
    _getStartEndNode: function(node, data, type)
    {
        if (data.isFigcaption())
        {
            node = data.getFigcaption();
        }
        else if (data.isTable())
        {
            node = data['find' + type + 'Node']('th, td');
        }
        else if (data.isList())
        {
            node = data['find' + type + 'Node']('li');
        }
        else if (data.isComponentType('code'))
        {
            node = data.findLastNode('pre, code');
        }

        return node;
    }
});
$R.add('service', 'selection', {
    init: function(app)
    {
        this.app = app;
    },
    // is
    is: function()
    {
        var sel = this.get();
        if (sel)
        {
            var node = sel.anchorNode;
            var data = this.inspector.parse(node);

            return (data.isInEditor() || data.isEditor());
        }

        return false;
    },
    isCollapsed: function()
    {
        var sel = this.get();
        var range = this.getRange();

        if (sel && sel.isCollapsed) return true;
        else if (range && range.toString().length === 0) return true;

        return false;
    },
    isBackwards: function()
    {
        var backwards = false;
        var sel = this.get();

        if (sel && !sel.isCollapsed)
        {
            var range = document.createRange();
            range.setStart(sel.anchorNode, sel.anchorOffset);
            range.setEnd(sel.focusNode, sel.focusOffset);
            backwards = range.collapsed;
            range.detach();
        }

        return backwards;
    },
    isIn: function(el)
    {
        var node = $R.dom(el).get();
        var current = this.getCurrent();

        return (current && node) ? node.contains(current) : false;
    },
    isText: function()
    {
        var sel = this.get();
        if (sel)
        {
            var el = sel.anchorNode;
            var block = this.getBlock(el);
            var blocks = this.getBlocks();

            // td, th or hasn't block
            if ((block && this.inspector.isTableCellTag(block.tagName)) || (block === false && blocks.length === 0))
            {
                return true;
            }
        }

        return false;
    },
    isAll: function(el)
    {
        var node = this.utils.getNode(el);
        if (!node) return false;

        var isEditor = this.editor.isEditor(node);
        var data = this.inspector.parse(node);

        // component
        if (!data.isFigcaption() && this.component.isNonEditable(node) && this.component.isActive(node))
        {
            return true;
        }

        if (isEditor)
        {
            var $editor = this.editor.getElement();
            var output = $editor.html().replace(/<p><\/p>$/i, '');
            var htmlLen = this.getHtml(false).length;
            var outputLen = output.length;

            if (htmlLen !== outputLen)
            {
                return false;
            }
        }

        // editor empty or collapsed
        if ((isEditor && this.editor.isEmpty()) || this.isCollapsed())
        {
            return false;
        }

        // all
        var offset = this.offset.get(node, true);
        var size = this.offset.size(node, true);

        // pre, table, or pre/code in figure
        if (!isEditor && data.isComponentType('code'))
        {
            size = this.getText().trim().length;
        }

        if (offset && offset.start === 0 && offset.end === size)
        {
            return true;
        }

        return false;
    },

    // has
    hasNonEditable: function()
    {
        var selected = this.getHtml();
        var $wrapper = $R.dom('<div>').html(selected);

        return (!this.isCollapsed() && $wrapper.find('.non-editable').length !== 0);
    },

    // set
    setRange: function(range)
    {
        var sel = window.getSelection();
        sel.removeAllRanges();
        sel.addRange(range);
    },
    setAll: function(el)
    {
        var node = this.utils.getNode(el);
        if (!node) return;

        var data = this.inspector.parse(node);

        this.component.clearActive();

        this.editor.focus();
        this.editor.saveScroll();
        this.editor.disableNonEditables();

        if (node && node.tagName === 'TABLE')
        {
            var first = data.findFirstNode('td, th');
            var last = data.findLastNode('td, th');

            $R.dom(first).prepend(this.marker.build('start'));
            $R.dom(last).append(this.marker.build('end'));

            this.restoreMarkers();
        }
        else if (!data.isFigcaption() && this.component.isNonEditable(node))
        {
            this.component.setActive(node);
        }
        else
        {
            if (data.isComponentType('code'))
            {
                node = data.getComponentCodeElement();
                node.focus();
            }

            var range = document.createRange();
            range.selectNodeContents(node);

            this.setRange(range);
        }

        this.editor.enableNonEditables();
        this.editor.restoreScroll();
    },

    // get
    get: function()
    {
        var sel = window.getSelection();
        return (sel.rangeCount > 0) ? sel : null;
    },
    getRange: function()
    {
        var sel = this.get();
        return (sel) ? ((sel.getRangeAt(0)) ? sel.getRangeAt(0) : null) : null;
    },
    getTextBeforeCaret: function(num)
    {
        num = (typeof num === 'undefined') ? 1 : num;

        var el = this.editor.getElement().get();
        var range = this.getRange();
        var text = false;
        if (range)
        {
            range = range.cloneRange();
            range.collapse(true);
            range.setStart(el, 0);
            text = range.toString().slice(-num);
        }

        return text;
    },
    getTextAfterCaret: function(num)
    {
        num = (typeof num === 'undefined') ? 1 : num;

        var el = this.editor.getElement().get();
        var range = this.getRange();
        var text = false;
        if (range)
        {
            var clonedRange = range.cloneRange();
            clonedRange.selectNodeContents(el);
            clonedRange.setStart(range.endContainer, range.endOffset);

            text = clonedRange.toString().slice(0, num);
        }

        return text;
    },
    getPosition: function()
    {
        var range = this.getRange();
        var pos = { top: 0, left: 0, width: 0, height: 0 };
        if (window.getSelection && range.getBoundingClientRect)
        {
            range = range.cloneRange();
            var offset = (range.startOffset-1);
            range.setStart(range.startContainer, (offset < 0) ? 0 : offset);
            var rect = range.getBoundingClientRect();
            pos = { top: rect.top, left: rect.left, width: (rect.right - rect.left) , height: (rect.bottom - rect.top) };
        }

        return pos;
    },
    getCurrent: function()
    {
        var node = false;
        var sel = this.get();
        var component = this.component.getActive();

        if (component)
        {
            node = component;
        }
        else if (sel && this.is())
        {
            var data = this.inspector.parse(sel.anchorNode);
            node = (!data.isEditor()) ? sel.anchorNode : false;
        }

        return node;
    },
    getParent: function()
    {
        var node = false;
        var current = this.getCurrent();
        if (current)
        {
            var parent = current.parentNode;
            var data = this.inspector.parse(parent);

            node = (!data.isEditor()) ? parent : false;
        }

        return node;
    },
    getElement: function(el)
    {
        var node = el || this.getCurrent();
        while (node)
        {
            var data = this.inspector.parse(node);
            if (data.isElement() && data.isInEditor())
            {
                return node;
            }

            node = node.parentNode;
        }

        return false;
    },
    getInline: function(el)
    {
        var node = el || this.getCurrent();
        var inline = false;
        while (node)
        {
            if (this._isInlineNode(node))
            {
                inline = node;
            }

            node = node.parentNode;
        }

        return inline;
    },
    getInlineFirst: function(el)
    {
        var node = el || this.getCurrent();
        while (node)
        {
            if (this._isInlineNode(node))
            {
                return node;
            }

            node = node.parentNode;
        }

        return false;
    },
    getInlineAll: function(el)
    {
        var node = el || this.getCurrent();
        var inlines = [];
        while (node)
        {
            if (this._isInlineNode(node))
            {
                inlines.push(node);
            }

            node = node.parentNode;
        }

        return inlines;
    },
    getBlock: function(el)
    {
        var node = el || this.getCurrent();
        while (node)
        {
            var data = this.inspector.parse(node);
            var isBlock = this.inspector.isBlockTag(node.tagName);

            if (isBlock && data.isInEditor(node))
            {
                return node;
            }

            node = node.parentNode;
        }

        return false;
    },
    getInlinesAllSelected: function(options)
    {
        if (this.isAll()) return [];

        var inlines = this.getInlines({ all: true });
        var textNodes = this.getNodes({ textnodes: true, inline: false });
        var selected = this.getText().replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
        var finalNodes = [];

        if (textNodes.length !== 0)
        {
            return finalNodes;
        }

        if (selected === '')
        {
            finalNodes = inlines;
        }
        else if (inlines.length > 1)
        {
            for (var i = 0; i < inlines.length; i++)
            {
                if (this._isTextSelected(inlines[i], selected))
                {
                    finalNodes.push(inlines[i]);
                }
            }
        }
        else if (inlines.length === 1)
        {
            if (this._isTextSelected(inlines[0], selected))
            {
                finalNodes = inlines;
            }
        }

        finalNodes = (options && options.tags) ? this._filterNodesByTags(finalNodes, options.tags) : finalNodes;

        return finalNodes;
    },
    getInlines: function(options)
    {
        var nodes = this.getNodes();
        var filteredNodes = [];
        for (var i = 0; i < nodes.length; i++)
        {
            var node;
            if (options && options.all)
            {
                node = nodes[i];
                while (node)
                {
                    if (this._isInlineNode(node) && !this._isInNodesArray(filteredNodes, node))
                    {
                        filteredNodes.push(node);
                    }

                    node = node.parentNode;
                }
            }
            else
            {
                node = this.getInline(nodes[i]);
                if (node && !this._isInNodesArray(filteredNodes, node))
                {
                    filteredNodes.push(node);
                }
            }
        }

        // filter
        filteredNodes = (options && options.tags) ? this._filterNodesByTags(filteredNodes, options.tags) : filteredNodes;
        filteredNodes = (options && options.inside) ? this._filterInlinesInside(filteredNodes, options) : filteredNodes;

        return filteredNodes;
    },
    getBlocks: function(options)
    {
        var nodes = this.getNodes();
        var block = this.getBlock();
        nodes = (nodes.length === 0 && block) ? [block] : nodes;

        var filteredNodes = [];
        for (var i = 0; i < nodes.length; i++)
        {
            var node = this.getBlock(nodes[i]);
            if (node && !this._isInNodesArray(filteredNodes, node))
            {
                filteredNodes.push(node);
            }
        }

        // filter
        filteredNodes = (options && options.tags) ? this._filterNodesByTags(filteredNodes, options.tags) : filteredNodes;
        filteredNodes = (options && options.first) ? this._filterBlocksFirst(filteredNodes, options) : filteredNodes;

        return filteredNodes;
    },
    getElements: function(options)
    {
        var nodes = this.getNodes({ textnodes: false });
        var block = this.getBlock();
        nodes = (nodes.length === 0 && block) ? [block] : nodes;

        var filteredNodes = [];
        for (var i = 0; i < nodes.length; i++)
        {
            if (!this._isInNodesArray(filteredNodes, nodes[i]))
            {
                filteredNodes.push(nodes[i]);
            }
        }

        // filter
        filteredNodes = (options && options.tags) ? this._filterNodesByTags(filteredNodes, options.tags) : filteredNodes;

        return filteredNodes;
    },
    getNodes: function(options)
    {
        var nodes = [];
        var activeComponent = this.component.getActive();
        if (activeComponent)
        {
            nodes = this._getNodesComponent(activeComponent);
        }
        else if (this.isCollapsed())
        {
            var current = this.getCurrent();
            nodes = (current) ? [current] : [];
        }
        else if (this.is() && !activeComponent)
        {
            nodes = this._getRangeSelectedNodes();
        }

        // filter
        nodes = this._filterServicesNodes(nodes);
        nodes = this._filterEditor(nodes);

        // options
        nodes = (options && options.tags) ? this._filterNodesByTags(nodes, options.tags) : nodes;
        nodes = (options && options.textnodes) ? this._filterNodesTexts(nodes, options) : nodes;
        nodes = (options && !options.textnodes) ? this._filterNodesElements(nodes) : nodes;

        return nodes;
    },

    // text & html
    getText: function()
    {
        var sel = this.get();
        return (sel) ? this.utils.removeInvisibleChars(sel.toString()) : '';
    },
    getHtml: function(clean)
    {
        var html = '';
        var sel = this.get();
        if (sel)
        {
            var container = document.createElement('div');
            var len = sel.rangeCount;
            for (var i = 0; i < len; ++i)
            {
                container.appendChild(sel.getRangeAt(i).cloneContents());
            }

            html = container.innerHTML;
            html = (clean !== false) ? this.cleaner.output(html) : html;
            html = html.replace(/<p><\/p>$/i, '');
        }

        return html;
    },

    // clear
    clear: function()
    {
        this.component.clearActive();
        this.get().removeAllRanges();
    },

    // collapse
    collapseToStart: function()
    {
        var sel = this.get();
        if (sel && !sel.isCollapsed) sel.collapseToStart();
    },
    collapseToEnd: function()
    {
        var sel = this.get();
        if (sel && !sel.isCollapsed) sel.collapseToEnd();
    },

    // save
    saveActiveComponent: function()
    {
        var activeComponent = this.component.getActive();
        if (activeComponent)
        {
            this.savedComponent = activeComponent;
            return true;
        }

        return false;
    },
    restoreActiveComponent: function()
    {
        if (this.savedComponent)
        {
            this.component.setActive(this.savedComponent);
            return true;
        }

        return false;
    },
    save: function()
    {
        this._clearSaved();

        var el = this.getElement();
        var tags = ['TD', 'TH', 'P', 'DIV', 'PRE', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'LI', 'BLOCKQUOTE'];
        if (el && (tags.indexOf(el.tagName) !== -1) && (el.innerHTML === '' || el.innerHTML === '<br>'))
        {
            this.savedElement = el;
        }
        else if (!this.saveActiveComponent())
        {
            this.saved = this.offset.get();
        }
    },
    restore: function()
    {
        if (!this.saved && !this.savedComponent && !this.savedElement) return;

        this.editor.saveScroll();

        if (this.savedElement)
        {
            this.caret.setStart(this.savedElement);
        }
        else if (!this.restoreActiveComponent())
        {
            this.offset.set(this.saved);
        }

        this._clearSaved();
        this.editor.restoreScroll();
    },
    saveMarkers: function()
    {
        this._clearSaved();

        if (!this.saveActiveComponent())
        {
            this.marker.insert();
        }
    },
    restoreMarkers: function()
    {
        this.editor.saveScroll();

        if (!this.restoreActiveComponent())
        {
            this.marker.restore();
        }

        this._clearSaved();
        this.editor.restoreScroll();
    },

    // private
    _getNextNode: function(node)
    {
        if (node.hasChildNodes()) return node.firstChild;

        while (node && !node.nextSibling)
        {
            node = node.parentNode;
        }

        if (!node) return null;

        return node.nextSibling;
    },
    _getNodesComponent: function(component)
    {
        var current = this.getCurrent();
        var data = this.inspector.parse(current);

        return (data.isFigcaption()) ? [data.getFigcaption()] : [component];
    },
    _getRangeSelectedNodes: function()
    {
        var nodes = [];
        var range = this.getRange();
        var node = range.startContainer;
        var startNode = range.startContainer;
        var endNode = range.endContainer;
        var $editor = this.editor.getElement();

        // editor
        if (startNode === $editor.get() && this.isAll())
        {
            nodes = this.utils.getChildNodes($editor);
        }
        // single node
        else if (node == endNode)
        {
            nodes = [node];
        }
        else
        {
            while (node && node != endNode)
            {
                nodes.push(node = this._getNextNode(node));
            }

            node = range.startContainer;
            while (node && node != range.commonAncestorContainer)
            {
                nodes.unshift(node);
                node = node.parentNode;
            }
        }

        return nodes;
    },
    _isInNodesArray: function(nodes, node)
    {
        return (nodes.indexOf(node) !== -1);
    },
    _filterEditor: function(nodes)
    {
        var filteredNodes = [];
        for (var i = 0; i < nodes.length; i++)
        {
            var data = this.inspector.parse(nodes[i]);
            if (data.isInEditor())
            {
                filteredNodes.push(nodes[i]);
            }
        }

        return filteredNodes;
    },
    _filterServicesNodes: function(nodes)
    {
        var filteredNodes = [];
        for (var i = 0; i < nodes.length; i++)
        {
            var $el = $R.dom(nodes[i]);
            var skip = false;

            if (nodes[i] && nodes[i].nodeType === 3 && this.utils.isEmpty(nodes[i])) skip = true;
            if ($el.hasClass('redactor-script-tag')
                || $el.hasClass('redactor-component-caret')
                || $el.hasClass('redactor-selection-marker')
                || $el.hasClass('non-editable')) skip = true;

            if (!skip)
            {
                filteredNodes.push(nodes[i]);
            }
        }

        return filteredNodes;
    },
    _filterNodesTexts: function(nodes, options)
    {
        var filteredNodes = [];
        for (var i = 0; i < nodes.length; i++)
        {
            if (nodes[i].nodeType === 3 || (options.keepbr && nodes[i].tagName === 'BR'))
            {
                var inline = this.getInline(nodes[i]);
                var isInline = (inline && options && options.inline === false);
                if (!isInline)
                {
                    filteredNodes.push(nodes[i]);
                }
            }
        }

        return filteredNodes;
    },
    _filterNodesElements: function(nodes)
    {
        var filteredNodes = [];
        for (var i = 0; i < nodes.length; i++)
        {
            if (nodes[i].nodeType !== 3)
            {
                filteredNodes.push(nodes[i]);
            }
        }

        return filteredNodes;
    },
    _filterNodesByTags: function(nodes, tags, passtexts)
    {
        var filteredNodes = [];
        for (var i = 0; i < nodes.length; i++)
        {
            if (passtexts && nodes[i].nodeType === 3)
            {
                filteredNodes.push(nodes[i]);
            }
            else if (nodes[i].nodeType !== 3)
            {
                var nodeTag = nodes[i].tagName.toLowerCase();
                if (tags.indexOf(nodeTag.toLowerCase()) !== -1)
                {
                    filteredNodes.push(nodes[i]);
                }
            }
        }

        return filteredNodes;
    },
    _filterBlocksFirst: function(nodes)
    {
        var filteredNodes = [];
        for (var i = 0; i < nodes.length; i++)
        {
            var $node = $R.dom(nodes[i]);
            var parent = $node.parent().get();
            var isFirst = ($node.parent().hasClass('redactor-in'));
            var isCellParent = (parent && (parent.tagName === 'TD' || parent.tagName === 'TH'));
            if (isFirst || isCellParent)
            {
                filteredNodes.push(nodes[i]);
            }
        }

        return filteredNodes;
    },
    _filterInlinesInside: function(nodes)
    {
        var filteredNodes = [];
        for (var i = 0; i < nodes.length; i++)
        {
            if (window.getSelection().containsNode(nodes[i], true))
            {
                filteredNodes.push(nodes[i]);
            }
        }

        return filteredNodes;
    },
    _isTextSelected: function(node, selected)
    {
        var text = this.utils.removeInvisibleChars(node.textContent);

        return (
            selected === text
            || text.search(selected) !== -1
            || selected.search(new RegExp('^' + text)) !== -1
            || selected.search(new RegExp(text + '$')) !== -1
        );
    },
    _isInlineNode: function(node)
    {
        var data = this.inspector.parse(node);

        return (this.inspector.isInlineTag(node.tagName) && data.isInEditor());
    },
    _clearSaved: function()
    {
        this.saved = false;
        this.savedComponent = false;
        this.savedElement = false;
    }
});
$R.add('service', 'element', {
    init: function(app)
    {
        this.app = app;
        this.rootElement = app.rootElement;

        // local
        this.$element = {};
        this.type = 'inline';
    },
    start: function()
    {
        this._build();
        this._buildType();
    },

    // public
    isType: function(type)
    {
        return (type === this.type);
    },
    getType: function()
    {
        return this.type;
    },
    getElement: function()
    {
        return this.$element;
    },

    // private
    _build: function()
    {
        this.$element = $R.dom(this.rootElement);
    },
    _buildType: function()
    {
        var tag = this.$element.get().tagName;

        this.type = (tag === 'TEXTAREA') ? 'textarea' : this.type;
        this.type = (tag === 'DIV') ? 'div' : this.type;
        this.type = (this.opts.inline) ? 'inline' : this.type;
    }
});
$R.add('service', 'editor', {
    init: function(app)
    {
        this.app = app;

        // local
        this.scrolltop = false;
        this.pasting = false;
    },

    // start
    start: function()
    {
        this._build();
    },

    // focus
    focus: function()
    {
        if (!this.isFocus() && !this._isContenteditableFocus())
        {
            this.saveScroll();
            this.$editor.focus();
            this.restoreScroll();
        }
    },
    startFocus: function()
    {
        this.caret.setStart(this.getFirstNode());
    },
    endFocus: function()
    {
        this.caret.setEnd(this.getLastNode());
    },

    // pasting
    isPasting: function()
    {
        return this.pasting;
    },
    enablePasting: function()
    {
        this.pasting = true;
    },
    disablePasting: function()
    {
        this.pasting = false;
    },

    // scroll
    saveScroll: function()
    {
        this.scrolltop = this._getScrollTarget().scrollTop();
    },
    restoreScroll: function()
    {
        if (this.scrolltop !== false)
        {
            this._getScrollTarget().scrollTop(this.scrolltop);
            this.scrolltop = false;
        }
    },

    // non editables
    disableNonEditables: function()
    {
        this.$noneditables = this.$editor.find('[contenteditable=false]');
        this.$noneditables.attr('contenteditable', true);
    },
    enableNonEditables: function()
    {
        if (this.$noneditables)
        {
            setTimeout(function() { this.$noneditables.attr('contenteditable', false); }.bind(this), 1);
        }
    },

    // nodes
    getFirstNode: function()
    {
        return this.$editor.contents()[0];
    },
    getLastNode: function()
    {
        var nodes = this.$editor.contents();

        return nodes[nodes.length-1];
    },

    // utils
    isSourceMode: function()
    {
        var $source = this.source.getElement();

        return $source.hasClass('redactor-source-open');
    },
    isEditor: function(el)
    {
        var node = $R.dom(el).get();

        return (node === this.$editor.get());
    },
    isEmpty: function(keeplists)
    {
        return this.utils.isEmptyHtml(this.$editor.html(), false, keeplists);
    },
    isFocus: function()
    {
        var $active = $R.dom(document.activeElement);
        var isComponentSelected = (this.$editor.find('.redactor-component-active').length !== 0);

        return (isComponentSelected || $active.closest('.redactor-in-' + this.uuid).length !== 0);
    },
    setEmpty: function()
    {
        this.$editor.html(this.opts.emptyHtml);
    },

    // element
    getElement: function()
    {
        return this.$editor;
    },

    // private
    _build: function()
    {
        var $element = this.element.getElement();
        var editableElement = (this.element.isType('textarea')) ? '<div>' : $element.get();

        this.$editor = $R.dom(editableElement);
    },
    _getScrollTarget: function()
    {
        var $target = this.$doc;
        if (this.opts.toolbarFixedTarget !== document)
        {
            $target = $R.dom(this.opts.toolbarFixedTarget);
        }
        else
        {
            $target = (this.opts.scrollTarget) ? $R.dom(this.opts.scrollTarget) : $target;
        }

        return $target;
    },
    _isContenteditableFocus: function()
    {
        var block = this.selection.getBlock();
        var $blockParent = (block) ? $R.dom(block).closest('[contenteditable=true]').not('.redactor-in') : [];

        return ($blockParent.length !== 0);
    }
});
$R.add('service', 'container', {
    init: function(app)
    {
        this.app = app;
    },
    // public
    start: function()
    {
        this._build();
    },
    getElement: function()
    {
        return this.$container;
    },

    // private
    _build: function()
    {
        var tag = (this.element.isType('inline')) ? '<span>' : '<div>';
        this.$container = $R.dom(tag);
    }
});
$R.add('service', 'source', {
    init: function(app)
    {
        this.app = app;

        // local
        this.$source = {};
        this.content = '';
    },
    // public
    start: function()
    {
        this._build();
        this._buildName();
        this._buildStartedContent();
    },
    getElement: function()
    {
        return this.$source;
    },
    getCode: function()
    {
        return this.$source.val();
    },
    getName: function()
    {
        return this.$source.attr('name');
    },
    getStartedContent: function()
    {
        return this.content;
    },
    setCode: function(html)
    {
        return this.insertion.set(html, true, false);
    },
    isNameGenerated: function()
    {
        return (this.name);
    },
    rebuildStartedContent: function()
    {
        this._buildStartedContent();
    },

    // private
    _build: function()
    {
        var $element = this.element.getElement();
        var isTextarea = this.element.isType('textarea');
        var sourceElement = (isTextarea) ? $element.get() : '<textarea>';

        this.$source = $R.dom(sourceElement);
    },
    _buildName: function()
    {
        var $element = this.element.getElement();

        this.name = $element.attr('name');
        this.$source.attr('name', (this.name) ? this.name : 'content-' + this.uuid);
    },
    _buildStartedContent: function()
    {
        var $element = this.element.getElement();
        var content = (this.element.isType('textarea')) ? $element.val() : $element.html();

        this.content = content.trim();
    }
});
$R.add('service', 'statusbar', {
    init: function(app)
    {
        this.app = app;

        // local
        this.$statusbar = {};
        this.items = [];
    },
    // public
    start: function()
    {
        this.$statusbar = $R.dom('<ul>');
        this.$statusbar.attr('dir', this.opts.direction);
    },
    add: function(name, html)
    {
        return this.update(name, html);
    },
    update: function(name, html)
    {
        var $item;
        if (typeof this.items[name] !== 'undefined')
        {
            $item = this.items[name];
        }
        else
        {
            $item = $R.dom('<li>');
            this.$statusbar.append($item);
            this.items[name] = $item;
        }

        return $item.html(html);
    },
    get: function(name)
    {
        return (this.items[name]) ? this.items[name] : false;
    },
    remove: function(name)
    {
        if (this.items[name])
        {
            this.items[name].remove();
            delete this.items[name];
        }
    },
    getItems: function()
    {
        return this.items;
    },
    removeItems: function()
    {
        this.items = {};
        this.$statusbar.html('');
    },
    getElement: function()
    {
        return this.$statusbar;
    }
});
$R.add('service', 'toolbar', {
    init: function(app)
    {
        this.app = app;

        // local
        this.buttons = [];
        this.dropdownOpened = false;
        this.buttonsObservers = {};
    },
    // public
    start: function()
    {
        if (this.is())
        {
            this.opts.activeButtons = (this.opts.activeButtonsAdd) ? this._extendActiveButtons() : this.opts.activeButtons;
            this.create();
        }
    },
    stopObservers: function()
    {
        this.buttonsObservers = {};
    },
    create: function()
    {
        this.$wrapper = $R.dom('<div>');
        this.$toolbar = $R.dom('<div>');
    },
    observe: function()
    {
        if (!this.is()) return;

        this.setButtonsInactive();

        var button, observer;

        // observers
        for (var name in this.buttonsObservers)
        {
            observer = this.buttonsObservers[name];
            button = this.getButton(name);
            this.app.broadcast('button.' + observer + '.observe', button);
        }

        // inline buttons
        var buttons = this.opts.activeButtons;
        var inlines = this.selection.getInlinesAllSelected();
        var current = this.selection.getInline();
        if (this.selection.isCollapsed() && current)
        {
            inlines.push(current);
        }

        var tags = this._inlinesToTags(inlines);
        for (var key in buttons)
        {
            if (tags.indexOf(key) !== -1)
            {
                button = this.getButton(buttons[key]);
                button.setActive();
            }

        }
    },

    // is
    is: function()
    {
        return !(!this.opts.toolbar || (this.detector.isMobile() && this.opts.air));
    },
    isAir: function()
    {
        return (this.is()) ? this.$toolbar.hasClass('redactor-air') : false;
    },
    isFixed: function()
    {
        return (this.is()) ? this.$toolbar.hasClass('redactor-toolbar-fixed') : false;
    },
    isContextBar: function()
    {
        var $bar = this.$body.find('#redactor-context-toolbar-' + this.uuid);
        return $bar.hasClass('open');
    },
    isTarget: function()
    {
        return (this.opts.toolbarFixedTarget !== document);
    },

    // get
    getElement: function()
    {
        return this.$toolbar;
    },
    getWrapper: function()
    {
        return this.$wrapper;
    },
    getDropdown: function()
    {
        return this.dropdownOpened;
    },
    getTargetElement: function()
    {
        return $R.dom(this.opts.toolbarFixedTarget);
    },
    getButton: function(name)
    {
        var $btn = this._findButton('.re-' + name);

        return ($btn.length !== 0) ? $btn.dataget('data-button-instance') : false;
    },
    getButtonByIndex: function(index)
    {
        var $btn = this.$toolbar.find('.re-button').eq(index);

        return ($btn.length !== 0) ? $btn.dataget('data-button-instance') : false;
    },
    getButtons: function()
    {
        var buttons = [];
        this._findButtons().each(function(node)
        {
            var $node = $R.dom(node);
            buttons.push($node.dataget('data-button-instance'));
        });

        return buttons;
    },
    getButtonsKeys: function()
    {
        var keys = [];
        this._findButtons().each(function(node)
        {
            var $node = $R.dom(node);
            keys.push($node.attr('data-re-name'));
        });

        return keys;
    },

    // add
    addButton: function(name, btnObj, position, $el, start)
    {
        position = position || 'end';

        var index = this._getButtonIndex(name);
        var $button = $R.create('toolbar.button', this.app, name, btnObj);

        if (btnObj.observe)
        {
            this.opts.activeButtonsObservers[name] = { observe: btnObj.observe, button: $button };
        }

        // api added
        if (start !== true)
        {
            if (index === 0) position = 'first';
            else if (index !== -1)
            {
                var $elm = this.getButtonByIndex(index-1);
                if ($elm)
                {
                    position = 'after';
                    $el = $elm;
                }
            }
        }

        if (this.is())
        {
            if (position === 'first') this.$toolbar.prepend($button);
            else if (position === 'after') $el.after($button);
            else if (position === 'before') $el.before($button);
            else this.$toolbar.append($button);
        }

        return $button;
    },
    addButtonFirst: function(name, btnObj)
    {
        return this.addButton(name, btnObj, 'first');
    },
    addButtonAfter: function(after, name, btnObj)
    {
        var $btn = this.getButton(after);

        return ($btn) ? this.addButton(name, btnObj, 'after', $btn) : this.addButton(name, btnObj);
    },
    addButtonBefore: function(before, name, btnObj)
    {
        var $btn = this.getButton(before);

        return ($btn) ? this.addButton(name, btnObj, 'before', $btn) : this.addButton(name, btnObj);
    },
    addButtonObserver: function(name, observer)
    {
        this.buttonsObservers[name] = observer;
    },

    // set
    setButtons: function(buttons)
    {
        this.buttons = buttons;
    },
    setDropdown: function(dropdown)
    {
        this.dropdownOpened = dropdown;
    },
    setButtonsInactive: function()
    {
        var $buttons = this.getButtons();
        for (var i = 0; i < $buttons.length; i++)
        {
            $buttons[i].setInactive();
        }
    },
    setButtonsActive: function()
    {
        var $buttons = this.getButtons();
        for (var i = 0; i < $buttons.length; i++)
        {
            $buttons[i].setActive();
        }
    },

    // disable & enable
    disableButtons: function()
    {
        var $buttons = this.getButtons();
        for (var i = 0; i < $buttons.length; i++)
        {
            $buttons[i].disable();
        }
    },
    enableButtons: function()
    {
        var $buttons = this.getButtons();
        for (var i = 0; i < $buttons.length; i++)
        {
            $buttons[i].enable();
        }

    },

    // private
    _getButtonIndex: function(name)
    {
        var index = this.buttons.indexOf(name);

        return (index === -1) ? false : index;
    },
    _findButton: function(selector)
    {
        return (this.is()) ? this.$toolbar.find(selector) : $R.dom();
    },
    _findButtons: function()
    {
        return (this.is()) ? this.$toolbar.find('.re-button') : $R.dom();
    },
    _extendActiveButtons: function()
    {
        return $R.extend({}, this.opts.activeButtons, this.opts.activeButtonsAdd);
    },
    _inlinesToTags: function(inlines)
    {
        var tags = [];
        for (var i = 0; i < inlines.length; i++)
        {
            tags.push(inlines[i].tagName.toLowerCase());
        }

        return tags;
    }
});
$R.add('class', 'toolbar.button', {
    mixins: ['dom'],
    init: function(app, name, btnObj)
    {
        this.app = app;
        this.opts = app.opts;
        this.lang = app.lang;
        this.$body = app.$body;
        this.toolbar = app.toolbar;
        this.detector = app.detector;

        // local
        this.obj = btnObj;
        this.name = name;
        this.dropdown = false;
        this.tooltip = false;

        // init
        this._init();
    },
    // is
    isActive: function()
    {
        return this.hasClass('redactor-button-active');
    },
    isDisabled: function()
    {
        return this.hasClass('redactor-button-disabled');
    },

    // has
    hasIcon: function()
    {
        return (this.obj.icon && !this.opts.buttonsTextLabeled);
    },

    // set
    setDropdown: function(dropdown)
    {
        this.obj.dropdown = dropdown;
        this.obj.message = false;
        this.dropdown = $R.create('toolbar.dropdown', this.app, this.name, this.obj.dropdown);
        this.attr('data-dropdown', true);
    },
    setMessage: function(message, args)
    {
        this.obj.message = message;
        this.obj.args = args;
        this.obj.dropdown = false;
    },
    setApi: function(api, args)
    {
        this.obj.api = api;
        this.obj.args = args;
        this.obj.dropdown = false;
    },
    setTitle: function(title)
    {
        this.obj.title = this.lang.parse(title);
        this.obj.tooltip = this.obj.title;

        this.attr({ 'alt': this.obj.tooltip, 'aria-label': this.obj.tooltip });
        if (!this.attr('data-re-icon')) this.html(this.obj.title);
    },
    setTooltip: function(tooltip)
    {
        this.obj.tooltip = this.lang.parse(tooltip);
        this.attr({ 'alt': this.obj.tooltip, 'aria-label': this.obj.tooltip });
    },
    setIcon: function(icon)
    {
        if (this.opts.buttonsTextLabeled) return;

        this.obj.icon = true;
        this.$icon = $R.dom(icon);

        this.html('');
        this.append(this.$icon);
        this.attr('data-re-icon', true);
        this.addClass('re-button-icon');
        this.setTooltip(this.obj.title);
        this._buildTooltip();
    },
    setActive: function()
    {
        this.addClass('redactor-button-active');
    },
    setInactive: function()
    {
        this.removeClass('redactor-button-active');
    },

    // hide
    hideTooltip: function()
    {
        this.$body.find('.re-button-tooltip').remove();
    },

    // get
    getDropdown: function()
    {
        return this.dropdown;
    },

    // enable & disable
    disable: function()
    {
        this.addClass('redactor-button-disabled');
    },
    enable: function()
    {
        this.removeClass('redactor-button-disabled');
    },

    // toggle
    toggle: function(e)
    {
        if (e) e.preventDefault();
        if (this.isDisabled()) return;

        if (this.obj.dropdown)
        {
            this.dropdown.toggle(e);
        }
        else if (this.obj.api)
        {
            // broadcast
            this.app.api(this.obj.api, this.obj.args, this.name);
        }
        else if (this.obj.message)
        {
            // broadcast
            this.app.broadcast(this.obj.message, this.obj.args, this.name);
        }

        this.hideTooltip();
    },

    // private
    _init: function()
    {
        // parse
        this._parseTitle();
        this._parseTooltip();

        // build
        this._build();
        this._buildCallback();
        this._buildAttributes();
        this._buildObserver();

        if (this.hasIcon())
        {
            this._buildIcon();
            this._buildTooltip();
        }
        else
        {
            this.html(this.obj.title);
        }
    },
    _parseTooltip: function()
    {
        this.obj.tooltip = (this.obj.tooltip) ? this.lang.parse(this.obj.tooltip) : this.obj.title;
    },
    _parseTitle: function()
    {
        this.obj.title = this.lang.parse(this.obj.title);
    },
    _build: function()
    {
        this.parse('<a>');
        this.addClass('re-button re-' + this.name);
        this.attr('data-re-name', this.name);
        this.dataset('data-button-instance', this);

        if (this.obj.dropdown) this.setDropdown(this.obj.dropdown);
    },
    _buildCallback: function()
    {
        this.on('click', this.toggle.bind(this));
    },
    _buildAttributes: function()
    {
        var attrs = {
            'href': '#',
            'alt': this.obj.tooltip,
            'rel': this.name,
            'role': 'button',
            'aria-label': this.obj.tooltip,
            'tabindex': '-1'
        };

        this.attr(attrs);
    },
    _buildObserver: function()
    {
        if (typeof this.obj.observe !== 'undefined')
        {
            this.toolbar.addButtonObserver(this.name, this.obj.observe);
        }
    },
    _buildIcon: function()
    {
        var icon = this.obj.icon;
        var isHtml = (/(<([^>]+)>)/ig.test(icon));

        this.$icon = (isHtml) ? $R.dom(icon) : $R.dom('<i>');
        if (!isHtml) this.$icon.addClass('re-icon-' + this.name);

        this.append(this.$icon);
        this.attr('data-re-icon', true);
        this.addClass('re-button-icon');
    },
    _buildTooltip: function()
    {
        if (this.detector.isDesktop())
        {
            this.tooltip = $R.create('toolbar.button.tooltip', this.app, this);
        }
    }
});
$R.add('class', 'toolbar.button.tooltip', {
    mixins: ['dom'],
    init: function(app, $button)
    {
        this.app = app;
        this.uuid = app.uuid;
        this.opts = app.opts;
        this.$body = app.$body;
        this.toolbar = app.toolbar;

        // local
        this.$button = $button;
        this.created = false;

        // init
        this._init();
    },
    open: function()
    {
        if (this.$button.hasClass('redactor-button-disabled') || this.$button.hasClass('redactor-button-active')) return;

        this.created = true;
        this.parse('<span>');
        this.addClass('re-button-tooltip re-button-tooltip-' + this.uuid);
        this.$body.append(this);
        this.html(this.$button.attr('alt'));

        var offset = this.$button.offset();
        var position = 'absolute';
        var height = this.$button.height();
        var width = this.$button.width();
        var arrowOffset = 4;

        this.css({
            top: (offset.top + height + arrowOffset) + 'px',
            left: (offset.left + width/2 - this.width()/2) + 'px',
            position: position
        });

        this.show();
    },
    close: function()
    {
        if (!this.created || this.$button.hasClass('redactor-button-disabled')) return;

        this.remove();
        this.created = false;
    },

    // private
    _init: function()
    {
        this.$button.on('mouseover', this.open.bind(this));
        this.$button.on('mouseout', this.close.bind(this));
    }
});
$R.add('class', 'toolbar.dropdown', {
    mixins: ['dom'],
    init: function(app, name, items)
    {
        this.app = app;
        this.uuid = app.uuid;
        this.opts = app.opts;
        this.$win = app.$win;
        this.$doc = app.$doc;
        this.$body = app.$body;
        this.animate = app.animate;
        this.toolbar = app.toolbar;

        // local
        this.name = name;
        this.started = false;
        this.items = items;
        this.$items = [];
    },
    // public
    toggle: function(e)
    {
        if (!this.started)
        {
            this._build();
        }

        // toggle
        if (this.isOpened() && this.isActive())
        {
            this.close(false);
        }
        else
        {
            this.open(e);
        }
    },
    isOpened: function()
    {
        var $dropdown = this.$body.find('.redactor-dropdown-' + this.uuid + '.open');

        return ($dropdown.length !== 0 && $dropdown.attr('data-re-name') === this.name);
    },
    isActive: function()
    {
        var $dropdown = this.$body.find('#redactor-dropdown-' + this.uuid + '-' + this.name + '.open');
        return ($dropdown.length !== 0);
    },
    getName: function()
    {
        return this.attr('data-re-name');
    },
    getItem: function(name)
    {
        return this.$items[name];
    },
    getItemsByClass: function(classname)
    {
        var result = [];
        for (var key in this.$items)
        {
            if (typeof this.$items[key] === 'object' && this.$items[key].hasClass(classname))
            {
                result.push(this.$items[key]);
            }
        }

        return result;
    },
    open: function(e)
    {
        this._closeAll();

        this.$btn = this.toolbar.getButton(this.name);
        this.app.broadcast('dropdown.open', e, this, this.$btn);
        this.toolbar.setDropdown(this);

        this.show();
        this.removeClass('redactor-animate-hide');
        this.addClass('open');
        this._observe();

        this.$btn.hideTooltip();
        this.$btn.setActive();

        this.$doc.on('keyup.redactor.dropdown-' + this.uuid, this._handleKeyboard.bind(this));
        this.$doc.on('click.redactor.dropdown-' + this.uuid + ' touchstart.redactor.dropdown-' + this.uuid, this.close.bind(this));

        this.updatePosition();
        this.app.broadcast('dropdown.opened', e, this, this.$btn);

    },
    close: function(e, animate)
    {
        if (e)
        {
            var $el = $R.dom(e.target);
            if (this._isButton(e) || $el.hasClass('redactor-dropdown-not-close') || $el.hasClass('redactor-dropdown-item-disabled'))
            {
                e.preventDefault();
                return;
            }
        }

        this.app.broadcast('dropdown.close', this, this.$btn);
        this.toolbar.setDropdown(false);

        this.$btn.setInactive();
        if (animate === false)
        {
            this._close();
        }
        else
        {
            this.animate.start(this, 'fadeOut', this._close.bind(this));
        }
    },
    updatePosition: function()
    {
        var isFixed = this.toolbar.isFixed();
        var pos = this.$btn.offset();
        pos.top = (isFixed) ? this.$btn.position().top : pos.top;

        var btnHeight = this.$btn.height();
        var btnWidth = this.$btn.width();
        var position = (isFixed) ? 'fixed' : 'absolute';
        var topOffset = (isFixed) ? (2 + this.opts.toolbarFixedTopOffset) : 2;
        var leftOffset = 0;
        var left = (pos.left + leftOffset);
        var width = parseFloat(this.css('width'));
        var winWidth = this.$win.width();
        var leftFix = (winWidth < (left + width)) ? (width - btnWidth) : 0;
        var leftPos = (left - leftFix);
        leftPos = (leftPos < 0) ? 4 : leftPos;

        this.css({ position: position, top: (pos.top + btnHeight + topOffset) + 'px', left: leftPos + 'px' });
    },

    // private
    _build: function()
    {
        this.parse('<div>');
        this.attr('dir', this.opts.direction);
        this.attr('id', 'redactor-dropdown-' + this.uuid + '-' + this.name);
        this.attr('data-re-name', this.name);

        this.addClass('redactor-dropdown redactor-dropdown-' + this.uuid + ' redactor-dropdown-' + this.name);
        this.dataset('data-dropdown-instance', this);
        var isDom = (this.items.dom || typeof this.items === 'string');

        if (isDom) this._buildDom();
        else this._buildItems();

        this.$body.append(this);
        this.started = true;
    },
    _buildDom: function()
    {
        this.html('').append($R.dom(this.items));
    },
    _buildItems: function()
    {
        this.items = (this.name === 'format') ? this._buildFormattingItems() : this.items;

        for (var key in this.items)
        {
            var obj = this.items[key];

            if (key === 'observe')
            {
                this.attr('data-observe', this.items[key]);
            }
            else
            {
                var $item = $R.create('toolbar.dropdown.item', this.app, key, obj, this);

                this.$items[key] = $item;
                this.append($item);
            }
        }
    },
    _buildFormattingItems: function()
    {
        // build the format set
        for (var key in this.items)
        {
            if (this.opts.formatting.indexOf(key) === -1) delete this.items[key];
        }

        // remove from the format set
        if (this.opts.formattingHide)
        {
            for (var key in this.items)
            {
                if (this.opts.formattingHide.indexOf(key) !== -1) delete this.items[key];
            }
        }

        // add to the format set
        if (this.opts.formattingAdd)
        {
            for (var key in this.opts.formattingAdd)
            {
                this.items[key] = this.opts.formattingAdd[key];
            }
        }

        return this.items;
    },
    _handleKeyboard: function(e)
    {
        if (e.which === 27) this.close();
    },
    _isButton: function(e)
    {
        var $el = $R.dom(e.target);
        var $btn = $el.closest('.re-button');

        return ($btn.get() === this.$btn.get());
    },
    _close: function()
    {
        this.$btn.setInactive();
        this.$doc.off('.redactor.dropdown-' + this.uuid);
        this.removeClass('open');
        this.addClass('redactor-animate-hide');
        this.app.broadcast('dropdown.closed', this, this.$btn);
    },
    _closeAll: function()
    {
        this.$body.find('.redactor-dropdown-' + this.uuid + '.open').each(function(node)
        {
            var $node = $R.dom(node);
            var instance =  $node.dataget('data-dropdown-instance');
            instance._close();
        });
    },
    _observe: function()
    {
        var observer = this.attr('data-observe');
        if (observer)
        {
            this.app.broadcast('dropdown.' + observer + '.observe', this);
        }
    }
});
$R.add('class', 'toolbar.dropdown.item', {
    mixins: ['dom'],
    init: function(app, name, obj, dropdown)
    {
        this.app = app;
        this.lang = app.lang;

        // local
        this.dropdown = dropdown;
        this.name = name;
        this.obj = obj;

        // init
        this._init();
    },
    setTitle: function(html)
    {
        this.$span.html(html);
    },
    getTitle: function()
    {
        return this.$span.html();
    },
    enable: function()
    {
        this.removeClass('redactor-dropdown-item-disabled');
    },
    disable: function()
    {
        this.addClass('redactor-dropdown-item-disabled');
    },
    toggle: function(e)
    {
        if (e) e.preventDefault();
        if (this.hasClass('redactor-dropdown-item-disabled')) return;

        if (this.obj.message)
        {
            // broadcast
            this.app.broadcast(this.obj.message, this.obj.args, this.name);
        }
        else if (this.obj.api)
        {
            this.app.api(this.obj.api, this.obj.args, this.name);
        }
    },

    // private
    _init: function()
    {
        this.parse('<a>');
        this.attr('href', '#');
        this.addClass('redactor-dropdown-item-' + this.name);

        if (this.obj.classname)
        {
            this.addClass(this.obj.classname);
        }

        this.attr('data-re-name', this.name);
        this.on('click', this.toggle.bind(this));

        this.$span = $R.dom('<span>');
        this.append(this.$span);
        this.setTitle(this.lang.parse(this.obj.title));
    }
});
$R.add('service', 'cleaner', {
    init: function(app)
    {
        this.app = app;
        this.opts = app.opts;

        // local
        this.storedComponents = [];
        this.storedImages = [];
        this.storedLinks = [];
        this.deniedTags = ['font', 'html', 'head', 'link', 'title', 'body', 'meta', 'applet'];
        this.convertRules = {};
        this.unconvertRules = {};

        // regex
        this.reComments = /<!--[\s\S]*?-->/g;
        this.reSpacedEmpty = /^(||\s||<br\s?\/?>||&nbsp;)$/i;
        this.reScriptTag = /<script(.*?[^>]?)>([\w\W]*?)<\/script>/gi;
    },
    // public
    addConvertRules: function(name, func)
    {
        this.convertRules[name] = func;
    },
    addUnconvertRules: function(name, func)
    {
        this.unconvertRules[name] = func;
    },
    input: function(html, paragraphize, started)
    {
        // pre/code
        html = this.encodePreCode(html);

        // converting entity
        html = html.replace(/\$/g, '&#36;');
        html = html.replace(/&amp;/g, '&');

        // convert to figure
        var converter = $R.create('cleaner.figure', this.app);
        html = converter.convert(html, this.convertRules);

        // store components
        html = this.storeComponents(html);

        // clean
        html = this.replaceTags(html, this.opts.replaceTags);
        html = this._setSpanAttr(html);
        html = this._setStyleCache(html);
        html = this.removeTags(html, this.deniedTags);
        html = (this.opts.removeScript) ? this._removeScriptTag(html) : this._replaceScriptTag(html);
        html = (this.opts.removeComments) ? this.removeComments(html) : html;
        html = (this._isSpacedEmpty(html)) ? this.opts.emptyHtml : html;

        // restore components
        html = this.restoreComponents(html);

        // clear wrapped components
        html = this._cleanWrapped(html);

        // paragraphize
        html = (paragraphize) ? this.paragraphize(html) : html;

        return html;
    },
    output: function(html, removeMarkers)
    {
        html = this.removeInvisibleSpaces(html);

        // empty
        if (this._isSpacedEmpty(html)) return '';
        if (this._isParagraphEmpty(html)) return '';

        html = this.removeServiceTagsAndAttrs(html, removeMarkers);

        // store components
        html = this.storeComponents(html);

        html = this.removeSpanWithoutAttributes(html);
        html = this.removeFirstBlockBreaklineInHtml(html);

        html = (this.opts.removeScript) ? html : this._unreplaceScriptTag(html);
        html = (this.opts.preClass) ? this._setPreClass(html) : html;
        html = (this.opts.linkNofollow) ? this._setLinkNofollow(html) : html;
        html = (this.opts.removeNewLines) ? this.cleanNewLines(html) : html;

        // restore components
        html = this.restoreComponents(html);

        // convert to figure
        var converter = $R.create('cleaner.figure', this.app);
        html = converter.unconvert(html, this.unconvertRules);

        // final clean up
        html = this.removeEmptyAttributes(html, ['style', 'class', 'rel', 'alt', 'title']);
        html = this.cleanSpacesInPre(html);
        html = this.tidy(html);

        // converting entity
        html = html.replace(/&amp;/g, '&');

        // check whitespaces
        html = (html.replace(/\n/g, '') === '') ? '' : html;

        return html;
    },
    paste: function(html)
    {
        // store components
        html = this.storeComponents(html);

        // remove tags
        var deniedTags = this.deniedTags.concat(['iframe']);
        html = this.removeTags(html, deniedTags);

        // remove doctype tag
        html = html.replace(new RegExp("<\!doctype([\\s\\S]+?)>", 'gi'), '');

        // remove style tag
        html = html.replace(new RegExp("<style([\\s\\S]+?)</style>", 'gi'), '');

        // remove br between
        html = html.replace(new RegExp("</p><br /><p", 'gi'), '</p><p');

        // gdocs & word
        var isMsWord = this._isHtmlMsWord(html);

        html = this._cleanGDocs(html);
        html = (isMsWord) ? this._cleanMsWord(html) : html;

        // do not clean
        if (!this.opts.pasteClean)
        {
            // restore components
            html = this.restoreComponents(html);

            return html;
        }

        // plain text
        if (this.opts.pastePlainText)
        {
            // restore components
            html = this.restoreComponents(html);

            return this.pastePlainText(html);
        }

        // remove tags
        var exceptedTags = this.opts.pasteBlockTags.concat(this.opts.pasteInlineTags);
        html = this.removeTagsExcept(html, exceptedTags);

        // links & images
        html = (this.opts.pasteLinks) ? html : this.removeTags(html, ['a']);
        html = (this.opts.pasteImages) ? html : this.removeTags(html, ['img']);

        // build wrapper
        var $wrapper = this.utils.buildWrapper(html);

        // clean attrs
        var $elms = $wrapper.find('*');

        // remove style
        var filterStyle = (this.opts.pasteKeepStyle.length !== 0) ? ',' + this.opts.pasteKeepStyle.join(',') : '';
        $elms.not('[data-redactor-style-cache]' + filterStyle).removeAttr('style');

        // remove class
        var filterClass = (this.opts.pasteKeepClass.length !== 0) ? ',' + this.opts.pasteKeepClass.join(',') : '';
        $elms.not('[data-redactor-style-cache], span.redactor-component' + filterClass).removeAttr('class');

        // remove attrs
        var filterAttrs = (this.opts.pasteKeepAttrs.length !== 0) ? ',' + this.opts.pasteKeepAttrs.join(',') : '';
        $elms.not('img, a, span.redactor-component, [data-redactor-style-cache]' + filterAttrs).each(function(node)
        {
            while(node.attributes.length > 0)
            {
                node.removeAttribute(node.attributes[0].name);
            }
        });

        // paste link target
        if (this.opts.pasteLinks && this.opts.pasteLinkTarget !== false)
        {
            $wrapper.find('a').attr('target', this.opts.pasteLinkTarget);
        }

        // keep style
        $wrapper.find('[data-redactor-style-cache]').each(function(node)
        {
            var style = node.getAttribute('data-redactor-style-cache');
            node.setAttribute('style', style);
        });

        // remove empty span
        $wrapper.find('span').each(function(node)
        {
            if (node.attributes.length === 0)
            {
                $R.dom(node).unwrap();
            }
        });

        // remove empty inline
        $wrapper.find(this.opts.inlineTags.join(',')).each(function(node)
        {
            if (node.attributes.length === 0 && this.utils.isEmptyHtml(node.innerHTML))
            {
                $R.dom(node).unwrap();
            }

        }.bind(this));

        // place ul/ol into li
        $wrapper.find('ul, ol').each(function(node)
        {
            var prev = node.previousSibling;
            if (prev && prev.tagName === 'LI')
            {
                var $li = $R.dom(prev);
                $li.find('p').unwrap();
                $li.append(node);
            }
        });

        // get wrapper
        html = this.utils.getWrapperHtml($wrapper);

        // remove paragraphs form lists (google docs bug)
        html = html.replace(/<li><p>/gi, '<li>');
        html = html.replace(/<\/p><\/li>/gi, '</li>');

        // clean empty p
        html = html.replace(/<p>&nbsp;<\/p>/gi, '<p></p>');
        html = html.replace(/<p><br\s?\/?><\/p>/gi, '<p></p>');

        if (isMsWord)
        {
            html = html.replace(/<p><\/p>/gi, '');
            html = html.replace(/<p>\s<\/p>/gi, '');
        }

        // restore components
        html = this.restoreComponents(html);

        return html;
    },
    pastePlainText: function(html)
    {
        html = (this.opts.pasteLinks) ? this.storeLinks(html) : html;
        html = (this.opts.pasteImages) ? this.storeImages(html) : html;

        html = this.getPlainText(html);
        html = this._replaceNlToBr(html);

        html = (this.opts.pasteLinks) ? this.restoreLinks(html) : html;
        html = (this.opts.pasteImages) ? this.restoreImages(html) : html;

        return html;
    },
    tidy: function(html)
    {
        return html;
    },
    paragraphize: function(html)
    {
        var paragraphize = $R.create('cleaner.paragraphize', this.app);

        return paragraphize.convert(html);
    },

    // get
    getFlatText: function(html)
    {
        var $div = $R.dom('<div>');

        if (!html.nodeType && !html.dom)
        {
            html = html.toString();
            html = html.trim();
            $div.html(html);
        }
        else
        {
            $div.append(html);
        }

        html = $div.get().textContent || $div.get().innerText || '';

        return (html === undefined) ? '' : html;
    },
	getPlainText: function(html)
	{
		html = html.replace(/<!--[\s\S]*?-->/gi, '');
		html = html.replace(/<style[\s\S]*?style>/gi, '');
        html = html.replace(/<p><\/p>/g, '');
		html = html.replace(/<\/div>|<\/li>|<\/td>/gi, '\n');
		html = html.replace(/<\/p>/gi, '\n\n');
		html = html.replace(/<\/H[1-6]>/gi, '\n\n');

		var tmp = document.createElement('div');
		tmp.innerHTML = html;

		html = tmp.textContent || tmp.innerText;

		return html.trim();
	},

    // replace
    replaceTags: function(html, tags)
    {
        if (tags)
        {
            var self = this;
            var keys = Object.keys(tags);
            var $wrapper = this.utils.buildWrapper(html);
            $wrapper.find(keys.join(',')).each(function(node)
            {
                self.utils.replaceToTag(node, tags[node.tagName.toLowerCase()]);
            });

            html = this.utils.getWrapperHtml($wrapper);
        }

        return html;
    },
    replaceNbspToSpaces: function(html)
    {
        return html.replace('&nbsp;', ' ');
    },
    replaceBlocksToBr: function(html)
    {
        html = html.replace(/<\/div>|<\/li>|<\/td>|<\/p>|<\/H[1-6]>/gi, '<br>');

        return html;
    },

    // clean
    cleanNewLines: function(html)
    {
        return html.replace(/\r?\n/g, "");
    },
    cleanSpacesInPre: function(html)
    {
        return html.replace('&nbsp;&nbsp;&nbsp;&nbsp;', '    ');
    },

    // remove
    removeInvisibleSpaces: function(html)
    {
        html = this.utils.removeInvisibleChars(html);
        html = html.replace(/&#65279;/gi, '');

        return html;
    },
    removeNl: function(html)
    {
        html = html.replace(/\n/g, " ");
        html = html.replace(/\s+/g, "\s");

        return html;
    },
    removeBrAtEnd: function(html)
    {
        html = html.replace(/<br\s?\/?>$/gi, ' ');
        html = html.replace(/<br\s?\/?><li/gi, '<li');

        return html;
    },
    removeTags: function(input, denied)
    {
        var re = (denied) ? /<\/?([a-z][a-z0-9]*)\b[^>]*>/gi : /(<([^>]+)>)/gi;
        var replacer = (!denied) ? '' : function ($0, $1)
        {
            return denied.indexOf($1.toLowerCase()) === -1 ? $0 : '';
        };

        return input.replace(re, replacer);
    },
    removeTagsExcept: function(input, except)
    {
        if (except === undefined) return input.replace(/(<([^>]+)>)/gi, '');

        var tags = /<\/?([a-z][a-z0-9]*)\b[^>]*>/gi;
        return input.replace(tags, function($0, $1)
        {
            return except.indexOf($1.toLowerCase()) === -1 ? '' : $0;
        });
    },
    removeComments: function(html)
    {
        return html.replace(this.reComments, '');
    },
    removeServiceTagsAndAttrs: function(html, removeMarkers)
    {
        var $wrapper = this.utils.buildWrapper(html);
        var self = this;
        if (removeMarkers !== false)
        {
            $wrapper.find('.redactor-selection-marker').each(function(node)
            {
                var $el = $R.dom(node);
                var text = self.utils.removeInvisibleChars($el.text());

                return (text === '') ? $el.remove() : $el.unwrap();
            });
        }

        $wrapper.find('[data-redactor-style-cache]').removeAttr('data-redactor-style-cache');

        return this.utils.getWrapperHtml($wrapper);
    },
    removeSpanWithoutAttributes: function(html)
    {
        var $wrapper = this.utils.buildWrapper(html);
        $wrapper.find('span').removeAttr('data-redactor-span data-redactor-style-cache').each(function(node)
        {
            if (node.attributes.length === 0) $R.dom(node).unwrap();
        });

        return this.utils.getWrapperHtml($wrapper);
    },
    removeFirstBlockBreaklineInHtml: function(html)
    {
        return html.replace(new RegExp('</li><br\\s?/?>', 'gi'), '</li>');
    },
    removeEmptyAttributes: function(html, attrs)
    {
        var $wrapper = this.utils.buildWrapper(html);
        for (var i = 0; i < attrs.length; i++)
        {
            $wrapper.find('[' + attrs[i] + '=""]').removeAttr(attrs[i]);
        }

        return this.utils.getWrapperHtml($wrapper);
    },

    // encode / decode
    encodeHtml: function(html)
    {
        html = html.replace(/<br\s?\/?>/g, "\n");
        html = html.replace(/&nbsp;/g, ' ');
        html = html.replace(/”/g, '"');
        html = html.replace(/“/g, '"');
        html = html.replace(/‘/g, '\'');
        html = html.replace(/’/g, '\'');
        html = this.encodeEntities(html);
        html = html.replace(/\$/g, '&#36;');

        if (this.opts.preSpaces)
        {
            html = html.replace(/\t/g, new Array(this.opts.preSpaces + 1).join(' '));
        }

        return html;
    },
    encodePreCode: function(html)
    {
        var matched = html.match(new RegExp('<code(.*?)>(.*?)<pre(.*?)>(.*?)</pre>(.*?)</code>', 'gi'));
        if (matched !== null)
        {
            for (var i = 0; i < matched.length; i++)
            {
                var arr = matched[i].match(new RegExp('<pre(.*?)>([\\w\\W]*?)</pre>', 'i'));
                html = html.replace(arr[0], this.encodeEntities(arr[0]));
            }
        }

        var $wrapper = this.utils.buildWrapper(html);

        $wrapper.find('code code').replaceWith(this._encodeOuter.bind(this));
        $wrapper.find('code pre').replaceWith(this._encodeOuter.bind(this));
        $wrapper.find('pre pre').replaceWith(this._encodeOuter.bind(this));
        $wrapper.find('code, pre').each(this._encodePreCodeLine.bind(this));

        html = this.utils.getWrapperHtml($wrapper);

        // restore markers
        html = this._decodeMarkers(html);

        return html;
    },
    encodeEntities: function(str)
    {
        str = this.decodeEntities(str);
        str = str.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;');

        return str;
    },
    encodePhpCode: function(html)
    {
        html = html.replace('<?php', '&lt;?php');
        html = html.replace('<?', '&lt;?');
        html = html.replace('?>', '?&gt;');

        return html;
    },
    decodeEntities: function(str)
    {
        return String(str).replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&quot;/g, '"').replace(/&amp;/g, '&');
    },

    // store / restore
    storeComponents: function(html)
    {
        var matched = this.utils.getElementsFromHtml(html, 'figure', 'table');

        return this._storeMatched(html, matched, 'Components', 'figure');
    },
    restoreComponents: function(html)
    {
        return this._restoreMatched(html, 'Components', 'figure');
    },
    storeLinks: function(html)
    {
        var matched = this.utils.getElementsFromHtml(html, 'a');

        return this._storeMatched(html, matched, 'Links', 'a');
    },
    storeImages: function(html)
    {
        var matched = this.utils.getElementsFromHtml(html, 'img');

        return this._storeMatched(html, matched, 'Images', 'img');
    },
    restoreLinks: function(html)
    {
        return this._restoreMatched(html, 'Links', 'a');
    },
    restoreImages: function(html)
    {
        return this._restoreMatched(html, 'Images', 'img');
    },

    // PRIVATE

    // clean
    _cleanWrapped: function(html)
    {
        html = html.replace(new RegExp('<p><figure([\\w\\W]*?)</figure></p>', 'gi'), '<figure$1</figure>');

        return html;
    },
    _cleanGDocs: function(html)
    {
        // remove google docs markers
        html = html.replace(/<b\sid="internal-source-marker(.*?)">([\w\W]*?)<\/b>/gi, "$2");
        html = html.replace(/<b(.*?)id="docs-internal-guid(.*?)">([\w\W]*?)<\/b>/gi, "$3");

        html = html.replace(/<span[^>]*(font-style: italic; font-weight: bold|font-weight: bold; font-style: italic)[^>]*>([\w\W]*?)<\/span>/gi, '<b><i>$2</i></b>');
        html = html.replace(/<span[^>]*(font-style: italic; font-weight: 700|font-weight: 700; font-style: italic)[^>]*>([\w\W]*?)<\/span>/gi, '<b><i>$2</i></b>');
        html = html.replace(/<span[^>]*font-style: italic[^>]*>([\w\W]*?)<\/span>/gi, '<i>$1</i>');
        html = html.replace(/<span[^>]*font-weight: bold[^>]*>([\w\W]*?)<\/span>/gi, '<b>$1</b>');
        html = html.replace(/<span[^>]*font-weight: 700[^>]*>([\w\W]*?)<\/span>/gi, '<b>$1</b>');

        return html;
    },
    _cleanMsWord: function(html)
    {
        html = html.replace(/<!--[\s\S]+?-->/gi, '');
        html = html.replace(/<(!|script[^>]*>.*?<\/script(?=[>\s])|\/?(\?xml(:\w+)?|img|meta|link|style|\w:\w+)(?=[\s\/>]))[^>]*>/gi, '');
        html = html.replace(/<(\/?)s>/gi, "<$1strike>");
        html = html.replace(/&nbsp;/gi, ' ');
        html = html.replace(/<span\s+style\s*=\s*"\s*mso-spacerun\s*:\s*yes\s*;?\s*"\s*>([\s\u00a0]*)<\/span>/gi, function(str, spaces) {
            return (spaces.length > 0) ? spaces.replace(/./, " ").slice(Math.floor(spaces.length/2)).split("").join("\u00a0") : '';
        });

        // build wrapper
        var $wrapper = this.utils.buildWrapper(html);

        $wrapper.find('p').each(function(node)
        {
            var $node = $R.dom(node);
            var str = $node.attr('style');
            var matches = /mso-list:\w+ \w+([0-9]+)/.exec(str);
            if (matches)
            {
                $node.data('_listLevel',  parseInt(matches[1], 10));
            }
        });

        // parse Lists
        this._parseWordLists($wrapper);

        $wrapper.find('[style]').removeAttr('style');
        $wrapper.find('[align]').removeAttr('align');
        $wrapper.find('[name]').removeAttr('name');
        $wrapper.find('span').unwrap();
        $wrapper.find("[class^='Mso']").removeAttr('class');
        $wrapper.find('a').filter(function(node) { return !node.hasAttribute('href'); }).unwrap();

        // get wrapper
        html = this.utils.getWrapperHtml($wrapper);
        html = html.replace(/<p[^>]*><\/p>/gi, '');
        html = html.replace(/<li>·/gi, '<li>');
        html = html.trim();

        // remove spaces between
        html = html.replace(/\/(p|ul|ol|h1|h2|h3|h4|h5|h6|blockquote)>\s+<(p|ul|ol|h1|h2|h3|h4|h5|h6|blockquote)/gi, '/$1>\n<$2');

        var result = '';
        var lines = html.split(/\n/);
        for (var i = 0; i < lines.length; i++)
        {
            var space = (lines[i] !== '' && lines[i].search(/>$/) === -1) ? ' ' : '\n';

            result += lines[i] + space;
        }

        return result;
    },
    _parseWordLists: function($wrapper)
    {
        var lastLevel = 0;
        var pnt = null;

        $wrapper.find('p').each(function(node)
        {
            var $node = $R.dom(node);
            var currentLevel = $node.data('_listLevel');
            if (currentLevel !== null)
            {
                var txt = $node.text();
                var listTag = '<ul></ul>';
                if (/^\s*\w+\./.test(txt))
                {
                    var matches = /([0-9])\./.exec(txt);
                    if (matches)
                    {
                        var start = parseInt(matches[1], 10);
                        listTag = (start > 1) ? '<ol start="' + start + '"></ol>' : '<ol></ol>';
                    }
                    else
                    {
                        listTag = '<ol></ol>';
                    }
                }

                if (currentLevel > lastLevel)
                {
                    if (lastLevel === 0)
                    {
                        $node.before(listTag);
                        pnt = $node.prev();
                    }
                    else
                    {
                        var $list = $R.dom(listTag);
                        pnt.append($list);
                    }
                }

                if (currentLevel < lastLevel)
                {
                    for (var i = 0; i < (lastLevel - currentLevel); i++)
                    {
                        pnt = pnt.parent();
                    }
                }

                $node.find('span').first().unwrap();
                pnt.append('<li>' + $node.html() + '</li>');
                $node.remove();
                lastLevel = currentLevel;
            }
            else
            {
                lastLevel = 0;
            }
        });
    },

    // is
    _isSpacedEmpty: function(html)
    {
        return (html.search(this.reSpacedEmpty) !== -1);
    },
    _isParagraphEmpty: function(html)
    {
        return (html.search(/^<p><\/p>$/i) !== -1);
    },
    _isHtmlMsWord: function(html)
    {
        return html.match(/class="?Mso|style="[^"]*\bmso-|style='[^'']*\bmso-|w:WordDocument/i);
    },

    // set
    _setSpanAttr: function(html)
    {
        var $wrapper = this.utils.buildWrapper(html);
        $wrapper.find('span').attr('data-redactor-span', true);

        return this.utils.getWrapperHtml($wrapper);
    },
    _setStyleCache: function(html)
    {
        var $wrapper = this.utils.buildWrapper(html);
        $wrapper.find('[style]').each(function(node)
        {
            var $el = $R.dom(node);
            $el.attr('data-redactor-style-cache', $el.attr('style'));
        });

        return this.utils.getWrapperHtml($wrapper);
    },
    _setPreClass: function(html)
    {
        var $wrapper = this.utils.buildWrapper(html);
        $wrapper.find('pre').addClass(this.opts.preClass);

        return this.utils.getWrapperHtml($wrapper);
    },
    _setLinkNofollow: function(html)
    {
        var $wrapper = this.utils.buildWrapper(html);
        $wrapper.find('a').attr('rel', 'nofollow');

        return this.utils.getWrapperHtml($wrapper);
    },

    // replace
    _replaceScriptTag: function(html)
    {
        return html.replace(this.reScriptTag, '<pre class="redactor-script-tag" $1>$2</pre>');
    },
    _unreplaceScriptTag: function(html)
    {
        return html.replace(/<pre class="redactor-script-tag"(.*?[^>]?)>([\w\W]*?)<\/pre>/gi, '<script$1>$2</script>');
    },
	_replaceNlToBr: function(html)
	{
		return html.replace(/\n/g, '<br />');
	},

    // remove
    _removeScriptTag: function(html)
    {
        return html.replace(this.reScriptTag, '');
    },

    // private
    _storeMatched: function(html, matched, stored, name)
    {
        this['stored' + stored] = [];
        if (matched)
        {
            for (var i = 0; i < matched.length; i++)
            {
                this['stored' + stored][i] = matched[i];
                html = html.replace(matched[i], '####' + name + i + '####');
            }
        }

        return html;
    },
    _restoreMatched: function(html, stored, name)
    {
        if (this['stored' + stored])
        {
            for (var i = 0; i < this['stored' + stored].length; i++)
            {
                html = html.replace('####' + name + i + '####', this['stored' + stored][i]);
            }
        }

        return html;
    },
    _decodeMarkers: function(html)
    {
        var decodedMarkers = '<span id="selection-marker-$1" class="redactor-selection-marker">​</span>';
        return html.replace(/&lt;span\sid="selection-marker-(start|end)"\sclass="redactor-selection-marker"&gt;(.*?[^>]?)&lt;\/span&gt;/g, decodedMarkers);
    },
    _encodeOuter: function(node)
    {
        return this.encodeEntities(node.outerHTML);
    },
    _encodePreCodeLine: function(node)
    {
        var first = node.firstChild;
        if (node.tagName == 'PRE' && (first && first.tagName === 'CODE')) return;

        var encoded = this.decodeEntities(node.innerHTML);
        encoded = encoded.replace(/&nbsp;/g, ' ').replace(/<br\s?\/?>/g, '\n');
        encoded = (this.opts.preSpaces) ? encoded.replace(/\t/g, new Array(this.opts.preSpaces + 1).join(' ')) : encoded;

        node.textContent = encoded;
    }
});
$R.add('class', 'cleaner.figure', {
    init: function(app)
    {
        this.app = app;
        this.opts = app.opts;
        this.utils = app.utils;
        this.detector = app.detector;
    },
    // public
    convert: function(html, rules)
    {
        var $wrapper = this.utils.buildWrapper(html);

        // convert
        $wrapper.find('img').each(this._convertImage.bind(this));
        $wrapper.find('hr').each(this._convertLine.bind(this));
        $wrapper.find('iframe').each(this._convertIframe.bind(this));
        $wrapper.find('table').each(this._convertTable.bind(this));
        $wrapper.find('form').each(this._convertForm.bind(this));
        $wrapper.find('figure pre').each(this._convertCode.bind(this));

        // variables
        $wrapper.find('[data-redactor-type=variable]').addClass('redactor-component');

        // widgets
        $wrapper.find('figure').not('.redactor-component, .redactor-figure-code').each(this._convertWidget.bind(this));

        // contenteditable
        $wrapper.find('figure pre').each(this._setContenteditableCode.bind(this));
        $wrapper.find('.redactor-component, .non-editable').attr('contenteditable', false);

        if (this.detector.isIe())
        {
            $wrapper.find('[data-redactor-type=table]').attr('contenteditable', true);
        }

        $wrapper.find('figcaption, td, th').attr('contenteditable', true);
        $wrapper.find('.redactor-component, figcaption').attr('tabindex', '-1');

        // extra rules
        this._acceptExtraRules($wrapper, rules);

        return this.utils.getWrapperHtml($wrapper);
    },
    unconvert: function(html, rules)
    {
        var $wrapper = this.utils.buildWrapper(html);

        // contenteditable
        $wrapper.find('th, td, figcaption, figure, pre, code, .redactor-component').removeAttr('contenteditable tabindex');

        // remove class
        $wrapper.find('figure').removeClass('redactor-component redactor-component-active redactor-uploaded-figure');

        // unconvert
        $wrapper.find('[data-redactor-type=variable]').removeClass('redactor-component');
        $wrapper.find('figure[data-redactor-type=line]').unwrap();
        $wrapper.find('figure[data-redactor-type=widget]').each(this._unconvertWidget.bind(this));
        $wrapper.find('figure[data-redactor-type=form]').each(this._unconvertForm.bind(this));
        $wrapper.find('figure[data-redactor-type=table]').each(this._unconvertTable.bind(this));
        $wrapper.find('figure[data-redactor-type=image]').removeAttr('rel').each(this._unconvertImages.bind(this));

        $wrapper.find('img').removeAttr('data-redactor-type').removeClass('redactor-component');
        $wrapper.find('.non-editable').removeAttr('contenteditable');

        // remove types
        $wrapper.find('figure').each(this._removeTypes.bind(this));

        // remove caret
        $wrapper.find('span.redactor-component-caret').remove();

        if (this.opts.breakline)
        {
            $wrapper.find('[data-redactor-tag="br"]').each(function(node)
            {
                if (node.lastChild && node.lastChild.tagName !== 'BR')
                {
                    node.appendChild(document.createElement('br'));
                }
            }).unwrap();
        }

        // extra rules
        this._acceptExtraRules($wrapper, rules);

        html = this.utils.getWrapperHtml($wrapper);
        html = html.replace(/<br\s?\/?>$/, '');

        return html;
    },

    // private
    _convertImage: function(node)
    {
        var $node = $R.dom(node);
        if (this._isNonEditable($node)) return;

        // set id
        if (!$node.attr('data-image'))
        {
            $node.attr('data-image', this.utils.getRandomId());
        }

        var $link = $node.closest('a');
        var $figure = $node.closest('figure');
        var isImage = ($figure.children().not('a, img, br, figcaption').length === 0);
        if (!isImage) return;

        if ($figure.length === 0)
        {
            $figure = ($link.length !== 0) ? $link.wrap('<figure>') : $node.wrap('<figure>');
        }
        else
        {
            if ($figure.hasClass('redactor-uploaded-figure'))
            {
                $figure.removeClass('redactor-uploaded-figure');
            }
            else
            {
                $figure.addClass('redactor-keep-figure');
            }
        }

        this._setFigure($figure, 'image');
    },
    _convertTable: function(node)
    {
        if (this._isNonEditable(node)) return;

        var $figure = this._wrapFigure(node);
        this._setFigure($figure, 'table');
    },
    _convertLine: function(node)
    {
        if (this._isNonEditable(node)) return;

        var $figure = this._wrapFigure(node);
        this._setFigure($figure, 'line');
    },
    _convertForm: function(node)
    {
        if (this._isNonEditable(node)) return;

        var $figure = this.utils.replaceToTag(node, 'figure');
        this._setFigure($figure, 'form');
    },
    _convertIframe: function(node)
    {
        if (this._isNonEditable(node)) return;

        var $node = $R.dom(node);
        if ($node.closest('.redactor-component').length !== 0) return;

        var src = node.getAttribute('src');
        var isVideo = (src && (src.match(this.opts.regex.youtube) || src.match(this.opts.regex.vimeo)));
        var $figure = this._wrapFigure(node);

        if (isVideo)
        {
            this._setFigure($figure, 'video');
        }
    },
    _convertCode: function(node)
    {
        if (this._isNonEditable(node)) return;

        var $figure = this._wrapFigure(node);
        this._setFigure($figure, 'code');
    },
    _convertWidget: function(node)
    {
        if (this._isNonEditable(node)) return;

        var $node = $R.dom(node);
        $node.addClass('redactor-component');
        $node.attr('data-redactor-type', 'widget');
        $node.attr('data-widget-code', encodeURI(node.innerHTML.trim()));
    },

    // unconvert
    _unconvertForm: function(node)
    {
        this.utils.replaceToTag(node, 'form');
    },
    _unconvertTable: function(node)
    {
        var $node = $R.dom(node);
        $node.unwrap();
    },
    _unconvertWidget: function(node)
    {
        var $node = $R.dom(node);
        $node.html(decodeURI($node.attr('data-widget-code')));
        $node.removeAttr('data-widget-code');
    },
    _unconvertImages: function(node)
    {
        var $node = $R.dom(node);
        $node.removeClass('redactor-component');

        var isList = ($node.closest('li').length !== 0);
        var isTable = ($node.closest('table').length !== 0);
        var hasFigcaption = ($node.find('figcaption').length !== 0);

        var style = $node.attr('style');
        var hasStyle = !(style === null || style === '');
        var hasClass = ($node.attr('class') !== '');

        if (isList || (isTable && !hasFigcaption && !hasStyle && !hasClass))
        {
            $node.unwrap();
        }
    },
    _removeTypes: function(node)
    {
        var $node = $R.dom(node);
        var type = $node.attr('data-redactor-type');
        var removed = ['image', 'widget', 'line', 'video', 'code', 'form', 'table'];
        if (type && removed.indexOf(type) !== -1)
        {
            $node.removeAttr('data-redactor-type');
        }

        // keep figure
        if ($node.hasClass('redactor-keep-figure'))
        {
            $node.removeClass('redactor-keep-figure');
        }
        // unwrap figure
        else if (this.opts.imageFigure === false)
        {
            var hasFigcaption = ($node.find('figcaption').length !== 0);
            if (!hasFigcaption)
            {
                $node.unwrap();
            }
        }
    },

    // wrap
    _wrapFigure: function(node)
    {
        var $node = $R.dom(node);
        var $figure = $node.closest('figure');

        return ($figure.length === 0) ? $node.wrap('<figure>') : $figure;
    },

    // set
    _setFigure: function($figure, type)
    {
        $figure.addClass('redactor-component');
        $figure.attr('data-redactor-type', type);
    },
    _setContenteditableCode: function(node)
    {
        if (this._isNonEditable(node)) return;

        var $node = $R.dom(node);
        var $code = $node.children('code').first();

        var $el = ($code.length !== 0) ? $code : $node;
        $el.attr('contenteditable', true).attr('tabindex', '-1');
    },

    // utils
    _acceptExtraRules: function($wrapper, rules)
    {
        for (var key in rules)
        {
            if (typeof rules[key] === 'function')
            {
                rules[key]($wrapper);
            }
        }
    },
    _isNonEditable: function(node)
    {
        return ($R.dom(node).closest('.non-editable').length !== 0);
    }
});
$R.add('class', 'cleaner.paragraphize', {
    init: function(app)
    {
        this.app = app;
        this.opts = app.opts;
        this.utils = app.utils;
        this.element = app.element;

        // local
        this.stored = [];
        this.remStart = '#####replace';
        this.remEnd = '#####';
        this.paragraphizeTags = ['table', 'div', 'pre', 'form', 'ul', 'ol', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'dl', 'blockquote', 'figcaption',
                'address', 'section', 'header', 'footer', 'aside', 'article', 'object', 'style', 'script', 'iframe', 'select', 'input', 'textarea',
                'button', 'option', 'map', 'area', 'math', 'hr', 'fieldset', 'legend', 'hgroup', 'nav', 'figure', 'details', 'menu', 'summary', 'p'];
    },
    // public
    convert: function(html)
    {
        var value = this._isConverted(html);

        return (value === true) ? this._convert(html) : value;
    },

    // private
    _convert: function(html)
    {
        // build markup tag
        var markupTag = (this.opts.breakline) ? 'sdivtag' : this.opts.markup;

        // store tags
        html = this._storeTags(html);

        // remove new lines
        html = html.trim();

        if (this.opts.breakline)
        {
            html = html.replace(new RegExp('\\n#####', 'gi'), 'xnonbreakmarkerz#####');
            html = html.replace(new RegExp('#####\\n\\n', 'gi'), "#####\nxnonbreakmarkerz");
            html = html.replace(new RegExp('#####\\n', 'gi'), "#####xnonbreakmarkerz");
            html = html.replace(/<br\s?\/?>\n/gi, "<br>");
            html = html.replace(/\n/g, "<br>");
            html = html.replace(/xnonbreakmarkerz/gi, "\n");
        }
        else
        {
            html = html.replace(/[\n]+/g, "\n");
        }

        html = this._trimEmptyLines(html);

        // paragraph and break markers
        html = (this.opts.breakline) ? html : html.replace(/<br\s?\/?>\n/gi, "xbreakmarkerz\n");
        html = html.replace(/(?:\r\n|\r|\n)/g, "xparagraphmarkerz");

        // replace markers
        html = html.replace(/xparagraphmarkerz/gi, "</" + markupTag + ">\n<" + markupTag + ">");
        html = (this.opts.breakline) ? html : html.replace(/xbreakmarkerz/gi, "<br>");

        // wrap all
        html = '<' + markupTag + '>' + html + '</' + markupTag + '>';

        // clean
        html = html.replace(new RegExp('<' + markupTag + '>#####', 'gi'), '#####');
        html = html.replace(new RegExp('#####</' + markupTag + '>', 'gi'), '#####');

        // restore tags
        html = this._restoreTags(html);

        // clean restored
        html = (this.opts.breakline) ? html : html.replace(new RegExp('<' + markupTag + '><br\\s?/?></' + markupTag + '>', 'gi'), '<' + markupTag + '></' + markupTag + '>');
        html = html.replace(new RegExp('<sdivtag>', 'gi'), '<div data-redactor-tag="br">');
        html = html.replace(new RegExp('sdivtag', 'gi'), 'div');

        return html;
    },
    _storeTags: function(html)
    {
        var self = this;
        var $wrapper = this.utils.buildWrapper(html);

        if (this.opts.breakline)
        {
            $wrapper.find('p').each(function(node)
            {
                var $node = $R.dom(node);
                var isUnwrap = ($node.closest('figure[data-redactor-type=widget],figure[data-redactor-type=form],.non-editable').length === 0);

                if (isUnwrap)
                {
                    $node.append('<br><br>');
                    $node.unwrap();
                }
            });
        }

        $wrapper.find(this.paragraphizeTags.join(', ')).each(function(node, i)
        {
            var replacement = document.createTextNode("\n" + self.remStart + i + self.remEnd + "\n");
            self.stored.push(node.outerHTML);
            node.parentNode.replaceChild(replacement, node);
        });

        return this.utils.getWrapperHtml($wrapper);
    },
    _restoreTags: function(html)
    {
        for (var i = 0; i < this.stored.length; i++)
        {
            this.stored[i] = this.stored[i].replace(/\$/g, '&#36;');
            html = html.replace(this.remStart + i + this.remEnd, this.stored[i]);
        }

        return html;
    },
    _trimEmptyLines: function(html)
    {
        var str = '';
        var arr = html.split("\n");
        for (var i = 0; i < arr.length; i++)
        {
            if (arr[i].trim() !== '')
            {
                str += arr[i] + "\n";
            }
        }

        return str.replace(/\n$/, '');
    },
    _isConverted: function(html)
    {
        if (this._isDisabled(html)) return html;
        else if (this._isEmptyHtml(html)) return this.opts.emptyHtml;
        else return true;
    },
    _isDisabled: function()
    {
        return (this.opts.paragraphize === false || this.element.isType('inline'));
    },
    _isEmptyHtml: function(html)
    {
        return (html === '' || html === '<p></p>' || html === '<div></div>');
    }
});
$R.add('service', 'detector', {
    init: function(app)
    {
        this.app = app;

        // local
        this.userAgent = navigator.userAgent.toLowerCase();
    },
	isWebkit: function()
	{
		return /webkit/.test(this.userAgent);
	},
	isFirefox: function()
	{
		return (this.userAgent.indexOf('firefox') > -1);
	},
	isIe: function(v)
	{
        if (document.documentMode || /Edge/.test(navigator.userAgent)) return 'edge';

		var ie;
		ie = RegExp('msie' + (!isNaN(v)?('\\s'+v):''), 'i').test(navigator.userAgent);
		if (!ie) ie = !!navigator.userAgent.match(/Trident.*rv[ :]*11\./);

		return ie;
	},
	isMobile: function()
	{
		return /(iPhone|iPod|Android)/.test(navigator.userAgent);
	},
	isDesktop: function()
	{
		return !/(iPhone|iPod|iPad|Android)/.test(navigator.userAgent);
	},
	isIpad: function()
	{
		return /iPad/.test(navigator.userAgent);
	}
});
$R.add('service', 'offset', {
    init: function(app)
    {
        this.app = app;
    },
    get: function(el, trimmed)
    {
        var offset = { start: 0, end: 0 };
        var node = this.utils.getNode(el);
        if (!node) return false;

        var isEditor = this.editor.isEditor(node);
        var isIn = (isEditor) ? true : this.selection.isIn(node);
        var range = this.selection.getRange();

        if (!isEditor && !isIn)
        {
            offset = false;
        }
        else if (this.selection.is() && isIn)
        {
            var $startNode = $R.dom(range.startContainer);
            var fix = ($startNode.hasClass('redactor-component')) ? range.startOffset : 0;
            var clonedRange = range.cloneRange();

            clonedRange.selectNodeContents(node);
            clonedRange.setEnd(range.startContainer, range.startOffset);

            var selection = this._getString(range, trimmed);

            offset.start = this._getString(clonedRange, trimmed).length - fix;
            offset.end = offset.start + selection.length + fix;
        }

        return offset;
    },
    set: function(offset, el)
    {
        if (this._setComponentOffset(el)) return;

        this.component.clearActive();
        var node = this.utils.getNode(el);
        if (!node) return;

        var size = this.size(node);
        var charIndex = 0, range = document.createRange();

        offset.end = (offset.end > size) ? size : offset.end;

        range.setStart(node, 0);
        range.collapse(true);

        var nodeStack = [node], foundStart = false, stop = false;
        while (!stop && (node = nodeStack.pop()))
        {
            if (node.nodeType == 3)
            {
                var nextCharIndex = charIndex + node.length;

                if (!foundStart && !this._isFigcaptionNext(node) && offset.start >= charIndex && offset.start <= nextCharIndex)
                {
                    range.setStart(node, offset.start - charIndex);
                    foundStart = true;
                }

                if (foundStart && offset.end >= charIndex && offset.end <= nextCharIndex)
                {
                    range.setEnd(node, offset.end - charIndex);
                    stop = true;
                }

                charIndex = nextCharIndex;
            }
            else
            {
                var i = node.childNodes.length;
                while (i--)
                {
                    nodeStack.push(node.childNodes[i]);
                }
            }
        }

        this.selection.setRange(range);
    },
    size: function(el, trimmed)
    {
        var node = this.utils.getNode(el);
        if (node)
        {
            var range = document.createRange();

            var clonedRange = range.cloneRange();
            clonedRange.selectNodeContents(node);

            return this._getString(clonedRange, trimmed).length;
        }

        return 0;
    },

    // private
    _getString: function(obj, trimmed)
    {
        var str = obj.toString();
        str = (this.editor.isEmpty()) ? str.replace(/\uFEFF/g, '') : str;
        str = (trimmed) ? str.trim() : str;

        return str;
    },
    _setComponentOffset: function(el)
    {
        return (this.component.isNonEditable(el)) ? this.component.setActive(el) : false;
    },
    _isFigcaptionNext: function(node)
    {
        var next = node.nextSibling;
        return (node.nodeValue.trim() === '' && next && next.tagName === 'FIGCAPTION');
    }
});
$R.add('service', 'inspector', {
    init: function(app)
    {
        this.app = app;
    },
    // parse
    parse: function(el)
    {
        return $R.create('inspector.parser', this.app, this, el);
    },

    // text detection
    isText: function(el)
    {
        if (typeof el === 'string' && !/^\s*<(\w+|!)[^>]*>/.test(el))
        {
            return true;
        }

        var node = $R.dom(el).get();
        return (node && node.nodeType === 3); //  && !this.selection.getBlock(el)
    },

    // tag detection
    isInlineTag: function(tag, extend)
    {
        var tags = this._extendTags(this.opts.inlineTags, extend);

        return (this._isTag(tag) && tags.indexOf(tag.toLowerCase()) !== -1);
    },
    isBlockTag: function(tag, extend)
    {
        var tags = this._extendTags(this.opts.blockTags, extend);

        return (this._isTag(tag) && tags.indexOf(tag.toLowerCase()) !== -1);
    },
    isTableCellTag: function(tag)
    {
        return (['td', 'th'].indexOf(tag.toLowerCase()) !== -1);
    },
    isHeadingTag: function(tag)
    {
        return (['h1', 'h2', 'h3', 'h4', 'h5', 'h6'].indexOf(tag.toLowerCase()) !== -1);
    },


    _isTag: function(tag)
    {
        return (tag !== undefined && tag);
    },
    _extendTags: function(tags, extend)
    {
        tags = tags.concat(tags);

        if (extend)
        {
            for (var i = 0 ; i < extend.length; i++)
            {
                tags.push(extend[i]);
            }
        }

        return tags;
    }
});
$R.add('class', 'inspector.parser', {
    init: function(app, inspector, el)
    {
        this.app = app;
        this.uuid = app.uuid;
        this.opts = app.opts;
        this.utils = app.utils;
        this.editor = app.editor;
        this.selection = app.selection;
        this.inspector = inspector;

        // local
        this.el = el;
        this.$el = $R.dom(this.el);
        this.node = this.$el.get();
        this.$component = this.$el.closest('.redactor-component', '.redactor-in');
    },
    // is
    isEditor: function()
    {
        return (this.node === this.editor.getElement().get());
    },
    isInEditor: function()
    {
        return (this.$el.parents('.redactor-in-' + this.uuid).length !== 0);
    },
    isComponent: function()
    {
        return (this.$component.length !== 0);
    },
    isComponentType: function(type)
    {
        return (this.getComponentType() === type);
    },
    isComponentActive: function()
    {
        return (this.isComponent() && this.$component.hasClass('redactor-component-active'));
    },
    isComponentEditable: function()
    {
        var types = ['code', 'table'];
        var type = this.getComponentType();

        return (this.isComponent() && types.indexOf(type) !== -1);
    },
    isFigcaption: function()
    {
        return this.getFigcaption();
    },
    isPre: function()
    {
        return this.getPre();
    },
    isCode: function()
    {
        var $code = this.$el.closest('code');
        var $parent = $code.parent('pre');

        return ($code.length !== 0 && $parent.length === 0);
    },
    isList: function()
    {
        return this.getList();
    },
    isFirstListItem: function()
    {
        return this._getLastOrFirstListItem('first');
    },
    isLastListItem: function()
    {
        return this._getLastOrFirstListItem('last');
    },
    isFirstTableCell: function()
    {
        return this._getLastOrFirstTableCell('first');
    },
    isLastTableCell: function()
    {
        return this._getLastOrFirstTableCell('last');
    },
    isTable: function()
    {
        return (this.isComponentType('table') || this.getTable());
    },
    isHeading: function()
    {
        return this.getHeading();
    },
    isBlockquote: function()
    {
        return this.getBlockquote();
    },
    isDl: function()
    {
        return this.getDl();
    },
    isParagraph: function()
    {
        return this.getParagraph();
    },
    isLink: function()
    {
        return this.getLink();
    },
    isFile: function()
    {
        return this.getFile();
    },
    isText: function()
    {
        return this.inspector.isText(this.el);
    },
    isInline: function()
    {
        var tags = this.opts.inlineTags;

        return (this.isElement()) ? (tags.indexOf(this.node.tagName.toLowerCase()) !== -1) : false;
    },
    isBlock: function()
    {
        var tags = this.opts.blockTags;

        return (this.isElement()) ? (tags.indexOf(this.node.tagName.toLowerCase()) !== -1) : false;
    },
    isElement: function()
    {
        return (this.node && this.node.nodeType && this.node.nodeType !== 3);
    },

    // has
    hasParent: function(tags)
    {
        return (this.$el.closest(tags.join(',')).length !== 0);
    },

    // get
    getNode: function()
    {
        return this.node;
    },
    getTag: function()
    {
        return (this.isElement()) ? this.node.tagName.toLowerCase() : false;
    },
    getComponent: function()
    {
        return (this.isComponent()) ? this.$component.get() : false;
    },
    getComponentType: function()
    {
        return (this.isComponent()) ? this.$component.attr('data-redactor-type') : false;
    },
    getFirstNode: function()
    {
        return this.utils.getFirstNode(this.node);
    },
    getLastNode: function()
    {
        return this.utils.getLastNode(this.node);
    },
    getFirstElement: function()
    {
        return this.utils.getFirstElement(this.node);
    },
    getLastElement: function()
    {
        return this.utils.getLastElement(this.node);
    },
    getFigcaption: function()
    {
        return this._getClosestNode('figcaption');
    },
    getPre: function()
    {
        return this._getClosestNode('pre');
    },
    getCode: function()
    {
        return this._getClosestNode('code');
    },
    getList: function()
    {
        return this._getClosestNode('ul, ol');
    },
    getParentList: function()
    {
        return this._getClosestUpNode('ul, ol');
    },
    getListItem: function()
    {
        return this._getClosestNode('li');
    },
    getTable: function()
    {
        if (this.getComponentType('table'))
        {
            return this.$component.find('table').get();
        }
        else
        {
            return this._getClosestNode('table');
        }
    },
    getTableCell: function()
    {
        var $td = this.$el.closest('td, th');

        return ($td.length !== 0) ? $td.get() : false;
    },
    getComponentCodeElement: function()
    {
        return (this.isComponentType('code')) ? this.$component.find('pre code, pre').last().get() : false;
    },
    getImageElement: function()
    {
        return (this.isComponentType('image')) ? this.$component.find('img').get() : false;
    },
    getParagraph: function()
    {
        return this._getClosestNode('p');
    },
    getHeading: function()
    {
        return this._getClosestNode('h1, h2, h3, h4, h5, h6');
    },
    getDl: function()
    {
        return this._getClosestNode('dl');
    },
    getBlockquote: function()
    {
        return this._getClosestNode('blockquote');
    },
    getLink: function()
    {
        var isComponent = (this.isComponent() && !this.isFigcaption());
        var isTable = this.isComponentType('table');

        if (isTable || !isComponent)
        {
            var $el = this._getClosestElement('a');

            return ($el && !$el.attr('data-file')) ? $el.get() : false;
        }

        return false;
    },
    getFile: function()
    {
        var isComponent = this.isComponent();
        var isTable = this.isComponentType('table');

        if (isTable || !isComponent)
        {
            var $el = this._getClosestElement('a');

            return ($el && $el.attr('data-file')) ? $el.get() : false;
        }

        return false;
    },

    // find
    findFirstNode: function(selector)
    {
        return this.$el.find(selector).first().get();
    },
    findLastNode: function(selector)
    {
        return this.$el.find(selector).last().get();
    },

    // private
    _getLastOrFirstListItem: function(type)
    {
        var list = this.getList();
        var tag = this.getTag();
        if (list && tag === 'li')
        {
            var item = $R.dom(list).find('li')[type]().get();
            if (item && this.node === item)
            {
                return true;
            }
        }

        return false;
    },
    _getLastOrFirstTableCell: function(type)
    {
        var table = this.getTable();
        var tag = this.getTag();
        if (table && (tag === 'td' || tag === 'th'))
        {
            var item = $R.dom(table).find('td, th')[type]().get();
            if (item && this.node === item)
            {
                return true;
            }
        }

        return false;
    },
    _getClosestUpNode: function(selector)
    {
        var $el = this.$el.parents(selector, '.redactor-in').last();

        return ($el.length !== 0) ? $el.get() : false;
    },
    _getClosestNode: function(selector)
    {
        var $el = this.$el.closest(selector, '.redactor-in');

        return ($el.length !== 0) ? $el.get() : false;
    },
    _getClosestElement: function(selector)
    {
        var $el = this.$el.closest(selector, '.redactor-in');

        return ($el.length !== 0) ? $el : false;
    }
});
$R.add('service', 'marker', {
    init: function(app)
    {
        this.app = app;
    },
    build: function(pos, html)
    {
        var marker = document.createElement('span');

        marker.id = 'selection-marker-' + this._getPos(pos);
        marker.className = 'redactor-selection-marker';
        marker.innerHTML = this.opts.markerChar;

        return (html) ? marker.outerHTML : marker;
    },
    buildHtml: function(pos)
    {
        return this.build(pos, true);
    },
    insert: function(side)
    {
        this.remove();

        var atStart = (side !== 'both' && (side === 'start' || this.selection.isCollapsed()));

        if (!this.selection.is()) this.editor.focus();

        var range = this.selection.getRange();
        if (range)
        {
            var start = this.build('start');
            var end = this.build('end');

            var cloned = range.cloneRange();

            if (!atStart)
            {
                cloned.collapse(false);
                cloned.insertNode(end);
            }

            cloned.setStart(range.startContainer, range.startOffset);
            cloned.collapse(true);
            cloned.insertNode(start);

            range.setStartAfter(start);

            if (!atStart)
            {
                range.setEndBefore(end);
            }

            this.selection.setRange(range);

            return start;
        }
    },
    find: function(pos, $context)
    {
        var $editor = this.editor.getElement();
        var $marker = ($context || $editor).find('span#selection-marker-' + this._getPos(pos));

        return ($marker.length !== 0) ? $marker.get() : false;
    },
    restore: function()
    {
        var start = this.find('start');
        var end = this.find('end');

        var range = this.selection.getRange();
        if (!range || !this.selection.is())
        {
            this.editor.focus();
            range = document.createRange();
        }

        if (start)
        {
            var prev = (end) ? end.previousSibling : false;
            var next = start.nextSibling;
            next = (next && next.nodeType === 3 && next.textContent.replace(/[\n\t]/g, '') === '') ? false : next;

            if (!end)
            {
                if (next)
                {
                    range.selectNodeContents(next);
                    range.collapse(true);
                }
                else
                {
                    this._restoreInject(range, start);
                }
            }
            else if (next && next.id === 'selection-marker-end')
            {
                this._restoreInject(range, start);
            }
            else
            {
                if (prev && next)
                {
                    range.selectNodeContents(prev);
                    range.collapse(false);
                    range.setStart(next, 0);
                }
                else if (prev && !next)
                {
                    range.selectNodeContents(prev);
                    range.collapse(false);
                    range.setStartAfter(start);
                }
                else
                {
                    range.setStartAfter(start);
                    range.setEndBefore(end);
                }
            }

            this.selection.setRange(range);

            if (start) start.parentNode.removeChild(start);
            if (end) end.parentNode.removeChild(end);
        }
    },
    remove: function()
    {
        var start = this.find('start');
        var end = this.find('end');

        if (start) start.parentNode.removeChild(start);
        if (end) end.parentNode.removeChild(end);
    },

    // private
    _getPos: function(pos)
    {
        return (pos === undefined) ? 'start' : pos;
    },
    _restoreInject: function(range, start)
    {
        var textNode = this.utils.createInvisibleChar();
        $R.dom(start).after(textNode);

        range.selectNodeContents(textNode);
        range.collapse(false);
    }
});
$R.add('service', 'component', {
    init: function(app)
    {
        this.app = app;

        // local
        this.activeClass = 'redactor-component-active';
    },
    create: function(type, el)
    {
        return $R.create(type + '.component', this.app, el);
    },
    build: function(el)
    {
        var $el = $R.dom(el);
        var component;
        var type = $el.attr('data-redactor-type');
        if (type)
        {
            component = this.create(type, el);
        }

        return (component) ? component : el;
    },
    remove: function(el, caret)
    {
        var $component = $R.dom(el).closest('.redactor-component');
        var type = $component.attr('data-redactor-type');
        var current = $component.parent();
        var data = this.inspector.parse(current);
        var prev = this.utils.findSiblings($component, 'prev');
        var next = this.utils.findSiblings($component, 'next');
        var stop = this.app.broadcast(type + '.delete', $component);
        if (stop !== false)
        {
            $component.remove();

            // callback
            this.app.broadcast(type + '.deleted', $component);
            this.app.broadcast('contextbar.close');
            this.app.broadcast('imageresizer.stop');

            if (caret !== false)
            {
                var cell = data.getTableCell();
                if (cell && this.utils.isEmptyHtml(cell.innerHTML))
                {
                    this.caret.setStart(cell);
                }
                else if (next) this.caret.setStart(next);
                else if (prev) this.caret.setEnd(prev);
                else
                {
                    this.editor.startFocus();
                }
            }

            // is empty
            if (this.editor.isEmpty())
            {
                this.editor.setEmpty();
                this.editor.startFocus();
                this.app.broadcast('empty');
            }
        }
    },
    isNonEditable: function(el)
    {
        var data = this.inspector.parse(el);
        return (data.isComponent() && !data.isComponentEditable());
    },
    isActive: function(el)
    {
        var $component;
        if (el)
        {
            var data = this.inspector.parse(el);
            $component = $R.dom(data.getComponent());

            return $component.hasClass(this.activeClass);
        }
        else
        {
            $component = this._find();

            return ($component.length !== 0);
        }
    },
    getActive: function(dom)
    {
        var $component = this._find();

        return ($component.length !== 0) ? ((dom) ? $component : $component.get()) : false;
    },
    setActive: function(el)
    {
        this.clearActive();
        this.editor.focus();

        var data = this.inspector.parse(el);
        var component = data.getComponent();
        var $component = $R.dom(component);

        if (!data.isFigcaption())
        {
            var $caret = $component.find('.redactor-component-caret');
            if ($caret.length === 0)
            {
                $caret = this._buildCaret();
                $component.prepend($caret);
            }

            this.caret.setAtStart($caret.get());
        }

        $component.addClass(this.activeClass);
    },
    clearActive: function()
    {
        var $component = this._find();

        $component.removeClass(this.activeClass);
        $component.find('.redactor-component-caret').remove();

        this.app.broadcast('imageresizer.stop');
    },
    setOnEvent: function(e, contextmenu)
    {
        this.clearActive();

        var data = this.inspector.parse(e.target);
        if (data.isFigcaption() || data.isComponentEditable())
        {
            return;
        }

        // component
        if (data.isComponent())
        {
            this.setActive(e.target);
            if (contextmenu !== true) e.preventDefault();
        }
    },
    executeScripts: function()
    {
        var $editor = this.editor.getElement();
        var scripts = $editor.find('[data-redactor-type]').find("script").getAll();

        for (var i = 0; i < scripts.length; i++)
        {
            if (scripts[i].src !== '')
            {
                var src = scripts[i].src;
                this.$doc.find('head script[src="' + src + '"]').remove();

                var $script = $R.dom('<script>');
                $script.attr('src', src);
                $script.attr('async defer');

                if (src.search('instagram') !== -1) $script.attr('onload', 'window.instgrm.Embeds.process()');

                var head = document.getElementsByTagName('head')[0];
                if (head) head.appendChild($script.get());
            }
            else
            {
                eval(scripts[i].innerHTML);
            }
        }
    },

    // private
    _find: function()
    {
        return this.editor.getElement().find('.' + this.activeClass);
    },
    _buildCaret: function()
    {
        var $caret = $R.dom('<span>');
        $caret.addClass('redactor-component-caret');
        $caret.attr('contenteditable', true);

        return $caret;
    }
});
$R.add('service', 'insertion', {
    init: function(app)
    {
        this.app = app;
    },
    set: function(html, clean, focus)
    {
        html = (clean !== false) ? this.cleaner.input(html) : html;
        html = (clean !== false) ? this.cleaner.paragraphize(html) : html;

        // set html
        var $editor = this.editor.getElement();
        $editor.html(html);

        // set focus at the end
        if (focus !== false) this.editor.endFocus();

        return html;
    },
    insertNode: function(node, caret)
    {
        this.editor.focus();
        var fragment = (this.utils.isFragment(node)) ? node : this.utils.createFragment(node);

        this._collapseSelection();
        this._insertFragment(fragment);
        this._setCaret(caret, fragment);

        return this._sendNodes(fragment.nodes);
    },
    insertBreakLine: function()
    {
        return this.insertNode(document.createElement('br'), 'after');
    },
    insertNewline: function()
    {
        return this.insertNode(document.createTextNode('\n'), 'after');
    },
    insertText: function(text)
    {
        return this.insertHtml(this.cleaner.getFlatText(text));
    },
    insertChar: function(charhtml)
    {
        return this.insertNode(charhtml, 'after');
    },
    insertRaw: function(html)
    {
        return this.insertHtml(html, false);
    },
    insertToEnd: function(lastNode, type)
    {
        if (!lastNode) return;
        if (lastNode.nodeType === 3 && lastNode.nodeValue.search(/^\n/) !== -1)
        {
            lastNode = lastNode.previousElementSibling;
        }

        var $lastNode = $R.dom(lastNode);
        if ($lastNode.attr('data-redactor-type') === type)
        {
            var tag = (this.opts.breakline) ? '<br>' : '<p>';
            var $newNode = $R.dom(tag);

            $lastNode.after($newNode);
            this.caret.setStart($newNode);
        }
    },
    insertPoint: function(e)
    {
        var range, data;
        var marker = this.marker.build('start');
        var markerInserted = false;
        var x = e.clientX, y = e.clientY;

        if (document.caretPositionFromPoint)
        {
            var pos = document.caretPositionFromPoint(x, y);
            var sel = document.getSelection();

            data = this.inspector.parse(pos.offsetNode);
            if (data.isInEditor())
            {
                range = sel.getRangeAt(0);
                range.setStart(pos.offsetNode, pos.offset);
                range.collapse(true);
                range.insertNode(marker);
                markerInserted = true;
            }
        }
        else if (document.caretRangeFromPoint)
        {
            range = document.caretRangeFromPoint(x, y);

            data = this.inspector.parse(range.startContainer);
            if (data.isInEditor())
            {
                range.insertNode(marker);
                markerInserted = true;
            }
        }

        return markerInserted;
    },
    insertToPoint: function(e, html, point)
    {
        var pointInserted = (point === true) ? true : this.insertPoint(e);
        if (!pointInserted)
        {
            var lastNode = this.editor.getLastNode();
            $R.dom(lastNode).after(this.marker.build('start'));
        }

        this.component.clearActive();
        this.selection.restoreMarkers();

        return this.insertHtml(html);
    },
    insertToOffset: function(start, html)
    {
        this.offset.set({ start: start, end: start });

        return this.insertHtml(html);
    },
    insertHtml: function(html, clean)
    {
        if (!this.opts.input) return;

        // parse
        var parsedInput = this.utils.parseHtml(html);

        // all selection
        if (this.selection.isAll())
        {
            return this._insertToAllSelected(parsedInput);
        }

        // there is no selection
        if (!this.selection.is())
        {
            var $el = $R.dom('<p>');
            var $editor = this.editor.getElement();

            $editor.append($el);
            this.caret.setStart($el);
        }

        // environment
        var isCollapsed = this.selection.isCollapsed();
        var isText = this.selection.isText();
        var current = this.selection.getCurrent();
        var dataCurrent = this.inspector.parse(current);

        // collapse air
        this._collapseSelection();

        // clean
        parsedInput = this._getCleanedInput(parsedInput, dataCurrent, clean);

        // input is figure or component span
        var isFigure = this._isFigure(parsedInput.html);
        var isComponentSpan = this._isComponentSpan(parsedInput.html);
        var isInsertedText = this.inspector.isText(parsedInput.html);
        var fragment, except;

        // empty editor
        if (this.editor.isEmpty())
        {
            return this._insertToEmptyEditor(parsedInput.html);
        }
        // to component
        else if (dataCurrent.isComponent() && !dataCurrent.isComponentEditable())
        {
            return this._insertToWidget(current, dataCurrent, parsedInput.html);
        }
        // component span
        else if (isComponentSpan)
        {
            return this.insertNode(parsedInput.nodes, 'end');
        }
        // inserting figure & split node
        else if (isFigure && !isText && !dataCurrent.isList())
        {
            if (dataCurrent.isInline())
            {
                return this._insertToInline(current, parsedInput);
            }

            fragment = this.utils.createFragment(parsedInput.html);

            this.utils.splitNode(current, fragment);
            this.caret.setEnd(fragment.last);

            return this._sendNodes(fragment.nodes);
        }
        // to code
        else if (dataCurrent.isCode())
        {
            return this._insertToCode(parsedInput, current, clean);
        }
        // to pre
        else if (dataCurrent.isPre())
        {
            return this._insertToPre(parsedInput, clean);
        }
        // to h1-h6 & figcaption
        else if (dataCurrent.isHeading() || dataCurrent.isFigcaption())
        {
            parsedInput.html = (clean !== false) ? this.cleaner.removeTagsExcept(parsedInput.html, ['a']) : parsedInput.html;
            parsedInput.html = (clean !== false) ? this.cleaner.replaceNbspToSpaces(parsedInput.html) : parsedInput.html;

            fragment = this.utils.createFragment(parsedInput.html);

            return this.insertNode(fragment, 'end');
        }
        // text inserting
        else if (isInsertedText)
        {
            if (!isText && this.opts.markup !== 'br' && this._hasBlocksAndImages(parsedInput.nodes))
            {
                parsedInput.html = (clean !== false) ? this.cleaner.paragraphize(parsedInput.html) : parsedInput.html;

                fragment = this.utils.createFragment(parsedInput.html);

                this.utils.splitNode(current, fragment);
                this.caret.setEnd(fragment.last);
                return this._sendNodes(fragment.nodes);
            }

            parsedInput.html = (clean !== false) ? parsedInput.html.replace(/\n/g, '<br>') : parsedInput.html;

            fragment = this.utils.createFragment(parsedInput.html);

            return this.insertNode(fragment.nodes, 'end');
        }
        // uncollapsed
        else if (!isCollapsed && !isFigure)
        {
            parsedInput.html = (clean !== false) ? this.cleaner.paragraphize(parsedInput.html) : parsedInput.html;

            fragment = this.utils.createFragment(parsedInput.html);

            return this.insertNode(fragment, 'end');
        }
        // to inline tag
        else if (dataCurrent.isInline() && !this._isPlainHtml(parsedInput.html))
        {
            return this._insertToInline(current, parsedInput);
        }
        // to blockquote or dt, dd
        else if (dataCurrent.isBlockquote() || dataCurrent.isDl())
        {
            except = this.opts.inlineTags;
            except.concat(['br']);

            parsedInput.html = (clean !== false) ? this.cleaner.replaceBlocksToBr(parsedInput.html) : parsedInput.html;
            parsedInput.html = (clean !== false) ? this.cleaner.removeTagsExcept(parsedInput.html, except) : parsedInput.html;

            fragment = this.utils.createFragment(parsedInput.html);

            return this.insertNode(fragment, 'end');
        }
        // to p
        else if (dataCurrent.isParagraph())
        {
            if (this._isPlainHtml(parsedInput.html))
            {
                return this.insertNode(parsedInput.nodes, 'end');
            }

            parsedInput.html = (clean !== false) ? this.cleaner.paragraphize(parsedInput.html) : parsedInput.html;

            fragment = this.utils.createFragment(parsedInput.html);

            this.utils.splitNode(current, fragment);
            this.caret.setEnd(fragment.last);

            return this._sendNodes(fragment.nodes);
        }
        // to li
        else if (dataCurrent.isList())
        {
            except = this.opts.inlineTags;
            except = except.concat(['br', 'li', 'ul', 'ol', 'img']);

            parsedInput.html = (clean !== false) ? this.cleaner.replaceBlocksToBr(parsedInput.html) : parsedInput.html;
            parsedInput.html = (clean !== false) ? this.cleaner.removeTagsExcept(parsedInput.html, except) : parsedInput.html;
            parsedInput.html = (clean !== false) ? this.cleaner.removeBrAtEnd(parsedInput.html) : parsedInput.html;

            fragment = this.utils.createFragment(parsedInput.html);
            parsedInput.nodes = fragment.nodes;

            if (this._containsTags(parsedInput.html, ['ul', 'ol', 'li']))
            {
                var element = this.selection.getElement(current);
                if (element && element.tagName === 'LI' && this.caret.isStart(element))
                {
                    parsedInput.nodes = $R.dom(fragment.nodes).unwrap('ul, ol').getAll();
                    $R.dom(element).before(parsedInput.nodes);

                    var lastNode = parsedInput.nodes[parsedInput.nodes.length-1];
                    this.caret.setEnd(lastNode);

                    return this._sendNodes(parsedInput.nodes);
                }
                else if (this._isPlainHtml(parsedInput.html))
                {
                    return this.insertNode(fragment, 'end');
                }
                else
                {
                    fragment = this._buildList(parsedInput, element, fragment);

                    this.utils.splitNode(current, fragment, true);
                    this.caret.setEnd(fragment.last);

                    return this._sendNodes(fragment.nodes);
                }
            }
        }

        // other cases
        return this.insertNode(parsedInput.nodes, 'end');
    },

    // private
    _insertToAllSelected: function(parsedInput)
    {
        var insertedHtml = this.set(parsedInput.html);
        var dataInserted = this.utils.parseHtml(insertedHtml);

        return this._sendNodes(dataInserted.nodes);
    },
    _insertToEmptyEditor: function(html)
    {
        html = this.cleaner.paragraphize(html);

        var fragment = this.utils.createFragment(html);
        var $editor = this.editor.getElement();

        $editor.html('');
        $editor.append(fragment.frag);

        this.caret.setEnd(fragment.last);

        return this._sendNodes(fragment.nodes);
    },
    _insertToInline: function(current, parsedInput)
    {
        var fragment = this.utils.createFragment(parsedInput.html);
        this.utils.splitNode(current, fragment, false, true);
        this.caret.setEnd(fragment.last);

        return this._sendNodes(fragment.nodes);
    },
    _insertToCode: function(parsedInput, current, clean)
    {
        parsedInput.html = (clean !== false) ? this.cleaner.encodeHtml(parsedInput.html) : parsedInput.html;
        parsedInput.html = (clean !== false) ? this.cleaner.removeNl(parsedInput.html) : parsedInput.html;

        var fragment = this.utils.createFragment(parsedInput.html);
        var nodes = this.insertNode(fragment, 'end');

        this.utils.normalizeTextNodes(current);

        return nodes;
    },
    _insertToPre: function(parsedInput, clean)
    {
        parsedInput.html = (clean !== false) ? this.cleaner.encodeHtml(parsedInput.html) : parsedInput.html;

        var fragment = this.utils.createFragment(parsedInput.html);

        return this.insertNode(fragment, 'end');
    },
    _insertToWidget: function(current, dataCurrent, html)
    {
        html = (this._isComponentSpan(html)) ? html : this.cleaner.paragraphize(html);

        var fragment = this.utils.createFragment(html);
        var component = dataCurrent.getComponent();
        var $component = $R.dom(component);

        $component.after(fragment.frag);
        $component.remove();

        this.caret.setEnd(fragment.last);

        return this._sendNodes(fragment.nodes);
    },
    _insertFragment: function(fragment)
    {
        var range = this.selection.getRange();
        if (range)
        {
            if (this.selection.isCollapsed())
            {
                var startNode = range.startContainer;
                if (startNode.nodeType !== 3 && startNode.tagName === 'BR')
                {
                    this.caret.setAfter(startNode);
                    startNode.parentNode.removeChild(startNode);
                }
            }
            else
            {
                range.deleteContents();
            }

            range.insertNode(fragment.frag);
        }
    },
    _sendNodes: function(nodes)
    {
        for (var i = 0; i < nodes.length; i++)
        {
            var el = nodes[i];
            var type = (el.nodeType !== 3 && typeof el.getAttribute === 'function') ? el.getAttribute('data-redactor-type') : false;
            if (type)
            {
                this.app.broadcast(type + '.inserted', this.component.build(el));
            }
        }

        if (this.detector.isIe())
        {
            this.editor.getElement().find('[data-redactor-type=table]').attr('contenteditable', true);
        }

        // callback
        this.app.broadcast('inserted', nodes);

        // widget's scripts
        this.component.executeScripts();

        return nodes;
    },
    _setCaret: function(caret, fragment)
    {
        var isLastInline = this._isLastInline(fragment);

        if (caret)
        {
            caret = (isLastInline && caret === 'end') ? 'after' : caret;
            this.caret['set' + this.utils.ucfirst(caret)](fragment.last);
        }
        else if (caret !== false)
        {
            if (isLastInline) this.caret.setAfter(fragment.last);
        }
    },
    _isLastInline: function(fragment)
    {
        if (fragment.last)
        {
            var data = this.inspector.parse(fragment.last);

            return data.isInline();
        }

        return false;
    },
    _getCleanedInput: function(parsedInput, dataCurrent, clean)
    {
        var isPreformatted = (dataCurrent.isCode() || dataCurrent.isPre());

        parsedInput.html = parsedInput.html.replace(/&nbsp;/g, ' ');
        parsedInput.html = (!isPreformatted && clean !== false) ? this.cleaner.input(parsedInput.html) : parsedInput.html;
        parsedInput = (!isPreformatted && clean !== false) ? this.utils.parseHtml(parsedInput.html) : parsedInput;

        return parsedInput;
    },
    _getContainer: function(nodes)
    {
        return $R.dom(this.utils.createTmpContainer(nodes));
    },
    _buildList: function(parsedInput, list, fragment)
    {
        var nodes = parsedInput.nodes;
        var first = nodes[0];

        if (first && first.nodeType !== 3 && first.tagName === 'li')
        {
            var $parent = $R.dom(list);
            var parentListTag = $parent.get().tagName.toLowerCase();
            var $list = $R.dom('<' + parentListTag + ' />');
            $list.append(fragment.nodes);

            return this.utils.createFragment($list.get().outerHTML);
        }

        return fragment;
    },
    _containsTags: function(html, tags)
    {
        return (this._getContainer(html).find(tags.join(',')).length !== 0);
    },
    _collapseSelection: function()
    {
        //if (this.app.isAirToolbar()) this.selection.collapseToEnd();
    },
    _hasFigureOrTable: function(nodes)
    {
        return (this._getContainer(nodes).find('figure, table').length !== 0);
    },
    _hasBlocks: function(nodes)
    {
        return (this._getContainer(nodes).find(this.opts.blockTags.join(',')).length !== 0);
    },
    _hasBlocksAndImages: function(nodes)
    {
        return (this._getContainer(nodes).find(this.opts.blockTags.join(',') + ',img').length !== 0);
    },
    _isPlainHtml: function(html)
    {
        return (this._getContainer(html).find(this.opts.blockTags.join(',') + ', img').length === 0);
    },
    _isFigure: function(html)
    {
        if (this._isHtmlString(html))
        {
            return ($R.dom(html).closest('figure').length !== 0);
        }
    },
    _isComponentSpan: function(html)
    {
        if (this._isHtmlString(html))
        {
            return ($R.dom(html).closest('span.redactor-component').length !== 0);
        }
    },
    _isHtmlString: function(html)
    {
        return !(typeof html === 'string' && !/^\s*<(\w+|!)[^>]*>/.test(html));
    }
});
$R.add('service', 'block', {
    mixins: ['formatter'],
    init: function(app)
    {
        this.app = app;
    },
    // public
    format: function(args)
    {
        // type of applying styles and attributes
        this.type = (args.type) ? args.type : 'set'; // add, remove, toggle

        // tag
        this.tag = (typeof args === 'string') ? args : args.tag;
        this.tag = this._prepareTag(this.tag);
        this.tag = this.tag.toLowerCase();

        if (typeof args === 'string') this.args = false;
        else this.buildArgs(args);

        // format
        return this._format();
    },
    getBlocks: function(tags)
    {
        return this.selection.getBlocks({ tags: tags || this._getTags(), first: true });
    },
    getElements: function(tags)
    {
        var block = this.selection.getBlock();
        if (!this.selection.isCollapsed() && block && (block.tagName === 'TD' || block.tagName === 'TH'))
        {
            return this._wrapInsideTable('div');
        }
        else
        {
            return $R.dom(this.getBlocks(tags));
        }
    },
    clearFormat: function(tags)
	{
		this.selection.save();

        var $elements = this.getElements(tags || this._getTags());
        $elements.each(function(node)
        {
            while(node.attributes.length > 0)
            {
                node.removeAttribute(node.attributes[0].name);
            }
        });

		this.selection.restore();

        return $elements.getAll();
	},

    // private
    _format: function()
    {
        this.selection.save();
        var blocks = this.getBlocks();
        var block = this.selection.getBlock();
        var nodes = [];
        var data, replacedTag, $wrapper, nextBr;

        // div break format
        if (blocks.length === 1 && blocks[0].tagName === 'DIV')
        {
            data = this._getTextNodesData();
            if (!data || data.nodes.length === 0)
            {
                nodes = this._replaceBlocks(blocks);
                nodes = this._sendNodes(nodes);

                setTimeout(function() { this.selection.restore(); }.bind(this), 0);

                return nodes;
            }

            replacedTag = this._getReplacedTag('set');
            $wrapper = $R.dom('<' + replacedTag + '>');

            nextBr = data.last.nextSibling;
            if (nextBr && nextBr.tagName === 'BR')
            {
                $R.dom(nextBr).remove();
            }

            for (var i = 0; i < data.nodes.length; i++)
            {
                $wrapper.append(data.nodes[i]);
            }

            this.utils.splitNode(blocks[0], [$wrapper.get()]);
            nodes = this._sendNodes([$wrapper.get()]);

            if (this.utils.isEmptyHtml($wrapper.html()))
            {
                this.caret.setStart($wrapper);
            }
            else
            {
                setTimeout(function() { this.selection.restore(); }.bind(this), 0);
            }

            return nodes;
        }
        // standard format
        else if (blocks.length > 0)
        {
            nodes = this._replaceBlocks(blocks);
            nodes = this._sendNodes(nodes);

            setTimeout(function() { this.selection.restore(); }.bind(this), 0);

            return nodes;
        }
        // td/th format uncollapsed
        else if (!this.selection.isCollapsed() && block && (block.tagName === 'TD' || block.tagName === 'TH'))
        {
            replacedTag = this._getReplacedTag('set');

            $wrapper = this._wrapInsideTable(replacedTag);

            this.selection.setAll($wrapper);

            return this._sendNodes([$wrapper.get()]);
        }
        // td/th format collapsed
        else if (this.selection.isCollapsed() && block && (block.tagName === 'TD' || block.tagName === 'TH'))
        {
            var textnodes = this._getChildTextNodes(block);

            replacedTag = this._getReplacedTag('set');
            var $wrapper = $R.dom('<' + replacedTag + '>');

            $R.dom(textnodes.first).before($wrapper);

            for (var i = 0; i < textnodes.nodes.length; i++)
            {
                $wrapper.append(textnodes.nodes[i]);
            }

            var nextBr = $wrapper.get().nextSibling;
            if (nextBr && nextBr.tagName === 'BR')
            {
                $R.dom(nextBr).remove();
            }

            return this._sendNodes([$wrapper.get()]);
        }

        return nodes;
    },
    _wrapInsideTable: function(replacedTag)
    {
        var data = this._getTextNodesData();
        var $wrapper = $R.dom('<' + replacedTag + '>');

        $R.dom(data.first).before($wrapper);

        for (var i = 0; i < data.nodes.length; i++)
        {
            $wrapper.append(data.nodes[i]);
        }

        var nextBr = $wrapper.get().nextSibling;
        if (nextBr && nextBr.tagName === 'BR')
        {
            $R.dom(nextBr).remove();
        }

        return $wrapper;
    },
    _prepareTag: function(tag)
    {
        return (typeof tag === 'undefined') ? this.opts.markup : tag;
    },
    _sendNodes: function(nodes)
    {
        if (nodes.length > 0)
        {
            // clean & appliyng styles and attributes
            nodes = this.applyArgs(nodes, false);
            nodes = this._combinePre(nodes);
            nodes = this._cleanBlocks(nodes);
        }

        return nodes;
    },
    _getTags: function()
    {
        return ['div', 'p', 'blockquote', 'pre', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'];
    },
    _replaceBlocks: function(blocks)
    {
        var nodes = [];
        var type = (this._isToggleFormatType(blocks)) ? 'toggle' : 'set';
        var replacedTag = this._getReplacedTag(type);

        for (var i = 0; i < blocks.length; i++)
        {
            var $node = this.utils.replaceToTag(blocks[i], replacedTag);
            nodes.push($node.get());
        }

        return nodes;
    },
    _getReplacedTag: function(type)
    {
        var replacedTag = (type === 'toggle') ? this.opts.markup : this.tag;

        return (this.opts.breakline && replacedTag === 'p') ? 'div' : replacedTag;
    },
    _getChildTextNodes: function(el)
    {
        var nodes = el.childNodes;
        var firstNode = nodes[0];
        var finalNodes = [];
        for (var i = 0; i <= nodes.length; i++)
        {
            var node = nodes[i];
            if (node && node.nodeType !== 3 && this.inspector.isBlockTag(node.tagName))
            {
                break;
            }

            finalNodes.push(node);
        }

        return {
            nodes: finalNodes,
            first: firstNode
        };
    },
    _getTextNodesData: function()
    {
        var nodes = this.selection.getNodes({ textnodes: true, keepbr: true });
        if (nodes.length === 0) return false;

        var firstNode = nodes[0];
        var lastNode = nodes[nodes.length-1];
        var node = lastNode;
        var stop = false;

        while (!stop)
        {
            var inline = this.selection.getInline(node);
            node = (inline) ? inline.nextSibling : node.nextSibling;
            if (!node)
            {
                stop = true;
            }
            else if (node.nodeType !== 3 && (node.tagName === 'BR' || this.inspector.isBlockTag(node.tagName)))
            {
                stop = true;
            }
            else
            {
                nodes.push(node);
            }
        }

        return {
            nodes: nodes,
            first: firstNode,
            last: lastNode
        };
    },
    _isToggleFormatType: function(blocks)
    {
        var count = 0;
        var len = blocks.length;
        for (var i = 0; i < len; i++)
        {
            if (blocks[i] && this.tag === blocks[i].tagName.toLowerCase()) count++;
        }

        return (count === len);
    },
    _combinePre: function(nodes)
    {
        var combinedNodes = [];
        for (var i = 0; i < nodes.length; i++)
        {
            var next = nodes[i].nextElementSibling;
            if (next && nodes[i].tagName === 'PRE' && next.tagName === 'PRE')
            {
                var $current = $R.dom(nodes[i]);
                var $next = $R.dom(next);
                var newline = document.createTextNode('\n');

                $current.append(newline);
                $current.append($next);
                $next.unwrap('pre');
            }

            combinedNodes.push(nodes[i]);
        }

        return combinedNodes;
    },
    _cleanBlocks: function(nodes)
    {
        var headings = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'];
        var tags = this.opts.inlineTags;
        for (var i = 0; i < nodes.length; i++)
        {
            var tag = nodes[i].tagName.toLowerCase();
            var $node = $R.dom(nodes[i]);

            if (headings.indexOf(tag) !== - 1)
            {
                $node.find('span').not('.redactor-component, .non-editable, .redactor-selection-marker').unwrap();
            }
            else if (tag === 'pre')
            {
                $node.find(tags.join(',')).not('.redactor-selection-marker').unwrap();
            }

            // breakline attr
            if (this.opts.breakline && tag === 'div')
            {
                $node.attr('data-redactor-tag', 'br');
            }
            else
            {
                $node.removeAttr('data-redactor-tag');
            }

            this.utils.normalizeTextNodes(nodes[i]);
        }

        return nodes;
    }
});
$R.add('service', 'inline', {
    mixins: ['formatter'],
    init: function(app)
    {
        this.app = app;

        this.count = 0;
    },
    // public
    format: function(args)
    {
        if (!this._isFormat()) return [];

        // type of applying styles and attributes
        this.type = (args.type) ? args.type : 'set'; // add, remove, toggle
        // tag
        this.tag = (typeof args === 'string') ? args : args.tag;
        this.tag = this.tag.toLowerCase();
        this.tag = this.arrangeTag(this.tag);

        if (typeof args === 'string') this.args = false;
        else this.buildArgs(args);

        if (!this.detector.isIe())
        {
            this.editor.disableNonEditables();
        }

        // format
        var nodes = (this.selection.isCollapsed()) ? this.formatCollapsed() : this.formatUncollapsed();

        if (!this.detector.isIe())
        {
            this.editor.enableNonEditables();
        }

        return nodes;
    },

    // private
    _isFormat: function()
    {
        var current = this.selection.getCurrent();
        var data = this.inspector.parse(current);
        var isComponent = (data.isComponent() && !data.isComponentType('table') && !data.isFigcaption());

        if (current === false && this.selection.isAll())
        {
            return true;
        }
        else if (!current || data.isPre() || data.isCode() || isComponent)
        {
            return false;
        }

        return true;
    },
    arrangeTag: function(tag)
    {
        var replaced = this.opts.replaceTags;
        for (var key in replaced)
        {
            if (tag === key) tag = replaced[key];
        }

        return tag;
    },
    formatCollapsed: function()
    {
        var nodes = [];
        var inline = this.selection.getInlineFirst();
        var inlines = this.selection.getInlines({ all: true });
        var $inline = $R.dom(inline);
        var $parent, parent, $secondPart, extractedContent;

        // 1) not inline
        if (!inline)
        {
            nodes = this.insertInline(nodes);
        }
        else
        {
            var dataInline = this.inspector.parse(inline);
            var isEmpty = this.utils.isEmptyHtml(inline.innerHTML);

            // 2) inline is empty
            if (isEmpty)
            {
                // 2.1) has same tag
                if (inline.tagName.toLowerCase() === this.tag)
                {
                    // 2.1.1) has same args or hasn't args
                    if (this.hasSameArgs(inline))
                    {
                        this.caret.setAfter(inline);
                        $inline.remove();

                        var el = this.selection.getElement();
                        this.utils.normalizeTextNodes(el);
                    }
                    // 2.1.2) has different args and it is span tag
                    else if (this.tag === 'span')
                    {
                        nodes = this.applyArgs([inline], false);
                        this.caret.setStart(inline);
                    }
                    // 2.1.3) has different args and it is not span tag
                    else
                    {
                       nodes = this.insertInline(nodes);
                    }

                }
                // 2.2) has another tag
                else
                {
                    // 2.2.1) has parent
                    if (dataInline.hasParent([this.tag]))
                    {
                        $parent = $inline.closest(this.tag);
                        parent = $parent.get();
                        if (this.hasSameArgs(parent))
                        {
                            $parent.unwrap();
                            this.caret.setStart(inline);
                        }
                        else
                        {
                            nodes = this.insertInline(nodes);
                        }
                    }
                    // 2.2.2) hasn't parent
                    else
                    {
                        nodes = this.insertInline(nodes);
                    }
                }
            }
            // 3) inline isn't empty
            else
            {
                // 3.1) has same tag
                if (inline.tagName.toLowerCase() === this.tag)
                {
                    // 3.1.1) has same args or hasn't args
                    if (this.hasSameArgs(inline))
                    {
                        // insert break
                        extractedContent = this.utils.extractHtmlFromCaret(inline);
                        $secondPart = $R.dom('<' + this.tag + ' />');
                        $secondPart = this.utils.cloneAttributes(inline, $secondPart);

                        $inline.after($secondPart.append(extractedContent));

                        this.caret.setAfter(inline);
                    }
                    else
                    {
                        nodes = this.insertInline(nodes);
                    }
                }
                // 3.2) has another tag
                else
                {
                    // 3.2.1) has parent
                    if (dataInline.hasParent([this.tag]))
                    {
                        $parent = $inline.closest(this.tag);
                        parent = $parent.get();
                        if (this.hasSameArgs(parent))
                        {
                            // insert break
                            extractedContent = this.utils.extractHtmlFromCaret(parent, parent);
                            $secondPart = $R.dom('<' + this.tag + ' />');
                            $secondPart = this.utils.cloneAttributes(parent, $secondPart);

                            var $breaked, $last;
                            var z = 0;
                            inlines = inlines.reverse();
                            for (var i = 0; i < inlines.length; i++)
                            {
                                if (inlines[i] !== parent)
                                {
                                    $last = $R.dom('<' + inlines[i].tagName.toLowerCase() + '>');
                                    if (z === 0)
                                    {
                                        $breaked = $last;
                                    }
                                    else
                                    {
                                        $breaked.append($last);
                                    }

                                    z++;
                                }
                            }

                            $parent.after($secondPart.append(extractedContent));
                            $parent.after($breaked);

                            this.caret.setStart($last);
                        }
                        else
                        {
                            nodes = this.insertInline(nodes);
                        }
                    }
                    // 3.2.2) hasn't parent
                    else
                    {
                        nodes = this.insertInline(nodes);
                    }
                }
            }
        }

        return nodes;
    },
    insertInline: function(nodes)
    {
        var node = document.createElement(this.tag);
        nodes = this.insertion.insertNode(node, 'start');

        return this.applyArgs(nodes, false);
    },
    hasSameArgs: function(inline)
    {
        if (inline.attributes.length === 0 && this.args === false)
        {
            return true;
        }
        else
        {
            var same = true;
            if (this.args)
            {
                var count = 0;
                for (var key in this.args)
                {
                    var $node = $R.dom(inline);
                    var args = (this.args[key]);
                    var value = this.utils.toParams(args);
                    var nodeAttrValue = $node.attr(key);

                    if (args)
                    {
                        if (key === 'style')
                        {
                            value = value.trim().replace(/;$/, '');

                            var origRules = this.utils.styleToObj($node.attr('style'));
                            var rules = value.split(';');
                            var innerCount = 0;

                            for (var i = 0; i < rules.length; i++)
                            {
                                var arr = rules[i].split(':');
                                var ruleName = arr[0].trim();
                                var ruleValue = arr[1].trim();

                                if (ruleName.search(/color/) !== -1)
                                {
                                    var val = $node.css(ruleName);
                                    if (val && (val === ruleValue || this.utils.rgb2hex(val) === ruleValue))
                                    {
                                        innerCount++;
                                    }
                                }
                                else if ($node.css(ruleName) === ruleValue)
                                {
                                    innerCount++;
                                }
                            }

                            if (innerCount === rules.length && Object.keys(origRules).length === rules.length)
                            {
                                count++;
                            }
                        }
                        else
                        {
                            if (nodeAttrValue === value)
                            {
                                count++;
                            }
                        }
                    }
                    else
                    {
                        if (!nodeAttrValue || nodeAttrValue === '')
                        {
                            count++;
                        }
                    }
                }

                same = (count === Object.keys(this.args).length);
            }

            return same;
        }
    },
    formatUncollapsed: function()
    {
        var inlines = this.selection.getInlines({ all: true, inside: true });

        if (this.detector.isIe()) this.selection.saveMarkers();
        else this.selection.save();

        // convert del / u
        this._convertTags('u');
        this._convertTags('del');

        // convert target tags
        this._convertToStrike(inlines);

        if (this.detector.isIe()) this.selection.restoreMarkers();
        else this.selection.restore();

        // apply strike
        document.execCommand('strikethrough');

        // clear decoration
        this._clearDecoration();

        this.selection.save();

        // revert and set style
        var nodes = this._revertToInlines();
        nodes = this.applyArgs(nodes, false);

        // unwrap if attributes was removed
        for (var i = 0; i < nodes.length; i++)
        {
            var node = nodes[i];
            var tag = node.tagName.toLowerCase();
            var len = node.attributes.length;

            if (tag === this.tag && len === 0 && this.args)
            {
                $R.dom(node).unwrap();
                nodes.splice(i, 1);
            }
        }

        this.selection.restore();

        // clear and normalize
        this._clearEmptyStyle();
        nodes = this._normalizeBlocks(nodes);

        return nodes;
    },
    _convertTags: function(tag)
    {
        if (this.tag !== tag)
        {
            var $editor = this.editor.getElement();
            $editor.find(tag).each(function(node)
            {
                var $el = this.utils.replaceToTag(node, 'span');
                $el.addClass('redactor-convertable-' + tag);
            }.bind(this));
        }
    },
    _revertTags: function(tag)
    {
        var $editor = this.editor.getElement();

        $editor.find('span.redactor-convertable-' + tag).each(function(node)
        {
            var $el = this.utils.replaceToTag(node, tag);
            $el.removeClass('redactor-convertable-' + tag);
            if (this.utils.removeEmptyAttr($el, 'class')) $el.removeAttr('class');

        }.bind(this));
    },
    _convertToStrike: function(inlines)
    {
        var selected = this.selection.getText().replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");

        for (var i = 0; i < inlines.length; i++)
        {
            var tag = this.arrangeTag(inlines[i].tagName.toLowerCase());
            var inline = inlines[i];
            var $inline = $R.dom(inline);
            var hasSameArgs = this.hasSameArgs(inline);

            if (tag === this.tag)
            {
                if (this.tag === 'span' && this._isTextSelected(inline, selected))
                {
                    $inline.addClass('redactor-convertable-apply');
                }
                else if (hasSameArgs && this.tag !== 'a')
                {
                    this._replaceToStrike($inline);
                }
                else if (this.tag === 'span')
                {
                    $inline.addClass('redactor-unconvertable-apply');
                }
                else if (!hasSameArgs)
                {
                    $inline.addClass('redactor-convertable-apply');
                }
            }
        }
    },
    _replaceToStrike: function($el)
    {
        $el.replaceWith(function()
        {
            return $R.dom('<strike>').append($el.contents());
        });
    },
    _revertToInlines: function()
    {
        var nodes = [];
        var $editor = this.editor.getElement();

        if (this.tag !== 'u') $editor.find('u').unwrap();

        // span convertable
        $editor.find('.redactor-convertable-apply').each(function(node)
        {
            var $node = $R.dom(node);
            $node.find('strike').unwrap();

            this._forceRemoveClass($node, 'redactor-convertable-apply');
            nodes.push(node);

        }.bind(this));

        // span unconvertable
        $editor.find('span.redactor-unconvertable-apply').each(function(node)
        {
            var $node = $R.dom(node);
            this._forceRemoveClass($node, 'redactor-unconvertable-apply');

        }.bind(this));

        // strike
        $editor.find('strike').each(function(node)
        {
            var $node = this.utils.replaceToTag(node, this.tag);
            nodes.push($node.get());

        }.bind(this));


        this._revertTags('u');
        this._revertTags('del');

        return nodes;
    },
    _normalizeBlocks: function(nodes)
    {
        var tags = this.opts.inlineTags;
        var blocks = this.selection.getBlocks();
        if (blocks)
        {
            for (var i = 0; i < blocks.length; i++)
            {
                if (blocks[i].tagName === 'PRE')
                {
                    var $node = $R.dom(blocks[i]);
                    $node.find(tags.join(',')).not('.redactor-selection-marker').each(function(inline)
                    {
                        if (nodes.indexOf(inline) !== -1)
                        {
                            nodes = this.utils.removeFromArrayByValue(nodes, inline);
                        }

                        $R.dom(inline).unwrap();
                    }.bind(this));
                }
            }
        }

        return nodes;
    },
    _clearDecoration: function()
    {
        var $editor = this.editor.getElement();
        $editor.find(this.opts.inlineTags.join(',')).each(function(node)
        {
            if (node.style.textDecoration === 'line-through' || node.style.textDecorationLine === 'line-through')
            {
                var $el = $R.dom(node);
                $el.css('textDecorationLine', '');
                $el.css('textDecoration', '');
                $el.wrap('<strike>');
            }
        });
    },
    _clearEmptyStyle: function()
    {
        var inlines = this.getInlines();
        for (var i = 0; i < inlines.length; i++)
        {
            this._clearEmptyStyleAttr(inlines[i]);

            var childNodes = inlines[i].childNodes;
            if (childNodes)
            {
                for (var z = 0; z < childNodes.length; z++)
                {
                    this._clearEmptyStyleAttr(childNodes[z]);
                }
            }
        }
    },
    _clearEmptyStyleAttr: function(node)
    {
        if (node.nodeType !== 3 && this.utils.removeEmptyAttr(node, 'style'))
        {
            node.removeAttribute('style');
            node.removeAttribute('data-redactor-style-cache');
        }
    },
    _forceRemoveClass: function($node, classname)
    {
        $node.removeClass(classname);
        if (this.utils.removeEmptyAttr($node, 'class')) $node.removeAttr('class');
    },
    _isTextSelected: function(node, selected)
    {
        var text = this.utils.removeInvisibleChars(node.textContent);

        return (selected === text || selected.search(new RegExp('^' + this.utils.escapeRegExp(text) + '$')) !== -1);
    },

    getInlines: function(tags)
    {
        return (tags) ? this.selection.getInlines({ tags: tags, all: true }) : this.selection.getInlines({ all: true });
    },
    getElements: function(tags)
    {
        return $R.dom(this.getInlines(tags));
    },
    clearFormat: function()
    {
        this.selection.save();

        var nodes = this.selection.getInlines({ all: true });
        for (var i = 0; i < nodes.length; i++)
        {
            var $el = $R.dom(nodes[i]);
            var inline = this.selection.getInline(nodes[i]);
            if (inline)
            {
                $el.unwrap();
            }
        }

        this.selection.restore();
    }
});
$R.add('service', 'autoparser', {
    init: function(app)
    {
        this.app = app;
    },
    observe: function()
    {
        var $editor = this.editor.getElement();
        var $objects = $editor.find('.redactor-autoparser-object').each(function(node)
        {
           var $node = $R.dom(node);
           $node.removeClass('redactor-autoparser-object');
           if ($node.attr('class') === '') $node.removeAttr('class');
        });

        if ($objects.length > 0)
        {
            $objects.each(function(node)
            {
                var type;
                var $object = false;
                var tag = node.tagName;

                if (tag === 'A') type = 'link';
                else if (tag === 'IMG') type = 'image';
                else if (tag === 'IFRAME') type = 'video';

                if (type)
                {
                    $object = $R.create(type + '.component', this.app, node);
                    this.app.broadcast(type + '.inserted', $object);
                    this.app.broadcast('autoparse', type, $object);
                }

            }.bind(this));
        }
    },
    format: function(e, key)
    {
        if (this._isKey(key))
        {
            this._format(key === this.keycodes.ENTER);
        }
    },
    parse: function(html)
    {
        var tags = ['figure', 'pre', 'iframe', 'code', 'a', 'img'];
        var stored = [];
        var z = 0;

        // encode
        html = this.cleaner.encodePreCode(html);

        // store tags
        for (var i = 0; i < tags.length; i++)
        {
            var reTags = (tags[i] === 'img') ? '<' + tags[i] + '[^>]*>' : '<' + tags[i] + '([\\w\\W]*?)</' + tags[i] + '>';
            var matched = html.match(new RegExp(reTags, 'gi'));

            if (matched !== null)
            {
                for (var y = 0; y < matched.length; y++)
                {
                    html = html.replace(matched[y], '#####replaceparse' + z + '#####');
                    stored.push(matched[y]);
                    z++;
                }
            }
        }

        // images
        if (this.opts.autoparseImages && html.match(this.opts.regex.imageurl))
        {
            var imagesMatches = html.match(this.opts.regex.imageurl);
            for (var i = 0; i < imagesMatches.length; i++)
            {
                html = html.replace(imagesMatches[i], '<img class="redactor-autoparser-object" src="' + imagesMatches[i] + '">');
            }
        }

        // video
        if (this.opts.autoparseVideo && (html.match(this.opts.regex.youtube) || html.match(this.opts.regex.vimeo)))
        {
            var iframeStart = '<iframe width="500" height="281" src="';
            var iframeEnd = '" frameborder="0" allowfullscreen></iframe>';

            var str, re;
            if (html.match(this.opts.regex.youtube))
            {
                str = '//www.youtube.com/embed/$1';
                re = this.opts.regex.youtube;
            }
            else if (html.match(this.opts.regex.vimeo))
            {
                str = '//player.vimeo.com/video/$2';
                re = this.opts.regex.vimeo;
            }

            var $video = this.component.create('video', iframeStart + str + iframeEnd);

            html = html.replace(re, $video.get().outerHTML);
        }

        // links
        if (this.opts.autoparseLinks && html.match(this.opts.regex.url))
        {
            html = this._formatLinks(html);
        }

        // restore
        html = this._restoreReplaced(stored, html);

        // repeat for nested tags
        html = this._restoreReplaced(stored, html);

        return html;
    },

    // private
    _isKey: function(key)
    {
        return (key === this.keycodes.ENTER || key === this.keycodes.SPACE);
    },
    _format: function(enter)
    {
        var parent = this.selection.getParent();
        var $parent = $R.dom(parent);

        var isNotFormatted = (parent && $parent.closest('figure, pre, code, img, a, iframe').length !== 0);
        if (isNotFormatted || !this.selection.isCollapsed())
        {
            return;
        }

        // add split marker
        var marker = this.utils.createInvisibleChar();
        var range = this.selection.getRange();
        range.insertNode(marker);

        var current = this.selection.getCurrent();
        var data = this.inspector.parse(current);
        var $current = $R.dom(current);

        // remove split marker
        marker.parentNode.removeChild(marker);

        if (current && current.nodeType === 3)
        {
            var content = current.textContent;
            var type;

            // images
            if (this.opts.autoparseImages && content.match(this._convertToRegExp(this.opts.regex.imageurl)))
            {
                var isList = data.isList();
                var matches = content.match(this.opts.regex.imageurl);
                var el = (isList) ? undefined : '<figure><img></figure>';

                var $img = this.component.create('image', el);
                $img.setSrc(matches[0]);
                $img.addClass('redactor-autoparser-object');

                content = content.replace(matches[0], $img.get().outerHTML);
                type = 'image';
            }
            // video
            else if (this.opts.autoparseVideo && (content.match(this._convertToRegExp(this.opts.regex.youtube)) || content.match(this._convertToRegExp(this.opts.regex.vimeo))))
            {
                var iframeStart = '<iframe width="500" height="281" src="';
                var iframeEnd = '" frameborder="0" allowfullscreen></iframe>';
                var str, re;

                if (content.match(this.opts.regex.youtube))
                {
                    str = '//www.youtube.com/embed/$1';
                    re = this.opts.regex.youtube;
                }
                else if (content.match(this.opts.regex.vimeo))
                {
                    str = '//player.vimeo.com/video/$2';
                    re = this.opts.regex.vimeo;
                }

                var $video = this.component.create('video', iframeStart + str + iframeEnd);
                $video.addClass('redactor-autoparser-object');

                content = content.replace(re, $video.get().outerHTML);
                type = 'video';
            }
            // links
            else if (this.opts.autoparseLinks && content.match(this._convertToRegExp(this.opts.regex.url)))
            {
                content = this._formatLinks(content, enter);
                type = 'link';
            }

            // replace
            if (type)
            {
                if (enter)
                {
                    this.selection.save();
                    $current.replaceWith(content);
                    this.selection.restore();
                }
                else
                {
                    $current.replaceWith(content);
                }

                // object
                var $editor = this.editor.getElement();
                var $object = $editor.find('.redactor-autoparser-object').removeClass('redactor-autoparser-object');
                $object = (type === 'link') ? $R.create('link.component', this.app, $object) : $object;

                // caret
                if (type === 'link')
                {
                    if (!enter) this.caret.setAfter($object);
                    this.app.broadcast('link.inserted', $object);
                }
                else
                {
                    this.caret.setAfter($object);

                    var $cloned = $object.clone();
                    $object.remove();
                    $object = this.insertion.insertHtml($cloned);
                    $object = this.component.build($object);
                }

                // callback
                this.app.broadcast('autoparse', type, $object);
            }
        }
    },
    _formatLinks: function(content, enter)
    {
        var matches = content.match(this.opts.regex.url);
        var obj = {};
        for (var i = 0; i < matches.length; i++)
        {
            if (enter && matches[i].search(/\.$/) !== -1)
            {
                matches[i] = matches[i].replace(/\.$/, '');
            }

            var href = matches[i], text = href;
            var linkProtocol = (href.match(/(https?|ftp):\/\//i) !== null) ? '' : 'http://';
            var regexB = (["/", "&", "="].indexOf(href.slice(-1)) !== -1) ? "" : "\\b";
            var target = (this.opts.pasteLinkTarget !== false) ? ' target="' + this.opts.pasteLinkTarget + '"' : '';

            text = (text.length > this.opts.linkSize) ? text.substring(0, this.opts.linkSize) + '...' : text;
            text = (text.search('%') === -1) ? decodeURIComponent(text) : text;

            // escaping url
            var regexp = '(' + href.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&") + regexB + ')';
            var classstr = ' class="redactor-autoparser-object"';

            obj[regexp] = '<a href="' + linkProtocol + href.trim() + '"' + target + classstr + '>' + text.trim() + '</a>';
        }

        // replace
        for (var key in obj)
        {
            content = content.replace(new RegExp(key, 'g'), obj[key]);
        }

        return content;
    },
    _restoreReplaced: function(stored, html)
    {
        for (var i = 0; i < stored.length; i++)
        {
            html = html.replace('#####replaceparse' + i + '#####', stored[i]);
        }

        return html;
    },
    _convertToRegExp: function(str)
    {
        return new RegExp(String(str).replace(/^\//, '').replace(/\/ig$/, '').replace(/\/gi$/, '') + '$', 'gi');
    }
});
$R.add('service', 'storage', {
    init: function(app)
    {
        this.app = app;

        // local
        this.data = [];
    },
    // public
    observeImages: function()
    {
        var $editor = this.editor.getElement();
        var $images = $editor.find('[data-image]');

        $images.each(this._addImage.bind(this));
    },
    observeFiles: function()
    {
        var $editor = this.editor.getElement();
        var $files = $editor.find('[data-file]');

		$files.each(this._addFile.bind(this));
    },
	setStatus: function(url, status)
	{
		this.data[url].status = status;
	},
    getChanges: function()
    {
        var $editor = this.editor.getElement();

        // check status
        for (var key in this.data)
		{
			var data = this.data[key];
			var $el = $editor.find('[data-' + data.type + '="' + data.id + '"]');

			this.setStatus(data.id, ($el.length === 0) ? false : true);
		}

        return this.data;
    },
	add: function(type, node)
	{
        var $node = $R.dom(node);
        var id = $node.attr('data-' + type);

        this.data[id] = { type: type, status: true, node: $node.get(), id: $node.attr('data-' + type) };
	},

    // private
    _addImage: function(node)
    {
        this.add('image', node);
    },
    _addFile: function(node)
    {
        this.add('file', node);
    }
});
$R.add('service', 'utils', {
    init: function(app)
    {
        this.app = app;
    },
    // empty
    isEmpty: function(el)
    {
        var isEmpty = false;
        el = $R.dom(el).get();
        if (el)
        {
            isEmpty = (el.nodeType === 3) ? (el.textContent.trim().replace(/\n/, '') === '') : (el.innerHTML === '');
        }

        return isEmpty;
    },
    isEmptyHtml: function(html, keepbr, keeplists)
    {
        html = this.removeInvisibleChars(html);
        html = html.replace(/&nbsp;/gi, '');
        html = html.replace(/<\/?br\s?\/?>/g, ((keepbr) ? 'br' : ''));
        html = html.replace(/\s/g, '');
        html = html.replace(/^<p>[^\W\w\D\d]*?<\/p>$/i, '');
        html = html.replace(/^<div>[^\W\w\D\d]*?<\/div>$/i, '');

        if (keeplists)
        {
            html = html.replace(/<ul(.*?[^>])>$/i, 'ul');
            html = html.replace(/<ol(.*?[^>])>$/i, 'ol');
        }

        html = html.replace(/<hr(.*?[^>])>$/i, 'hr');
        html = html.replace(/<iframe(.*?[^>])>$/i, 'iframe');
        html = html.replace(/<source(.*?[^>])>$/i, 'source');

        // remove empty tags
        html = html.replace(/<[^\/>][^>]*><\/[^>]+>/gi, '');
        html = html.replace(/<[^\/>][^>]*><\/[^>]+>/gi, '');

        // trim
        html = html.trim();

        return html === '';
    },
    trimSpaces: function(html)
    {
        return html = this.removeInvisibleChars(html.trim());
    },

    // invisible chars
    createInvisibleChar: function()
    {
        return document.createTextNode(this.opts.markerChar);
    },
    searchInvisibleChars: function(str)
    {
        return str.search(/^\uFEFF$/g);
    },
    removeInvisibleChars: function(html)
    {
        return html.replace(/\uFEFF/g, '');
    },
    trimInvisibleChars: function(direction)
    {
        if (!this.selection.isCollapsed()) return;

        var current = this.selection.getCurrent();
        var side = (direction === 'left') ? this.selection.getTextBeforeCaret() : this.selection.getTextAfterCaret();
        var isSpace = (current && current.nodeType === 3 && this.searchInvisibleChars(side) === 0);

        if (isSpace)
        {
            if (direction === 'left')
            {
                $R.dom(current).replaceWith(current.textContent.trim());
            }
            else
            {
                var offset = this.offset.get();
                this.offset.set({ start: offset.start + 1, end: offset.end + 1 });
            }
        }
    },

    // wrapper
    buildWrapper: function(html)
    {
        return $R.dom('<div>').html(html);
    },
    getWrapperHtml: function($wrapper)
    {
        var html = $wrapper.html();
        $wrapper.remove();

        return html;
    },

    // fragment
    createTmpContainer: function(html)
    {
        var $div = $R.dom('<div>');

        if (typeof html === 'string')
        {
            $div.html(html);
        }
        else
        {
            $div.append($R.dom(html).clone(true));
        }

        return $div.get();
    },
    createFragment: function(html)
    {
        var el = this.createTmpContainer(html);
        var frag = document.createDocumentFragment(), node, firstNode, lastNode;
        var nodes = [];
        var i = 0;
        while ((node = el.firstChild))
        {
            i++;
            var n = frag.appendChild(node);
            if (i === 1) firstNode = n;

            nodes.push(n);
            lastNode = n;
        }

        return { frag: frag, first: firstNode, last: lastNode, nodes: nodes };
    },
    isFragment: function(obj)
    {
        return (typeof obj === 'object' && obj.frag);
    },
    parseHtml: function(html)
    {
        var div = this.createTmpContainer(html);

        return { html: div.innerHTML, nodes: div.childNodes };
    },

    splitNode: function(current, nodes, isList, inline)
    {
        nodes = (this.isFragment(nodes)) ? nodes.frag : nodes;

        var element;
        if (inline)
        {
            element = (this.inspector.isInlineTag(current.tagName)) ? current : this.selection.getInline(current);
        }
        else
        {
            element = (this.inspector.isBlockTag(current.tagName)) ? current : this.selection.getBlock(current);
        }

        var $element = $R.dom(element);

        // replace is empty
        if (!inline && this.isEmptyHtml(element.innerHTML, true))
        {
            $element.after(nodes);
            $element.remove();

            return nodes;
        }

        var tag = $element.get().tagName.toLowerCase();
        var isEnd = this.caret.isEnd(element);
        var isStart = this.caret.isStart(element);

        if (!isEnd && !isStart)
        {
            var extractedContent = this.extractHtmlFromCaret(inline);

            var $secondPart = $R.dom('<' + tag + ' />');
            $secondPart = this.cloneAttributes(element, $secondPart);

            $element.after($secondPart.append(extractedContent));
        }

        if (isStart)
        {
            return $element.before(nodes);
        }
        else
        {
            if (isList)
            {
                return $element.append(nodes);
            }
            else
            {
                nodes = $element.after(nodes);

                var html = $element.html();
                html = this.removeInvisibleChars(html);
                html = html.replace(/&nbsp;/gi, '');

                if (html === '') $element.remove();

                return nodes;
            }
        }
    },
    extractHtmlFromCaret: function(inline, element)
    {
        var range = this.selection.getRange();
        if (range)
        {
            element = (element) ? element : ((inline) ? this.selection.getInline() : this.selection.getBlock());
            if (element)
            {
                var clonedRange = range.cloneRange();
                clonedRange.selectNodeContents(element);
                clonedRange.setStart(range.endContainer, range.endOffset);

                return clonedRange.extractContents();
            }
        }
    },
    createMarkup: function(el)
    {
        var markup = document.createElement(this.opts.markup);
        if (this.opts.breakline) markup.setAttribute('data-redactor-tag', 'br');

        var $el = $R.dom(el);

        $el.after(markup);
        this.caret.setStart(markup);
    },
    createMarkupBefore: function(el)
    {
        var markup = document.createElement(this.opts.markup);
        if (this.opts.breakline) markup.setAttribute('data-redactor-tag', 'br');

        var $el = $R.dom(el);

        $el.before(markup);
        this.caret.setEnd(markup);
    },
    getNode: function(el)
    {
        var node = $R.dom(el).get();
        var editor = this.editor.getElement().get();

        return (typeof el === 'undefined') ? editor : ((node) ? node : false);
    },
    findSiblings: function(node, type)
    {
        node = $R.dom(node).get();
        type = (type === 'next') ? 'nextSibling' : 'previousSibling';

        while (node = node[type])
        {
            if ((node.nodeType === 3 && node.textContent.trim() === '') || node.tagName === 'BR')
            {
                continue;
            }

            return node;
        }

        return false;
    },
    getElementsFromHtml: function(html, selector, exclude)
    {
        var div = document.createElement("div");
        div.innerHTML = html;

        var elems = div.querySelectorAll(selector);

        // array map polyfill
        var mapping = function(callback, thisArg)
        {
            if (typeof this.length !== 'number') return;
            if (typeof callback !== 'function') return;

            var newArr = [];
            if (typeof this == 'object')
            {
                for (var i = 0; i < this.length; i++)
                {
                    if (i in this) newArr[i] = callback.call(thisArg || this, this[i], i, this);
                    else return;
                }
            }

            return newArr;
        };

        return mapping.call(elems, function(el)
        {
            var type = el.getAttribute('data-redactor-type');
            if (exclude && type && type === exclude) {}
            else return el.outerHTML;
        });
    },

    // childnodes
    getChildNodes: function(el, recursive, elements)
    {
        el = (el && el.nodeType && el.nodeType === 11) ? el : $R.dom(el).get();

        var nodes = el.childNodes;
        var result = [];
        if (nodes)
        {
            for (var i = 0; i < nodes.length; i++)
            {
                if (elements === true && nodes[i].nodeType === 3) continue;
                else if (nodes[i].nodeType === 3 && this.isEmpty(nodes[i])) continue;

                result.push(nodes[i]);

                if (recursive !== false)
                {
                    var nestedNodes = this.getChildNodes(nodes[i], elements);
                    if (nestedNodes.length > 0)
                    {
                        result = result.concat(nestedNodes);
                    }
                }
            }
        }

        return result;
    },
    getChildElements: function(el)
    {
        return this.getChildNodes(el, true, true);
    },
    getFirstNode: function(el)
    {
        return this._getFirst(this.getChildNodes(el, false));
    },
    getLastNode: function(el)
    {
        return this._getLast(this.getChildNodes(el, false));
    },
    getFirstElement: function(el)
    {
        return this._getFirst(this.getChildNodes(el, false, true));
    },
    getLastElement: function(el)
    {
        return this._getLast(this.getChildNodes(el, false, true));
    },

    // replace
    replaceToTag: function(node, tag)
    {
        var $node = $R.dom(node);
        return $node.replaceWith(function(node)
        {
            var $replaced = $R.dom('<' + tag + '>').append($R.dom(node).contents());
            if (node.attributes)
            {
                var attrs = node.attributes;
                for (var i = 0; i < attrs.length; i++)
                {
                    $replaced.attr(attrs[i].nodeName, attrs[i].value);
                }
            }

            return $replaced;

        });
    },

    // string
    ucfirst: function(str)
    {
        return str.charAt(0).toUpperCase() + str.slice(1);
    },

    // array
    removeFromArrayByValue: function(arr, value)
    {
        var a = arguments, len = a.length, ax;
        while (len > 1 && arr.length)
        {
            value = a[--len];
            while ((ax= arr.indexOf(value)) !== -1)
            {
                arr.splice(ax, 1);
            }
        }

        return arr;
    },

    // attributes
    removeEmptyAttr: function(el, attr)
    {
        var $el = $R.dom(el);

        if (typeof $el.attr(attr) === 'undefined' || $el.attr(attr) === null) return true;
        else if ($el.attr(attr) === '')
        {
            $el.removeAttr(attr);
            return true;
        }

        return false;
    },
    cloneAttributes: function(elFrom, elTo)
    {
        elFrom = $R.dom(elFrom).get();
        elTo = $R.dom(elTo);

        var attrs = elFrom.attributes;
        var len = attrs.length;
        while (len--)
        {
            var attr = attrs[len];
            elTo.attr(attr.name, attr.value);
        }

        return elTo;
    },

    // object
    toParams: function(obj)
    {
        if (typeof obj !== 'object') return obj;

        var keys = Object.keys(obj);
        if (!keys.length) return '';
        var result = '';

        for (var i = 0; i < keys.length; i++)
        {
            var key = keys[i];
            result += key + ':' + obj[key] + ';';
        }

        return result;
    },
    styleToObj: function(str)
    {
        var obj = {};

        if (str)
        {
            var style = str.replace(/;$/, '').split(';');
            for (var i = 0; i < style.length; i++)
            {
                var rule = style[i].split(':');
                obj[rule[0].trim()] = rule[1].trim();
            }
        }

        return obj;
    },
    checkProperty: function(obj)
    {
        var args = (arguments[1] && Array.isArray(arguments[1])) ? arguments[1] : [].slice.call(arguments, 1);

        for (var i = 0; i < args.length; i++)
        {
            if (!obj || (typeof obj[args[i]] === 'undefined'))
            {
                return false;
            }

            obj = obj[args[i]];
        }

        return obj;
    },

    // data
    extendData: function(data, obj)
    {
        for (var key in obj)
        {
            if (key === 'elements')
            {
                var $elms = $R.dom(obj[key]);
                $elms.each(function(node)
                {
                    var $node = $R.dom(node);
                    if (node.tagName === 'FORM')
                    {
                        var serializedData = $node.serialize(true);
                        for (var z in serializedData)
                        {
                            data = this._setData(data, z, serializedData[z]);
                        }
                    }
                    else
                    {
                        var name = ($node.attr('name')) ? $node.attr('name') : $node.attr('id');
                        data = this._setData(data, name, $node.val());
                    }
                }.bind(this));
            }
            else
            {
                data = this._setData(data, key, obj[key]);
            }
        }

        return data;
    },
    _setData: function(data, name, value)
    {
        if (data instanceof FormData) data.append(name, value);
        else data[name] = value;

        return data;
    },

    // normalize
    normalizeTextNodes: function(el)
    {
        el = $R.dom(el).get();
        if (el) el.normalize();
    },

    // color
    isRgb: function(str)
    {
        return (str.search(/^rgb/i) === 0);
    },
    rgb2hex: function(rgb)
    {
        rgb = rgb.match(/^rgba?[\s+]?\([\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?/i);

        return (rgb && rgb.length === 4) ? "#" +
        ("0" + parseInt(rgb[1],10).toString(16)).slice(-2) +
        ("0" + parseInt(rgb[2],10).toString(16)).slice(-2) +
        ("0" + parseInt(rgb[3],10).toString(16)).slice(-2) : '';
    },
    hex2long: function(val)
    {
        if (val.search(/^#/) !== -1 && val.length === 4)
        {
            val = '#' + val[1] + val[1] + val[2] + val[2] + val[3] + val[3];
        }

        return val;
    },

    // escape
    escapeRegExp: function(s)
    {
        return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
    },

    // random
    getRandomId: function()
    {
        var id = '';
        var possible = 'abcdefghijklmnopqrstuvwxyz0123456789';

        for (var i = 0; i < 12; i++)
        {
            id += possible.charAt(Math.floor(Math.random() * possible.length));
        }

        return id;
    },

    // private
    _getFirst: function(nodes)
    {
        return (nodes.length !== 0) ? nodes[0] : false;
    },
    _getLast: function(nodes)
    {
        return (nodes.length !== 0) ? nodes[nodes.length-1] : false;
    }
});
$R.add('service', 'progress', {
    init: function(app)
    {
        this.app = app;

        // local
        this.$box = null;
        this.$bar = null;
    },

    // public
    show: function()
    {
        if (!this._is()) this._build();
        this.$box.show();
    },
    hide: function()
    {
        if (this._is())
        {
            this.animate.start(this.$box, 'fadeOut', this._destroy.bind(this));
        }
    },
    update: function(value)
    {
        this.show();
        this.$bar.css('width', value + '%');
    },

    // private
    _is: function()
    {
        return (this.$box !== null);
    },
    _build: function()
    {
        this.$bar = $R.dom('<span />');
        this.$box = $R.dom('<div id="redactor-progress" />');

        this.$box.append(this.$bar);
        this.$body.append(this.$box);
    },
    _destroy: function()
    {
        if (this._is()) this.$box.remove();

        this.$box = null;
        this.$bar = null;
    }
});
$R.add('module', 'starter', {
    init: function(app)
    {
        this.app = app;
        this.opts = app.opts;
        this.plugin = app.plugin;
        this.module = app.module;
    },
    // messages
    onstart: function()
    {
        var services = ['element', 'container', 'source', 'editor', 'statusbar', 'toolbar'];
        var modules = ['element', 'container', 'source', 'editor', 'statusbar', 'contextbar', 'input'];

        this._startStop('start', this.app, services);
        this._startStop('start', this.module, modules);
    },
    onstop: function()
    {
        var modules = ['observer', 'element', 'container', 'source', 'editor', 'contextbar'];

        this._startStop('stop', this.module, modules);
    },
    onenable: function()
    {
        var modules = ['observer', 'toolbar'];
        var plugins = this.opts.plugins;

        this._startStop('start', this.module, modules);
        this._startStop('start', this.plugin, plugins);
    },
    ondisable: function()
    {
        var modules = ['observer', 'toolbar'];
        var plugins = this.opts.plugins;

        this._startStop('stop', this.module, modules);
        this._startStop('stop', this.plugin, plugins);
    },

    // private
    _startStop: function(type, obj, arr)
    {
        for (var i = 0; i < arr.length; i++)
        {
            if (typeof obj[arr[i]] !== 'undefined')
            {
                this.app.callInstanceMethod(obj[arr[i]], type);
            }
        }
    }
});
$R.add('module', 'element', {
    init: function(app)
    {
        this.app = app;
        this.uuid = app.uuid;
        this.opts = app.opts;
        this.namespace = app.namespace;
        this.element = app.element;
        this.rootOpts = $R.extend({}, true, $R.options, app.rootOpts);
    },
    // public
    start: function()
    {
        this._build();
        this._buildModes();
        this._buildMarkup();
    },
    stop: function()
    {
        var $element = this.element.getElement();
        $element.removeData(this.namespace + '-uuid');
    },

    // private
    _build: function()
    {
        var $element = this.element.getElement();
        $element.data(this.namespace + '-uuid', this.uuid);
    },
    _buildModes: function()
    {
        var type = this.element.getType();

        if (type === 'inline') this._redefineOptions(this.opts.modes['inline']);
        if (type === 'div') this._redefineOptions(this.opts.modes['original']);

        if (type !== 'inline')
        {
            if (this._isRootOption('styles') && this.rootOpts.styles) this.opts.styles = true;
            if (this._isRootOption('source') && !this.rootOpts.source) this.opts.showSource = false;
        }
    },
    _buildMarkup: function()
    {
        var type = this.element.getType();

        if (type === 'inline')
        {
            this.opts.emptyHtml = '';
        }
        else if (this.opts.breakline)
        {
            this.opts.markup = 'div';
            this.opts.emptyHtml = '<div data-redactor-tag="br">' + this.opts.markerChar + '</div>';
        }
        else
        {
            this.opts.emptyHtml = '<' + this.opts.markup + '></' + this.opts.markup + '>';
        }
    },
    _redefineOptions: function(opts)
    {
        for (var key in opts)
        {
            this.opts[key] = opts[key];
        }
    },
    _isRootOption: function()
    {
        return (typeof this.rootOpts['styles'] !== 'undefined');
    }
});
$R.add('module', 'editor', {
    init: function(app)
    {
        this.app = app;
        this.uuid = app.uuid;
        this.opts = app.opts;
        this.editor = app.editor;
        this.source = app.source;
        this.element = app.element;
        this.component = app.component;
        this.container = app.container;
        this.inspector = app.inspector;
        this.autoparser = app.autoparser;

        // local
        this.placeholder = false;
        this.events = false;
    },
    // messages
    onenable: function()
    {
        this.enable();
    },
    ondisable: function()
    {
        this.disable();
    },
    onenablefocus: function()
    {
        this._enableFocus();
    },
    oncontextmenu: function(e)
    {
        this.component.setOnEvent(e, true);
    },
    onclick: function(e)
    {
        this.component.setOnEvent(e);
    },
    onkeyup: function(e)
    {
        var data = this.inspector.parse(e.target);
        if (!data.isComponent())
        {
            this.component.clearActive();
        }
    },
    onenablereadonly: function()
    {
        this._enableReadOnly();
    },
    ondisablereadonly: function()
    {
        this._disableReadOnly();
    },
    onautoparseobserve: function()
    {
        this.autoparser.observe();
    },
    onplaceholder: {
        build: function()
        {
            this._buildPlaceholder();
        },
        toggle: function()
        {
            this._togglePlacehodler();
        }
    },

    // public
    start: function()
    {
        this._build();
        this._buildEvents();
        this._buildOptions();
        this._buildAccesibility();
    },
    stop: function()
    {
        var $editor = this.editor.getElement();
        var $container = this.container.getElement();

        var classesEditor = ['redactor-in', 'redactor-in-' + this.uuid, 'redactor-structure', 'redactor-placeholder', 'notranslate', this.opts.stylesClass];
        var classesContainer = ['redactor-focus', 'redactor-blur', 'redactor-over', 'redactor-styles-on',
                                'redactor-styles-off', 'redactor-toolbar-on', 'redactor-text-labeled-on', 'redactor-source-view'];

        $editor.removeAttr('spellcheck');
        $editor.removeAttr('dir');
        $editor.removeAttr('contenteditable');
        $editor.removeAttr('placeholder');
        $editor.removeAttr('data-gramm_editor');
        $editor.removeClass(classesEditor.join(' '));

        $container.removeClass(classesContainer.join(' '));

        this._destroyEvents();

        if ($editor.get().classList.length === 0) $editor.removeAttr('class');
    },
    enable: function()
    {
        var $editor = this.editor.getElement();
        var $container = this.container.getElement();

        $editor.addClass('redactor-in redactor-in-' + this.uuid);
        $editor.attr({ 'contenteditable': true });

        if (this.opts.structure)
        {
            $editor.addClass('redactor-structure');
        }

        if (this.opts.toolbar && !this.opts.air && !this.opts.toolbarExternal)
        {
            $container.addClass('redactor-toolbar-on');
        }

        // prevent editing
        this._disableBrowsersEditing();
    },
    disable: function()
    {
        var $editor = this.editor.getElement();
        var $container = this.container.getElement();

        $editor.removeClass('redactor-in redactor-in-' + this.uuid);
        $editor.removeClass('redactor-structure');
        $editor.removeAttr('contenteditable');

        $container.addClass('redactor-toolbar-on');
    },

    // private
    _build: function()
    {
        var $editor = this.editor.getElement();
        var $element = this.element.getElement();
        var $container = this.container.getElement();

        $container.addClass('redactor-blur');

        if (!this.opts.grammarly)
        {
            $editor.attr('data-gramm_editor', false);
        }

        if (this.opts.notranslate)
        {
            $editor.addClass('notranslate');
        }

        if (this.opts.styles)
        {
            $editor.addClass(this.opts.stylesClass);
            $container.addClass('redactor-styles-on');
        }
        else
        {
            $container.addClass('redactor-styles-off');
        }

        if (this.opts.buttonsTextLabeled)
        {
            $container.addClass('redactor-text-labeled-on');
        }

        if (this.element.isType('textarea')) $element.before($editor);
    },
    _buildEvents: function()
    {
        this.events = $R.create('editor.events', this.app);
    },
    _buildOptions: function()
    {
        var $editor = this.editor.getElement();

        $editor.attr('dir', this.opts.direction);

        if (this.opts.tabindex)  $editor.attr('tabindex', this.opts.tabindex);
        if (this.opts.minHeight) $editor.css('min-height', this.opts.minHeight);
        if (this.opts.maxHeight) $editor.css('max-height', this.opts.maxHeight);
        if (this.opts.maxWidth)  $editor.css({ 'max-width': this.opts.maxWidth, 'margin': 'auto' });
    },
    _buildAccesibility: function()
    {
        var $editor = this.editor.getElement();

        $editor.attr({ 'aria-labelledby': 'redactor-voice-' + this.uuid, 'role': 'presentation' });
    },
    _buildPlaceholder: function()
    {
        this.placeholder = $R.create('editor.placeholder', this.app);
    },
    _enableFocus: function()
    {
        if (this.opts.showSource) this._enableFocusSource();
        else this._enableFocusEditor();
    },
    _enableFocusSource: function()
    {
        var $source = this.source.getElement();

        if (this.opts.focus)
        {
            $source.focus();
            $source.get().setSelectionRange(0, 0);
        }
        else if (this.opts.focusEnd)
        {
            $source.focus();
        }
    },
    _enableFocusEditor: function()
    {
        if (this.opts.focus)
        {
            setTimeout(this.editor.startFocus.bind(this.editor), 100);
        }
        else if (this.opts.focusEnd)
        {
            setTimeout(this.editor.endFocus.bind(this.editor), 100);
        }
    },
    _togglePlacehodler: function()
    {
        if (this.placeholder) this.placeholder.toggle();
    },
    _disableBrowsersEditing: function()
    {
        try {
            // FF fix
            document.execCommand('enableObjectResizing', false, false);
            document.execCommand('enableInlineTableEditing', false, false);
            // IE prevent converting links
            document.execCommand("AutoUrlDetect", false, false);

            // IE disable image resizing
            var $editor = this.editor.getElement();
            var el = $editor.get();
            if (el.addEventListener) el.addEventListener('mscontrolselect', function(e) { e.preventDefault(); });
            else el.attachEvent('oncontrolselect', function(e) { e.returnValue = false; });

        } catch (e) {}
    },
    _destroyEvents: function()
    {
        if (this.events)
        {
            this.events.destroy();
        }
    },
    _enableReadOnly: function()
    {
        var $editor = this.editor.getElement();

        this._getEditables($editor).removeAttr('contenteditable');
        $editor.removeAttr('contenteditable');
        $editor.addClass('redactor-read-only');

        if (this.events) this.events.destroy();
    },
    _disableReadOnly: function()
    {
        var $editor = this.editor.getElement();

        this._getEditables($editor).attr({ 'contenteditable': true });
        $editor.removeClass('redactor-read-only');
        $editor.attr({ 'contenteditable': true });

        this._buildEvents();
    },
    _getEditables: function($editor)
    {
        return $editor.find('figcaption, td, th');
    }
});
$R.add('class', 'editor.placeholder', {
    init: function(app)
    {
        this.app = app;
        this.opts = app.opts;
        this.editor = app.editor;
        this.element = app.element;

        // build
        this.build();
    },
    build: function()
    {
        var $element = this.element.getElement();
        var $editor = this.editor.getElement();

        if (this.opts.placeholder !== false || $element.attr('placeholder'))
        {
            var text = (this.opts.placeholder !== false) ? this.opts.placeholder : $element.attr('placeholder');
            $editor.attr('placeholder', text);
            this.toggle();
        }
    },
    toggle: function()
    {
        return (this.editor.isEmpty(true)) ? this.show() : this.hide();
    },
    show: function()
    {
        var $editor = this.editor.getElement();
        $editor.addClass('redactor-placeholder');
    },
    hide: function()
    {
        var $editor = this.editor.getElement();
        $editor.removeClass('redactor-placeholder');
    }
});
$R.add('class', 'editor.events', {
    init: function(app)
    {
        this.app = app;
        this.opts = app.opts;
        this.$doc = app.$doc;
        this.uuid = app.uuid;
        this.source = app.source;
        this.editor = app.editor;
        this.cleaner = app.cleaner;
        this.container = app.container;
        this.insertion = app.insertion;
        this.inspector = app.inspector;
        this.selection = app.selection;
        this.component = app.component;

        // local
        this.blurNamespace = '.redactor-blur.' + this.uuid;
        this.eventsList = ['paste', 'click', 'contextmenu', 'keydown', 'keyup', 'mouseup', 'touchstart',
                           'cut', 'copy', 'dragenter', 'dragstart', 'drop', 'dragover', 'dragleave'];

        // init
        this._init();
    },
    destroy: function()
    {
        var $editor = this.editor.getElement();

        $editor.off('.redactor-focus');
        this.$doc.off('keyup' + this.blurNamespace + ' mousedown' + this.blurNamespace);

        // all events
        this._loop('off');
    },
    focus: function(e)
    {
        var $container = this.container.getElement();

        if (this.editor.isPasting() || $container.hasClass('redactor-focus')) return;

        $container.addClass('redactor-focus');
        $container.removeClass('redactor-blur');

        this.app.broadcast('observe', e);
        this.app.broadcast('focus', e);

        this.isFocused = true;
        this.isBlured = false;
    },
    blur: function(e)
    {
        var $container = this.container.getElement();
        var $target = $R.dom(e.target);
        var targets = ['.redactor-in-' + this.uuid,  '.redactor-toolbar', '.redactor-dropdown',
        '.redactor-context-toolbar', '#redactor-modal', '#redactor-image-resizer'];

        this.app.broadcast('originalblur', e);
        if (this.app.stopBlur) return;

        if (!this.app.isStarted() || this.editor.isPasting()) return;
        if ($target.closest(targets.join(',')).length !== 0) return;

        if (!this.isBlured && !$container.hasClass('redactor-blur'))
        {
            $container.removeClass('redactor-focus');
            $container.addClass('redactor-blur');
            this.app.broadcast('blur', e);

            this.isFocused = false;
            this.isBlured = true;
        }
    },
    cut: function(e)
    {
        var current = this.selection.getCurrent();
        var data = this.inspector.parse(current);

        this.app.broadcast('state', e);

        if (this.component.isNonEditable(current))
        {
            this._passSelectionToClipboard(e, data, true);
            e.preventDefault();
        }
    },
    copy: function(e)
    {
        var current = this.selection.getCurrent();
        var data = this.inspector.parse(current);

        this.app.broadcast('state', e);

        if (this.component.isNonEditable(current))
        {
            this._passSelectionToClipboard(e, data, false);
            e.preventDefault();
        }
    },
    drop: function(e)
    {
        e = e.originalEvent || e;
        e.stopPropagation();
        this._removeOverClass();

        if (this.opts.dragUpload === false)
        {
            e.preventDefault();
            return;
        }

        if (this.app.isDragComponentInside())
        {
            var $dragComponent = $R.dom(this.app.getDragComponentInside());
            var $component = $dragComponent.clone(true);
            this.insertion.insertToPoint(e, $component);

            $dragComponent.remove();

            this.app.setDragComponentInside(false);
            this.app.broadcast('state', e);
            this.app.broadcast('drop', e);
            this.app.broadcast('image.observe', e);

            e.preventDefault();

            return;
        }
        else if (this.app.isDragInside() && this.opts.input)
        {
            this.insertion.insertPoint(e);

            var dt = e.dataTransfer;
            var html = dt.getData('text/html');

            // clear selected
            var range = this.selection.getRange();
            if (range)
            {
                var blocks = this.selection.getBlocks();
                range.deleteContents();

                // remove empty blocks
                for (var i = 0; i < blocks.length; i++)
                {
                    if (blocks[i].innerHTML === '') $R.dom(blocks[i]).remove();
                }
            }

            // paste
            $R.create('input.paste', this.app, e, true, html, true);

            this.app.broadcast('state', e);
            this.app.broadcast('drop', e);

            this.app.setDragInside(false);
            e.preventDefault();

            return;
        }

        this.app.broadcast('state', e);
        this.app.broadcast('paste', e, e.dataTransfer);
        this.app.broadcast('drop', e);

    },
    dragenter: function(e)
    {
        e.preventDefault();
    },
    dragstart: function(e)
    {
        this.app.setDragComponentInside(false);
        this.app.setDragInside(false);

        var data = this.inspector.parse(e.target);
        if (data.isComponent() && !data.isComponentEditable() && !data.isFigcaption())
        {
            this.app.setDragComponentInside(data.getComponent());
        }
        else if (this.selection.is() && !this.selection.isCollapsed())
        {
            // drag starts inside editor
            this.app.setDragInside(true);
            this._setDragData(e);
        }

        this.app.broadcast('dragstart', e);
    },
    dragover: function(e)
    {
        this.app.broadcast('dragover', e);
    },
    dragleave: function(e)
    {
        this.app.broadcast('dragleave', e);
    },
    paste: function(e)
    {
        this.app.broadcast('paste', e);
    },
    contextmenu: function(e)
    {
        // chrome crashes fix
        this.editor.disableNonEditables();

        setTimeout(function()
        {
            this.editor.enableNonEditables();
            this.app.broadcast('contextmenu', e);

        }.bind(this), 0);
    },
    click: function(e)
    {
        // triple click selection
        if (e.detail === 3)
        {
            e.preventDefault();

            var block = this.selection.getBlock();
            var range = document.createRange();
            range.selectNodeContents(block);
            this.selection.setRange(range)
        }

        // observe bottom click
        var $target = $R.dom(e.target);
        if ($target.hasClass('redactor-in'))
        {
            var top = $target.offset().top;
            var pad = parseFloat($target.css('padding-bottom'));
            var height = $target.height();
            var posHeight = top + height - pad*2;

            if (posHeight < e.pageY)
            {
                this.app.broadcast('bottomclick', e);
            }
        }

        this.app.broadcast('state', e);
        this.app.broadcast('click', e);
    },
    keydown: function(e)
    {
        this.app.broadcast('state', e);
        var stop = this.app.broadcast('keydown', e);
        if (stop === false)
        {
            return e.preventDefault();
        }
    },
    keyup: function(e)
    {
        this.app.broadcast('keyup', e);
    },
    mouseup: function(e)
    {
        this.app.broadcast('observe', e);
        this.app.broadcast('state', e);
    },
    touchstart: function(e)
    {
        this.app.broadcast('observe', e);
        this.app.broadcast('state', e);
    },

    // private
    _init: function()
    {
        var $editor = this.editor.getElement();

        $editor.on('focus.redactor-focus click.redactor-focus', this.focus.bind(this));
        this.$doc.on('keyup' + this.blurNamespace + ' mousedown' + this.blurNamespace, this.blur.bind(this));

        // all events
        this._loop('on');
    },
    _removeOverClass: function()
    {
        var $editor = this.editor.getElement();
        $editor.removeClass('over');
    },
    _loop: function(func)
    {
        var $editor = this.editor.getElement();
        for (var i = 0; i < this.eventsList.length; i++)
        {
            var event = this.eventsList[i] + '.redactor-events';
            var method = this.eventsList[i];

            $editor[func](event, this[method].bind(this));
        }
    },
    _passAllToClipboard: function(e)
    {
        var clipboard = e.clipboardData;
        var content = this.source.getCode();

        clipboard.setData('text/html', content);
        clipboard.setData('text/plain', content.toString().replace(/\n$/, ""));
    },
    _passSelectionToClipboard: function(e, data, remove)
    {
        var clipboard = e.clipboardData;
        var node = data.getComponent();
        var $node = $R.dom(node);
        var $cloned = $node.clone();

        // clean
        $cloned.find('.redactor-component-caret').remove();
        $cloned.removeClass('redactor-component-active');
        $cloned.removeAttr('contenteditable');
        $cloned.removeAttr('tabindex');

        // html
        var content = $cloned.get().outerHTML;

        if (remove) this.component.remove(node);

        clipboard.setData('text/html', content);
        clipboard.setData('text/plain', content.toString().replace(/\n$/, ""));
    },
    _setDragData: function(e)
    {
        e = e.originalEvent || e;

        var dt = e.dataTransfer;
        dt.effectAllowed = 'move';
        dt.setData('text/Html', this.selection.getHtml());
    }
});
$R.add('module', 'container', {
    init: function(app)
    {
        this.app = app;
        this.uuid = app.uuid;
        this.opts = app.opts;
        this.lang = app.lang;
        this.element = app.element;
        this.container = app.container;
    },
    // public
    start: function()
    {
        this._build();
        this._buildAccesibility();
    },
    stop: function()
    {
        var $element = this.element.getElement();
        var $container = this.container.getElement();

        $container.after($element);
        $container.remove();
        $element.show();
    },

    // private
    _build: function()
    {
        var $element = this.element.getElement();
        var $container = this.container.getElement();

        $container.addClass('redactor-box');
        $container.attr('dir', this.opts.direction);

        if (this.element.isType('inline')) $container.addClass('redactor-inline');

        $element.after($container);
        $container.append($element);
    },
    _buildAccesibility: function()
    {
        var $container = this.container.getElement();
        var $label = $R.dom('<span />');

        $label.addClass('redactor-voice-label');
        $label.attr({ 'id': 'redactor-voice-' + this.uuid, 'aria-hidden': false });
        $label.html(this.lang.get('accessibility-help-label'));

        $container.prepend($label);
    }
});
$R.add('module', 'source', {
    init: function(app)
    {
        this.app = app;
        this.uuid = app.uuid;
        this.opts = app.opts;
        this.utils = app.utils;
        this.element = app.element;
        this.source = app.source;
        this.editor = app.editor;
        this.toolbar = app.toolbar;
        this.cleaner = app.cleaner;
        this.component = app.component;
        this.container = app.container;
        this.autoparser = app.autoparser;
        this.selection = app.selection;

        // local
        this.syncedHtml = '';
    },
    // messages
    onstartcode: function()
    {
        var sourceContent = this.source.getStartedContent();
        var $editor = this.editor.getElement();
        var $source = this.source.getElement();

        // autoparse
        if (this.opts.autoparse && this.opts.autoparseStart)
        {
            sourceContent = this.autoparser.parse(sourceContent);
        }

        // started content
        var startContent = this.cleaner.input(sourceContent, true, true);
        var syncContent = this.cleaner.output(startContent);

        // set content
        $editor.html(startContent);
        $source.val(syncContent);

        this.syncedHtml = syncContent;
        this.app.broadcast('placeholder.build');
        this.app.broadcast('autoparseobserve');

        // widget's scripts
        this.component.executeScripts();
    },
    onstartcodeshow: function()
    {
        this.show();
    },
    ontrytosync: function()
    {
        this.sync();
    },
    onhardsync: function()
    {
        var $editor = this.editor.getElement();
        var html = $editor.html();

        html = this.app.broadcast('syncBefore', html);
        html = this.cleaner.output(html);

        this._syncing(html);
    },

    // public
    start: function()
    {
        this._build();
        this._buildClasses();
    },
    stop: function()
    {
        var $element = this.element.getElement();
        var $source = this.source.getElement();

        $element.removeClass('redactor-source redactor-source-open');
        $source.off('input.redactor-source');
        $source.removeAttr('data-gramm_editor');

        if ($source.get().classList.length === 0) $source.removeAttr('class');
        if (!this.source.isNameGenerated()) $element.removeAttr('name');
        if (!this.element.isType('textarea')) $source.remove();

    },
    getCode: function()
    {
        return this.source.getCode();
    },

    // public
    toggle: function()
    {
        if (!this.opts.source) return;

        var $source = this.source.getElement();

        return ($source.hasClass('redactor-source-open')) ? this.hide() : this.show();
    },
    show: function()
    {
        if (!this.opts.source) return;

        var $editor = this.editor.getElement();
        var $source = this.source.getElement();
        var $container = this.container.getElement();

        var html = $source.val();

        if (this.app.isStarted()) html = this.app.broadcast('source.open', html);

        // insert markers
        var sourceSelection = $R.create('source.selection', this.app);

        var editorHtml = sourceSelection.insertMarkersToEditor();
        editorHtml = this.cleaner.output(editorHtml, false);
        editorHtml = editorHtml.trim();

        // get height
        var editorHeight = $editor.height();

        $editor.hide();
        $source.height(editorHeight);
        $source.val(html.trim());
        $source.show();
        $source.addClass('redactor-source-open');
        $source.on('input.redactor-source-events', this._onChangedSource.bind(this));
        $source.on('keydown.redactor-source-events', this._onTabKey.bind(this));
        $source.on('focus.redactor-source-events', this._onFocus.bind(this));

        $container.addClass('redactor-source-view');

        // offset markers
        sourceSelection.setSelectionOffsetSource(editorHtml);

        // buttons
        setTimeout(function()
        {
            this._disableButtons();
            this._setActiveSourceButton();

        }.bind(this), 100);

        if (this.app.isStarted()) this.app.broadcast('source.opened');
    },
    hide: function()
    {
        if (!this.opts.source) return;

        var $editor = this.editor.getElement();
        var $source = this.source.getElement();
        var $container = this.container.getElement();

        var html = $source.val();

        // insert markers
        var sourceSelection = $R.create('source.selection', this.app);
        html = sourceSelection.insertMarkersToSource(html);

        // clean
        html = this.cleaner.input(html, true);
        html = (this.utils.isEmptyHtml(html)) ? this.opts.emptyHtml : html;
        html = this.app.broadcast('source.close', html);

        // buttons
        this._enableButtons();
        this._setInactiveSourceButton();

        $source.hide();
        $source.removeClass('redactor-source-open');
        $source.off('.redactor-source-events');
        $editor.show();
        $editor.html(html);

        $container.removeClass('redactor-source-view');

        setTimeout(function()
        {
            if (sourceSelection.isOffset()) this.selection.restoreMarkers();
            else if (sourceSelection.isOffsetEnd()) this.editor.endFocus();
            else this.editor.startFocus();

            // widget's scripts
            this.component.executeScripts();

        }.bind(this), 0);

        this.app.broadcast('source.closed');
    },
    sync: function()
    {
        var self = this;
        var $editor = this.editor.getElement();
        var html = $editor.html();

        html = this.app.broadcast('syncBefore', html);
        html = this.cleaner.output(html);

        if (this._isSync(html))
        {
            if (this.timeout) clearTimeout(this.timeout);
            this.timeout = setTimeout(function() { self._syncing(html); }, 200);
        }
    },

    // private
    _build: function()
    {
        var $source = this.source.getElement();
        var $element = this.element.getElement();

        $source.hide();

        if (!this.opts.grammarly)
        {
            $source.attr('data-gramm_editor', false);
        }

        if (!this.element.isType('textarea'))
        {
            $element.after($source);
        }
    },
    _buildClasses: function()
    {
        var $source = this.source.getElement();

        $source.addClass('redactor-source');
    },
    _syncing: function(html)
    {
        html = this.app.broadcast('syncing', html);

        var $source = this.source.getElement();
        $source.val(html);

        this.app.broadcast('synced', html);
        this.app.broadcast('changed', html);
    },
    _isSync: function(html)
    {
        if (this.syncedHtml !== html)
        {
            this.syncedHtml = html;
            return true;
        }

        return false;
    },
    _onChangedSource: function()
    {
        var $source = this.source.getElement();
        var html = $source.val();

        this.app.broadcast('changed', html);
        this.app.broadcast('source.changed', html);
    },
    _onTabKey: function(e)
    {
        if (e.keyCode !== 9) return true;

        e.preventDefault();

        var $source = this.source.getElement();
        var el = $source.get();
        var start = el.selectionStart;

        $source.val($source.val().substring(0, start) + "    " + $source.val().substring(el.selectionEnd));
        el.selectionStart = el.selectionEnd = start + 4;
    },
    _onFocus: function()
    {
        this.app.broadcast('sourcefocus');
    },
    _disableButtons: function()
    {
        this.toolbar.disableButtons();
    },
    _enableButtons: function()
    {
        this.toolbar.enableButtons();
    },
    _setActiveSourceButton: function()
    {
        var $btn = this.toolbar.getButton('html');
        $btn.enable();
        $btn.setActive();
    },
    _setInactiveSourceButton: function()
    {
        var $btn = this.toolbar.getButton('html');
        $btn.setInactive();
    }
});
$R.add('class', 'source.selection', {
    init: function(app)
    {
        this.app = app;
        this.utils = app.utils;
        this.source = app.source;
        this.editor = app.editor;
        this.marker = app.marker;
        this.component = app.component;
        this.selection = app.selection;

        // local
        this.markersOffset = false;
        this.markersOffsetEnd = false;
    },
    insertMarkersToEditor: function()
    {
        var $editor = this.editor.getElement();
        var start = this.marker.build('start');
        var end = this.marker.build('end');
        var component = this.component.getActive();
        if (component)
        {
            this.marker.remove();
            var $component = $R.dom(component);

            $component.after(end);
            $component.after(start);
        }
        else if (window.getSelection && this.selection.is())
        {
            this.marker.insert('both');
        }

        return this._getHtmlAndRemoveMarkers($editor);
    },
    setSelectionOffsetSource: function(editorHtml)
    {
        var start = 0;
        var end = 0;
        var $source = this.source.getElement();
        if (editorHtml !== '')
        {
            var startMarker = this.utils.removeInvisibleChars(this.marker.buildHtml('start'));
            var endMarker = this.utils.removeInvisibleChars(this.marker.buildHtml('end'));

            start = this._strpos(editorHtml, startMarker);
            end = this._strpos(editorHtml, endMarker) - endMarker.toString().length - 2;

            if (start === false)
            {
                start = 0;
                end = 0;
            }
        }

        $source.get().setSelectionRange(start, end);
        $source.get().scrollTop = 0;

        setTimeout(function() { $source.focus(); }.bind(this), 0);
    },
    isOffset: function()
    {
        return this.markersOffset;
    },
    isOffsetEnd: function()
    {
        return this.markersOffsetEnd;
    },
    insertMarkersToSource: function(html)
    {
        var $source = this.source.getElement();
        var markerStart = this.marker.buildHtml('start');
        var markerEnd = this.marker.buildHtml('end');

        var markerLength = markerStart.toString().length;
        var startOffset = this._enlargeOffset(html, $source.get().selectionStart);
        var endOffset = this._enlargeOffset(html, $source.get().selectionEnd);
        var sizeOffset = html.length;

        if (startOffset === sizeOffset)
        {
            this.markersOffsetEnd = true;
        }
        else if (startOffset !== 0 && endOffset !== 0)
        {
            this.markersOffset = true;

            html = html.substr(0, startOffset) + markerStart + html.substr(startOffset);
            html = html.substr(0, endOffset + markerLength) + markerEnd + html.substr(endOffset + markerLength);
        }
        else
        {
            this.markersOffset = false;
        }

        return html;
    },

    // private
    _getHtmlAndRemoveMarkers: function($editor)
    {
        var html = $editor.html();
        $editor.find('.redactor-selection-marker').remove();

        return html;
    },
    _strpos: function(haystack, needle, offset)
    {
        var i = haystack.indexOf(needle, offset);
        return i >= 0 ? i : false;
    },
    _enlargeOffset: function(html, offset)
    {
        var htmlLength = html.length;
        var c = 0;

        if (html[offset] === '>')
        {
            c++;
        }
        else
        {
            for(var i = offset; i <= htmlLength; i++)
            {
                c++;

                if (html[i] === '>')
                {
                    break;
                }
                else if (html[i] === '<' || i === htmlLength)
                {
                    c = 0;
                    break;
                }
            }
        }

        return offset + c;
    }
});
$R.add('module', 'observer', {
    init: function(app)
    {
        this.app = app;
        this.editor = app.editor;

        // local
        this.observerUnit = false;
    },
    // public
    start: function()
    {
        if (window.MutationObserver)
        {
            var $editor = this.editor.getElement();
            var el = $editor.get();
            this.observerUnit = this._build(el);
            this.observerUnit.observe(el, {
                 attributes: true,
                 subtree: true,
                 childList: true,
                 characterData: true,
                 characterDataOldValue: true
            });
        }
    },
    stop: function()
    {
        if (this.observerUnit) this.observerUnit.disconnect();
    },

    // private
    _build: function(el)
    {
        var self = this;
        return new MutationObserver(function(mutations)
        {
            self._observe(mutations[mutations.length-1], el);
        });
    },
    _observe: function(mutation, el)
    {
        if (this.app.isReadOnly() || (mutation.type === 'attributes' && mutation.target === el))
        {
            return;
        }

        this.app.broadcast('observe');
        this.app.broadcast('trytosync');
        this.app.broadcast('placeholder.toggle');
    }
});
$R.add('module', 'clicktoedit', {
    init: function(app)
    {
        this.app = app;
        this.opts = app.opts;
        this.source = app.source;
        this.editor = app.editor;
        this.container = app.container;
        this.selection = app.selection;
    },
    // messages
    onstartclicktoedit: function()
    {
        this.start();
    },
    onenablereadonly: function()
    {
        if (!this._isEnabled()) this.stop();
    },
    ondisablereadonly: function()
    {
        if (!this._isEnabled()) this.start();
    },
    onstop: function()
    {
        this.stop();
    },

    // public
    start: function()
    {
        this._build();
    },
    stop: function()
    {
        if (this.buttonSave) this.buttonSave.stop();
        if (this.buttonCancel) this.buttonCancel.stop();

        this._destroy();
        this.app.broadcast('disable');
    },
    enable: function()
    {
        this.app.broadcast('clickStart');

        var isEmpty = this.editor.isEmpty();
        if (!isEmpty) this.selection.saveMarkers();

        this._setFocus();
        this._destroy();
        this.app.broadcast('enable');
        this.buttonSave.enable();
        this.buttonCancel.enable();

        if (!isEmpty) this.selection.restoreMarkers();
        if (isEmpty) this.editor.focus();

        var $container = this.container.getElement();
        $container.addClass('redactor-clicktoedit-enabled');

        this.source.rebuildStartedContent();

        this.app.broadcast('startcode');
        this.app.broadcast('image.observe');
    },
    save: function(e)
    {
        if (e) e.preventDefault();

        var html = this.source.getCode();

        this.app.broadcast('disable');
        this.app.broadcast('clickSave', html);
        this.app.broadcast('clickStop');
        this._build();
    },
    cancel: function(e)
    {
        if (e) e.preventDefault();

        var html = this.saved;
        var $editor = this.editor.getElement();
        $editor.html(html);

        this.saved = '';

        this.app.broadcast('disable');
        this.app.broadcast('clickCancel', html);
        this.app.broadcast('clickStop');
        this._build();
    },

    // private
    _build: function()
    {
        // buttons
        this.buttonSave = $R.create('clicktoedit.button', 'save', this.app, this);
        this.buttonCancel = $R.create('clicktoedit.button', 'cancel', this.app, this);

        this.buttonSave.stop();
        this.buttonCancel.stop();

        var $editor = this.editor.getElement();
        var $container = this.container.getElement();

        $editor.on('click.redactor-click-to-edit mouseup.redactor-click-to-edit', this.enable.bind(this));
        $container.addClass('redactor-over');
        $container.removeClass('redactor-clicktoedit-enabled');
    },
    _isEnabled: function()
    {
        return this.container.getElement().hasClass('redactor-clicktoedit-enabled');
    },
    _destroy: function()
    {
        var $editor = this.editor.getElement();
        var $container = this.container.getElement();

        $editor.off('.redactor-click-to-edit');
        $container.removeClass('redactor-over redactor-clicktoedit-enabled');
    },
    _setFocus: function()
    {
        this.saved = this.source.getCode();

        this.buttonSave.start();
        this.buttonCancel.start();
    }
});
$R.add('class', 'clicktoedit.button', {
    init: function(type, app, context)
    {
        this.app = app;
        this.opts = app.opts;
        this.toolbar = app.toolbar;
        this.context = context;

        // local
        this.type = type;
        this.name = (type === 'save') ? 'clickToSave' : 'clickToCancel';
        this.objected = false;
        this.enabled = false;
        this.namespace = '.redactor-click-to-edit';

        // build
        this._build();
    },
    enable: function()
    {
        if (!this.objected) return;

        var data = this.opts[this.name];
        data.api = 'module.clicktoedit.' + this.type;

        this.toolbar.addButton(this.type, data);
        this.enabled = true;
    },
    start: function()
    {
        if (this.objected) return;

        this.$button.off(this.namespace);
        this.$button.show();
        this.$button.on('click' + this.namespace, this.context[this.type].bind(this.context));
    },
    stop: function()
    {
        if (this.objected || !this.enabled) return;

        this.$button.hide();
    },

    // private
    _build: function()
    {
        this.objected = (typeof this.opts[this.name] === 'object');

        if (!this.objected)
        {
            this.$button = $R.dom(this.opts[this.name]);
            this.enabled = true;
        }
    }
});
$R.add('module', 'statusbar', {
    init: function(app)
    {
        this.app = app;
        this.opts = app.opts;
        this.element = app.element;
        this.statusbar = app.statusbar;
        this.container = app.container;
    },
    // public
    start: function()
    {
        if (!this.element.isType('inline'))
        {
            var $statusbar = this.statusbar.getElement();
            var $container = this.container.getElement();

            $statusbar.addClass('redactor-statusbar');
            $container.append($statusbar);
        }
    }
});
$R.add('module', 'contextbar', {
    init: function(app)
    {
        this.app = app;
        this.opts = app.opts;
        this.uuid = app.uuid;
        this.$win = app.$win;
        this.$doc = app.$doc;
        this.$body = app.$body;
        this.editor = app.editor;
        this.toolbar = app.toolbar;
        this.detector = app.detector;

        // local
        this.$target = (this.toolbar.isTarget()) ? this.toolbar.getTargetElement() : this.$body;
    },
    // messages
    onenablereadonly: function()
    {
        this.stop();
    },
    ondisablereadonly: function()
    {
        this.start();
    },
    oncontextbar: {
        close: function()
        {
            this.close();
        }
    },

    // public
    start: function()
    {
        if (this.opts.toolbarContext)
        {
            var $editor = this.editor.getElement();

            this._build();
            $editor.on('click.redactor-context mouseup.redactor-context', this.open.bind(this));

            if (this.opts.scrollTarget)
            {
                $R.dom(this.opts.scrollTarget).on('scroll.redactor-context', this.close.bind(this));
            }
        }
    },
    stop: function()
    {
        var $editor = this.editor.getElement();
        $editor.off('.redactor-context');

        this.$doc.off('.redactor-context');
        this.$win.off('.redactor-context');

        if (this.$contextbar) this.$contextbar.remove();
        if (this.opts.scrollTarget)
        {
            $R.dom(this.opts.scrollTarget).off('.redactor-context');
        }
    },
    is: function()
    {
        return (this.$contextbar && this.$contextbar.hasClass('open'));
    },
    set: function(e, node, buttons, position)
    {
        this.$contextbar.html('');
        this.$el = $R.dom(node);

        // buttons
        for (var key in buttons)
        {
            var $btn = $R.create('contextbar.button', this.app, buttons[key]);
            if ($btn.html() !== '')
            {
                this.$contextbar.append($btn);
            }
        }

        // show
        var pos = this._buildPosition(e, this.$el, position);

        this.$contextbar.css(pos);
        this.$contextbar.show();
        this.$contextbar.addClass('open');
        this.$doc.on('click.redactor-context mouseup.redactor-context', this.close.bind(this));
        this.$win.on('resize.redactor-context', this.close.bind(this));
    },
    open: function(e)
    {
        setTimeout(function()
        {
            this.app.broadcast('contextbar', e, this);
        }.bind(this), 0);
    },
    close: function(e)
    {
        if (!this.$contextbar) return;
        if (e)
        {
            var $target = $R.dom(e.target);
            if (this.$el && $target.closest(this.$el).length !== 0)
            {
                return;
            }
        }

        this.$contextbar.hide();
        this.$contextbar.removeClass('open');
        this.$doc.off('.redactor.context');
    },

    // private
    _build: function()
    {
        this.$contextbar = $R.dom('<div>');
        this.$contextbar.attr('id', 'redactor-context-toolbar-' + this.uuid);
        this.$contextbar.attr('dir', this.opts.direction);
        this.$contextbar.addClass('redactor-context-toolbar');
        this.$contextbar.hide();

        this.$target.append(this.$contextbar);
    },
    _buildPosition: function(e, $el, position)
    {
        var top, left;
        var isTarget = this.toolbar.isTarget();
        var offset = (isTarget) ? $el.position() : $el.offset();
        var width = $el.width();
        var height = $el.height();

        var barWidth = this.$contextbar.width();
        var barHeight = this.$contextbar.height();
        var docScrollTop = (isTarget) ? (this.$target.scrollTop() + this.$doc.scrollTop()) : this.$doc.scrollTop();

        var targetOffset = this.$target.offset();
        var leftFix = (isTarget) ? targetOffset.left : 0;
        var topFix = (isTarget) ? targetOffset.top : 0;

        if (!position)
        {
            top = (e.clientY + docScrollTop - barHeight);
            left = (e.clientX - barWidth/2);
        }
        else if (position === 'top')
        {
            top = (offset.top - barHeight);
            left = (offset.left + width/2 - barWidth/2);
        }
        else if (position === 'bottom')
        {
            top = (offset.top + height);
            left = (offset.left + width/2 - barWidth/2);
        }

        if (left < 0) left = 0;

        return { top: (top - topFix) + 'px', left: (left - leftFix) + 'px' };
    }
});
$R.add('class', 'contextbar.button', {
    mixins: ['dom'],
    init: function(app, obj)
    {
        this.app = app;

        // local
        this.obj = obj;

        // init
        this._init();
    },
    // private
    _init: function()
    {
        this.parse('<a>');
        this.attr('href', '#');

        this._buildTitle();
        this._buildMessage();
    },
    _buildTitle: function()
    {
        this.html(this.obj.title);
    },
    _buildMessage: function()
    {
        if (typeof this.obj.message !== 'undefined' || typeof this.obj.api !== 'undefined')
        {
            this.on('click', this._toggle.bind(this));
        }
    },
    _toggle: function(e)
    {
        e.preventDefault();

        if (this.obj.message)
        {
            this.app.broadcast(this.obj.message, this.obj.args);
        }
        else if (this.obj.api)
        {
            this.app.api(this.obj.api, this.obj.args);
        }
    }
});
$R.add('module', 'toolbar', {
    init: function(app)
    {
        this.app = app;
        this.uuid = app.uuid;
        this.opts = app.opts;
        this.utils = app.utils;
        this.toolbar = app.toolbar;

        // local
        this.buttons = [];
        this.toolbarModule = false;
    },
    // messages
    onsource: {
        open: function()
        {
            if (!this.toolbar.isAir() && this.toolbar.isFixed())
            {
                this.toolbarModule.resetPosition();
            }
        },
        opened: function()
        {
            if (this.toolbar.isAir() && this.toolbarModule)
            {
                this.toolbarModule.createSourceHelper();
            }

            // hide tooltips
            setTimeout(function()
            {
                $R.dom('.re-button-tooltip-' + this.uuid).remove();
            }.bind(this), 100)

        },
        close: function()
        {
            if (this.toolbar.isAir() && this.toolbarModule)
            {
                this.toolbarModule.destroySourceHelper();
            }
        },
        closed: function()
        {
            if (this.toolbar.is() && this.opts.air)
            {
                this.toolbarModule.openSelected();
            }
        }
    },
    onobserve: function()
    {
        if (this.toolbar.is())
        {
            this.toolbar.observe();
        }
    },
    onfocus: function()
    {
        this._setExternalOnFocus();
    },
    onsourcefocus: function()
    {
        this._setExternalOnFocus();
    },
    onempty: function()
    {
        if (this.toolbar.isFixed())
        {
            this.toolbarModule.resetPosition();
        }
    },
    onenablereadonly: function()
    {
        if (this.toolbar.isAir())
        {
            this.toolbarModule.close();
        }
    },

    // public
    start: function()
    {
        if (this.toolbar.is())
        {
            this._buildButtons();
            this._initToolbar();
            this._initButtons();
        }
    },
    stop: function()
    {
        if (this.toolbarModule)
        {
            this.toolbarModule.stop();
        }

        // stop dropdowns
        $R.dom('.redactor-dropdown-' + this.uuid).remove();
    },

    // private
    _buildButtons: function()
    {
        this.buttons = this.opts.buttons.concat();

        this._buildImageButton();
        this._buildFileButton();
        this._buildSourceButton();
        this._buildAdditionalButtons();
        this._buildHiddenButtons();
    },
    _buildImageButton: function()
    {
        if (!this.opts.imageUpload) this.utils.removeFromArrayByValue(this.buttons, 'image');
    },
    _buildFileButton: function()
    {
        if (!this.opts.fileUpload) this.utils.removeFromArrayByValue(this.buttons, 'file');
    },
    _buildSourceButton: function()
    {
        if (!this.opts.source) this.utils.removeFromArrayByValue(this.buttons, 'html');
    },
    _buildAdditionalButtons: function()
    {
        // end
        if (this.opts.buttonsAdd.length !== 0)
        {
            this.opts.buttonsAdd = this._removeExistButtons(this.opts.buttonsAdd);
            this.buttons = this.buttons.concat(this.opts.buttonsAdd);
        }

        // beginning
        if (this.opts.buttonsAddFirst.length !== 0)
        {
            this.opts.buttonsAddFirst = this._removeExistButtons(this.opts.buttonsAddFirst);
            this.buttons.unshift(this.opts.buttonsAddFirst);
        }

        var index, btns;

        // after
        if (this.opts.buttonsAddAfter !== false)
        {
            index = this.buttons.indexOf(this.opts.buttonsAddAfter.after) + 1;
            btns = this.opts.buttonsAddAfter.buttons;
            for (var i = 0; i < btns.length; i++)
            {
                this.buttons.splice(index+i, 0, btns[i]);
            }
        }

        // before
        if (this.opts.buttonsAddBefore !== false)
        {
            index = this.buttons.indexOf(this.opts.buttonsAddBefore.before)+1;
            btns = this.opts.buttonsAddBefore.buttons;
            for (var i = 0; i < btns.length; i++)
            {
                this.buttons.splice(index-(1-i), 0, btns[i]);
            }
        }
    },
    _buildHiddenButtons: function()
    {
        if (this.opts.buttonsHide.length !== 0)
        {
            var buttons = this.opts.buttonsHide;
            for (var i = 0; i < buttons.length; i++)
            {
                this.utils.removeFromArrayByValue(this.buttons, buttons[i]);
            }
        }
    },
    _removeExistButtons: function(buttons)
    {
        for (var i = 0; i < buttons.length; i++)
        {
            if (this.opts.buttons.indexOf(buttons[i]) !== -1)
            {
                this.utils.removeFromArrayByValue(buttons, buttons[i]);
            }
        }

        return buttons;
    },
    _setExternalOnFocus: function()
    {
        if (!this.opts.air && this.opts.toolbarExternal)
        {
            this.toolbarModule.setExternal();
        }
    },
    _initToolbar: function()
    {
        this.toolbarModule = (this.opts.air) ? $R.create('toolbar.air', this.app) : $R.create('toolbar.standard', this.app);
    },
    _initButtons: function()
    {
        this.toolbar.setButtons(this.buttons);

        for (var i = 0; i < this.buttons.length; i++)
        {
            var name = this.buttons[i];
            if ($R.buttons[name])
            {
                this.toolbar.addButton(name, $R.buttons[name], false, false, true);
            }
        }
    }
});
$R.add('class', 'toolbar.air', {
    init: function(app)
    {
        this.app = app;
        this.uuid = app.uuid;
        this.$doc = app.$doc;
        this.$win = app.$win;
        this.utils = app.utils;
        this.editor = app.editor;
        this.animate = app.animate;
        this.toolbar = app.toolbar;
        this.container = app.container;
        this.inspector = app.inspector;
        this.selection = app.selection;

        // local
        this.clicks = 0;

        // init
        this._init();
    },
    // public
    stop: function()
    {
        var $wrapper = this.toolbar.getWrapper();
        $wrapper.remove();

        var $editor = this.editor.getElement();
        $editor.off('.redactor-air-trigger-' + this.uuid);

        this.$doc.off('.redactor-air-' + this.uuid);
        this.$doc.off('.redactor-air-trigger-' + this.uuid);

        this.toolbar.stopObservers();
    },
    createSourceHelper: function()
    {
        this.$airHelper = $R.dom('<span>');
        this.$airHelper.addClass('redactor-air-helper');
        this.$airHelper.html('<i class="re-icon-html"></i>');
        this.$airHelper.on('click', function(e)
        {
            e.preventDefault();
            this.app.api('module.source.hide');

        }.bind(this));

        var $container = this.container.getElement();
        $container.append(this.$airHelper);
    },
    destroySourceHelper: function()
    {
        if (this.$airHelper) this.$airHelper.remove();
    },
    openSelected: function()
    {
        setTimeout(function()
        {
            if (this._isSelection()) this._open(false);

        }.bind(this), 0);
    },
    close: function()
    {
        this.$doc.off('.redactor-air-' + this.uuid);

        var $toolbar = this.toolbar.getElement();
        $toolbar.removeClass('open');
        $toolbar.hide();
    },

    // private
    _init: function()
    {
        this.toolbar.create();

        var $wrapper = this.toolbar.getWrapper();
        var $toolbar = this.toolbar.getElement();
        var $editor = this.editor.getElement();
        var $container = this.container.getElement();

        $wrapper.addClass('redactor-toolbar-wrapper-air');
        $toolbar.addClass('redactor-air');
        //$toolbar.addClass('redactor-animate-hide');
        $toolbar.hide();

        $wrapper.append($toolbar);
        $container.prepend($wrapper);

        // open selected
        this.openSelected();

        // events
        this.$doc.on('mouseup.redactor-air-trigger-' + this.uuid, this._open.bind(this));
        $editor.on('keyup.redactor-air-trigger-' + this.uuid, this._openCmd.bind(this));
    },
    _isSelection: function()
    {
        return (this.selection.is() && !this.selection.isCollapsed());
    },
    _isOpened: function()
    {
        var $toolbar = this.toolbar.getElement();

        return $toolbar.hasClass('open');
    },
    _open: function(e)
    {
        var target = (e) ? e.target : false;
        var $el = (e) ? $R.dom(e.target) : false;
        var dataTarget = this.inspector.parse(target);
        var isComponent = (dataTarget.isComponent() && !dataTarget.isComponentType('table'));
        var isFigcaption = (dataTarget.isFigcaption());
        var isModalTarget = ($el && $el.closest('.redactor-modal').length !== 0);
        var isButtonCall = (e && $el.closest('.re-button').length !== 0);
        var isDropdownCall = (e && $el.closest('.redactor-dropdown').length !== 0);

        if (isDropdownCall || isButtonCall || isModalTarget || isFigcaption || isComponent || this.toolbar.isContextBar() || !this._isSelection())
        {
            return;
        }

        var pos = this.selection.getPosition();

        setTimeout(function()
        {
            if (this.app.isReadOnly()) return;
            if (this._isSelection()) this._doOpen(pos);

        }.bind(this), 1);

    },
    _openCmd: function()
    {
        if (this.selection.isAll())
        {
            var $toolbar = this.toolbar.getElement();
            var pos = this.selection.getPosition();

            pos.top = (pos.top < 20) ? 0 : pos.top - $toolbar.height();
            pos.height = 0;

            this._doOpen(pos);
        }
    },
    _doOpen: function(pos)
    {
        var $wrapper = this.toolbar.getWrapper();
        var $toolbar = this.toolbar.getElement();
        var $container = this.container.getElement();
        var containerOffset = $container.offset();
        var leftFix = 0;
        var winWidth = this.$win.width();
        var toolbarWidth = $toolbar.width();

        if (winWidth < (pos.left + toolbarWidth))
        {
            var selPos = this.selection.getPosition();
            leftFix = toolbarWidth - selPos.width;
        }

        $wrapper.css({
            left: (pos.left - containerOffset.left - leftFix) + 'px',
            top: (pos.top - containerOffset.top + pos.height + this.$doc.scrollTop()) + 'px'
        });

        this.app.broadcast('airOpen');
        $toolbar.addClass('open');
        $toolbar.show();

        this.$doc.on('click.redactor-air-' + this.uuid, this._close.bind(this));
        this.$doc.on('keydown.redactor-air-' + this.uuid, this._close.bind(this));
        this.app.broadcast('airOpened');
    },
    _close: function(e)
    {
        var $el = (e) ? $R.dom(e.target) : false;
        var isDropdownCall = (e && $el.closest('[data-dropdown], .redactor-dropdown-not-close').length !== 0);
        var isButtonCall = (!isDropdownCall && e && $el.closest('.re-button').length !== 0);

        if (!isButtonCall && (isDropdownCall || !this._isOpened()))
        {
            return;
        }

        // close
        this.app.broadcast('airClose');

        this.close();
        this.app.broadcast('airClosed');
    }
});
$R.add('class', 'toolbar.fixed', {
    init: function(app)
    {
        this.app = app;
        this.uuid = app.uuid;
        this.opts = app.opts;
        this.$doc = app.$doc;
        this.$win = app.$win;
        this.editor = app.editor;
        this.toolbar = app.toolbar;
        this.detector = app.detector;
        this.container = app.container;

        // init
        this._init();
    },
    // public
    stop: function()
    {
        this.$fixedTarget.off('.redactor-toolbar-' + this.uuid);
        this.$win.off('.redactor-toolbar-' + this.uuid);
    },
    reset: function()
    {
        var $toolbar = this.toolbar.getElement();
        var $wrapper = this.toolbar.getWrapper();

        $wrapper.css('height', '');
        $toolbar.removeClass('redactor-toolbar-fixed');
        $toolbar.css({ position: '', top: '', left: '', width: '' });

        var dropdown = this.toolbar.getDropdown();
        if (dropdown) dropdown.updatePosition();
    },

    // private
    _init: function()
    {
        this.$fixedTarget = (this.toolbar.isTarget()) ? this.toolbar.getTargetElement() : this.$win;
        this._doFixed();

        if (this.toolbar.isTarget())
        {
            this.$win.on('scroll.redactor-toolbar-' + this.uuid, this._doFixed.bind(this));
            this.$win.on('resize.redactor-toolbar-' + this.uuid, this._doFixed.bind(this));
        }

        this.$fixedTarget.on('scroll.redactor-toolbar-' + this.uuid, this._doFixed.bind(this));
        this.$fixedTarget.on('resize.redactor-toolbar-' + this.uuid, this._doFixed.bind(this));
    },
    _doFixed: function()
    {
        var $editor = this.editor.getElement();
        var $container = this.container.getElement();
        var $toolbar = this.toolbar.getElement();
        var $wrapper = this.toolbar.getWrapper();

        if (this.editor.isSourceMode())
        {
            return;
        }

        var $targets = $container.parents().filter(function(node)
        {
            return (getComputedStyle(node, null).display === 'none') ? node : false;
        });

        // has hidden parent
        if ($targets.length !== 0) return;

        var isHeight = ($editor.height() < 100);
        var isEmpty = this.editor.isEmpty();

        if (isHeight || isEmpty || this.editor.isSourceMode()) return;

        var toolbarHeight = $toolbar.height();
        var toleranceEnd = 60;
        var containerOffset = $container.offset();
        var boxOffset = containerOffset.top;
        var boxEnd = boxOffset + $container.height() - toleranceEnd;
        var scrollOffset = this.$fixedTarget.scrollTop() + this.opts.toolbarFixedTopOffset;
        var top = (!this.toolbar.isTarget()) ? 0 : this.$fixedTarget.offset().top - this.$win.scrollTop();

        if (scrollOffset > boxOffset && scrollOffset < boxEnd)
        {
            var position = (this.detector.isDesktop()) ? 'fixed' : 'absolute';
            top = (this.detector.isDesktop()) ? top : (scrollOffset - boxOffset + this.opts.toolbarFixedTopOffset);

            if (this.detector.isMobile())
            {
                if (this.fixedScrollTimeout)
                {
                    clearTimeout(this.fixedScrollTimeout);
                }

                $toolbar.hide();
                this.fixedScrollTimeout = setTimeout(function()
                {
                    $toolbar.show();
                }, 250);
            }

            $wrapper.height(toolbarHeight);
            $toolbar.addClass('redactor-toolbar-fixed');
            $toolbar.css({
                position: position,
                top: (top + this.opts.toolbarFixedTopOffset) + 'px',
                width: $container.width() + 'px'
            });

            var dropdown = this.toolbar.getDropdown();
            if (dropdown) dropdown.updatePosition();

            this.app.broadcast('toolbar.fixed');
        }
        else
        {
            this.reset();
            this.app.broadcast('toolbar.unfixed');
        }
    }
});
$R.add('class', 'toolbar.standard', {
    init: function(app)
    {
        this.app = app;
        this.opts = app.opts;
        this.uuid = app.uuid;
        this.$body = app.$body;
        this.toolbar = app.toolbar;
        this.container = app.container;

        // local
        this.isExternalMultiple = false;
        this.toolbarFixed = false;

        // init
        this._init();
    },
    // public
    stop: function()
    {
        var $wrapper = this.toolbar.getWrapper();
        $wrapper.remove();

        if (this.toolbarFixed) this.toolbarFixed.stop();
        if (this.opts.toolbarExternal) this._findToolbars();

        this.toolbar.stopObservers();
        this.$body.find('.re-button-tooltip-' + this.uuid).remove();
    },
    setExternal: function()
    {
        this._findToolbars();
        if (this.isExternalMultiple)
        {
            this.$toolbars.hide();
            var $current = this.$external.find('.redactor-toolbar-external-' + this.uuid);
            $current.show();
        }
    },
    resetPosition: function()
    {
        if (this.toolbarFixed) this.toolbarFixed.reset();
    },

    // private
    _init: function()
    {
        this._build();

        if (this.opts.toolbarExternal)
        {
            this._buildExternal();
        }
        else
        {
            this._buildFixed();

            var $toolbar = this.toolbar.getElement();
            $toolbar.show();
        }
    },
    _build: function()
    {
        this.toolbar.create();

        var $wrapper = this.toolbar.getWrapper();
        var $toolbar = this.toolbar.getElement();

        $wrapper.addClass('redactor-toolbar-wrapper');
        $toolbar.addClass('redactor-toolbar');
        $toolbar.hide();
        $wrapper.append($toolbar);

        if (!this.opts.toolbarExternal)
        {
            var $container = this.container.getElement();
            $container.prepend($wrapper);
        }
    },
    _buildExternal: function()
    {
        this._initExternal();
        this._findToolbars();

        if (this.isExternalMultiple)
        {
            this._hideToolbarsExceptFirst();
        }
        else
        {
            var $toolbar = this.toolbar.getElement();
            $toolbar.show();
        }
    },
    _buildFixed: function()
    {
        if (this.opts.toolbarFixed)
        {
            this.toolbarFixed = $R.create('toolbar.fixed', this.app);
        }
    },
    _initExternal: function()
    {
        var $toolbar = this.toolbar.getElement();
        var $wrapper = this.toolbar.getElement();

        $toolbar.addClass('redactor-toolbar-external redactor-toolbar-external-' + this.uuid);

        this.$external = $R.dom(this.opts.toolbarExternal);
        this.$external.append($wrapper);

    },
    _findToolbars: function()
    {
        this.$toolbars = this.$external.find('.redactor-toolbar-external');
        this.isExternalMultiple = (this.$toolbars.length > 1);
    },
    _hideToolbarsExceptFirst: function()
    {
        this.$toolbars.hide();
        var $first = this.$toolbars.first();
        $first.show();
    }
});
$R.add('module', 'line', {
    init: function(app)
    {
        this.app = app;
        this.lang = app.lang;
        this.component = app.component;
        this.inspector = app.inspector;
        this.insertion = app.insertion;
    },
    // messages
    oncontextbar: function(e, contextbar)
    {
        var data = this.inspector.parse(e.target);
        if (data.isComponentType('line'))
        {
            var node = data.getComponent();
            var buttons = {
                "remove": {
                    title: this.lang.get('delete'),
                    api: 'module.line.remove',
                    args: node
                }
            };

            contextbar.set(e, node, buttons, 'bottom');
        }

    },

    // public
    insert: function()
    {
        var line = this.component.create('line');
        this.insertion.insertRaw(line);
    },
    remove: function(node)
    {
        this.component.remove(node);
    }
});
$R.add('class', 'line.component', {
    mixins: ['dom', 'component'],
    init: function(app, el)
    {
        this.app = app;

        // init
        return (el && el.cmnt !== undefined) ? el : this._init(el);
    },
    // private
    _init: function(el)
    {
        var wrapper, element;
        if (typeof el !== 'undefined')
        {
            var $node = $R.dom(el);
            var node = $node.get();

            if (node.tagName === 'HR') element = node;
            else if (node.tagName === 'FIGURE')
            {
                wrapper = node;
                element = $node.find('hr').get();
            }
        }

        this._buildWrapper(wrapper);
        this._buildElement(element);
        this._initWrapper();
    },
    _buildElement: function(node)
    {
        if (node)
        {
            this.$element = $R.dom(node);
        }
        else
        {
            this.$element = $R.dom('<hr>');
            this.append(this.$element);
        }
    },
    _buildWrapper: function(node)
    {
        node = node || '<figure>';

        this.parse(node);
    },
    _initWrapper: function()
    {
        this.addClass('redactor-component');
        this.attr({
            'data-redactor-type': 'line',
            'tabindex': '-1',
            'contenteditable': false
        });
    }
});
$R.add('module', 'link', {
    modals: {
        'link':
            '<form action=""> \
                <div class="form-item"> \
                    <label for="modal-link-url">URL <span class="req">*</span></label> \
                    <input type="text" id="modal-link-url" name="url"> \
                </div> \
                <div class="form-item"> \
                    <label for="modal-link-text">## text ##</label> \
                    <input type="text" id="modal-link-text" name="text"> \
                </div> \
                <div class="form-item form-item-title"> \
                    <label for="modal-link-title">## title ##</label> \
                    <input type="text" id="modal-link-title" name="title"> \
                </div> \
                <div class="form-item form-item-target"> \
                    <label class="checkbox"> \
                        <input type="checkbox" name="target"> ## link-in-new-tab ## \
                    </label> \
                </div> \
            </form>'
    },
    init: function(app)
    {
        this.app = app;
        this.opts = app.opts;
        this.lang = app.lang;
        this.caret = app.caret;
        this.utils = app.utils;
        this.inline = app.inline;
        this.editor = app.editor;
        this.inspector = app.inspector;
        this.insertion = app.insertion;
        this.selection = app.selection;

        // local
        this.isCurrentLink = false;
        this.currentText = false;
    },
    // messages
    onmodal: {
        link: {
            open: function($modal, $form)
            {
                this._setFormData($form, $modal);
            },
            opened: function($modal, $form)
            {
                this._setFormFocus($form);
            },
            update: function($modal, $form)
            {
                var data = $form.getData();
                if (this._validateData($form, data))
                {
                    this._update(data);
                }
            },
            insert: function($modal, $form)
            {
                var data = $form.getData();
                if (this._validateData($form, data))
                {
                    this._insert(data);
                }
            },
            unlink: function()
            {
                this._unlink();
            }
        }
    },
    onbutton: {
        link: {
            observe: function(button)
            {
                this._observeButton(button);
            }
        }
    },
    ondropdown: {
        link: {
            observe: function(dropdown)
            {
                this._observeUnlink(dropdown);
                this._observeEdit(dropdown);
            }
        }
    },
    oncontextbar: function(e, contextbar)
    {
        var current = this._getCurrent();
        var data = this.inspector.parse(current);
        if (data.isLink())
        {
            var node = data.getLink();
            var $el = $R.dom(node);

            var $point = $R.dom('<a>');
            var url = $el.attr('href');

            $point.text(this._truncateText(url));
            $point.attr('href', url);
            $point.attr('target', '_blank');

            var buttons = {
                "link": {
                    title: $point
                },
                "edit": {
                    title: this.lang.get('edit'),
                    api: 'module.link.open'
                },
                "unlink": {
                    title: this.lang.get('unlink'),
                    api: 'module.link.unlink'
                }
            };

            contextbar.set(e, node, buttons, 'bottom');
        }
    },

    // public
    open: function()
    {
        this.$link = this._buildCurrent();
        this.app.api('module.modal.build', this._getModalData());
    },
    insert: function(data)
    {
        this._insert(data);
    },
    update: function(data)
    {
        this._update(data);
    },
    unlink: function()
    {
        this._unlink();
    },

    // private
    _observeButton: function(button)
    {
        var current = this.selection.getCurrent();
        var data = this.inspector.parse(current);

        if (data.isPre() || data.isCode())
        {
            button.disable();
        }
        else
        {
            button.enable();
        }
    },
    _observeUnlink: function(dropdown)
    {
        var $item = dropdown.getItem('unlink');
        var links = this._getLinks();

        if (links.length === 0) $item.disable();
        else                    $item.enable();
    },
    _observeEdit: function(dropdown)
    {
        var current = this._getCurrent();
        var $item = dropdown.getItem('link');

        var data = this.inspector.parse(current);
        var title = (data.isLink()) ? this.lang.get('link-edit') : this.lang.get('link-insert');

        $item.setTitle(title);
    },
    _unlink: function()
    {
        this.app.api('module.modal.close');

        var elms = [];
        var nodes = this._getLinks();

        this.selection.save();
        for (var i = 0; i < nodes.length; i++)
        {
            var $link = $R.create('link.component', this.app, nodes[i]);
            elms.push(this.selection.getElement(nodes[i]));

            $link.unwrap();

            // callback
            this.app.broadcast('link.deleted', $link);
        }
        this.selection.restore();

        // normalize
        for (var i = 0; i < elms.length; i++)
        {
            var el = (elms[i]) ? elms[i] : this.editor.getElement();
            this.utils.normalizeTextNodes(el);
        }

        this._resetCurrent();
    },
    _update: function(data)
    {
        this.app.api('module.modal.close');

        var nodes = this._getLinks();
        this._setLinkData(nodes, data, 'updated');
        this._resetCurrent();
    },
    _insert: function(data)
    {
        this.app.api('module.modal.close');

        var links = this._getLinks();

        if (!this._insertSingle(links, data))
        {
            this._removeInSelection(links);
            this._insertMultiple(data);
        }

        this._resetCurrent();
    },
    _removeInSelection: function(links)
    {
        this.selection.save();
        for (var i = 0; i < links.length; i++)
        {
            var $link = $R.create('link.component', this.app, links[i]);
            var $clonedLink = $link.clone();
            $link.unwrap();

            // callback
            this.app.broadcast('link.deleted', $clonedLink);
        }
        this.selection.restore();
    },
    _insertMultiple: function(data)
    {
        var range = this.selection.getRange();
        if (range && this._isCurrentTextChanged(data))
        {
            this._deleteContents(range);
        }

        var nodes = this.inline.format({ tag: 'a' });

        this._setLinkData(nodes, data, 'inserted');
    },
    _insertSingle: function(links, data)
    {
        var inline = this.selection.getInline();
        if (links.length === 1 && (links[0].textContext === this.selection.getText()) || (inline && inline.tagName === 'A'))
        {
            var $link = $R.create('link.component', this.app, links[0]);

            $link.setData(data);
            this.caret.setAfter($link);

            // callback
            this.app.broadcast('link.inserted', $link);

            return true;
        }

        return false;
    },
    _setLinkData: function(nodes, data, type)
    {
        data.text = (data.text.trim() === '') ? this._truncateText(data.url) : data.text;

        var isTextChanged = (!this.currentText || this.currentText !== data.text);

        this.selection.save();
        for (var i = 0; i < nodes.length; i++)
        {
            var $link = $R.create('link.component', this.app, nodes[i]);
            var linkData = {};

            if (data.text && isTextChanged) linkData.text = data.text;
            if (data.url) linkData.url = data.url;
            if (data.title !== undefined) linkData.title = data.title;
            if (data.target !== undefined) linkData.target = data.target;

            $link.setData(linkData);

            // callback
            this.app.broadcast('link.' + type, $link);
        }

        setTimeout(this.selection.restore.bind(this.selection), 0);
    },
    _deleteContents: function(range)
    {
        var html = this.selection.getHtml();
        var parsed = this.utils.parseHtml(html);
        var first = parsed.nodes[0];

        if (first && first.nodeType !== 3)
        {
            var tag = first.tagName.toLowerCase();
            var container = document.createElement(tag);

            this.insertion.insertNode(container, 'start');
        }
        else
        {
            range.deleteContents();
        }
    },
    _getModalData: function()
    {
        var commands;
        if (this._isLink())
        {
           commands = {
                update: { title: this.lang.get('save') },
                unlink: { title: this.lang.get('unlink'), type: 'danger' },
                cancel: { title: this.lang.get('cancel') }
            };
        }
        else
        {
            commands = {
                insert: { title: this.lang.get('insert') },
                cancel: { title: this.lang.get('cancel') }
            };
        }

        var modalData = {
            name: 'link',
            title: (this._isLink()) ? this.lang.get('link-edit') : this.lang.get('link-insert'),
            handle: (this._isLink()) ? 'update' : 'insert',
            commands: commands
        };


        return modalData;
    },
    _isLink: function()
    {
        return this.currentLink;
    },
    _isCurrentTextChanged: function(data)
    {
        return (this.currentText && this.currentText !== data.text);
    },
    _buildCurrent: function()
    {
        var current = this._getCurrent();
        var data = this.inspector.parse(current);
        var $link;

        if (data.isLink())
        {
            this.currentLink = true;

            $link = data.getLink();
            $link = $R.create('link.component', this.app, $link);
        }
        else
        {
            this.currentLink = false;

            $link = $R.create('link.component', this.app);
            var linkData = {
                text: this.selection.getText()
            };

            $link.setData(linkData);
        }

        return $link;
    },
    _getCurrent: function()
    {
        return this.selection.getInlinesAllSelected({ tags: ['a'] })[0];
    },
    _getLinks: function()
    {
        var links = this.selection.getInlines({ all: true, tags: ['a'] });
        var arr = [];
        for (var i = 0; i < links.length; i++)
        {
            var data = this.inspector.parse(links[i]);
            if (data.isLink())
            {
                arr.push(links[i]);
            }
        }

        return arr;
    },
    _resetCurrent: function()
    {
        this.isCurrentLink = false;
        this.currentText = false;
    },
    _truncateText: function(url)
    {
        return (url && url.length > this.opts.linkSize) ? url.substring(0, this.opts.linkSize) + '...' : url;
    },
    _validateData: function($form, data)
    {
        return (data.url.trim() === '') ? $form.setError('url') : true;
    },
    _setFormFocus: function($form)
    {
        $form.getField('url').focus();
    },
    _setFormData: function($form, $modal)
    {
        var linkData = this.$link.getData();
        var data = {
            url: linkData.url,
            text: linkData.text,
            title: linkData.title,
            target: (this.opts.linkTarget || linkData.target)
        };

        if (!this.opts.linkNewTab) $modal.find('.form-item-target').hide();
        if (!this.opts.linkTitle) $modal.find('.form-item-title').hide();

        $form.setData(data);
        this.currentText = $form.getField('text').val();
    }
});
$R.add('class', 'link.component', {
    mixins: ['dom', 'component'],
    init: function(app, el)
    {
        this.app = app;
        this.opts = app.opts;

        // local
        this.reUrl = /^(?:(?:(?:https?|ftp):)?\/\/)?(?:\S+(?::\S*)?@)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)(?:\.(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)*(?:\.(?:[a-z\u00a1-\uffff]{2,})))(?::\d{2,5})?(?:[/?#]\S*)?$/i;

        // init
        return (el && el.cmnt !== undefined) ? el :  this._init(el);
    },

    // public
    setData: function(data)
    {
        for (var name in data)
        {
            this._set(name, data[name]);
        }
    },
    getData: function()
    {
        var names = ['url', 'text', 'target', 'title'];
        var data = {};

        for (var i = 0; i < names.length; i++)
        {
            data[names[i]] = this._get(names[i]);
        }

        return data;
    },

    // private
    _init: function(el)
    {
        var $el = $R.dom(el);
        if (el === undefined)
        {
            this.parse('<a>');
        }
        else
        {
            this.parse($el);
        }
    },
    _set: function(name, value)
    {
        this['_set_' + name](value);
    },
    _get: function(name)
    {
        return this['_get_' + name]();
    },
    _get_target: function()
    {
        return (this.attr('target')) ? this.attr('target') : false;
    },
    _get_url: function()
    {
        return this.attr('href');
    },
    _get_title: function()
    {
        return this.attr('title');
    },
    _get_text: function()
    {
        return this._getContext().text();
    },
    _getContext: function()
    {
        return this._findDeepestChild(this).element;
    },
    _set_target: function(target)
    {
        if (target === false) this.removeAttr('target');
        else if (target)
        {
            this.attr('target', (target === true) ? '_blank' : target);
        }
    },
    _set_text: function(text)
    {
        this._getContext().html(text);
    },
    _set_title: function(title)
    {
        if (!title || title === '') this.removeAttr('title');
        else this.attr('title', title);
    },
    _set_url: function(url)
    {
        if (this.opts.linkValidation)
        {
            url = this._cleanUrl(url);

            if (this._isMailto(url))
            {
                url = 'mailto:' + url.replace('mailto:', '');
            }
            else if (this._isUrl(url) && url.search(/^(ftp|https?)/i) === -1)
            {
                url = 'http://' + url.replace(/(ftp|https?):\/\//i, '');
            }
        }

        this.attr('href', url);
    },
    _isMailto: function(url)
    {
        return (url.search('@') !== -1 && /(ftp|https?):\/\//i.test(url) === false);
    },
    _isUrl: function(url)
    {
        return this.reUrl.test(url);
    },
    _cleanUrl: function(url)
    {
        return url.trim().replace(/[^\W\w\D\d+&\'@#/%?=~_|!:,.;\(\)]/gi, '');
    },
    _findDeepestChild: function(parent)
    {
        var result = {depth: 0, element: parent };

        parent.children().each(function(node)
        {
            var child = $R.dom(node);

            if (node.outerHTML !== parent.html())
            {
                return;
            }
            else
            {
                var childResult = this._findDeepestChild(child);
                if (childResult.depth + 1 > result.depth)
                {
                    result = {
                        depth: 1 + childResult.depth,
                        element: childResult.element
                    };
                }
            }
        }.bind(this));

        return result;
    }
});
$R.add('module', 'modal', {
    init: function(app)
    {
        this.app = app;
        this.lang = app.lang;
        this.$doc = app.$doc;
        this.$win = app.$win;
        this.$body = app.$body;
        this.utils = app.utils;
        this.editor = app.editor;
        this.animate = app.animate;
        this.detector = app.detector;
        this.selection = app.selection;

        // local
        this.$box = false;
        this.$modal = false;
        this.selectionMarkers = false;

        // defaults
        this.defaults = {
            name: false,
            url: false,
            title: false,
            width: '600px',
            height: false,
            handle: false,
            commands: false
        };
    },
    // public
    build: function(data)
    {
        this._open(data);
    },
    close: function()
    {
        this._close();
    },
    stop: function()
    {
        if (this.$box)
        {
            this.$box.remove();
            this.$box = false;
            this.$modal = false;

            this.$doc.off('.redactor.modal');
            this.$win.off('.redactor.modal');
        }

        if (this.$overlay)
        {
            this.$overlay.remove();
        }
    },
    resize: function()
    {
        this.$modal.setWidth(this.p.width);
        this.$modal.updatePosition();
    },

    // private
    _isOpened: function()
    {
        return (this.$modal && this.$modal.hasClass('open'));
    },
    _open: function(data)
    {
        this._buildDefaults(data);

        if (this.p.url) this._openUrl();
        else this._openTemplate();
    },
    _openUrl: function()
    {
        $R.ajax.post({
            url: this.p.url,
            success: this._doOpen.bind(this)
        });
    },
    _openTemplate: function()
    {
        if (typeof $R.modals[this.p.name] !== 'undefined')
        {
            var template = this.lang.parse($R.modals[this.p.name]);
            this._doOpen(template);
        }
    },
    _doOpen: function(template)
    {
        this.stop();

        if (this.selection.isCollapsed())
        {
            this.selection.save();
            this.selectionMarkers = false;
        }
        else
        {
            this.selection.saveMarkers();
            this.selectionMarkers = true;
        }

        if (!this.detector.isDesktop())
        {
            document.activeElement.blur();
        }

        this._createModal(template);

        this._buildModalBox();
        this._buildOverlay();
        this._buildModal();
        this._buildModalForm();
        this._buildModalCommands();

        this._broadcast('open');

        this.$modal.updatePosition();
        this._buildModalTabs();

        this.animate.start(this.$box, 'fadeIn', this._opened.bind(this));
        this.animate.start(this.$overlay, 'fadeIn');

    },
    _opened: function()
    {
        this.$modal.addClass('open');
        this.$box.on('mousedown.redactor.modal', this._close.bind(this));
        this.$doc.on('keyup.redactor.modal', this._handleEscape.bind(this));
        this.$win.on('resize.redactor.modal', this.resize.bind(this));
        this.$modal.getBody().find('input[type=text],input[type=url],input[type=email]').on('keydown.redactor.modal', this._handleEnter.bind(this));

        // fix bootstrap modal focus
        if (window.jQuery) jQuery(document).off('focusin.modal');

        this._broadcast('opened');
    },
    _close: function(e)
    {
        if (!this.$box || !this._isOpened()) return;

        if (e)
        {
            if (!this._needToClose(e.target))
            {
                return;
            }

            e.stopPropagation();
            e.preventDefault();
        }

        if (this.selectionMarkers) this.selection.restoreMarkers();
        else this.selection.restore();

        this.selectionMarkers = false;

        this._broadcast('close');

        this.animate.start(this.$box, 'fadeOut', this._closed.bind(this));
        this.animate.start(this.$overlay, 'fadeOut');
    },
    _closed: function()
    {
        this.$modal.removeClass('open');
        this.$box.off('.redactor.modal');
        this.$doc.off('.redactor.modal');
        this.$win.off('.redactor.modal');

        this._broadcast('closed');
    },
    _createModal: function(template)
    {
        this.$modal = $R.create('modal.element', this.app, template);
    },
    _broadcast: function(message)
    {
        this.app.broadcast('modal.' + message, this.$modal, this.$modalForm);
        this.app.broadcast('modal.' + this.p.name + '.' + message, this.$modal, this.$modalForm);
    },
    _buildDefaults: function(data)
    {
         this.p = $R.extend({}, this.defaults, data);
    },
    _buildModalBox: function()
    {
        this.$box = $R.dom('<div>');
        this.$box.attr('id', 'redactor-modal');
        this.$box.addClass('redactor-animate-hide');
        this.$box.html('');
        this.$body.append(this.$box);
    },
    _buildOverlay: function()
    {
        this.$overlay = $R.dom('#redactor-overlay');
        if (this.$overlay.length === 0)
        {
            this.$overlay = $R.dom('<div>');
            this.$overlay.attr('id', 'redactor-overlay');
            this.$overlay.addClass('redactor-animate-hide');
            this.$body.prepend(this.$overlay);
        }
    },
    _buildModal: function()
    {
        this.$box.append(this.$modal);

        this.$modal.setTitle(this.p.title);
        this.$modal.setHeight(this.p.height);
        this.$modal.setWidth(this.p.width);
    },
    _buildModalCommands: function()
    {
        if (this.p.commands)
        {
            var commands = this.p.commands;
            var $footer = this.$modal.getFooter();
            for (var key in commands)
            {
                var $btn = $R.dom('<button>');

                $btn.html(commands[key].title);
                $btn.attr('data-command', key);

                // cancel
                if (key === 'cancel')
                {
                    $btn.attr('data-action', 'close');
                    $btn.addClass('redactor-button-unstyled');
                }

                // danger
                if (typeof commands[key].type !== 'undefined' && commands[key].type === 'danger')
                {
                    $btn.addClass('redactor-button-danger');
                }

                $btn.on('click', this._handleCommand.bind(this));

                $footer.append($btn);
            }
        }
    },
    _buildModalTabs: function()
    {
        var $body = this.$modal.getBody();
        var $tabs = $body.find('.redactor-modal-tab');
        var $box = $body.find('.redactor-modal-tabs');

        if ($tabs.length > 1)
        {
            $box = ($box.length === 0) ? $R.dom('<div>') : $box.html('');
            $box.addClass('redactor-modal-tabs');

            $tabs.each(function(node, i)
            {
                var $node = $R.dom(node);
                var $item = $R.dom('<a>');
                $item.attr('href', '#');
                $item.attr('rel', i);
                $item.text($node.attr('data-title'));
                $item.on('click', this._showTab.bind(this));

                if (i === 0)
                {
                    $item.addClass('active');
                }

                $box.append($item);

            }.bind(this));

            $body.prepend($box);
        }
    },
    _buildModalForm: function()
    {
        this.$modalForm = $R.create('modal.form', this.app, this.$modal.getForm());
    },
    _showTab: function(e)
    {
        e.preventDefault();

        var $el = $R.dom(e.target);
        var index = $el.attr('rel');
        var $body = this.$modal.getBody();
        var $tabs = $body.find('.redactor-modal-tab');

        $tabs.hide();
        $tabs.eq(index).show();

        $body.find('.redactor-modal-tabs a').removeClass('active');
        $el.addClass('active');

    },
    _needToClose: function(el)
    {
        var $target = $R.dom(el);
        if ($target.attr('data-action') === 'close' || this.$modal.isCloseNode(el) || $target.closest('.redactor-modal').length === 0)
        {
            return true;
        }

        return false;
    },
    _handleCommand: function(e)
    {
        var $btn = $R.dom(e.target).closest('button');
        var command = $btn.attr('data-command');

        if (command !== 'cancel') e.preventDefault();

        this._broadcast(command);
    },
    _handleEnter: function(e)
    {
        if (e.which === 13)
        {
            if (this.p.handle)
            {
                e.preventDefault();
                this._broadcast(this.p.handle);
            }
        }
    },
    _handleEscape: function(e)
    {
        if (e.which === 27) this._close();
    }
});
$R.add('class', 'modal.element', {
    mixins: ['dom'],
    init: function(app, template)
    {
        this.app = app;
        this.opts = app.opts;
        this.$win = app.$win;

        // init
        this._init(template);
    },

    // get
    getForm: function()
    {
        return this.find('form');
    },
    getHeader: function()
    {
        return this.$modalHeader;
    },
    getBody: function()
    {
        return this.$modalBody;
    },
    getFooter: function()
    {
        return this.$modalFooter;
    },

    // set
    setTitle: function(title)
    {
        if (title) this.$modalHeader.html(title);
    },
    setWidth: function(width)
    {
        width = (parseInt(width) >= this.$win.width()) ? '96%' : width;

        this.css('max-width', width);
    },
    setHeight: function(height)
    {
        if (height !== false) this.$modalBody.css('height', height);
    },

    // update
    updatePosition: function()
    {
        var width = this.width();
        this.css({ 'left': '50%', 'margin-left': '-' + (width/2) + 'px' });

        var windowHeight = this.$win.height();
        var height = this.height();
        var marginTop = (windowHeight/2 - height/2);

        if (height < windowHeight && marginTop !== 0)
        {
            this.css('margin-top', marginTop + 'px');
        }
    },

    // is
    isCloseNode: function(el)
    {
        return (el === this.$modalClose.get());
    },

    // private
    _init: function(template)
    {
        this._build();
        this._buildClose();
        this._buildHeader();
        this._buildBody();
        this._buildFooter();
        this._buildTemplate(template);
    },
    _build: function()
    {
        this.parse('<div>');
        this.addClass('redactor-modal');
        this.attr('dir', this.opts.direction);
    },
    _buildClose: function()
    {
        this.$modalClose = $R.dom('<span>');
        this.$modalClose.addClass('redactor-close');

        this.append(this.$modalClose);
    },
    _buildHeader: function()
    {
        this.$modalHeader = $R.dom('<div>');
        this.$modalHeader.addClass('redactor-modal-header');

        this.append(this.$modalHeader);
    },
    _buildBody: function()
    {
        this.$modalBody = $R.dom('<div>');
        this.$modalBody.addClass('redactor-modal-body');

        this.append(this.$modalBody);
    },
    _buildFooter: function()
    {
        this.$modalFooter = $R.dom('<div>');
        this.$modalFooter.addClass('redactor-modal-footer');

        this.append(this.$modalFooter);
    },
    _buildTemplate: function(template)
    {
        this.$modalBody.html(template);
    }
});
$R.add('class', 'modal.form', {
    mixins: ['dom'],
    init: function(app, element)
    {
        this.app = app;

        // build
        this.build(element);
    },

    // public
    build: function(element)
    {
        this.parse(element);
    },
    getData: function()
    {
        var data = {};
        this.find('[name]').each(function(node)
        {
            var $node = $R.dom(node);
            data[$node.attr('name')] = $node.val();
        });

        return data;
    },
    setData: function(data)
    {
        this.find('[name]').each(function(node)
        {
            var $node = $R.dom(node);
            var name = $node.attr('name');
            if (data.hasOwnProperty(name))
            {
                if (node.type && node.type === 'checkbox') node.checked = data[name];
                else $node.val(data[name]);
            }
        });
    },
    getField: function(name)
    {
        return this.find('[name=' + name + ']');
    },
    setError: function(name)
    {
        var $el = this.getField(name);

        $el.addClass('error');
        $el.one(this._getFieldEventName($el.get()), this._clearError);

        return false;
    },

    // private
    _clearError: function()
    {
        return $R.dom(this).removeClass('error');
    },
    _getFieldEventName: function(el)
    {
        return (el.tagName === 'SELECT' || el.type === 'checkbox' || el.type === 'radio') ? 'change' : 'keyup';
    }
});
$R.add('module', 'block', {
    init: function(app)
    {
        this.app = app;
        this.block = app.block;
    },
    // public
    format: function(args)
    {
        var nodes = this.block.format(args);

        // callback
        this.app.broadcast('format', 'block', nodes);
    },
    clearformat: function()
    {
        this.block.clearFormat();
    },
    clearstyle: function()
    {
        this.block.clearStyle();
    },
    clearclass: function()
    {
        this.block.clearClass();
    },
    clearattr: function()
    {
        this.block.clearAttr();
    },
    add: function(args, tags)
    {
        this.block.add(args, tags);
    },
    toggle: function(args, tags)
    {
        this.block.toggle(args, tags);
    },
    set: function(args, tags)
    {
        this.block.set(args, tags);
    },
    remove: function(args, tags)
    {
        this.block.remove(args, tags);
    }
});
$R.add('module', 'inline', {
    init: function(app)
    {
        this.app = app;
        this.inline = app.inline;
    },
    format: function(args)
    {
        var nodes = this.inline.format(args);

        // callback
        this.app.broadcast('format', 'inline', nodes);
    },
    clearformat: function()
    {
        this.inline.clearFormat();
    },
    clearstyle: function()
    {
        this.inline.clearStyle();
    },
    clearclass: function()
    {
        this.inline.clearClass();
    },
    clearattr: function()
    {
        this.inline.clearAttr();
    },
    add: function(args, tags)
    {
        this.inline.add(args, tags);
    },
    toggle: function(args, tags)
    {
        this.inline.toggle(args, tags);
    },
    set: function(args, tags)
    {
        this.inline.set(args, tags);
    },
    remove: function(args, tags)
    {
        this.inline.remove(args, tags);
    }
});
$R.add('module', 'autosave', {
    init: function(app)
    {
        this.app = app;
        this.opts = app.opts;
        this.utils = app.utils;
        this.source = app.source;
    },
    // messages
    onsynced: function()
    {
        if (this.opts.autosave)
        {
            this._send();
        }
    },

    // private
    _send: function()
    {
        var name = (this.opts.autosaveName) ? this.opts.autosaveName : this.source.getName();

        var data = {};
        data[name] = this.source.getCode();
        data = this.utils.extendData(data, this.opts.autosaveData);

        $R.ajax.post({
            url: this.opts.autosave,
            data: data,
            success: function(response)
            {
                this._complete(response, name, data);
            }.bind(this)
        });
    },
    _complete: function(response, name, data)
    {
        var callback = (response && response.error) ? 'autosaveError' : 'autosave';
        this.app.broadcast(callback, name, data, response);
    }
});
$R.add('module', 'input', {
    init: function(app)
    {
        this.app = app;
        this.opts = app.opts;
        this.utils = app.utils;
        this.editor = app.editor;
        this.keycodes = app.keycodes;
        this.element = app.element;
        this.selection = app.selection;
        this.insertion = app.insertion;
        this.inspector = app.inspector;
        this.autoparser = app.autoparser;

        // local
        this.lastShiftKey = false;
    },
    // messages
    onpaste: function(e, dataTransfer)
    {
        if (!this.opts.input) return;

        return $R.create('input.paste', this.app, e, dataTransfer);
    },
    onkeydown: function(e)
    {
        if (!this.opts.input) return;

        // key
        var key = e.which;

        // shortcuts
        var shortcut = $R.create('input.shortcut', this.app, e);
        if (shortcut.is()) return;

        // select all
        if ((e.ctrlKey || e.metaKey) && !e.altKey && key === 65)
        {
            e.preventDefault();
            return this._selectAll();
        }

        // set empty if all selected
        var keys = [this.keycodes.ENTER, this.keycodes.SPACE, this.keycodes.BACKSPACE, this.keycodes.DELETE];
        var arrowKeys = [this.keycodes.UP, this.keycodes.DOWN, this.keycodes.LEFT, this.keycodes.RIGHT];
        var isKeys = (keys.indexOf(key) !== -1);
        var isArrowKeys = (arrowKeys.indexOf(key) !== -1);
        var isXKey = ((e.ctrlKey || e.metaKey) && key === 88); // x
        var isAlphaKeys = ((!e.ctrlKey && !e.metaKey) && ((key >= 48 && key <= 57) || (key >= 65 && key <= 90)));

        if (this.selection.isAll() && isArrowKeys && (isXKey || (!e.ctrlKey && !e.metaKey && !e.altKey && !e.shiftKey)))
        {
            if (isXKey)
            {
                this.editor.disableNonEditables();
                this.app.broadcast('empty');
                return;
            }

            if (this._isArrowKey(key)) return true;
            if (isKeys) e.preventDefault();

            if (this.element.isType('inline'))
            {
                var $editor = this.editor.getElement();
                $editor.html('');

                this.editor.startFocus();
            }
            else
            {
                this.insertion.set(this.opts.emptyHtml);
            }

            if (isKeys) return;
            else this.app.broadcast('empty');
        }

        // autoparse
        if (this.opts.autoparse)
        {
            this.autoparser.format(e, key);
        }

        // a-z, 0-9 - non editable
        if (isAlphaKeys)
        {
            // has non-editable
            if (this.selection.hasNonEditable())
            {
                e.preventDefault();
                return;
            }
        }

        // enter, shift/ctrl + enter
        if (key === this.keycodes.ENTER)
        {
            return $R.create('input.enter', this.app, e, key);
        }
        // cmd + [
        else if (e.metaKey && key === 219)
        {
            e.preventDefault();
            this.app.api('module.list.outdent');
            return;
        }
        // tab or cmd + ]
        else if (key === this.keycodes.TAB || e.metaKey && key === 221)
        {
            return $R.create('input.tab', this.app, e, key);
        }
        // space
        else if (key === this.keycodes.SPACE)
        {
            return $R.create('input.space', this.app, e, key, this.lastShiftKey);
        }
        // backspace or delete
        else if (this._isDeleteKey(key))
        {
            return $R.create('input.delete', this.app, e, key);
        }
        else if (this._isArrowKey(key))
        {
            return $R.create('input.arrow', this.app, e, key);
        }
    },
    onkeyup: function(e)
    {
        if (!this.opts.input) return;

        // key
        var key = e.which;

        // shift key
        this.lastShiftKey = e.shiftKey;

        // hide context toolbar
        this.app.broadcast('contextbar.close');

        // shortcode
        var shortcode = $R.create('input.shortcode', this.app, e, key);
        if (shortcode.is()) return;

        // is empty
        if (key === this.keycodes.BACKSPACE)
        {
            var $editor = this.editor.getElement();
            var html = this.utils.trimSpaces($editor.html());
            html = html.replace(/<br\s?\/?>/g, '');
            html = html.replace(/<div><\/div>/, '');

            if (html === '')
            {
                e.preventDefault();
                this.editor.setEmpty();
                this.editor.startFocus();
                return;
            }
        }

        if (this.editor.isEmpty())
        {
            this.app.broadcast('empty');
        }
    },

    // public
    start: function()
    {
        // extend shortcuts
        if (this.opts.shortcutsAdd)
        {
            this.opts.shortcuts = $R.extend({}, true, this.opts.shortcuts, this.opts.shortcutsAdd);
        }
    },

    // private
    _selectAll: function()
    {
        var current = this.selection.getCurrent();
        var data = this.inspector.parse(current);
        var el;

        if (data.isComponentType('table'))
        {
            el = data.getTable();
            this.selection.setAll(el);
            return;
        }
        else if (data.isComponentType('code'))
        {
            el = data.getComponentCodeElement();
            this.selection.setAll(el);
            return;
        }

        this.selection.setAll();
    },
    _isArrowKey: function(key)
    {
        return ([this.keycodes.UP, this.keycodes.DOWN, this.keycodes.RIGHT, this.keycodes.LEFT].indexOf(key) !== -1);
    },
    _isDeleteKey: function(key)
    {
        return (key === this.keycodes.BACKSPACE || key === this.keycodes.DELETE);
    }
});
$R.add('class', 'input.arrow', {
    init: function(app, e, key)
    {
        this.app = app;
        this.opts = app.opts;
        this.utils = app.utils;
        this.caret = app.caret;
        this.offset = app.offset;
        this.marker = app.marker;
        this.editor = app.editor;
        this.keycodes = app.keycodes;
        this.component = app.component;
        this.inspector = app.inspector;
        this.selection = app.selection;

        // local
        this.key = key;

        // init
        this._init(e);
    },
    // private
    _init: function(e)
    {
        if (this._isRightLeftKey() && this._isExitVariable(e)) return;

        if (this._isRightDownKey())
        {
            if (this._isExitOnDownRight(e)) return;
            if (this._selectComponent(e, 'End', 'next')) return;
        }

        if (this._isLeftUpKey())
        {
            if (this._isExitOnUpLeft(e)) return;
            if (this._selectComponent(e, 'Start', 'prev')) return;
        }

        if (this.key === this.keycodes.LEFT) this.utils.trimInvisibleChars('left');
        else if (this.key === this.keycodes.RIGHT) this.utils.trimInvisibleChars('right');

    },
    _isRightDownKey: function()
    {
        return ([this.keycodes.DOWN, this.keycodes.RIGHT].indexOf(this.key) !== -1);
    },
    _isLeftUpKey: function()
    {
        return ([this.keycodes.UP, this.keycodes.LEFT].indexOf(this.key) !== -1);
    },
    _isRightLeftKey: function()
    {
        return ([this.keycodes.RIGHT, this.keycodes.LEFT].indexOf(this.key) !== -1);
    },
    _isExitVariable: function(e)
    {
        var current = this.selection.getCurrent();
        var data = this.inspector.parse(current);
        var component = data.getComponent();
        if (data.isComponentType('variable') && data.isComponentActive())
        {
            e.preventDefault();
            var func = (this.key === this.keycodes.LEFT) ? 'setBefore' : 'setAfter';
            this.caret[func](component);
            return;
        }
    },
    _isExitOnUpLeft: function(e)
    {
        var current = this.selection.getCurrent();
        var block = this.selection.getBlock(current);
        var data = this.inspector.parse(current);
        var prev = block.previousElementSibling;
        var isStart = this.caret.isStart(block);

        // prev table
        if (isStart && prev && prev.tagName === 'TABLE')
        {
            e.preventDefault();
            this.caret.setEnd(prev);
            return true;
        }
        // figcaption
        else if (data.isFigcaption())
        {
            block = data.getFigcaption();
            isStart = this.caret.isStart(block);

            var $component = $R.dom(block).closest('.redactor-component');
            if (isStart && $component.length !== 0)
            {
                e.preventDefault();
                this.caret.setEnd($component);
                return true;
            }
        }
        // exit table
        else if (data.isTable() && isStart)
        {
            e.preventDefault();
            this.caret.setEnd(block.previousElementSibling);
            return true;
        }
        // component
        else if (!data.isComponentEditable() && data.isComponent() && !data.isComponentType('variable'))
        {
            var component = data.getComponent();
            if (!component.previousElementSibling)
            {
                e.preventDefault();
                this.component.clearActive();

                return this._exitPrevElement(e, data.getComponent());
            }
            else if (component.previousElementSibling)
            {
                e.preventDefault();
                this.component.clearActive();
                this.caret.setEnd(component.previousElementSibling);
                return true;
            }
        }
    },
    _isExitOnDownRight: function(e)
    {
        var $editor = this.editor.getElement();
        var current = this.selection.getCurrent();
        var data = this.inspector.parse(current);
        var isEndEditor = this.caret.isEnd();
        var block, isEnd;

        // table
        if (data.isTable())
        {
            if (isEnd || isEndEditor)
            {
                return this._exitNextElement(e, data.getComponent());
            }
        }
        // figcaption
        else if (data.isFigcaption())
        {
            block = data.getFigcaption();
            isEnd = this.caret.isEnd(block);

            if (isEnd || isEndEditor)
            {
                return this._exitNextElement(e, data.getComponent());
            }
        }
        // figure/code
        else if (data.isComponentType('code'))
        {
            var component = data.getComponent();
            var pre = $R.dom(data.getComponentCodeElement()).closest('pre');

            isEnd = this.caret.isEnd(block);

            var isNext = (pre && pre.get().nextElementSibling);
            if (isEnd && !isNext)
            {
                return this._exitNextElement(e, component);
            }
        }
        // pre & blockquote & dl
        else if (data.isPre() || data.isBlockquote() || data.isDl())
        {
            if (isEndEditor)
            {
                if (data.isPre()) return this._exitNextElement(e, data.getPre());
                else if (data.isBlockquote()) return this._exitNextElement(e, data.getBlockquote());
                else if (data.isDl()) return this._exitNextElement(e, data.getDl());
            }
        }
        // li
        else if (data.isList())
        {
            var $list = $R.dom(current).parents('ul, ol', $editor).last();
            isEnd = this.caret.isEnd($list);

            if (isEnd || isEndEditor)
            {
                return this._exitNextElement(e, $list.get());
            }
        }
        // component
        else if (data.isComponent() && !data.isComponentType('variable') && data.getTag() !== 'span')
        {
            this.component.clearActive();
            return this._exitNextElement(e, data.getComponent());
        }
    },
    _exitPrevElement: function(e, node)
    {
        e.preventDefault();

        if (node.previousElementSibling) this.caret.setEnd(node.previousElementSibling);
        else this.utils.createMarkupBefore(node);

        return true;
    },
    _exitNextElement: function(e, node)
    {
        e.preventDefault();

        if (node.nextElementSibling) this.caret.setStart(node.nextElementSibling);
        else this.utils.createMarkup(node);

        return true;
    },
    _selectComponent: function(e, caret, type)
    {
        var current = this.selection.getCurrent();
        var block = this.selection.getBlock(current);
        var sibling = this.utils.findSiblings(current, type);
        var siblingBlock = this.utils.findSiblings(block, type);

        if (sibling && this.caret['is' + caret](current))
        {
            this._selectComponentItem(e, sibling, caret);
        }
        else if (siblingBlock && this.caret['is' + caret](block))
        {
            this._selectComponentItem(e, siblingBlock, caret);
        }
    },
    _selectComponentItem: function(e, item, caret)
    {
        if (this.component.isNonEditable(item))
        {
            e.preventDefault();
            this.caret['set' + caret](item);
            return true;
        }
    }
});
$R.add('class', 'input.delete', {
    init: function(app, e, key)
    {
        this.app = app;
        this.opts = app.opts;
        this.caret = app.caret;
        this.utils = app.utils;
        this.editor = app.editor;
        this.marker = app.marker;
        this.keycodes = app.keycodes;
        this.component = app.component;
        this.inspector = app.inspector;
        this.selection = app.selection;

        // local
        this.key = key;

        // init
        this._init(e);
    },
    // private
    _init: function(e)
    {
        if (this._removeActiveComponent(e)) return;
        if (this._removeAllSelectedTable(e)) return;

        // is empty
        if (this.key === this.keycodes.BACKSPACE)
        {
            var $editor = this.editor.getElement();
            var html = this.utils.trimSpaces($editor.html());

            if (html === this.opts.emptyHtml)
            {
                e.preventDefault();
                return;
            }
        }

        // variable or non editable prev/next or selection
        if (this._detectVariableOrNonEditable() || this.selection.hasNonEditable())
        {
            e.preventDefault();
            return;
        }

        // collapsed
        if (this.selection.isCollapsed())
        {
            // next / prev
            if (this.key === this.keycodes.BACKSPACE) this._traverseBackspace(e);
            else if (this.key === this.keycodes.DELETE) this._traverseDelete(e);
        }

        if (this.key === this.keycodes.BACKSPACE) this.utils.trimInvisibleChars('left');

        this._removeUnwantedStyles();
        this._removeEmptySpans();
        this._removeSpanTagsInHeadings();
        this._removeInlineTagsInPre();
    },
    _detectVariableOrNonEditable: function()
    {
        var block = this.selection.getBlock();
        var isBlockStart = this.caret.isStart(block);
        var isBlockEnd = this.caret.isEnd(block);
        var el;

        // backspace
        if (this.key === this.keycodes.BACKSPACE && isBlockStart)
        {
            el = block.previousSibling;
            if (this._isNonEditable(el)) return true;
        }
        // delete
        else if (this.key === this.keycodes.DELETE && isBlockEnd)
        {
            el = block.nextSibling;
            if (this._isNonEditable(el)) return true;
        }

        var current = this.selection.getCurrent();
        var isCurrentStart = this.caret.isStart(current);
        var isCurrentEnd = this.caret.isEnd(current);
        var isCurrentStartSpace = (this.selection.getTextBeforeCaret().trim() === '');
        var isCurrentEndSpace = (this.selection.getTextAfterCaret().trim() === '');

        // backspace
        if (this.key === this.keycodes.BACKSPACE && isCurrentStart && !isCurrentStartSpace)
        {
            el = current.previousSibling;
            if (this._isVariable(el))
            {
                this.caret.setEnd(el);
                return true;
            }
            else if (this._isNonEditable(el)) return true;
        }
        // delete
        else if (this.key === this.keycodes.DELETE && isCurrentEnd && !isCurrentEndSpace)
        {
            el = current.nextSibling;
            if (this._isVariable(el))
            {
                this.caret.setStart(el);
                return true;
            }
            else if (this._isNonEditable(el)) return true;
        }
    },
    _isVariable: function(node)
    {
        return ($R.dom(node).closest('[data-redactor-type="variable"]').length !== 0);
    },
    _isNonEditable: function(node)
    {
        return ($R.dom(node).closest('.non-editable').length !== 0);
    },
    _getBlock: function()
    {
        var $editor = this.editor.getElement();
        var block = this.selection.getBlock();
        var data = this.inspector.parse(block);

        block = (data.isList()) ? $R.dom(block).parents('ul, ol', $editor).last().get() : block;
        block = (data.isDl()) ? data.getDl() : block;
        block = (data.isTable()) ? data.getTable() : block;

        return block;
    },
    _traverseDelete: function(e)
    {
        var current = this.selection.getCurrent();
        var data = this.inspector.parse(current);
        var block, isEnd, $next;

        // figcaption
        if (data.isFigcaption())
        {
            block = data.getFigcaption();
            isEnd = this.caret.isEnd(block);

            if (isEnd)
            {
                e.preventDefault();
                return;
            }
        }
        // figure/code
        else if (data.isComponentType('code'))
        {
            block = data.getComponent();
            isEnd = this.caret.isEnd(block);

            if (isEnd)
            {
                e.preventDefault();
                return;
            }
        }

        // next
        block = this._getBlock();
        var next = this.utils.findSiblings(block, 'next');
        if (!next) return;

        isEnd = this.caret.isEnd(block);
        var dataNext = this.inspector.parse(next);
        var isNextBlock = (next.tagName === 'P' || next.tagName === 'DIV');

        // figure/code or table
        if (isEnd && dataNext.isComponentEditable())
        {
            e.preventDefault();
            this.component.remove(next, false);
            return;
        }
        // component
        else if (isEnd && dataNext.isComponent())
        {
            e.preventDefault();

            // select component
            this.caret.setStart(next);

            // remove current if empty
            if (this.utils.isEmptyHtml(block.innerHTML))
            {
                $R.dom(block).remove();
            }

            return;
        }
        // combine list
        else if (isEnd && dataNext.isList())
        {
            var $currentList = $R.dom(block);
            $next = $R.dom(next);

            // current list
            if (data.isList())
            {
                e.preventDefault();

                $currentList.append($next);
                $next.unwrap();

                return;
            }
            else
            {
                var $first = $next.children('li').first();
                var $lists = $first.find('ul, ol');

                if ($lists.length !== 0)
                {
                    e.preventDefault();

                    $next.prepend($lists);
                    $lists.unwrap();

                    $currentList.append($first);
                    $first.unwrap();

                    return;
                }
            }
        }
        // block
        else if (isEnd && !data.isList() && !data.isTable() && isNextBlock && !this.utils.isEmptyHtml(block.innerHTML))
        {
            e.preventDefault();

            var $current = $R.dom(block);
            $next = $R.dom(next);

            $current.append($next);
            $next.unwrap();

            return;
        }
    },
    _traverseBackspace: function(e)
    {
        var current = this.selection.getCurrent();
        var data = this.inspector.parse(current);
        var block, isStart, $prev, $currentList;

        // figcaption
        if (data.isFigcaption())
        {
            block = data.getFigcaption();
            isStart = this.caret.isStart(block);

            if (isStart)
            {
                e.preventDefault();
                return;
            }
        }
        // figure/code
        else if (data.isComponentType('code'))
        {
            block = data.getComponent();
            isStart = this.caret.isStart(block);

            if (isStart && block.previousElementSibling)
            {
                e.preventDefault();
                this.caret.setEnd(block.previousElementSibling);
                return true;
            }
        }

        // prev
        block = this._getBlock();
        var prev = this.utils.findSiblings(block, 'prev');

        if (!prev)
        {
            setTimeout(this._replaceBlock.bind(this), 1);
            return;
        }

        isStart = this.caret.isStart(block);
        var dataPrev = this.inspector.parse(prev);
        var isPrevBlock = (prev.tagName === 'P' || prev.tagName === 'DIV');

        // figure/code or table
        if (isStart && dataPrev.isComponentEditable())
        {
            e.preventDefault();
            this.component.remove(prev, false);
            return;
        }
        // component
        else if (isStart && dataPrev.isComponent())
        {
            e.preventDefault();

            // select component
            this.caret.setStart(prev);

            // remove current if empty
            if (this.utils.isEmptyHtml(block.innerHTML))
            {
                $R.dom(block).remove();
            }

            return;
        }
        // lists
        else if (isStart && data.isList())
        {
            e.preventDefault();

            $currentList = $R.dom(block);
            $prev = $R.dom(prev);

            if (dataPrev.isList())
            {
                $currentList.children('li').first().prepend(this.marker.build('start'));
                $prev.append($currentList);
                $currentList.unwrap();

                this.selection.restoreMarkers();
            }
            else
            {
                var $first = $currentList.children('li').first();
                var first = $first.get();
                var $lists = $first.find('ul, ol');

                var $newnode = this.utils.replaceToTag(first, this.opts.markup);
                if (this.opts.breakline) $newnode.attr('data-redactor-tag', 'br');
                $currentList.before($newnode);
                this.caret.setStart($newnode);

                if ($lists.length !== 0)
                {
                    $currentList.prepend($lists);
                    $lists.unwrap();
                }
            }

            return;
        }
        // block
        else if (isStart && isPrevBlock)
        {
            e.preventDefault();

            var textNode = this.utils.createInvisibleChar();
            var $current = $R.dom(block);
            $prev = $R.dom(prev);

            this.caret.setEnd($prev);

            $current.prepend(textNode);
            $prev.append($current.contents());
            $current.remove();

            return;
        }
    },
    _replaceBlock: function()
    {
        var block = this.selection.getBlock();
        var $block = $R.dom(block);

        if (this.opts.markup === 'p' && block && this._isNeedToReplaceBlock(block))
        {
            var markup = document.createElement(this.opts.markup);

            $block.replaceWith(markup);
            this.caret.setStart(markup);
        }

        if (this.opts.breakline && block && block.tagName === 'DIV')
        {
            $block.attr('data-redactor-tag', 'br');
        }
    },
    _isNeedToReplaceBlock: function(block)
    {
        return (block.tagName === 'DIV' && this.utils.isEmptyHtml(block.innerHTML));
    },
    _removeActiveComponent: function(e)
    {
        var current = this.selection.getCurrent();
        var data = this.inspector.parse(current);
        var component = data.getComponent();
        if (data.isComponent() && this.component.isActive(component))
        {
            e.preventDefault();
            this.component.remove(component);
            return true;
        }
    },
    _removeAllSelectedTable: function(e)
    {
        var current = this.selection.getCurrent();
        var data = this.inspector.parse(current);
        var table = data.getTable();
        if (table && this.selection.isAll(table))
        {
            e.preventDefault();
            this.component.remove(table);
            return true;
        }
    },
    _removeUnwantedStyles: function()
    {
        var $editor = this.editor.getElement();

        setTimeout(function()
        {
            var $tags = $editor.find('*[style]');
            $tags.not('img, figure, iframe, [data-redactor-style-cache], [data-redactor-span]').removeAttr('style');

        }, 0);
    },
    _removeEmptySpans: function()
    {
        var $editor = this.editor.getElement();

        setTimeout(function()
        {
            $editor.find('span').each(function(node)
            {
                if (node.attributes.length === 0)
                {
                    $R.dom(node).replaceWith(node.childNodes);
                }
            });

        }, 0);
    },
    _removeSpanTagsInHeadings: function()
    {
        var $editor = this.editor.getElement();

        setTimeout(function()
        {
            $editor.find('h1, h2, h3, h4, h5, h6').each(function(node)
            {
                var $node = $R.dom(node);
                if ($node.closest('figure').length === 0)
                {
                    $node.find('span').not('.redactor-component, .non-editable, .redactor-selection-marker, [data-redactor-style-cache], [data-redactor-span]').unwrap();
                }
            });

        }, 1);
    },
    _removeInlineTagsInPre: function()
    {
        var $editor = this.editor.getElement();
        var tags = this.opts.inlineTags;

        setTimeout(function()
        {
            $editor.find('pre').each(function(node)
            {
                var $node = $R.dom(node);
                if ($node.closest('figure').length === 0)
                {
                    $node.find(tags.join(',')).not('code, .redactor-selection-marker').unwrap();
                }
            });

        }, 1);
    }
});
$R.add('class', 'input.enter', {
    init: function(app, e)
    {
        this.app = app;
        this.opts = app.opts;
        this.utils = app.utils;
        this.caret = app.caret;
        this.editor = app.editor;
        this.insertion = app.insertion;
        this.selection = app.selection;
        this.inspector = app.inspector;

        // init
        this._init(e);
    },
    // private
    _init: function(e)
    {
        // turn off
        if (!this.opts.enterKey) return this._disable(e);

        // callback
        var stop = this.app.broadcast('enter', e);
        if (stop === false) return e.preventDefault();

        // has non-editable
        if (this.selection.hasNonEditable())
        {
            e.preventDefault();
            return;
        }

        // shift enter
        if (e.ctrlKey || e.shiftKey) return this._insertBreak(e);

        // enter & exit
        if (this._isExit(e)) return;

        // traverse
        this._traverse(e);
    },
    _disable: function(e)
    {
        e.preventDefault();
        var range = this.selection.getRange();
        if (range && !range.collapsed) range.deleteContents();
    },
    _insertBreak: function(e)
    {
        e.preventDefault();

        var current = this.selection.getCurrent();
        var data = this.inspector.parse(current);

        if ((data.isComponent() && !data.isComponentEditable()) || data.isCode()) return;
        else if (data.isPre()) this.insertion.insertNewline();
        else this.insertion.insertBreakLine();
    },
    _isExit: function(e)
    {
        var $editor = this.editor.getElement();
        var block = this.selection.getBlock();
        var data = this.inspector.parse(block);
        var isEnd = this.caret.isEnd(block);
        var current = this.selection.getCurrent();
        var prev = current.previousSibling;

        // blockquote
        if (data.isBlockquote())
        {
            var isParagraphExit = (isEnd && this._isExitableBlock(block, 'P'));
            var isBreaklineExit = (isEnd && this._isExitableDblBreak(prev));

            if (isParagraphExit || isBreaklineExit)
            {
                return this._exitFromElement(e, ((isBreaklineExit) ? prev : block), data.getBlockquote());
            }
        }
        // pre
        else if (!data.isComponentType('code') && data.isPre())
        {
            if (isEnd)
            {
                var html = block.innerHTML;
                html = this.utils.removeInvisibleChars(html);
                if (html.match(/(\n\n\n)$/) !== null)
                {
                    $R.dom(prev.previousSibling.previousSibling).remove();
                    return this._exitFromElement(e, prev, block);
                }
            }
        }
        // dl
        else if (data.isDl())
        {
            if (isEnd && this._isExitableBlock(block, 'DT'))
            {
                return this._exitFromElement(e, block, data.getDl());
            }
        }
        // li
        else if (data.isList())
        {
            var list = $R.dom(current).parents('ul, ol', $editor).last();

            isEnd = this.caret.isEnd(list);
            if (isEnd && this._isExitableBlock(block, 'LI'))
            {
                return this._exitFromElement(e, block, list);
            }
        }
        else if (data.isComponent() && data.isComponentActive() && !data.isFigcaption() && !data.isComponentEditable())
        {
            return this._exitFromElement(e, false, data.getComponent());
        }
    },
    _isExitableDblBreak: function(prev)
    {
        var next = (prev) ? prev.nextSibling : false;
        if (next)
        {
            var text = this.utils.removeInvisibleChars(next.textContent);

            return (next.nodeType === 3 && text.trim() === '');
        }
    },
    _isExitableBlock: function(block, tag)
    {
        return (block && block.tagName === tag && this.utils.isEmptyHtml(block.innerHTML));
    },
    _exitFromElement: function(e, prev, el)
    {
        e.preventDefault();
        if (prev) $R.dom(prev).remove();
        this.utils.createMarkup(el);

        return true;
    },
    _exitNextElement: function(e, node)
    {
        e.preventDefault();

        if (node.nextSibling) this.caret.setStart(node.nextSibling);
        else this.utils.createMarkup(node);

        return true;
    },
    _traverse: function(e)
    {
        var current = this.selection.getCurrent();
        var isText = this.selection.isText();
        var block = this.selection.getBlock();
        var data = this.inspector.parse(current);
        var blockTag = (block) ? block.tagName.toLowerCase() : false;

        // pre
        if (data.isPre())
        {
            e.preventDefault();
            return this.insertion.insertNewline();
        }
        // blockquote
        else if (data.isBlockquote())
        {
            block = this.selection.getBlock(current);
            if (block && block.tagName === 'BLOCKQUOTE')
            {
                e.preventDefault();
                return this.insertion.insertBreakLine();
            }
        }
        // figcaption
        else if (data.isFigcaption())
        {
            block = data.getFigcaption();
            var isEnd = this.caret.isEnd(block);
            var isEndEditor = this.caret.isEnd();
            if (isEnd || isEndEditor)
            {
                return this._exitNextElement(e, data.getComponent());
            }
            else
            {
                e.preventDefault();
                return;
            }
        }
        // dl
        else if (data.isDl())
        {
            e.preventDefault();
            return this._traverseDl(current);
        }
        // text
        else if (isText || (this.opts.breakline && blockTag === 'div'))
        {
            e.preventDefault();
            return this.insertion.insertBreakLine();
        }
        // div / p
        else
        {
            setTimeout(this._replaceBlock.bind(this), 1);
            return;
        }
    },
    _traverseDl: function(current)
    {
        var block = this.selection.getBlock(current);
        var data = this.inspector.parse(block);
        var tag = data.getTag();
        var $el = $R.dom(block);
        var next = $el.get().nextSibling || false;
        var $next = $R.dom(next);
        var nextDd = (next && $next.is('dd'));
        var nextDt = (next && $next.is('dt'));
        var isEnd = this.caret.isEnd(block);

        if (tag === 'dt' && !nextDd && isEnd)
        {
            var dd = document.createElement('dd');
            $el.after(dd);

            this.caret.setStart(dd);
            return;
        }
        else if (tag === 'dd' && !nextDt && isEnd)
        {
            var dt = document.createElement('dt');
            $el.after(dt);

            this.caret.setStart(dt);
            return;
        }

        return this.insertion.insertBreakLine();
    },
    _replaceBlock: function()
    {
        var block = this.selection.getBlock();
        var $block = $R.dom(block);

        if (this.opts.markup === 'p' && block && this._isNeedToReplaceBlock(block))
        {
            var markup = document.createElement(this.opts.markup);

            $block.replaceWith(markup);
            this.caret.setStart(markup);
        }
        else
        {
            if (block)
            {
                if (this.utils.isEmptyHtml(block.innerHTML))
                {
                    this._clearBlock($block, block);
                }
                else
                {
                    var first = this.utils.getFirstNode(block);
                    if (first && first.tagName === 'BR')
                    {
                        $R.dom(first).remove();
                        this.caret.setStart(block);
                    }
                }
            }
        }

        if (block && this._isNeedToCleanBlockStyle(block) && this.opts.cleanOnEnter)
        {
            $block.removeAttr('class style');
        }

        if (this.opts.breakline && block && block.tagName === 'DIV')
        {
            $block.attr('data-redactor-tag', 'br');
        }
    },
    _clearBlock: function($block, block)
    {
        if (this.opts.cleanInlineOnEnter || block.innerHTML === '<br>')
        {
            $block.html('');
        }

        this.caret.setStart(block);
    },
    _isNeedToReplaceBlock: function(block)
    {
        return (block.tagName === 'DIV' && this.utils.isEmptyHtml(block.innerHTML));
    },
    _isNeedToCleanBlockStyle: function(block)
    {
        return (block.tagName === 'P' && this.utils.isEmptyHtml(block.innerHTML));
    }
});
$R.add('class', 'input.paste', {
    init: function(app, e, dataTransfer, html, point)
    {
        this.app = app;
        this.opts = app.opts;
        this.editor = app.editor;
        this.cleaner = app.cleaner;
        this.container = app.container;
        this.inspector = app.inspector;
        this.insertion = app.insertion;
        this.selection = app.selection;
        this.autoparser = app.autoparser;

        // local
        this.pasteHtml = html;
        this.pointInserted = point;
        this.dataTransfer = dataTransfer;

        // init
        this._init(e);
    },
    // private
    _init: function(e)
    {
        var clipboard = this.dataTransfer || e.clipboardData;
        var current = this.selection.getCurrent();
        var dataCurrent = this.inspector.parse(current);

        this.dropPasted = this.dataTransfer;
        this.isRawCode = (dataCurrent.isPre() || dataCurrent.isCode());

        this.editor.enablePasting();
        this.editor.saveScroll();

        if (!this.dropPasted)
        {
            this.selection.saveMarkers();
        }

        if (this.isRawCode || !clipboard)
        {
            var text;
            if (!this.isRawCode && !clipboard && window.clipboardData)
            {
                text = window.clipboardData.getData("text");
            }
            else
            {
                text = clipboard.getData("text/plain");
            }

            e.preventDefault();
            this._insert(e, text);
            return;
        }
        else if (this.pasteHtml)
        {
            e.preventDefault();
            this._insert(e, this.pasteHtml);
        }
        else
        {
            // html / text
            var url = clipboard.getData('URL');
            var html = (this._isPlainText(clipboard)) ? clipboard.getData("text/plain") : clipboard.getData("text/html");

            // safari anchor links
            html = (!url || url === '') ? html : url;

            // file
            if (clipboard.files !== null && clipboard.files.length > 0 && html === '')
            {
                var files = [];
                for (var i = 0; i < clipboard.files.length; i++)
                {
                    var file = clipboard.files[i] || clipboard.items[i].getAsFile();
                    if (file) files.push(file);
                }

                if (files.length > 0)
                {
                    e.preventDefault();
                    this._insertFiles(e, files);
                    return;
                }
            }


            e.preventDefault();
            this._insert(e, html);
        }
    },
    _isPlainText: function(clipboard)
    {
        var text = clipboard.getData("text/plain");
        var html = clipboard.getData("text/html");

        if (text && html)
        {
            var element = document.createElement("div");
            element.innerHTML = html;

            if (element.textContent === text)
            {
                return !element.querySelector(":not(meta)");
            }
        }
        else
        {
            return (text !== null);
        }
    },
    _restoreSelection: function()
    {
        this.editor.restoreScroll();
        this.editor.disablePasting();
        if (!this.dropPasted)
        {
            this.selection.restoreMarkers();
        }
    },
    _insert: function(e, html)
    {
        // pasteBefore callback
        var returned = this.app.broadcast('pasteBefore', html);
        html = (returned === undefined) ? html : returned;

        // clean
        html = (this.isRawCode) ? html : this.cleaner.paste(html);
        html = (this.isRawCode) ? this.cleaner.encodePhpCode(html) : html;

        // paste callback
        returned = this.app.broadcast('pasting', html);
        html = (returned === undefined) ? html : returned;

        this._restoreSelection();

        // stop input
        if (!this.opts.input) return;

        // autoparse
        if (this.opts.autoparse && this.opts.autoparsePaste)
        {
            html = this.autoparser.parse(html);
        }

        var nodes = (this.dropPasted) ? this.insertion.insertToPoint(e, html, this.pointInserted) : this.insertion.insertHtml(html);

        // pasted callback
        this.app.broadcast('pasted', nodes);
        this.app.broadcast('autoparseobserve');
    },
    _insertFiles: function(e, files)
    {
        this._restoreSelection();

        // drop or clipboard
        var isImage = (this.opts.imageTypes.indexOf(files[0].type) !== -1);
        var isClipboard = (typeof this.dropPasted === 'undefined');

        if (isImage) this.app.broadcast('dropimage', e, files, isClipboard);
        else this.app.broadcast('dropfile', e, files, isClipboard);
    }
});
$R.add('class', 'input.shortcode', {
    init: function(app, e, key)
    {
        this.app = app;
        this.opts = app.opts;
        this.utils = app.utils;
        this.marker = app.marker;
        this.keycodes = app.keycodes;
        this.selection = app.selection;

        // local
        this.worked = false;

        // init
        if (key === this.keycodes.SPACE) this._init();
    },
    // public
    is: function()
    {
        return this.worked;
    },
    // private
    _init: function()
    {
        var current = this.selection.getCurrent();
        if (current && current.nodeType === 3)
        {
            var text = this.utils.removeInvisibleChars(current.textContent);
            var shortcodes = this.opts.shortcodes;
            for (var name in shortcodes)
            {
                var re = new RegExp('^' + this.utils.escapeRegExp(name));
                var match = text.match(re);
                if (match !== null)
                {
                    if (typeof shortcodes[name].format !== 'undefined')
                    {
                        return this._format(shortcodes[name].format, current, re);
                    }
                }
            }
        }
    },
    _format: function(tag, current, re)
    {
        var marker = this.marker.insert('start');
        current = marker.previousSibling;

        var text = current.textContent;
        text = this.utils.trimSpaces(text);
        text = text.replace(re, '');
        current.textContent = text;

        var api = (tag === 'ul' || tag === 'ol') ? 'module.list.toggle' : 'module.block.format';

        this.app.api(api, tag);
        this.selection.restoreMarkers();

        this.worked = true;
    }
});
$R.add('class', 'input.shortcut', {
    init: function(app, e)
    {
        this.app = app;
        this.opts = app.opts;

        // local
        this.worked = false;

        // based on https://github.com/jeresig/jquery.hotkeys
        this.hotkeys = {
            8: "backspace", 9: "tab", 10: "return", 13: "return", 16: "shift", 17: "ctrl", 18: "alt", 19: "pause",
            20: "capslock", 27: "esc", 32: "space", 33: "pageup", 34: "pagedown", 35: "end", 36: "home",
            37: "left", 38: "up", 39: "right", 40: "down", 45: "insert", 46: "del", 59: ";", 61: "=",
            96: "0", 97: "1", 98: "2", 99: "3", 100: "4", 101: "5", 102: "6", 103: "7",
            104: "8", 105: "9", 106: "*", 107: "+", 109: "-", 110: ".", 111 : "/",
            112: "f1", 113: "f2", 114: "f3", 115: "f4", 116: "f5", 117: "f6", 118: "f7", 119: "f8",
            120: "f9", 121: "f10", 122: "f11", 123: "f12", 144: "numlock", 145: "scroll", 173: "-", 186: ";", 187: "=",
            188: ",", 189: "-", 190: ".", 191: "/", 192: "`", 219: "[", 220: "\\", 221: "]", 222: "'"
        };

        this.hotkeysShiftNums = {
            "`": "~", "1": "!", "2": "@", "3": "#", "4": "$", "5": "%", "6": "^", "7": "&",
            "8": "*", "9": "(", "0": ")", "-": "_", "=": "+", ";": ": ", "'": "\"", ",": "<",
            ".": ">",  "/": "?",  "\\": "|"
        };

        // init
        this._init(e);
    },
    // public
    is: function()
    {
        return this.worked;
    },
    // private
    _init: function(e)
    {
        // disable browser's hot keys for bold and italic if shortcuts off
        if (this.opts.shortcuts === false)
        {
            if ((e.ctrlKey || e.metaKey) && (e.which === 66 || e.which === 73)) e.preventDefault();
            return;
        }

        // build
        for (var key in this.opts.shortcuts)
        {
            this._build(e, key, this.opts.shortcuts[key]);
        }
    },
    _build: function(e, str, command)
    {
        var keys = str.split(',');
        var len = keys.length;
        for (var i = 0; i < len; i++)
        {
            if (typeof keys[i] === 'string')
            {
                this._handler(e, keys[i].trim(), command);
            }
        }
    },
    _handler: function(e, keys, command)
    {
        keys = keys.toLowerCase().split(" ");

        var special = this.hotkeys[e.keyCode];
        var character = String.fromCharCode(e.which).toLowerCase();
        var modif = "", possible = {};
        var cmdKeys = ["meta", "ctrl", "alt", "shift"];

        for (var i = 0; i < cmdKeys.length; i++)
        {
            var specialKey = cmdKeys[i];
            if (e[specialKey + 'Key'] && special !== specialKey)
            {
                modif += specialKey + '+';
            }
        }

        if (special) possible[modif + special] = true;
        if (character)
        {
            possible[modif + character] = true;
            possible[modif + this.hotkeysShiftNums[character]] = true;

            // "$" can be triggered as "Shift+4" or "Shift+$" or just "$"
            if (modif === "shift+")
            {
                possible[this.hotkeysShiftNums[character]] = true;
            }
        }

        var len = keys.length;
        for (var i = 0; i < len; i++)
        {
            if (possible[keys[i]])
            {

                e.preventDefault();
                this.worked = true;

                if (command.message)
                {
                    this.app.broadcast(command.message, command.args);
                    this.app.broadcast('buffer.trigger');
                }
                else if (command.api)
                {
                    this.app.api(command.api, command.args);
                    this.app.broadcast('buffer.trigger');
                }

                return;
            }
        }
    }
});
$R.add('class', 'input.space', {
    init: function(app, e, key, lastShiftKey)
    {
        this.app = app;
        this.keycodes = app.keycodes;
        this.insertion = app.insertion;
        this.selection = app.selection;

        // local
        this.key = key;
        this.lastShiftKey = lastShiftKey;

        // init
        this._init(e);
    },
    // private
    _init: function(e)
    {
        // has non-editable
        if (this.selection.hasNonEditable())
        {
            e.preventDefault();
            return;
        }

        // shift/ctrl + space
        if (!this.lastShiftKey && this.key === this.keycodes.SPACE && (e.ctrlKey || e.shiftKey) && !e.metaKey)
        {
            e.preventDefault();
            this.insertion.insertChar('&nbsp;');
            return;
        }
    }
});
$R.add('class', 'input.tab', {
    init: function(app, e)
    {
        this.app = app;
        this.opts = app.opts;
        this.inspector = app.inspector;
        this.insertion = app.insertion;
        this.selection = app.selection;

        // init
        this._init(e);
    },
    // private
    _init: function(e)
    {
        // turn off tab
        if (!this.opts.tabKey) return;

        // callback
        var stop = this.app.broadcast('tab', e);
        if (stop === false) return e.preventDefault();

        // traverse
        this._traverse(e);
    },
    _traverse: function(e)
    {
        var current = this.selection.getCurrent();
        var data = this.inspector.parse(current);

        // hard tab
        if (!data.isComponent() && e.shiftKey)
        {
            return this._insertHardTab(e, 4);
        }

        // list
        if (data.isList())
        {
            e.preventDefault();
            return this.app.api('module.list.indent');
        }
        // pre
        if (data.isPre() || (data.isComponentType('code') && !data.isFigcaption()))
        {
            return this._tabCode(e);
        }

        // tab as spaces
        if (this.opts.tabAsSpaces !== false)
        {
            return this._insertHardTab(e, this.opts.tabAsSpaces);
        }
    },
    _insertHardTab: function(e, num)
    {
        e.preventDefault();
        var node = document.createTextNode(Array(num + 1).join('\u00a0'));
        return this.insertion.insertNode(node, 'end');
    },
    _tabCode: function(e)
    {
        e.preventDefault();

        var node = (this.opts.preSpaces) ? document.createTextNode(Array(this.opts.preSpaces + 1).join('\u00a0')) : document.createTextNode('\t');

        return this.insertion.insertNode(node, 'end');
    }
});
$R.add('module', 'upload', {
    init: function(app)
    {
        this.app = app;
        this.opts = app.opts;
        this.lang = app.lang;
        this.utils = app.utils;
        this.editor = app.editor;
        this.progress = app.progress;

        // local
        this.defaults = {
            event: false,
            element: false,
            name: false,
            files: false,
            url: false,
            data: false,
            paramName: false
        };
    },
    // public
    build: function(options)
    {
        this.p = $R.extend(this.defaults, options);
        this.$el = $R.dom(this.p.element);

        if (this.$el.get().tagName === 'INPUT') this._buildInput();
        else                                    this._buildBox();
    },
    send: function(options)
    {
        this.p = $R.extend(this.defaults, options);
        this.$uploadbox = this.editor.getElement();
        this._send(this.p.event, this.p.files);
    },
    complete: function(response, e)
    {
        this._complete(response, e);
    },

    // private
    _buildInput: function()
    {
        this.box = false;
        this.prefix = '';

        this.$uploadbox = $R.dom('<div class="upload-redactor-box" />');

        this.$el.hide();
        this.$el.after(this.$uploadbox);

        if (this.opts.multipleUpload) this.$el.attr('multiple', 'multiple');
        else this.$el.removeAttr('multiple');

        this._buildPlaceholder();
        this._buildEvents();
    },
    _buildBox: function()
    {
        this.box = true;
        this.prefix = 'box-';

        this.$uploadbox = this.$el;
        this.$uploadbox.attr('ondragstart', 'return false;');

        // events
        this.$uploadbox.on('drop.redactor.upload', this._onDropBox.bind(this));
        this.$uploadbox.on('dragover.redactor.upload', this._onDragOver.bind(this));
        this.$uploadbox.on('dragleave.redactor.upload', this._onDragLeave.bind(this));
    },
    _buildPlaceholder: function()
    {
        this.$placeholder = $R.dom('<div class="upload-redactor-placeholder" />');
        this.$placeholder.html(this.lang.get('upload-label'));
        this.$uploadbox.append(this.$placeholder);
    },
    _buildEvents: function()
    {
        this.$el.on('change.redactor.upload', this._onChange.bind(this));
        this.$uploadbox.on('click.redactor.upload', this._onClick.bind(this));
        this.$uploadbox.on('drop.redactor.upload', this._onDrop.bind(this));
        this.$uploadbox.on('dragover.redactor.upload', this._onDragOver.bind(this));
        this.$uploadbox.on('dragleave.redactor.upload', this._onDragLeave.bind(this));
    },
    _onClick: function(e)
    {
        e.preventDefault();
        this.$el.click();
    },
    _onChange: function(e)
    {
        this._send(e, this.$el.get().files);
    },
    _onDrop: function(e)
    {
        e.preventDefault();

        this._clear();
        this._setStatusDrop();
        this._send(e);
    },
    _onDragOver: function(e)
    {
        e.preventDefault();
        this._setStatusHover();

        return false;
    },
    _onDragLeave: function(e)
    {
        e.preventDefault();
        this._removeStatusHover();

        return false;
    },
    _onDropBox: function(e)
    {
        e.preventDefault();

        this._clear();
        this._setStatusDrop();
        this._send(e);
    },
    _removeStatusHover: function()
    {
        this.$uploadbox.removeClass('upload-redactor-' + this.prefix + 'hover');
    },
    _setStatusDrop: function()
    {
        this.$uploadbox.addClass('upload-redactor-' + this.prefix + 'drop');
    },
    _setStatusHover: function()
    {
        this.$uploadbox.addClass('upload-redactor-' + this.prefix + 'hover');
    },
    _setStatusError: function()
    {
        this.$uploadbox.addClass('upload-redactor-' + this.prefix + 'error');
    },
    _setStatusSuccess: function()
    {
        this.$uploadbox.addClass('upload-redactor-' + this.prefix + 'success');
    },
    _clear: function()
    {
        var classes = ['drop', 'hover', 'error', 'success'];
        for (var i = 0; i < classes.length; i++)
        {
            this.$uploadbox.removeClass('upload-redactor-' + this.prefix + classes[i]);
        }

        this.$uploadbox.removeAttr('ondragstart');
    },
    _send: function(e, files)
    {
        e = e.originalEvent || e;

        files = (files) ? files : e.dataTransfer.files;

        var data = new FormData();
        var name = this._getUploadParam();

        data = this._buildData(name, files, data);
        data = this.utils.extendData(data, this.p.data);

        var stop = this.app.broadcast('upload.start', e, data, files);
        if (stop !== false)
        {
            this._sendData(data, files, e);
        }
    },
    _sendData: function(data, files, e)
    {
        this.progress.show();
        if (typeof this.p.url === 'function')
        {
            var res = this.p.url(data, files, e, this);
            if (!(res instanceof Promise))
            {
                this._complete(res, e);
            }
        }
        else
        {
            $R.ajax.post({
                url: this.p.url,
                data: data,
                before: function(xhr)
                {
                    return this.app.broadcast('upload.beforeSend', xhr);

                }.bind(this),
                success: function(response)
                {
                    this._complete(response, e);
                }.bind(this)
            });
        }
    },
    _getUploadParam: function()
    {
        return (this.p.paramName) ? this.p.paramName : 'file';
    },
    _buildData: function(name, files, data)
    {
        if (files.length === 1)
        {
            data.append(name + '[]', files[0]);
        }
        else if (files.length > 1 && this.opts.multipleUpload !== false)
        {
            for (var i = 0; i < files.length; i++)
            {
                data.append(name + '[]', files[i]);
            }
        }

        return data;
    },
    _complete: function(response, e)
    {
        this._clear();
        this.progress.hide();

        if (response && response.error)
        {
            this._setStatusError();

            this.app.broadcast('upload.' + this.p.name + '.error', response, e);
            this.app.broadcast('upload.error', response);
        }
        else
        {
            this._setStatusSuccess();

            this.app.broadcast('upload.' + this.p.name + '.complete', response, e);
            this.app.broadcast('upload.complete', response);

            setTimeout(this._clear.bind(this), 500);
        }
    }
});
$R.add('class', 'code.component', {
    mixins: ['dom', 'component'],
    init: function(app, el)
    {
        this.app = app;

        // init
        return (el && el.cmnt !== undefined) ? el : this._init(el);
    },

    // private
   _init: function(el)
    {
        var $pre;
        if (typeof el !== 'undefined')
        {
            var $node = $R.dom(el);
            var $wrapper = $node.closest('figure');
            if ($wrapper.length !== 0)
            {
                this.parse($wrapper);
            }
            else
            {
                this.parse('<figure>');
                this.append(el);
            }

            $pre = this.find('pre code, pre').last();
        }
        else
        {
            $pre = $R.dom('<pre>');

            this.parse('<figure>');
            this.append($pre);
        }

        this._initElement($pre);
        this._initWrapper();
    },
    _initElement: function($pre)
    {
        $pre.attr({
            'tabindex': '-1',
            'contenteditable': true
        });
    },
    _initWrapper: function()
    {
        this.addClass('redactor-component');
        this.attr({
            'data-redactor-type': 'code',
            'tabindex': '-1',
            'contenteditable': false
        });
    }
});
$R.add('module', 'form', {
    init: function(app)
    {
        this.app = app;
        this.lang = app.lang;
        this.component = app.component;
        this.inspector = app.inspector;
    },
    // messages
    onform: {
        remove: function(node)
        {
            this._remove(node);
        }
    },
    oncontextbar: function(e, contextbar)
    {
        var data = this.inspector.parse(e.target);
        if (data.isComponentType('form'))
        {
            var node = data.getComponent();
            var buttons = {
                "remove": {
                    title: this.lang.get('delete'),
                    api: 'module.form.remove',
                    args: node
                }
            };

            contextbar.set(e, node, buttons, 'top');
        }

    },

    // private
    _remove: function(node)
    {
        this.component.remove(node);
    }
});
$R.add('class', 'form.component', {
    mixins: ['dom', 'component'],
    init: function(app, el)
    {
        this.app = app;
        this.utils = app.utils;

        // init
        return (el && el.cmnt !== undefined) ? el : this._init(el);
    },
    // private
    _init: function(el)
    {
        if (typeof el !== 'undefined')
        {
            var $node = $R.dom(el);
            var $wrapper = $node.closest('form');
            if ($wrapper.length !== 0)
            {
                var $figure = this.utils.replaceToTag(el, 'figure');
                this.parse($figure);
            }
            else
            {
                this.parse('<figure>');
                this.append(el);
            }
        }
        else
        {
            this.parse('<figure>');
        }

        this._initWrapper();
    },
    _initWrapper: function()
    {
        this.addClass('redactor-component');
        this.attr({
            'data-redactor-type': 'form',
            'tabindex': '-1',
            'contenteditable': false
        });
    }
});
$R.add('module', 'image', {
    modals: {
        'image':
            '<div class="redactor-modal-tab" data-title="## upload ##"><form action=""> \
                <input type="file" name="file"> \
            </form></div>',
        'imageedit':
            '<div class="redactor-modal-group"> \
                <div id="redactor-modal-image-preview" class="redactor-modal-side"></div> \
                <form action="" class="redactor-modal-area"> \
                    <div class="form-item"> \
                        <label for="modal-image-title"> ## title ##</label> \
                        <input type="text" id="modal-image-title" name="title" /> \
                    </div> \
                    <div class="form-item form-item-caption"> \
                        <label for="modal-image-caption">## caption ##</label> \
                        <input type="text" id="modal-image-caption" name="caption" aria-label="## caption ##" /> \
                    </div> \
                    <div class="form-item form-item-align"> \
                        <label>## image-position ##</label> \
                        <select name="align" aria-label="## image-position ##"> \
                            <option value="none">## none ##</option> \
                            <option value="left">## left ##</option> \
                            <option value="center">## center ##</option> \
                            <option value="right">## right ##</option> \
                        </select> \
                    </div> \
                    <div class="form-item form-item-link"> \
                        <label for="modal-image-url">## link ##</label> \
                        <input type="text" id="modal-image-url" name="url" aria-label="## link ##" /> \
                    </div> \
                    <div class="form-item form-item-link"> \
                        <label class="checkbox"><input type="checkbox" name="target" aria-label="## link-in-new-tab ##"> ## link-in-new-tab ##</label> \
                    </div> \
                </form> \
            </div>'
    },
    init: function(app)
    {
        this.app = app;
        this.opts = app.opts;
        this.lang = app.lang;
        this.caret = app.caret;
        this.utils = app.utils;
        this.editor = app.editor;
        this.storage = app.storage;
        this.component = app.component;
        this.inspector = app.inspector;
        this.insertion = app.insertion;
        this.selection = app.selection;

        // local
        this.justResized = false;
    },
    // messages
    oninsert: function()
    {
        this._observeImages();
    },
    onstarted: function()
    {
        // storage observe
        this.storage.observeImages();

        // resize
        if (this.opts.imageResizable)
        {
            this.resizer = $R.create('image.resize', this.app);
        }

        // observe
        this._observeImages();
    },
    ondropimage: function(e, files, clipboard)
    {
        if (!this.opts.imageUpload) return;

        var options = {
            url: this.opts.imageUpload,
            event: (clipboard) ? false : e,
            files: files,
            name: 'imagedrop',
            data: this.opts.imageData,
            paramName: this.opts.imageUploadParam
        };

        this.app.api('module.upload.send', options);
    },
    onstop: function()
    {
        if (this.resizer) this.resizer.stop();
    },
    onbottomclick: function()
    {
        this.insertion.insertToEnd(this.editor.getLastNode(), 'image');
    },
    onimageresizer: {
        stop: function()
        {
            if (this.resizer) this.resizer.hide();
        }
    },
    onsource: {
        open: function()
        {
            if (this.resizer) this.resizer.hide();
        },
        closed: function()
        {
            this._observeImages();
            if (this.resizer) this.resizer.rebuild();
        }
    },
    onupload: {
        complete: function()
        {
            this._observeImages();
        },
        image: {
            complete: function(response)
            {
                this._insert(response);
            },
            error: function(response)
            {
                this._uploadError(response);
            }
        },
        imageedit: {
            complete: function(response)
            {
                this._change(response);
            },
            error: function(response)
            {
                this._uploadError(response);
            }
        },
        imagedrop: {
            complete: function(response, e)
            {
                this._insert(response, e);
            },
            error: function(response)
            {
                this._uploadError(response);
            }
        },
        imagereplace: {
            complete: function(response)
            {
                this._change(response, false);
            },
            error: function(response)
            {
                this._uploadError(response);
            }
        }
    },
    onmodal: {
        image: {
            open: function($modal, $form)
            {
                this._setUpload($form);
            }
        },
        imageedit: {
            open: function($modal, $form)
            {
                this._setFormData($modal, $form);
            },
            opened: function($modal, $form)
            {
                this._setFormFocus($form);
            },
            remove: function()
            {
                this._remove(this.$image);
            },
            save: function($modal, $form)
            {
                this._save($modal, $form);
            }
        }
    },
    onimage: {
        observe: function()
        {
            this._observeImages();
        },
        resized: function()
        {
            this.justResized = true;
        }
    },
    oncontextbar: function(e, contextbar)
    {
        if (this.justResized)
        {
            this.justResized = false;
            return;
        }

        var current = this.selection.getCurrent();
        var data = this.inspector.parse(current);

        if (!data.isFigcaption() && data.isComponentType('image'))
        {
            var node = data.getComponent();
            var buttons = {
                "edit": {
                    title: this.lang.get('edit'),
                    api: 'module.image.open'
                },
                "remove": {
                    title: this.lang.get('delete'),
                    api: 'module.image.remove',
                    args: node
                }
            };

            contextbar.set(e, node, buttons);
        }
    },

    // public
    open: function()
    {
        this.$image = this._getCurrent();
        this.app.api('module.modal.build', this._getModalData());
    },
    insert: function(data)
    {
        this._insert(data);
    },
    remove: function(node)
    {
        this._remove(node);
    },

    // private
    _getModalData: function()
    {
        var modalData;
        if (this._isImage() && this.opts.imageEditable)
        {
            modalData = {
                name: 'imageedit',
                width: '800px',
                title: this.lang.get('edit'),
                handle: 'save',
                commands: {
                    save: { title: this.lang.get('save') },
                    remove: { title: this.lang.get('delete'), type: 'danger' },
                    cancel: { title: this.lang.get('cancel') }
                }
            };
        }
        else
        {
            modalData = {
                name: 'image',
                title: this.lang.get('image')
            };
        }

        return modalData;
    },
    _isImage: function()
    {
        return this.$image;
    },
    _getCurrent: function()
    {
        var current = this.selection.getCurrent();
        var data = this.inspector.parse(current);

        return (data.isComponentType('image') && data.isComponentActive()) ? this.component.create('image', data.getComponent()) : false;
    },
    _insert: function(response, e)
    {
        this.app.api('module.modal.close');

        if (Array.isArray(response))
        {
            var obj = {};
            for (var i = 0; i < response.length; i++)
            {
                obj = $R.extend(obj, response[i]);
            }

            response = obj;
        }
        else if (typeof response === 'string')
        {
            response = { "file": { url: response }};
        }

        if (typeof response === 'object')
        {

            var multiple = 0;
            for (var key in response)
            {
                if (typeof response[key] === 'object') multiple++;
            }

            if (multiple > 1)
            {
                this._insertMultiple(response, e);
            }
            else
            {
                this._insertSingle(response, e);
            }
        }
    },
    _insertSingle: function(response, e)
    {
        for (var key in response)
        {
            if (typeof response[key] === 'object')
            {
                var $img = this._createImageAndStore(response[key]);
                var inserted = (e) ? this.insertion.insertToPoint(e, $img) : this.insertion.insertHtml($img);

                this._removeSpaceBeforeFigure(inserted[0]);

                // set is active
                this.component.setActive(inserted[0]);
                this.app.broadcast('image.uploaded', inserted[0], response);
            }
        }
    },
    _insertMultiple: function(response, e)
    {
        var z = 0;
        var inserted = [];
        var last;
        for (var key in response)
        {
            if (typeof response[key] === 'object')
            {
                z++;

                var $img = this._createImageAndStore(response[key]);

                if (z === 1)
                {
                    inserted = (e) ? this.insertion.insertToPoint(e, $img) : this.insertion.insertHtml($img);
                }
                else
                {
                    var $inserted = $R.dom(inserted[0]);
                    $inserted.after($img);
                    inserted = [$img.get()];

                    this.app.broadcast('image.inserted', $img);
                }

                last = inserted[0];

                this._removeSpaceBeforeFigure(inserted[0]);
                this.app.broadcast('image.uploaded', inserted[0], response);
            }
        }

        // set last is active
        this.component.setActive(last);
    },
    _createImageAndStore: function(item)
    {
        var $img = this.component.create('image');

        $img.addClass('redactor-uploaded-figure');
        $img.setData({
            src: item.url,
            id: (item.id) ? item.id : this.utils.getRandomId()
        });

        // add to storage
        this.storage.add('image', $img.getElement());

        return $img;
    },
    _removeSpaceBeforeFigure: function(img)
    {
        if (!img) return;

        var prev = img.previousSibling;
        if (prev)
        {
            this._removeInvisibleSpace(prev);
            this._removeInvisibleSpace(prev.previousSibling);
        }
    },
    _removeInvisibleSpace: function(el)
    {
        if (el && el.nodeType === 3 && this.utils.searchInvisibleChars(el.textContent) !== -1)
        {
            el.parentNode.removeChild(el);
        }
    },
    _save: function($modal, $form)
    {
        var data = $form.getData();
        var imageData = {
            title: data.title
        };

        if (this.opts.imageLink) imageData.link = { url: data.url, target: data.target };
        if (this.opts.imageCaption) imageData.caption = data.caption;
        if (this.opts.imagePosition) imageData.align = data.align;

        this.$image.setData(imageData);
        if (this.resizer) this.resizer.rebuild();

        this.app.broadcast('image.changed', this.$image);
        this.app.api('module.modal.close');
    },
    _change: function(response, modal)
    {
        if (typeof response === 'string')
        {
            response = { "file": { url: response }};
        }

        if (typeof response === 'object')
        {
            var $img;
            for (var key in response)
            {
                if (typeof response[key] === 'object')
                {
                    $img = $R.dom('<img>');
                    $img.attr('src', response[key].url);

                    this.$image.changeImage(response[key]);

                    this.app.broadcast('image.changed', this.$image, response);
                    this.app.broadcast('image.uploaded', this.$image, response);

                    this.app.broadcast('hardsync');

                    break;
                }
            }

            if (modal !== false)
            {
                $img.on('load', function() { this.$previewBox.html($img); }.bind(this));
            }
        }
    },
    _uploadError: function(response)
    {
        this.app.broadcast('image.uploadError', response);
    },
    _remove: function(node)
    {
        this.app.api('module.modal.close');
        this.component.remove(node);
    },
    _observeImages: function()
    {
        var $editor = this.editor.getElement();
        var self = this;
        $editor.find('img').each(function(node)
        {
            var $node = $R.dom(node);

            $node.off('.drop-to-replace');
            $node.on('dragover.drop-to-replace dragenter.drop-to-replace', function(e)
            {
                e.preventDefault();
                return;
            });

            $node.on('drop.drop-to-replace', function(e)
            {
                if (!self.app.isDragComponentInside())
                {
                    return self._setReplaceUpload(e, $node);
                }
            });
        });
    },
    _setFormData: function($modal, $form)
    {
        this._buildPreview();
        this._buildPreviewUpload();

        var imageData = this.$image.getData();
        var data = {
            title: imageData.title
        };

        // caption
        if (this.opts.imageCaption) data.caption = imageData.caption;
        else $modal.find('.form-item-caption').hide();

        // position
        if (this.opts.imagePosition) data.align = imageData.align;
        else $modal.find('.form-item-align').hide();

        // link
        if (this.opts.imageLink)
        {
            if (imageData.link)
            {
                data.url = imageData.link.url;
                if (imageData.link.target) data.target = true;
            }
        }
        else $modal.find('.form-item-link').hide();

        $form.setData(data);
    },
    _setFormFocus: function($form)
    {
        $form.getField('title').focus();
    },
    _setReplaceUpload: function(e, $node)
    {
        e = e.originalEvent || e;
        e.stopPropagation();
        e.preventDefault();

        if (!this.opts.imageUpload) return;

        this.$image = this.component.create('image', $node);

        var options = {
            url: this.opts.imageUpload,
            files: e.dataTransfer.files,
            name: 'imagereplace',
            data: this.opts.imageData,
            paramName: this.opts.imageUploadParam
        };

        this.app.api('module.upload.send', options);

        return;
    },
    _setUpload: function($form)
    {
        var options = {
            url: this.opts.imageUpload,
            element: $form.getField('file'),
            name: 'image',
            data: this.opts.imageData,
            paramName: this.opts.imageUploadParam
        };

        this.app.api('module.upload.build', options);
    },
    _buildPreview: function()
    {
        this.$preview = $R.dom('#redactor-modal-image-preview');

        var imageData = this.$image.getData();
        var $previewImg = $R.dom('<img>');
        $previewImg.attr('src', imageData.src);

        this.$previewBox = $R.dom('<div>');
        this.$previewBox.append($previewImg);

        this.$preview.html('');
        this.$preview.append(this.$previewBox);
    },
    _buildPreviewUpload: function()
    {
        if (!this.opts.imageUpload) return;

        var $desc = $R.dom('<div class="desc">');
        $desc.html(this.lang.get('upload-change-label'));

        this.$preview.append($desc);

        var options = {
            url: this.opts.imageUpload,
            element: this.$previewBox,
            name: 'imageedit',
            paramName: this.opts.imageUploadParam
        };

        this.app.api('module.upload.build', options);
    }
});
$R.add('class', 'image.component', {
    mixins: ['dom', 'component'],
    init: function(app, el)
    {
        this.app = app;
        this.opts = app.opts;
        this.selection = app.selection;

        // init
        return (el && el.cmnt !== undefined) ? el : this._init(el);
    },
    setData: function(data)
    {
        for (var name in data)
        {
            this._set(name, data[name]);
        }
    },
    getData: function()
    {
        var names = ['src', 'title', 'caption', 'align', 'link', 'id'];
        var data = {};

        for (var i = 0; i < names.length; i++)
        {
            data[names[i]] = this._get(names[i]);
        }

        return data;
    },
    getElement: function()
    {
        return this.$element;
    },
    changeImage: function(data)
    {
        this.$element.attr('src', data.url);
    },


    // private
    _init: function(el)
    {
        var $el = $R.dom(el);
        var $figure = $el.closest('figure');

        if (el === undefined)
        {
            this.$element = $R.dom('<img>');
            this.parse('<figure>');
            this.append(this.$element);
        }
        else if ($figure.length === 0)
        {
            this.parse('<figure>');
            this.$element = $el;
            this.$element.wrap(this);
        }
        else
        {
            this.parse($figure);
            this.$element = this.find('img');
        }

        this._initWrapper();
    },
    _set: function(name, value)
    {
        this['_set_' + name](value);
    },
    _get: function(name)
    {
        return this['_get_' + name]();
    },
    _set_src: function(src)
    {
       this.$element.attr('src', src);
    },
    _set_id: function(id)
    {
       this.$element.attr('data-image', id);
    },
    _set_title: function(title)
    {
        title = title.trim().replace(/(<([^>]+)>)/ig,"");

        if (title === '')
        {
            this.$element.removeAttr('alt');
            this.$element.removeAttr('title');
        }
        else
        {
            this.$element.attr('alt', title);
            this.$element.attr('title', title);
        }

    },
    _set_caption: function(caption)
    {
        var $figcaption = this.find('figcaption');
        if ($figcaption.length === 0)
        {
            $figcaption = $R.dom('<figcaption>');
            $figcaption.attr('contenteditable', 'true');

            this.append($figcaption);
        }

        if (caption === '') $figcaption.remove();
        else $figcaption.html(caption);

        return $figcaption;
    },
    _set_align: function(align)
    {
        var imageFloat = '';
        var imageMargin = '';
        var textAlign = '';
        var $el = this;
        var $figcaption = this.find('figcaption');

        if (typeof this.opts.imagePosition === 'object')
        {
            var positions = this.opts.imagePosition;
            for (var key in positions)
            {
                $el.removeClass(positions[key]);
            }

            var alignClass = (typeof positions[align] !== 'undefined') ? positions[align] : false;
            if (alignClass)
            {
                $el.addClass(alignClass);
            }
        }
        else
        {
            switch (align)
            {
                case 'left':
                    imageFloat = 'left';
                    imageMargin = '0 ' + this.opts.imageFloatMargin + ' ' + this.opts.imageFloatMargin + ' 0';
                break;
                case 'right':
                    imageFloat = 'right';
                    imageMargin = '0 0 ' + this.opts.imageFloatMargin + ' ' + this.opts.imageFloatMargin;
                break;
                case 'center':
                    textAlign = 'center';
                break;
            }

            $el.css({ 'float': imageFloat, 'margin': imageMargin, 'text-align': textAlign });
            $el.attr('rel', $el.attr('style'));

            if (align === 'center')
            {
                $figcaption.css('text-align', 'center');
            }
            else
            {
                $figcaption.css('text-align', '');
            }
        }
    },
    _set_link: function(data)
    {
        var $link = this._findLink();
        if (data.url === '')
        {
            if ($link) $link.unwrap();

            return;
        }

        if (!$link)
        {
            $link = $R.dom('<a>');
            this.$element.wrap($link);
        }

        $link.attr('href', data.url);

        if (data.target) $link.attr('target', (data.target === true) ? '_blank' : data.target);
        else $link.removeAttr('target');

        return $link;
    },
    _get_src: function()
    {
        return this.$element.attr('src');
    },
    _get_id: function()
    {
        return this.$element.attr('data-image');
    },
    _get_title: function()
    {
        var alt = this.$element.attr('alt');
        var title = this.$element.attr('title');

        if (alt) return alt;
        else if (title) return title;
        else return '';
    },
    _get_caption: function()
    {
        var $figcaption = this.find('figcaption');

        if ($figcaption.length === 0)
        {
            return '';
        }
        else
        {
            return $figcaption.html();
        }
    },
    _get_align: function()
    {
        var align = '';
        if (typeof this.opts.imagePosition === 'object')
        {
            align = 'none';
            var positions = this.opts.imagePosition;
            for (var key in positions)
            {
                if (this.hasClass(positions[key]))
                {
                    align = key;
                    break;
                }
            }
        }
        else
        {
            align = (this.css('text-align') === 'center') ? 'center' : this.css('float');
        }

        return align;
    },
    _get_link: function()
    {
        var $link = this._findLink();
        if ($link)
        {
            var target = ($link.attr('target')) ? true : false;

            return {
                url: $link.attr('href'),
                target: target
            };
        }
    },
    _initWrapper: function()
    {
        this.addClass('redactor-component');
        this.attr({
            'data-redactor-type': 'image',
            'tabindex': '-1',
            'contenteditable': false
        });
    },
    _findLink: function()
    {
        var $link = this.find('a').filter(function(node)
        {
            return ($R.dom(node).closest('figcaption').length === 0);
        });

        if ($link.length !== 0)
        {
            return $link;
        }

        return false;
    }
});
$R.add('class', 'image.resize', {
    init: function(app)
    {
        this.app = app;
        this.$doc = app.$doc;
        this.$win = app.$win;
        this.$body = app.$body;
        this.editor = app.editor;
        this.toolbar = app.toolbar;
        this.inspector = app.inspector;

        // init
        this.$target = (this.toolbar.isTarget()) ? this.toolbar.getTargetElement() : this.$body;
        this._init();
    },
    // public
    rebuild: function()
    {
        this._setResizerPosition();
    },
    hide: function()
    {
        this.$target.find('#redactor-image-resizer').remove();
    },
    stop: function()
    {
        var $editor = this.editor.getElement();
        $editor.off('.redactor.image-resize');

        this.$doc.off('.redactor.image-resize');
        this.$win.off('resize.redactor.image-resize');
        this.hide();
    },

    // private
    _init: function()
    {
        var $editor = this.editor.getElement();
        $editor.on('click.redactor.image-resize', this._build.bind(this));

        this.$win.on('resize.redactor.image-resize', this._setResizerPosition.bind(this));
    },
    _build: function(e)
    {
        this.$target.find('#redactor-image-resizer').remove();

        var data = this.inspector.parse(e.target);
        var $editor = this.editor.getElement();

        if (data.isComponentType('image'))
        {
            this.$resizableBox = $editor;
            this.$resizableImage = $R.dom(data.getImageElement());

            this.$resizer = $R.dom('<span>');
            this.$resizer.attr('id', 'redactor-image-resizer');

            this.$target.append(this.$resizer);

            this._setResizerPosition();
            this.$resizer.on('mousedown touchstart', this._set.bind(this));
        }
    },
    _setResizerPosition: function()
    {
        if (this.$resizer)
        {
            var isTarget = this.toolbar.isTarget();
            var targetOffset = this.$target.offset();
            var offsetFix = 7;
            var topOffset = (isTarget) ? (offsetFix - targetOffset.top + this.$target.scrollTop()) : offsetFix;
            var leftOffset = (isTarget) ? (offsetFix - targetOffset.left) : offsetFix;
            var pos = this.$resizableImage.offset();
            var width = this.$resizableImage.width();
            var height = this.$resizableImage.height();
            var resizerWidth =  this.$resizer.width();
            var resizerHeight =  this.$resizer.height();

            this.$resizer.css({ top: (pos.top + height - resizerHeight + topOffset) + 'px', left: (pos.left + width - resizerWidth + leftOffset) + 'px' });
        }
    },
    _set: function(e)
    {
        e.preventDefault();

        this.resizeHandle = {
            x : e.pageX,
            y : e.pageY,
            el : this.$resizableImage,
            ratio: this.$resizableImage.width() / this.$resizableImage.height(),
            h: this.$resizableImage.height()
        };

        e = e.originalEvent || e;

        if (e.targetTouches)
        {
             this.resizeHandle.x = e.targetTouches[0].pageX;
             this.resizeHandle.y = e.targetTouches[0].pageY;
        }

        this.app.broadcast('contextbar.close');
        this.app.broadcast('image.resize', this.$resizableImage);
        this._start();
    },
    _start: function()
    {
        this.$doc.on('mousemove.redactor.image-resize touchmove.redactor.image-resize', this._move.bind(this));
        this.$doc.on('mouseup.redactor.image-resize touchend.redactor.image-resize', this._stop.bind(this));
    },
    _stop: function()
    {
        this.$doc.off('.redactor.image-resize');
        this.app.broadcast('image.resized', this.$resizableImage);
    },
    _move: function(e)
    {
        e.preventDefault();

        e = e.originalEvent || e;

        var height = this.resizeHandle.h;

        if (e.targetTouches) height += (e.targetTouches[0].pageY -  this.resizeHandle.y);
        else height += (e.pageY -  this.resizeHandle.y);

        var width = height * this.resizeHandle.ratio;

        if (height < 20 || width < 100) return;
        if (this._getResizableBoxWidth() <= width) return;

        this.resizeHandle.el.attr({width: width, height: height});
        this.resizeHandle.el.width(width);
        this.resizeHandle.el.height(height);
        this._setResizerPosition();
    },
    _getResizableBoxWidth: function()
    {
        var width = this.$resizableBox.width();
        return width - parseInt(this.$resizableBox.css('padding-left')) - parseInt(this.$resizableBox.css('padding-right'));
    }
});
$R.add('module', 'file', {
    modals: {
        'file':
            '<div class="redactor-modal-tab" data-title="## upload ##"><form action=""> \
                <div class="form-item form-item-title"> \
                    <label for="modal-file-title"> ## filename ## <span class="desc">(## optional ##)</span></label> \
                    <input type="text" id="modal-file-title" name="title" /> \
                </div> \
                <input type="file" name="file"> \
            </form></div>'
    },
    init: function(app)
    {
        this.app = app;
        this.opts = app.opts;
        this.lang = app.lang;
        this.caret = app.caret;
        this.utils = app.utils;
        this.storage = app.storage;
        this.component = app.component;
        this.inspector = app.inspector;
        this.insertion = app.insertion;
        this.selection = app.selection;
    },
    // messages
    onstarted: function()
    {
        // storage observe
        this.storage.observeFiles();
    },
    ondropfile: function(e, files, clipboard)
    {
        if (!this.opts.fileUpload) return;

        var options = {
            url: this.opts.fileUpload,
            event: (clipboard) ? false : e,
            files: files,
            name: 'filedrop',
            data: this.opts.fileData
        };

        this.app.api('module.upload.send', options);
    },
    onmodal: {
        file: {
            open: function($modal, $form)
            {
                this._setFormData($modal, $form);
                this._setUpload($form);
            },
            opened: function($modal, $form)
            {
                this._setFormFocus($form);

                this.$form = $form;
            }
        }
    },
    onupload: {
        file: {
            complete: function(response)
            {
                this._insert(response);
            },
            error: function(response)
            {
                this._uploadError(response);
            }
        },
        filedrop: {
            complete: function(response, e)
            {
                this._insert(response, e);
            },
            error: function(response)
            {
                this._uploadError(response);
            }
        }
    },
    oncontextbar: function(e, contextbar)
    {
        var current = this.selection.getCurrent();
        var data = this.inspector.parse(current);
        if (data.isFile())
        {
            var node = data.getFile();
            var buttons = {
                "remove": {
                    title: this.lang.get('delete'),
                    api: 'module.file.remove',
                    args: node
                }
            };

            contextbar.set(e, node, buttons, 'bottom');
        }

    },

    // public
    open: function()
    {
        this._open();
    },
    insert: function(data)
    {
        this._insert(data);
    },
    remove: function(node)
    {
        this._remove(node);
    },

    // private
    _open: function()
    {
        this.app.api('module.modal.build', this._getModalData());
    },
    _getModalData: function()
    {
        var modalData = {
            name: 'file',
            title: this.lang.get('file')
        };

        return modalData;
    },
    _insert: function(response, e)
    {
        this.app.api('module.modal.close');
        if (typeof response !== 'object') return;

        if (Array.isArray(response))
        {
            var obj = {};
            for (var i = 0; i < response.length; i++)
            {
                obj = $R.extend(obj, response[i]);
            }

            response = obj;
        }

        var multiple = (Object.keys(response).length  > 1);

        if (multiple)
        {
            this._insertMultiple(response, e);
        }
        else
        {
            this._insertSingle(response, e);
        }

        this.$form = false;
    },
    _insertSingle: function(response, e)
    {
        var inserted = [];
        for (var key in response)
        {
            var $file = this._createFileAndStore(response[key]);

            if (this.opts.fileAttachment)
            {
                inserted = this._insertAsAttachment($file);
            }
            else
            {
                inserted = (e) ? this.insertion.insertToPoint(e, $file) : this.insertion.insertRaw($file);
            }

            this.app.broadcast('file.uploaded', inserted[0], response);
        }
    },
    _insertMultiple: function(response, e)
    {
        var z = 0;
        var inserted = [];
        var $last;
        for (var key in response)
        {
            z++;

            var $file = this._createFileAndStore(response[key]);

            if (this.opts.fileAttachment)
            {
                inserted = this._insertAsAttachment($file, response);
            }
            else
            {
                if (z === 1)
                {
                    inserted = (e) ? this.insertion.insertToPoint(e, $file) : this.insertion.insertRaw($file);
                }
                else
                {
                    var $inserted = $R.dom(inserted[0]);
                    $inserted.after($file).after(' ');
                    inserted = [$file.get()];

                    this.app.broadcast('file.inserted', $file);
                }
            }

            $last = $file;
            this.app.broadcast('file.uploaded', inserted[0], response);
        }

        // set caret after last
        if (!this.opts.fileAttachment)
        {
            this.caret.setAfter($last);
        }
    },
    _insertAsAttachment: function($file, response)
    {
        var $box = $R.dom(this.opts.fileAttachment);
        var $wrapper = $file.wrapAttachment();
        $box.append($wrapper);

        var inserted = [$wrapper.get()];
        this.app.broadcast('file.appended', inserted[0], response);

        return inserted;
    },
    _createFileAndStore: function(item)
    {
        var modalFormData = (this.$form) ? this.$form.getData() : false;
        var name = (item.name) ? item.name : item.url;
        var title = (!this.opts.fileAttachment && modalFormData && modalFormData.title !== '') ? modalFormData.title : this._truncateUrl(name);

        var $file = this.component.create('file');
        $file.attr('href', item.url);
        $file.attr('data-file', (item.id) ? item.id : this.utils.getRandomId());
        $file.attr('data-name', item.name);
        $file.html(title);

        // add to storage
        this.storage.add('file', $file);

        return $file;
    },
    _remove: function(node)
    {
        this.selection.save();

        var $file = this.component.create('file', node);
        var stop = this.app.broadcast('file.delete', $file);
        if (stop !== false)
        {
            $file.unwrap();

            this.selection.restore();

            // callback
            this.app.broadcast('file.deleted', $file);
        }
        else
        {
            this.selection.restore();
        }
    },
    _truncateUrl: function(url)
    {
        return (url.search(/^http/) !== -1 && url.length > 20) ? url.substring(0, 20) + '...' : url;
    },
    _setUpload: function($form)
    {
        var options = {
            url: this.opts.fileUpload,
            element: $form.getField('file'),
            name: 'file',
            data: this.opts.fileData,
            paramName: this.opts.fileUploadParam
        };

        this.app.api('module.upload.build', options);
    },
    _setFormData: function($modal, $form)
    {
        if (this.opts.fileAttachment)
        {
            $modal.find('.form-item-title').hide();
        }
        else
        {
            $form.setData({ title: this.selection.getText() });
        }
    },
    _setFormFocus: function($form)
    {
        $form.getField('title').focus();
    },
    _uploadError: function(response)
    {
        this.app.broadcast('file.uploadError', response);
    }
});
$R.add('class', 'file.component', {
    mixins: ['dom', 'component'],
    init: function(app, el)
    {
        this.app = app;
        this.opts = app.opts;

        // init
        return (el && el.cmnt !== undefined) ? el : this._init(el);
    },
    wrapAttachment: function()
    {
        this.$wrapper = $R.dom('<span class="redactor-file-item">');
        this.$remover = $R.dom('<span class="redactor-file-remover">');
        this.$remover.html('&times;');
        this.$remover.on('click', this.removeAttachment.bind(this));

        this.$wrapper.append(this);
        this.$wrapper.append(this.$remover);

        return this.$wrapper;
    },
    removeAttachment: function(e)
    {
        e.preventDefault();

        var stop = this.app.broadcast('file.delete', this, this.$wrapper);
        if (stop !== false)
        {
            this.$wrapper.remove();
            this.app.broadcast('file.deleted', this);
            this.app.broadcast('file.removeAttachment', this);
        }
    },

    // private
    _init: function(el)
    {
        if (el === undefined)
        {
            this.parse('<a>');
        }
        else
        {
            var $a = $R.dom(el).closest('a');
            this.parse($a);
        }
    }
});
$R.add('module', 'buffer', {
    init: function(app)
    {
        this.app = app;
        this.opts = app.opts;
        this.editor = app.editor;
        this.offset = app.offset;
        this.keycodes = app.keycodes;
        this.selection = app.selection;

        // local
        this.state = false;
        this.passed = false;
        this.keyPressed = false;
        this.savedHtml = false;
        this.savedOffset = false;
        this.undoStorage = [];
        this.redoStorage = [];
    },
    // messages
    onkeydown: function(e)
    {
        this._listen(e);
    },
    onsyncing: function()
    {
        if (!this.keyPressed)
        {
            this.trigger();
        }

        this.keyPressed = false;
    },
    onbuffer: {
        trigger: function()
        {
            this.trigger();
        }
    },
    onstate: function(e, html, offset)
    {
        if ((e && (e.ctrlKey || e.metaKey)) || (e && (this._isUndo(e) || this._isRedo(e))))
        {
            return;
        }

        this.passed = false;
        this._saveState(html, offset);
    },
    onenable: function()
    {
        this.clear();
    },

    // public
    clear: function()
    {
        this.state = false;
        this.undoStorage = [];
        this.redoStorage = [];
    },
    undo: function()
    {
        this._getUndo();
    },
    redo: function()
    {
        this._getRedo();
    },
    trigger: function()
    {
        if (this.state && this.passed === false) this._setUndo();
    },

    // private
    _saveState: function(html, offset)
    {
        var $editor = this.editor.getElement();

        this.state = {
            html: html || $editor.html(),
            offset: offset || this.offset.get()
        };
    },
    _listen: function(e)
    {
        var key = e.which;
        var ctrl = e.ctrlKey || e.metaKey;
        var cmd = ctrl || e.shiftKey || e.altKey;
        var keys = [this.keycodes.SPACE, this.keycodes.ENTER, this.keycodes.BACKSPACE, this.keycodes.DELETE, this.keycodes.TAB,
                    this.keycodes.LEFT, this.keycodes.RIGHT, this.keycodes.UP, this.keycodes.DOWN];
        // undo
        if (this._isUndo(e)) // z key
        {
            e.preventDefault();
            this.undo();
            return;
        }
        // redo
        else if (this._isRedo(e))
        {
            e.preventDefault();
            this.redo();
            return;
        }
        // spec keys
        else if (!ctrl && keys.indexOf(key) !== -1)
        {
            cmd = true;
            this.trigger();
        }
        // cut & copy
        else if (ctrl && (key === 88 || key === 67))
        {
            cmd = true;
            this.trigger();
        }


        // empty buffer
        if (!cmd && !this._hasUndo())
        {
            this.trigger();
        }

        this.keyPressed = true;
    },
    _isUndo: function(e)
    {
        var key = e.which;
        var ctrl = e.ctrlKey || e.metaKey;

        return (ctrl && key === 90 && !e.shiftKey && !e.altKey);
    },
    _isRedo: function(e)
    {
        var key = e.which;
        var ctrl = e.ctrlKey || e.metaKey;

        return (ctrl && (key === 90 && e.shiftKey || key === 89 && !e.shiftKey) && !e.altKey);
    },
    _setUndo: function()
    {
        var last = this.undoStorage[this.undoStorage.length-1];
        if (typeof last === 'undefined' || last[0] !== this.state.html)
        {
            this.undoStorage.push([this.state.html, this.state.offset]);
            this._removeOverStorage();
        }
    },
    _setRedo: function()
    {
        var $editor = this.editor.getElement();
        var offset = this.offset.get();
        var html = $editor.html();

        this.redoStorage.push([html, offset]);
        this.redoStorage = this.redoStorage.slice(0, this.opts.bufferLimit);
    },
    _getUndo: function()
    {
        if (!this._hasUndo()) return;

        this.passed = true;

        var $editor = this.editor.getElement();
        var buffer = this.undoStorage.pop();

        this._setRedo();

        $editor.html(buffer[0]);
        this.offset.set(buffer[1]);
        this.selection.restore();

        this.app.broadcast('undo', buffer[0], buffer[1]);

    },
    _getRedo: function()
    {
        if (!this._hasRedo()) return;

        this.passed = true;

        var $editor = this.editor.getElement();
        var buffer = this.redoStorage.pop();

        this._setUndo();
        $editor.html(buffer[0]);
        this.offset.set(buffer[1]);

        this.app.broadcast('redo', buffer[0], buffer[1]);
    },
    _removeOverStorage: function()
    {
        if (this.undoStorage.length > this.opts.bufferLimit)
        {
            this.undoStorage = this.undoStorage.slice(0, (this.undoStorage.length - this.opts.bufferLimit));
        }
    },
    _hasUndo: function()
    {
        return (this.undoStorage.length !== 0);
    },
    _hasRedo: function()
    {
        return (this.redoStorage.length !== 0);
    }
});
$R.add('module', 'list', {
    init: function(app)
    {
        this.app = app;
        this.opts = app.opts;
        this.utils = app.utils;
        this.block = app.block;
        this.toolbar = app.toolbar;
        this.inspector = app.inspector;
        this.selection = app.selection;
    },
    // messages
    onbutton: {
        list: {
            observe: function(button)
            {
                this._observeButton(button);
            }
        }
    },
    ondropdown: {
        list: {
            observe: function(dropdown)
            {
                this._observeDropdown(dropdown);
            }
        }
    },

    // public
    toggle: function(type)
    {
        var nodes = this._getBlocks();
        var block = this.selection.getBlock();
        var $list = $R.dom(block).parents('ul, ol',  '.redactor-in').last();
        if (nodes.length === 0 && $list.length !== 0)
        {
            nodes = [$list.get()];
        }

        if (block && (block.tagName === 'TD' || block.tagName === 'TH'))
        {
            nodes = this.block.format('div');
        }

        this.selection.saveMarkers();

        nodes = (nodes.length !== 0 && this._isUnformat(type, nodes)) ? this._unformat(type, nodes) : this._format(type, nodes);

        this.selection.restoreMarkers();

        return nodes;
    },
    indent: function()
    {
        var isCollapsed = this.selection.isCollapsed();
        var current = this.selection.getCurrent();
        var data = this.inspector.parse(current);
        var item = (data.isList()) ? data.getListItem() : false;
        var $item = $R.dom(item);
        var $prev = $item.prevElement();
        var prev = $prev.get();
        var isIndent = (isCollapsed && item && prev && prev.tagName === 'LI');

        if (isIndent)
        {
            this.selection.saveMarkers();

            $prev = $R.dom(prev);
            var $prevChild = $prev.children('ul, ol');
            var $list = $item.closest('ul, ol');

            if ($prevChild.length !== 0)
            {
                $prevChild.append($item);
            }
            else
            {
                var listTag = $list.get().tagName.toLowerCase();
                var $newList = $R.dom('<' + listTag + '>');

                $newList.append($item);
                $prev.append($newList);
            }

            this.selection.restoreMarkers();
        }
    },
    outdent: function()
    {
        var isCollapsed = this.selection.isCollapsed();
        var current = this.selection.getCurrent();
        var data = this.inspector.parse(current);
        var item = (data.isList()) ? data.getListItem() : false;
        var $item = $R.dom(item);

        if (isCollapsed && item)
        {

            var $listItem = $item.parent();
            var $liItem = $listItem.closest('li', '.redactor-in');
            var $prev = $item.prevElement();
            var $next = $item.nextElement();
            var prev = $prev.get();
            var next = $next.get();
            var nextItems, nextList, $newList, $nextList;
            var isTop = (prev === false);
            var isMiddle = (prev !== false && next !== false);
            var isBottom = (!isTop && next === false);

            this.selection.saveMarkers();

            // out
            if ($liItem.length !== 0)
            {
                if (isMiddle)
                {
                    nextItems = this._getAllNext($item.get());
                    $newList = $R.dom('<' + $listItem.get().tagName.toLowerCase() + '>');

                    for (var i = 0; i < nextItems.length; i++)
                    {
                        $newList.append(nextItems[i]);
                    }

                    $liItem.after($item);
                    $item.append($newList);
                }
                else
                {
                    $liItem.after($item);

                    if ($listItem.children().length === 0)
                    {
                        $listItem.remove();
                    }
                    else
                    {
                        if (isTop) $item.append($listItem);
                    }
                }
            }
            // unformat
            else
            {
                var $container =  this._createUnformatContainer($item);
                var $childList = $container.find('ul, ol').first();

                if (isTop) $listItem.before($container);
                else if (isBottom) $listItem.after($container);
                else if (isMiddle)
                {
                    $newList = $R.dom('<' + $listItem.get().tagName.toLowerCase() + '>');
                    nextItems = this._getAllNext($item.get());

                    for (var i = 0; i < nextItems.length; i++)
                    {
                        $newList.append(nextItems[i]);
                    }

                    $listItem.after($container);
                    $container.after($newList);
                }

                if ($childList.length !== 0)
                {
                    $nextList = $container.nextElement();
                    nextList = $nextList.get();
                    if (nextList && nextList.tagName === $listItem.get().tagName)
                    {
                        $R.dom(nextList).prepend($childList);
                        $childList.unwrap();
                    }
                    else
                    {
                        $container.after($childList);
                    }
                }

                $item.remove();
            }

            this.selection.restoreMarkers();
        }
    },

    // private
    _getAllNext: function(next)
    {
        var nodes = [];

        while (next)
        {
            var $next = $R.dom(next).nextElement();
            next = $next.get();

            if (next) nodes.push(next);
            else return nodes;
        }

        return nodes;
    },
    _isUnformat: function(type, nodes)
    {
        var countLists = 0;
        for (var i = 0; i < nodes.length; i++)
        {
            if (nodes[i].nodeType !== 3)
            {
                var tag = nodes[i].tagName.toLowerCase();
                if (tag === type || tag === 'figure')
                {
                    countLists++;
                }
            }
        }

        return (countLists === nodes.length);
    },
    _format: function(type, nodes)
    {
        var tags = ['p', 'div', 'blockquote', 'pre', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'ul', 'ol'];
        var blocks = this._uniteBlocks(nodes, tags);
        var lists = [];

        for (var key in blocks)
        {
            var items = blocks[key];
            var $list = this._createList(type, blocks[key]);

            for (var i = 0; i < items.length; i++)
            {
                var $item;

                // lists
                if (items[i].nodeType !== 3 && (items[i].tagName === 'UL' || items[i].tagName === 'OL'))
                {
                    var $oldList = $R.dom(items[i]);

                    $item = $oldList.contents();
                    $list.append($item);

                    // old is empty
                    if (this.utils.isEmpty($oldList)) $oldList.remove();
                }
                // other blocks or texts
                else
                {
                    $item = this._createListItem(items[i]);
                    this.utils.normalizeTextNodes($item);
                    $list.append($item);
                }
            }

            lists.push($list.get());
        }

        return lists;
    },
    _uniteBlocks: function(nodes, tags)
    {
        var z = 0;
        var blocks = { 0: [] };
        var lastcell = false;
        for (var i = 0; i < nodes.length; i++)
        {
            var $node = $R.dom(nodes[i]);
            var $cell = $node.closest('th, td');

            if ($cell.length !== 0)
            {
                if ($cell.get() !== lastcell)
                {
                    // create block
                    z++;
                    blocks[z] = [];
                }

                if (this._isUniteBlock(nodes[i], tags))
                {
                    blocks[z].push(nodes[i]);
                }
            }
            else
            {
                if (this._isUniteBlock(nodes[i], tags))
                {
                    blocks[z].push(nodes[i]);
                }
                else
                {
                    // create block
                    z++;
                    blocks[z] = [];
                }
            }

            lastcell = $cell.get();
        }

        return blocks;
    },
    _isUniteBlock: function(node, tags)
    {
        return (node.nodeType === 3 || tags.indexOf(node.tagName.toLowerCase()) !== -1);
    },
    _createList: function(type, blocks)
    {
        var last = blocks[blocks.length-1];
        var $last = $R.dom(last);
        var $list = $R.dom('<' + type + '>');
        $last.after($list);

        return $list;
    },
    _createListItem: function(item)
    {
        var $item = $R.dom('<li>');
        if (item.nodeType === 3)
        {
            $item.append(item);
        }
        else
        {
            var $el = $R.dom(item);
            $item.append($el.contents());
            $el.remove();
        }

        return $item;
    },
    _unformat: function(type, nodes)
    {
        if (nodes.length === 1)
        {
            // one list
            var $list = $R.dom(nodes[0]);
            var $items = $list.find('li');

            var selectedItems = this.selection.getNodes({ tags: ['li'] });
            var block = this.selection.getBlock();
            var $li = $R.dom(block).closest('li');
            if (selectedItems.length === 0 && $li.length !== 0)
            {
                selectedItems = [$li.get()];
            }


            // 1) entire
            if (selectedItems.length === $items.length)
            {
                return this._unformatEntire(nodes[0]);
            }

            var pos = this._getItemsPosition($items, selectedItems);

            // 2) top
            if (pos === 'Top')
            {
                return this._unformatAtSide('before', selectedItems, $list);
            }

            // 3) bottom
            else if (pos === 'Bottom')
            {
                selectedItems.reverse();
                return this._unformatAtSide('after', selectedItems, $list);
            }

            // 4) middle
            else if (pos === 'Middle')
            {
                var $last = $R.dom(selectedItems[selectedItems.length-1]);

                var ci = false;

                var $parent = false;
                var $secondList = $R.dom('<' + $list.get().tagName.toLowerCase() + '>');
                $items.each(function(node)
                {
                    if (ci)
                    {
                        var $node = $R.dom(node);
                        if ($node.closest('.redactor-split-item').length === 0 && ($parent === false || $node.closest($parent).length === 0))
                        {
                            $node.addClass('redactor-split-item');
                        }

                        $parent = $node;
                    }

                    if (node === $last.get())
                    {
                        ci = true;
                    }
                });

                $items.filter('.redactor-split-item').each(function(node)
                {
                    var $node = $R.dom(node);
                    $node.removeClass('redactor-split-item');
                    $secondList.append(node);
                });

                $list.after($secondList);

                selectedItems.reverse();
                for (var i = 0; i < selectedItems.length; i++)
                {
                    var $item = $R.dom(selectedItems[i]);
                    var $container = this._createUnformatContainer($item);

                    $list.after($container);
                    $container.find('ul, ol').remove();
                    $item.remove();
                }


                return;
            }

        }
        else
        {
            // unformat all
            for (var i = 0; i < nodes.length; i++)
            {
                if (nodes[i].nodeType !== 3 && nodes[i].tagName.toLowerCase() === type)
                {
                    this._unformatEntire(nodes[i]);
                }
            }
        }
    },
    _unformatEntire: function(list)
    {
        var $list = $R.dom(list);
        var $items = $list.find('li');
        $items.each(function(node)
        {
            var $item = $R.dom(node);
            var $container = this._createUnformatContainer($item);

            $item.remove();
            $list.before($container);

        }.bind(this));

        $list.remove();
    },
    _unformatAtSide: function(type, selectedItems, $list)
    {
        for (var i = 0; i < selectedItems.length; i++)
        {
            var $item = $R.dom(selectedItems[i]);
            var $container = this._createUnformatContainer($item);

            $list[type]($container);

            var $innerLists = $container.find('ul, ol').first();
            $item.append($innerLists);

            $innerLists.each(function(node)
            {
                var $node = $R.dom(node);
                var $parent = $node.closest('li');

                if ($parent.get() === selectedItems[i])
                {
                    $node.unwrap();
                    $parent.addClass('r-unwrapped');
                }

            });

            if (this.utils.isEmptyHtml($item.html())) $item.remove();
        }

        // clear empty
        $list.find('.r-unwrapped').each(function(node)
        {
            var $node = $R.dom(node);
            if ($node.html().trim() === '') $node.remove();
            else $node.removeClass('r-unwrapped');
        });
    },
    _getItemsPosition: function($items, selectedItems)
    {
        var pos = 'Middle';

        var sFirst = selectedItems[0];
        var sLast = selectedItems[selectedItems.length-1];

        var first = $items.first().get();
        var last = $items.last().get();

        if (first === sFirst && last !== sLast)
        {
            pos = 'Top';
        }
        else if (first !== sFirst && last === sLast)
        {
            pos = 'Bottom';
        }

        return pos;
    },
    _createUnformatContainer: function($item)
    {
        var $container = $R.dom('<' + this.opts.markup + '>');
        if (this.opts.breakline) $container.attr('data-redactor-tag', 'br');

        $container.append($item.contents());

        return $container;
    },
    _getBlocks: function()
    {
        return this.selection.getBlocks({ first: true });
    },
    _observeButton: function()
    {
        var current = this.selection.getCurrent();
        var data = this.inspector.parse(current);
        var isDisabled = (data.isPre() || data.isCode() || data.isFigcaption());

        this._observeButtonsList(isDisabled, ['lists', 'ul', 'ol', 'outdent', 'indent']);

        var itemOutdent = this.toolbar.getButton('outdent');
        var itemIndent = this.toolbar.getButton('indent');

        this._observeIndent(itemIndent, itemOutdent);
    },
    _observeDropdown: function(dropdown)
    {
        var itemOutdent = dropdown.getItem('outdent');
        var itemIndent = dropdown.getItem('indent');

        this._observeIndent(itemIndent, itemOutdent);
    },
    _observeIndent: function(itemIndent, itemOutdent)
    {
        var isCollapsed = this.selection.isCollapsed();
        var current = this.selection.getCurrent();
        var data = this.inspector.parse(current);
        var item = (data.isList()) ? data.getListItem() : false;
        var $item = $R.dom(item);
        var $prev = $item.prevElement();
        var prev = $prev.get();
        var isIndent = (isCollapsed && item && prev && prev.tagName === 'LI');

        if (itemOutdent)
        {
            if (item && isCollapsed) itemOutdent.enable();
            else itemOutdent.disable();
        }

        if (itemIndent)
        {
            if (item && isIndent) itemIndent.enable();
            else itemIndent.disable();
        }
    },
    _observeButtonsList: function(param, buttons)
    {
        for (var i = 0; i < buttons.length; i++)
        {
            var button = this.toolbar.getButton(buttons[i]);
            if (button)
            {
                if (param) button.disable();
                else button.enable();
            }
        }
    }
});
$R.add('class', 'video.component', {
    mixins: ['dom', 'component'],
    init: function(app, el)
    {
        this.app = app;

        // init
        return (el && el.cmnt !== undefined) ? el : this._init(el);
    },

    // private
    _init: function(el)
    {
        if (typeof el !== 'undefined')
        {
            var $node = $R.dom(el);
            var $wrapper = $node.closest('figure');
            if ($wrapper.length !== 0)
            {
                this.parse($wrapper);
            }
            else
            {
                this.parse('<figure>');
                this.append(el);
            }
        }
        else
        {
            this.parse('<figure>');
        }


        this._initWrapper();
    },
    _initWrapper: function()
    {
        this.addClass('redactor-component');
        this.attr({
            'data-redactor-type': 'video',
            'tabindex': '-1',
            'contenteditable': false
        });
    }
});


    window.Redactor = window.$R = $R;

    // Data attribute load
    window.addEventListener('load', function()
    {
        $R('[data-redactor]');
    });

}());

/***/ }),
/* 610 */
/***/ (function(module, exports) {

(function($R)
{
    $R.lang['sv'] = {
        "format": "Format",
        "image": "Bild",
        "file": "Fil",
        "link": "Länk",
        "bold": "Fet",
        "italic": "Kursiv",
        "deleted": "Överstruken",
        "underline": "Understruken",
        "superscript": "Upphöjd",
        "subscript": "Nedsänkt",
        "bold-abbr": "B",
        "italic-abbr": "I",
        "deleted-abbr": "S",
        "underline-abbr": "U",
        "superscript-abbr": "Sup",
        "subscript-abbr": "Sub",
        "lists": "Lista",
        "link-insert": "Infoga länk",
        "link-edit": "Redigera länk",
        "link-in-new-tab": "Öppna länk i nytt fönster",
        "unlink": "Radera länk",
        "cancel": "Avbryt",
        "close": "Stäng",
        "insert": "Infoga",
        "save": "Spara",
        "delete": "Radera",
        "text": "Text",
        "edit": "Redigera",
        "title": "Titel",
        "paragraph": "Normal text",
        "quote": "Citat",
        "code": "Kod",
        "heading1": "Titel 1",
        "heading2": "Titel 2",
        "heading3": "Titel 3",
        "heading4": "Titel 4",
        "heading5": "Titel 5",
        "heading6": "Titel 6",
        "filename": "Namn",
        "optional": "valfritt",
        "unorderedlist": "Osorterad lista",
        "orderedlist": "Sorterad lista",
        "outdent": "Minska utdrag",
        "indent": "Öka utdrag",
        "horizontalrule": "Linje",
        "upload": "Upload",
        "upload-label": "Släpp filer här eller klicka för att ladda upp",
        "upload-change-label": "Drop a new image to change",
        "accessibility-help-label": "Textredigerare",
        "caption": "Undertext",
        "bulletslist": "Punkter",
        "numberslist": "Nummer",
        "image-position": "Position",
        "none": "Ingen",
        "left": "Vänster",
        "right": "Höger",
        "center": "Centrerad",
        "undo": "Ångra",
        "redo": "Gör om",

        /* Table plugin */
        "table": "Tabell",
        "insert-table": "Infoga tabell",
        "insert-row-above": "Infoga rad ovanför",
        "insert-row-below": "Infoga rad undertill",
        "insert-column-left": "Infoga kolumn till vänster",
        "insert-column-right": "Infoga kolumn till höger",
        "add-head": "Lägg till rubrikrad",
        "delete-head": "Ta bort rubrikrad",
        "delete-column": "Ta bort kolumn",
        "delete-row": "Ta bort rad",
        "delete-table": "Ta bort tabell",

        /* Fullscreen plugin */
        "fullscreen": "Fullskärm",

        /* Font color plugin */
        "fontcolor": "Textfärg",
        "highlight": "Färgöverstrykning",

        /* Font family plugin */
        "fontfamily": "Typsnitt",
        "remove-font-family": "Återställ typsnitt",

        /* Font size plugin */
        "size": "Storlek",
        "remove-size":  "Återställ textstorlek"
    };
})(Redactor);

/***/ }),
/* 611 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _sider = _interopRequireDefault(__webpack_require__(413));

var logger = __webpack_require__(0).get("iview:components:sider:index");

var _default = _sider.default;
exports.default = _default;

/***/ }),
/* 612 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _slider = _interopRequireDefault(__webpack_require__(613));

var logger = __webpack_require__(0).get("iview:components:slider:index");

var _default = _slider.default;
exports.default = _default;

/***/ }),
/* 613 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _slider_vue_vue_type_template_id_7b934eb8___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(318);
/* harmony import */ var _slider_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(201);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _slider_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _slider_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _slider_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _slider_vue_vue_type_template_id_7b934eb8___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _slider_vue_vue_type_template_id_7b934eb8___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 614 */
/***/ (function(module, exports, __webpack_require__) {

var baseAt = __webpack_require__(615),
    flatRest = __webpack_require__(616);

/**
 * Creates an array of values corresponding to `paths` of `object`.
 *
 * @static
 * @memberOf _
 * @since 1.0.0
 * @category Object
 * @param {Object} object The object to iterate over.
 * @param {...(string|string[])} [paths] The property paths to pick.
 * @returns {Array} Returns the picked values.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
 *
 * _.at(object, ['a[0].b.c', 'a[1]']);
 * // => [3, 4]
 */
var at = flatRest(baseAt);

module.exports = at;


/***/ }),
/* 615 */
/***/ (function(module, exports, __webpack_require__) {

var get = __webpack_require__(26);

/**
 * The base implementation of `_.at` without support for individual paths.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {string[]} paths The property paths to pick.
 * @returns {Array} Returns the picked elements.
 */
function baseAt(object, paths) {
  var index = -1,
      length = paths.length,
      result = Array(length),
      skip = object == null;

  while (++index < length) {
    result[index] = skip ? undefined : get(object, paths[index]);
  }
  return result;
}

module.exports = baseAt;


/***/ }),
/* 616 */
/***/ (function(module, exports) {

/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */
function identity(value) {
  return value;
}

module.exports = identity;


/***/ }),
/* 617 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _spin = _interopRequireDefault(__webpack_require__(618));

var logger = __webpack_require__(0).get("iview:components:spin:index");

var spinInstance;

function getSpinInstance() {
  var render = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;
  spinInstance = spinInstance || _spin.default.newInstance({
    render: render
  });
  return spinInstance;
}

function loading(options) {
  var render = 'render' in options ? options.render : undefined;
  var instance = getSpinInstance(render);
  instance.show(options);
}

_spin.default.show = function _show() {
  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return loading(props);
};

_spin.default.hide = function _hide() {
  var _this = this;

  if (!spinInstance) {
    return;
  }

  var instance = getSpinInstance();
  instance.remove(function () {
    (0, _newArrowCheck2.default)(this, _this);
    spinInstance = null;
  }.bind(this));
};

var _default = _spin.default;
exports.default = _default;

/***/ }),
/* 618 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectSpread2 = _interopRequireDefault(__webpack_require__(11));

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _vue = _interopRequireDefault(__webpack_require__(5));

var _spin = _interopRequireDefault(__webpack_require__(422));

var _this = void 0;

var logger = __webpack_require__(0).get("iview:components:spin:spin");

_spin.default.newInstance = function (properties) {
  (0, _newArrowCheck2.default)(this, _this);
  var props = properties || {};
  var Instance = new _vue.default({
    data: (0, _objectSpread2.default)({}, props),
    render: function render(h) {
      var vnode = '';

      if (this.render) {
        vnode = h(_spin.default, {
          props: {
            fix: {
              default: true,
              type: Boolean
            },
            fullscreen: {
              default: true,
              type: Boolean
            }
          }
        }, [this.render(h)]);
      } else {
        vnode = h(_spin.default, {
          props: {
            fix: {
              default: true,
              type: Boolean
            },
            fullscreen: {
              default: true,
              type: Boolean
            },
            size: {
              default: 'large',
              type: String
            }
          }
        });
      }

      return h('div', {
        class: 'ivu-spin-fullscreen ivu-spin-fullscreen-wrapper'
      }, [vnode]);
    }
  });
  var component = Instance.$mount();
  document.body.appendChild(component.$el);
  var spin = Instance.$children[0];
  return {
    component: spin,
    remove: function remove(cb) {
      var _this2 = this;

      spin.visible = false;
      setTimeout(function () {
        (0, _newArrowCheck2.default)(this, _this2);
        spin.$parent.$destroy();

        if (document.getElementsByClassName('ivu-spin-fullscreen')[0] !== undefined) {
          document.body.removeChild(document.getElementsByClassName('ivu-spin-fullscreen')[0]);
        }

        cb();
      }.bind(this), 500);
    },
    show: function show() {
      spin.visible = true;
    }
  };
}.bind(void 0);

var _default = _spin.default;
exports.default = _default;

/***/ }),
/* 619 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _steps = _interopRequireDefault(__webpack_require__(620));

var _step = _interopRequireDefault(__webpack_require__(621));

var logger = __webpack_require__(0).get("iview:components:steps:index");

_steps.default.Step = _step.default;
var _default = _steps.default;
exports.default = _default;

/***/ }),
/* 620 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _steps_vue_vue_type_template_id_026fbbb3___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(316);
/* harmony import */ var _steps_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(207);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _steps_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _steps_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _steps_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _steps_vue_vue_type_template_id_026fbbb3___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _steps_vue_vue_type_template_id_026fbbb3___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 621 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _step_vue_vue_type_template_id_e819f72a___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(315);
/* harmony import */ var _step_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(209);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _step_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _step_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _step_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _step_vue_vue_type_template_id_e819f72a___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _step_vue_vue_type_template_id_e819f72a___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 622 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _switch = _interopRequireDefault(__webpack_require__(623));

var logger = __webpack_require__(0).get("iview:components:switch:index");

var _default = _switch.default;
exports.default = _default;

/***/ }),
/* 623 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _switch_vue_vue_type_template_id_0d4a50e2___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(314);
/* harmony import */ var _switch_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(211);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _switch_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _switch_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _switch_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _switch_vue_vue_type_template_id_0d4a50e2___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _switch_vue_vue_type_template_id_0d4a50e2___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 624 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _table = _interopRequireDefault(__webpack_require__(625));

var logger = __webpack_require__(0).get("iview:components:table:index");

var _default = _table.default;
exports.default = _default;

/***/ }),
/* 625 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _table_vue_vue_type_template_id_3fee1b83___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(313);
/* harmony import */ var _table_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(213);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _table_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _table_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _table_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _table_vue_vue_type_template_id_3fee1b83___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _table_vue_vue_type_template_id_3fee1b83___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 626 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function(options) {
    var getState = options.stateHandler.getState;

    /**
     * Tells if the element has been made detectable and ready to be listened for resize events.
     * @public
     * @param {element} The element to check.
     * @returns {boolean} True or false depending on if the element is detectable or not.
     */
    function isDetectable(element) {
        var state = getState(element);
        return state && !!state.isDetectable;
    }

    /**
     * Marks the element that it has been made detectable and ready to be listened for resize events.
     * @public
     * @param {element} The element to mark.
     */
    function markAsDetectable(element) {
        getState(element).isDetectable = true;
    }

    /**
     * Tells if the element is busy or not.
     * @public
     * @param {element} The element to check.
     * @returns {boolean} True or false depending on if the element is busy or not.
     */
    function isBusy(element) {
        return !!getState(element).busy;
    }

    /**
     * Marks the object is busy and should not be made detectable.
     * @public
     * @param {element} element The element to mark.
     * @param {boolean} busy If the element is busy or not.
     */
    function markBusy(element, busy) {
        getState(element).busy = !!busy;
    }

    return {
        isDetectable: isDetectable,
        markAsDetectable: markAsDetectable,
        isBusy: isBusy,
        markBusy: markBusy
    };
};


/***/ }),
/* 627 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function(idHandler) {
    var eventListeners = {};

    /**
     * Gets all listeners for the given element.
     * @public
     * @param {element} element The element to get all listeners for.
     * @returns All listeners for the given element.
     */
    function getListeners(element) {
        var id = idHandler.get(element);

        if (id === undefined) {
            return [];
        }

        return eventListeners[id] || [];
    }

    /**
     * Stores the given listener for the given element. Will not actually add the listener to the element.
     * @public
     * @param {element} element The element that should have the listener added.
     * @param {function} listener The callback that the element has added.
     */
    function addListener(element, listener) {
        var id = idHandler.get(element);

        if(!eventListeners[id]) {
            eventListeners[id] = [];
        }

        eventListeners[id].push(listener);
    }

    function removeListener(element, listener) {
        var listeners = getListeners(element);
        for (var i = 0, len = listeners.length; i < len; ++i) {
            if (listeners[i] === listener) {
              listeners.splice(i, 1);
              break;
            }
        }
    }

    function removeAllListeners(element) {
      var listeners = getListeners(element);
      if (!listeners) { return; }
      listeners.length = 0;
    }

    return {
        get: getListeners,
        add: addListener,
        removeListener: removeListener,
        removeAllListeners: removeAllListeners
    };
};


/***/ }),
/* 628 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function() {
    var idCount = 1;

    /**
     * Generates a new unique id in the context.
     * @public
     * @returns {number} A unique id in the context.
     */
    function generate() {
        return idCount++;
    }

    return {
        generate: generate
    };
};


/***/ }),
/* 629 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function(options) {
    var idGenerator     = options.idGenerator;
    var getState        = options.stateHandler.getState;

    /**
     * Gets the resize detector id of the element.
     * @public
     * @param {element} element The target element to get the id of.
     * @returns {string|number|null} The id of the element. Null if it has no id.
     */
    function getId(element) {
        var state = getState(element);

        if (state && state.id !== undefined) {
            return state.id;
        }

        return null;
    }

    /**
     * Sets the resize detector id of the element. Requires the element to have a resize detector state initialized.
     * @public
     * @param {element} element The target element to set the id of.
     * @returns {string|number|null} The id of the element.
     */
    function setId(element) {
        var state = getState(element);

        if (!state) {
            throw new Error("setId required the element to have a resize detection state.");
        }

        var id = idGenerator.generate();

        state.id = id;

        return id;
    }

    return {
        get: getId,
        set: setId
    };
};


/***/ }),
/* 630 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/* global console: false */

/**
 * Reporter that handles the reporting of logs, warnings and errors.
 * @public
 * @param {boolean} quiet Tells if the reporter should be quiet or not.
 */
module.exports = function(quiet) {
    function noop() {
        //Does nothing.
    }

    var reporter = {
        log: noop,
        warn: noop,
        error: noop
    };

    if(!quiet && window.console) {
        var attachFunction = function(reporter, name) {
            //The proxy is needed to be able to call the method with the console context,
            //since we cannot use bind.
            reporter[name] = function reporterProxy() {
                var f = console[name];
                if (f.apply) { //IE9 does not support console.log.apply :)
                    f.apply(console, arguments);
                } else {
                    for (var i = 0; i < arguments.length; i++) {
                        f(arguments[i]);
                    }
                }
            };
        };

        attachFunction(reporter, "log");
        attachFunction(reporter, "warn");
        attachFunction(reporter, "error");
    }

    return reporter;
};

/***/ }),
/* 631 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(632);

module.exports = function batchProcessorMaker(options) {
    options             = options || {};
    var reporter        = options.reporter;
    var asyncProcess    = utils.getOption(options, "async", true);
    var autoProcess     = utils.getOption(options, "auto", true);

    if(autoProcess && !asyncProcess) {
        reporter && reporter.warn("Invalid options combination. auto=true and async=false is invalid. Setting async=true.");
        asyncProcess = true;
    }

    var batch = Batch();
    var asyncFrameHandler;
    var isProcessing = false;

    function addFunction(level, fn) {
        if(!isProcessing && autoProcess && asyncProcess && batch.size() === 0) {
            // Since this is async, it is guaranteed to be executed after that the fn is added to the batch.
            // This needs to be done before, since we're checking the size of the batch to be 0.
            processBatchAsync();
        }

        batch.add(level, fn);
    }

    function processBatch() {
        // Save the current batch, and create a new batch so that incoming functions are not added into the currently processing batch.
        // Continue processing until the top-level batch is empty (functions may be added to the new batch while processing, and so on).
        isProcessing = true;
        while (batch.size()) {
            var processingBatch = batch;
            batch = Batch();
            processingBatch.process();
        }
        isProcessing = false;
    }

    function forceProcessBatch(localAsyncProcess) {
        if (isProcessing) {
            return;
        }

        if(localAsyncProcess === undefined) {
            localAsyncProcess = asyncProcess;
        }

        if(asyncFrameHandler) {
            cancelFrame(asyncFrameHandler);
            asyncFrameHandler = null;
        }

        if(localAsyncProcess) {
            processBatchAsync();
        } else {
            processBatch();
        }
    }

    function processBatchAsync() {
        asyncFrameHandler = requestFrame(processBatch);
    }

    function clearBatch() {
        batch           = {};
        batchSize       = 0;
        topLevel        = 0;
        bottomLevel     = 0;
    }

    function cancelFrame(listener) {
        // var cancel = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.clearTimeout;
        var cancel = clearTimeout;
        return cancel(listener);
    }

    function requestFrame(callback) {
        // var raf = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || function(fn) { return window.setTimeout(fn, 20); };
        var raf = function(fn) { return setTimeout(fn, 0); };
        return raf(callback);
    }

    return {
        add: addFunction,
        force: forceProcessBatch
    };
};

function Batch() {
    var batch       = {};
    var size        = 0;
    var topLevel    = 0;
    var bottomLevel = 0;

    function add(level, fn) {
        if(!fn) {
            fn = level;
            level = 0;
        }

        if(level > topLevel) {
            topLevel = level;
        } else if(level < bottomLevel) {
            bottomLevel = level;
        }

        if(!batch[level]) {
            batch[level] = [];
        }

        batch[level].push(fn);
        size++;
    }

    function process() {
        for(var level = bottomLevel; level <= topLevel; level++) {
            var fns = batch[level];

            for(var i = 0; i < fns.length; i++) {
                var fn = fns[i];
                fn();
            }
        }
    }

    function getSize() {
        return size;
    }

    return {
        add: add,
        process: process,
        size: getSize
    };
}


/***/ }),
/* 632 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = module.exports = {};

utils.getOption = getOption;

function getOption(options, name, defaultValue) {
    var value = options[name];

    if((value === undefined || value === null) && defaultValue !== undefined) {
        return defaultValue;
    }

    return value;
}


/***/ }),
/* 633 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var prop = "_erd";

function initState(element) {
    element[prop] = {};
    return getState(element);
}

function getState(element) {
    return element[prop];
}

function cleanState(element) {
    delete element[prop];
}

module.exports = {
    initState: initState,
    getState: getState,
    cleanState: cleanState
};


/***/ }),
/* 634 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Resize detection strategy that injects objects to elements in order to detect resize events.
 * Heavily inspired by: http://www.backalleycoder.com/2013/03/18/cross-browser-event-based-element-resize-detection/
 */



var browserDetector = __webpack_require__(425);

module.exports = function(options) {
    options             = options || {};
    var reporter        = options.reporter;
    var batchProcessor  = options.batchProcessor;
    var getState        = options.stateHandler.getState;

    if(!reporter) {
        throw new Error("Missing required dependency: reporter.");
    }

    /**
     * Adds a resize event listener to the element.
     * @public
     * @param {element} element The element that should have the listener added.
     * @param {function} listener The listener callback to be called for each resize event of the element. The element will be given as a parameter to the listener callback.
     */
    function addListener(element, listener) {
        function listenerProxy() {
            listener(element);
        }

        if(browserDetector.isIE(8)) {
            //IE 8 does not support object, but supports the resize event directly on elements.
            getState(element).object = {
                proxy: listenerProxy
            };
            element.attachEvent("onresize", listenerProxy);
        } else {
            var object = getObject(element);

            if(!object) {
                throw new Error("Element is not detectable by this strategy.");
            }

            object.contentDocument.defaultView.addEventListener("resize", listenerProxy);
        }
    }

    function buildCssTextString(rules) {
        var seperator = options.important ? " !important; " : "; ";

        return (rules.join(seperator) + seperator).trim();
    }

    /**
     * Makes an element detectable and ready to be listened for resize events. Will call the callback when the element is ready to be listened for resize changes.
     * @private
     * @param {object} options Optional options object.
     * @param {element} element The element to make detectable
     * @param {function} callback The callback to be called when the element is ready to be listened for resize changes. Will be called with the element as first parameter.
     */
    function makeDetectable(options, element, callback) {
        if (!callback) {
            callback = element;
            element = options;
            options = null;
        }

        options = options || {};
        var debug = options.debug;

        function injectObject(element, callback) {
            var OBJECT_STYLE = buildCssTextString(["display: block", "position: absolute", "top: 0", "left: 0", "width: 100%", "height: 100%", "border: none", "padding: 0", "margin: 0", "opacity: 0", "z-index: -1000", "pointer-events: none"]);

            //The target element needs to be positioned (everything except static) so the absolute positioned object will be positioned relative to the target element.

            // Position altering may be performed directly or on object load, depending on if style resolution is possible directly or not.
            var positionCheckPerformed = false;

            // The element may not yet be attached to the DOM, and therefore the style object may be empty in some browsers.
            // Since the style object is a reference, it will be updated as soon as the element is attached to the DOM.
            var style = window.getComputedStyle(element);
            var width = element.offsetWidth;
            var height = element.offsetHeight;

            getState(element).startSize = {
                width: width,
                height: height
            };

            function mutateDom() {
                function alterPositionStyles() {
                    if(style.position === "static") {
                        element.style.setProperty("position", "relative", options.important ? "important" : "");

                        var removeRelativeStyles = function(reporter, element, style, property) {
                            function getNumericalValue(value) {
                                return value.replace(/[^-\d\.]/g, "");
                            }

                            var value = style[property];

                            if(value !== "auto" && getNumericalValue(value) !== "0") {
                                reporter.warn("An element that is positioned static has style." + property + "=" + value + " which is ignored due to the static positioning. The element will need to be positioned relative, so the style." + property + " will be set to 0. Element: ", element);
                                element.style.setProperty(property, "0", options.important ? "important" : "");
                            }
                        };

                        //Check so that there are no accidental styles that will make the element styled differently now that is is relative.
                        //If there are any, set them to 0 (this should be okay with the user since the style properties did nothing before [since the element was positioned static] anyway).
                        removeRelativeStyles(reporter, element, style, "top");
                        removeRelativeStyles(reporter, element, style, "right");
                        removeRelativeStyles(reporter, element, style, "bottom");
                        removeRelativeStyles(reporter, element, style, "left");
                    }
                }

                function onObjectLoad() {
                    // The object has been loaded, which means that the element now is guaranteed to be attached to the DOM.
                    if (!positionCheckPerformed) {
                        alterPositionStyles();
                    }

                    /*jshint validthis: true */

                    function getDocument(element, callback) {
                        //Opera 12 seem to call the object.onload before the actual document has been created.
                        //So if it is not present, poll it with an timeout until it is present.
                        //TODO: Could maybe be handled better with object.onreadystatechange or similar.
                        if(!element.contentDocument) {
                            setTimeout(function checkForObjectDocument() {
                                getDocument(element, callback);
                            }, 100);

                            return;
                        }

                        callback(element.contentDocument);
                    }

                    //Mutating the object element here seems to fire another load event.
                    //Mutating the inner document of the object element is fine though.
                    var objectElement = this;

                    //Create the style element to be added to the object.
                    getDocument(objectElement, function onObjectDocumentReady(objectDocument) {
                        //Notify that the element is ready to be listened to.
                        callback(element);
                    });
                }

                // The element may be detached from the DOM, and some browsers does not support style resolving of detached elements.
                // The alterPositionStyles needs to be delayed until we know the element has been attached to the DOM (which we are sure of when the onObjectLoad has been fired), if style resolution is not possible.
                if (style.position !== "") {
                    alterPositionStyles(style);
                    positionCheckPerformed = true;
                }

                //Add an object element as a child to the target element that will be listened to for resize events.
                var object = document.createElement("object");
                object.style.cssText = OBJECT_STYLE;
                object.tabIndex = -1;
                object.type = "text/html";
                object.onload = onObjectLoad;

                //Safari: This must occur before adding the object to the DOM.
                //IE: Does not like that this happens before, even if it is also added after.
                if(!browserDetector.isIE()) {
                    object.data = "about:blank";
                }

                if (!getState(element)) {
                    // The element has been uninstalled before the actual loading happened.
                    return;
                }

                element.appendChild(object);
                getState(element).object = object;

                //IE: This must occur after adding the object to the DOM.
                if(browserDetector.isIE()) {
                    object.data = "about:blank";
                }
            }

            if(batchProcessor) {
                batchProcessor.add(mutateDom);
            } else {
                mutateDom();
            }
        }

        if(browserDetector.isIE(8)) {
            //IE 8 does not support objects properly. Luckily they do support the resize event.
            //So do not inject the object and notify that the element is already ready to be listened to.
            //The event handler for the resize event is attached in the utils.addListener instead.
            callback(element);
        } else {
            injectObject(element, callback);
        }
    }

    /**
     * Returns the child object of the target element.
     * @private
     * @param {element} element The target element.
     * @returns The object element of the target.
     */
    function getObject(element) {
        return getState(element).object;
    }

    function uninstall(element) {
        if (!getState(element)) {
            return;
        }

        var object = getObject(element);

        if (!object) {
            return;
        }

        if (browserDetector.isIE(8)) {
            element.detachEvent("onresize", object.proxy);
        } else {
            element.removeChild(object);
        }
        delete getState(element).object;
    }

    return {
        makeDetectable: makeDetectable,
        addListener: addListener,
        uninstall: uninstall
    };
};


/***/ }),
/* 635 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Resize detection strategy that injects divs to elements in order to detect resize events on scroll events.
 * Heavily inspired by: https://github.com/marcj/css-element-queries/blob/master/src/ResizeSensor.js
 */



var forEach = __webpack_require__(424).forEach;

module.exports = function(options) {
    options             = options || {};
    var reporter        = options.reporter;
    var batchProcessor  = options.batchProcessor;
    var getState        = options.stateHandler.getState;
    var hasState        = options.stateHandler.hasState;
    var idHandler       = options.idHandler;

    if (!batchProcessor) {
        throw new Error("Missing required dependency: batchProcessor");
    }

    if (!reporter) {
        throw new Error("Missing required dependency: reporter.");
    }

    //TODO: Could this perhaps be done at installation time?
    var scrollbarSizes = getScrollbarSizes();

    var styleId = "erd_scroll_detection_scrollbar_style";
    var detectionContainerClass = "erd_scroll_detection_container";

    function initDocument(targetDocument) {
        // Inject the scrollbar styling that prevents them from appearing sometimes in Chrome.
        // The injected container needs to have a class, so that it may be styled with CSS (pseudo elements).
        injectScrollStyle(targetDocument, styleId, detectionContainerClass);
    }

    initDocument(window.document);

    function buildCssTextString(rules) {
        var seperator = options.important ? " !important; " : "; ";

        return (rules.join(seperator) + seperator).trim();
    }

    function getScrollbarSizes() {
        var width = 500;
        var height = 500;

        var child = document.createElement("div");
        child.style.cssText = buildCssTextString(["position: absolute", "width: " + width*2 + "px", "height: " + height*2 + "px", "visibility: hidden", "margin: 0", "padding: 0"]);

        var container = document.createElement("div");
        container.style.cssText = buildCssTextString(["position: absolute", "width: " + width + "px", "height: " + height + "px", "overflow: scroll", "visibility: none", "top: " + -width*3 + "px", "left: " + -height*3 + "px", "visibility: hidden", "margin: 0", "padding: 0"]);

        container.appendChild(child);

        document.body.insertBefore(container, document.body.firstChild);

        var widthSize = width - container.clientWidth;
        var heightSize = height - container.clientHeight;

        document.body.removeChild(container);

        return {
            width: widthSize,
            height: heightSize
        };
    }

    function injectScrollStyle(targetDocument, styleId, containerClass) {
        function injectStyle(style, method) {
            method = method || function (element) {
                targetDocument.head.appendChild(element);
            };

            var styleElement = targetDocument.createElement("style");
            styleElement.innerHTML = style;
            styleElement.id = styleId;
            method(styleElement);
            return styleElement;
        }

        if (!targetDocument.getElementById(styleId)) {
            var containerAnimationClass = containerClass + "_animation";
            var containerAnimationActiveClass = containerClass + "_animation_active";
            var style = "/* Created by the element-resize-detector library. */\n";
            style += "." + containerClass + " > div::-webkit-scrollbar { " + buildCssTextString(["display: none"]) + " }\n\n";
            style += "." + containerAnimationActiveClass + " { " + buildCssTextString(["-webkit-animation-duration: 0.1s", "animation-duration: 0.1s", "-webkit-animation-name: " + containerAnimationClass, "animation-name: " + containerAnimationClass]) + " }\n";
            style += "@-webkit-keyframes " + containerAnimationClass +  " { 0% { opacity: 1; } 50% { opacity: 0; } 100% { opacity: 1; } }\n";
            style += "@keyframes " + containerAnimationClass +          " { 0% { opacity: 1; } 50% { opacity: 0; } 100% { opacity: 1; } }";
            injectStyle(style);
        }
    }

    function addAnimationClass(element) {
        element.className += " " + detectionContainerClass + "_animation_active";
    }

    function addEvent(el, name, cb) {
        if (el.addEventListener) {
            el.addEventListener(name, cb);
        } else if(el.attachEvent) {
            el.attachEvent("on" + name, cb);
        } else {
            return reporter.error("[scroll] Don't know how to add event listeners.");
        }
    }

    function removeEvent(el, name, cb) {
        if (el.removeEventListener) {
            el.removeEventListener(name, cb);
        } else if(el.detachEvent) {
            el.detachEvent("on" + name, cb);
        } else {
            return reporter.error("[scroll] Don't know how to remove event listeners.");
        }
    }

    function getExpandElement(element) {
        return getState(element).container.childNodes[0].childNodes[0].childNodes[0];
    }

    function getShrinkElement(element) {
        return getState(element).container.childNodes[0].childNodes[0].childNodes[1];
    }

    /**
     * Adds a resize event listener to the element.
     * @public
     * @param {element} element The element that should have the listener added.
     * @param {function} listener The listener callback to be called for each resize event of the element. The element will be given as a parameter to the listener callback.
     */
    function addListener(element, listener) {
        var listeners = getState(element).listeners;

        if (!listeners.push) {
            throw new Error("Cannot add listener to an element that is not detectable.");
        }

        getState(element).listeners.push(listener);
    }

    /**
     * Makes an element detectable and ready to be listened for resize events. Will call the callback when the element is ready to be listened for resize changes.
     * @private
     * @param {object} options Optional options object.
     * @param {element} element The element to make detectable
     * @param {function} callback The callback to be called when the element is ready to be listened for resize changes. Will be called with the element as first parameter.
     */
    function makeDetectable(options, element, callback) {
        if (!callback) {
            callback = element;
            element = options;
            options = null;
        }

        options = options || {};

        function debug() {
            if (options.debug) {
                var args = Array.prototype.slice.call(arguments);
                args.unshift(idHandler.get(element), "Scroll: ");
                if (reporter.log.apply) {
                    reporter.log.apply(null, args);
                } else {
                    for (var i = 0; i < args.length; i++) {
                        reporter.log(args[i]);
                    }
                }
            }
        }

        function isDetached(element) {
            function isInDocument(element) {
                return element === element.ownerDocument.body || element.ownerDocument.body.contains(element);
            }

            if (!isInDocument(element)) {
                return true;
            }

            // FireFox returns null style in hidden iframes. See https://github.com/wnr/element-resize-detector/issues/68 and https://bugzilla.mozilla.org/show_bug.cgi?id=795520
            if (window.getComputedStyle(element) === null) {
                return true;
            }

            return false;
        }

        function isUnrendered(element) {
            // Check the absolute positioned container since the top level container is display: inline.
            var container = getState(element).container.childNodes[0];
            var style = window.getComputedStyle(container);
            return !style.width || style.width.indexOf("px") === -1; //Can only compute pixel value when rendered.
        }

        function getStyle() {
            // Some browsers only force layouts when actually reading the style properties of the style object, so make sure that they are all read here,
            // so that the user of the function can be sure that it will perform the layout here, instead of later (important for batching).
            var elementStyle            = window.getComputedStyle(element);
            var style                   = {};
            style.position              = elementStyle.position;
            style.width                 = element.offsetWidth;
            style.height                = element.offsetHeight;
            style.top                   = elementStyle.top;
            style.right                 = elementStyle.right;
            style.bottom                = elementStyle.bottom;
            style.left                  = elementStyle.left;
            style.widthCSS              = elementStyle.width;
            style.heightCSS             = elementStyle.height;
            return style;
        }

        function storeStartSize() {
            var style = getStyle();
            getState(element).startSize = {
                width: style.width,
                height: style.height
            };
            debug("Element start size", getState(element).startSize);
        }

        function initListeners() {
            getState(element).listeners = [];
        }

        function storeStyle() {
            debug("storeStyle invoked.");
            if (!getState(element)) {
                debug("Aborting because element has been uninstalled");
                return;
            }

            var style = getStyle();
            getState(element).style = style;
        }

        function storeCurrentSize(element, width, height) {
            getState(element).lastWidth = width;
            getState(element).lastHeight  = height;
        }

        function getExpandChildElement(element) {
            return getExpandElement(element).childNodes[0];
        }

        function getWidthOffset() {
            return 2 * scrollbarSizes.width + 1;
        }

        function getHeightOffset() {
            return 2 * scrollbarSizes.height + 1;
        }

        function getExpandWidth(width) {
            return width + 10 + getWidthOffset();
        }

        function getExpandHeight(height) {
            return height + 10 + getHeightOffset();
        }

        function getShrinkWidth(width) {
            return width * 2 + getWidthOffset();
        }

        function getShrinkHeight(height) {
            return height * 2 + getHeightOffset();
        }

        function positionScrollbars(element, width, height) {
            var expand          = getExpandElement(element);
            var shrink          = getShrinkElement(element);
            var expandWidth     = getExpandWidth(width);
            var expandHeight    = getExpandHeight(height);
            var shrinkWidth     = getShrinkWidth(width);
            var shrinkHeight    = getShrinkHeight(height);
            expand.scrollLeft   = expandWidth;
            expand.scrollTop    = expandHeight;
            shrink.scrollLeft   = shrinkWidth;
            shrink.scrollTop    = shrinkHeight;
        }

        function injectContainerElement() {
            var container = getState(element).container;

            if (!container) {
                container                   = document.createElement("div");
                container.className         = detectionContainerClass;
                container.style.cssText     = buildCssTextString(["visibility: hidden", "display: inline", "width: 0px", "height: 0px", "z-index: -1", "overflow: hidden", "margin: 0", "padding: 0"]);
                getState(element).container = container;
                addAnimationClass(container);
                element.appendChild(container);

                var onAnimationStart = function () {
                    getState(element).onRendered && getState(element).onRendered();
                };

                addEvent(container, "animationstart", onAnimationStart);

                // Store the event handler here so that they may be removed when uninstall is called.
                // See uninstall function for an explanation why it is needed.
                getState(element).onAnimationStart = onAnimationStart;
            }

            return container;
        }

        function injectScrollElements() {
            function alterPositionStyles() {
                var style = getState(element).style;

                if(style.position === "static") {
                    element.style.setProperty("position", "relative",options.important ? "important" : "");

                    var removeRelativeStyles = function(reporter, element, style, property) {
                        function getNumericalValue(value) {
                            return value.replace(/[^-\d\.]/g, "");
                        }

                        var value = style[property];

                        if(value !== "auto" && getNumericalValue(value) !== "0") {
                            reporter.warn("An element that is positioned static has style." + property + "=" + value + " which is ignored due to the static positioning. The element will need to be positioned relative, so the style." + property + " will be set to 0. Element: ", element);
                            element.style[property] = 0;
                        }
                    };

                    //Check so that there are no accidental styles that will make the element styled differently now that is is relative.
                    //If there are any, set them to 0 (this should be okay with the user since the style properties did nothing before [since the element was positioned static] anyway).
                    removeRelativeStyles(reporter, element, style, "top");
                    removeRelativeStyles(reporter, element, style, "right");
                    removeRelativeStyles(reporter, element, style, "bottom");
                    removeRelativeStyles(reporter, element, style, "left");
                }
            }

            function getLeftTopBottomRightCssText(left, top, bottom, right) {
                left = (!left ? "0" : (left + "px"));
                top = (!top ? "0" : (top + "px"));
                bottom = (!bottom ? "0" : (bottom + "px"));
                right = (!right ? "0" : (right + "px"));

                return ["left: " + left, "top: " + top, "right: " + right, "bottom: " + bottom];
            }

            debug("Injecting elements");

            if (!getState(element)) {
                debug("Aborting because element has been uninstalled");
                return;
            }

            alterPositionStyles();

            var rootContainer = getState(element).container;

            if (!rootContainer) {
                rootContainer = injectContainerElement();
            }

            // Due to this WebKit bug https://bugs.webkit.org/show_bug.cgi?id=80808 (currently fixed in Blink, but still present in WebKit browsers such as Safari),
            // we need to inject two containers, one that is width/height 100% and another that is left/top -1px so that the final container always is 1x1 pixels bigger than
            // the targeted element.
            // When the bug is resolved, "containerContainer" may be removed.

            // The outer container can occasionally be less wide than the targeted when inside inline elements element in WebKit (see https://bugs.webkit.org/show_bug.cgi?id=152980).
            // This should be no problem since the inner container either way makes sure the injected scroll elements are at least 1x1 px.

            var scrollbarWidth          = scrollbarSizes.width;
            var scrollbarHeight         = scrollbarSizes.height;
            var containerContainerStyle = buildCssTextString(["position: absolute", "flex: none", "overflow: hidden", "z-index: -1", "visibility: hidden", "width: 100%", "height: 100%", "left: 0px", "top: 0px"]);
            var containerStyle          = buildCssTextString(["position: absolute", "flex: none", "overflow: hidden", "z-index: -1", "visibility: hidden"].concat(getLeftTopBottomRightCssText(-(1 + scrollbarWidth), -(1 + scrollbarHeight), -scrollbarHeight, -scrollbarWidth)));
            var expandStyle             = buildCssTextString(["position: absolute", "flex: none", "overflow: scroll", "z-index: -1", "visibility: hidden", "width: 100%", "height: 100%"]);
            var shrinkStyle             = buildCssTextString(["position: absolute", "flex: none", "overflow: scroll", "z-index: -1", "visibility: hidden", "width: 100%", "height: 100%"]);
            var expandChildStyle        = buildCssTextString(["position: absolute", "left: 0", "top: 0"]);
            var shrinkChildStyle        = buildCssTextString(["position: absolute", "width: 200%", "height: 200%"]);

            var containerContainer      = document.createElement("div");
            var container               = document.createElement("div");
            var expand                  = document.createElement("div");
            var expandChild             = document.createElement("div");
            var shrink                  = document.createElement("div");
            var shrinkChild             = document.createElement("div");

            // Some browsers choke on the resize system being rtl, so force it to ltr. https://github.com/wnr/element-resize-detector/issues/56
            // However, dir should not be set on the top level container as it alters the dimensions of the target element in some browsers.
            containerContainer.dir              = "ltr";

            containerContainer.style.cssText    = containerContainerStyle;
            containerContainer.className        = detectionContainerClass;
            container.className                 = detectionContainerClass;
            container.style.cssText             = containerStyle;
            expand.style.cssText                = expandStyle;
            expandChild.style.cssText           = expandChildStyle;
            shrink.style.cssText                = shrinkStyle;
            shrinkChild.style.cssText           = shrinkChildStyle;

            expand.appendChild(expandChild);
            shrink.appendChild(shrinkChild);
            container.appendChild(expand);
            container.appendChild(shrink);
            containerContainer.appendChild(container);
            rootContainer.appendChild(containerContainer);

            function onExpandScroll() {
                getState(element).onExpand && getState(element).onExpand();
            }

            function onShrinkScroll() {
                getState(element).onShrink && getState(element).onShrink();
            }

            addEvent(expand, "scroll", onExpandScroll);
            addEvent(shrink, "scroll", onShrinkScroll);

            // Store the event handlers here so that they may be removed when uninstall is called.
            // See uninstall function for an explanation why it is needed.
            getState(element).onExpandScroll = onExpandScroll;
            getState(element).onShrinkScroll = onShrinkScroll;
        }

        function registerListenersAndPositionElements() {
            function updateChildSizes(element, width, height) {
                var expandChild             = getExpandChildElement(element);
                var expandWidth             = getExpandWidth(width);
                var expandHeight            = getExpandHeight(height);
                expandChild.style.setProperty("width", expandWidth + "px", options.important ? "important" : "");
                expandChild.style.setProperty("height", expandHeight + "px", options.important ? "important" : "");
            }

            function updateDetectorElements(done) {
                var width           = element.offsetWidth;
                var height          = element.offsetHeight;

                // Check whether the size has actually changed since last time the algorithm ran. If not, some steps may be skipped.
                var sizeChanged = width !== getState(element).lastWidth || height !== getState(element).lastHeight;

                debug("Storing current size", width, height);

                // Store the size of the element sync here, so that multiple scroll events may be ignored in the event listeners.
                // Otherwise the if-check in handleScroll is useless.
                storeCurrentSize(element, width, height);

                // Since we delay the processing of the batch, there is a risk that uninstall has been called before the batch gets to execute.
                // Since there is no way to cancel the fn executions, we need to add an uninstall guard to all fns of the batch.

                batchProcessor.add(0, function performUpdateChildSizes() {
                    if (!sizeChanged) {
                        return;
                    }

                    if (!getState(element)) {
                        debug("Aborting because element has been uninstalled");
                        return;
                    }

                    if (!areElementsInjected()) {
                        debug("Aborting because element container has not been initialized");
                        return;
                    }

                    if (options.debug) {
                        var w = element.offsetWidth;
                        var h = element.offsetHeight;

                        if (w !== width || h !== height) {
                            reporter.warn(idHandler.get(element), "Scroll: Size changed before updating detector elements.");
                        }
                    }

                    updateChildSizes(element, width, height);
                });

                batchProcessor.add(1, function updateScrollbars() {
                    // This function needs to be invoked event though the size is unchanged. The element could have been resized very quickly and then
                    // been restored to the original size, which will have changed the scrollbar positions.

                    if (!getState(element)) {
                        debug("Aborting because element has been uninstalled");
                        return;
                    }

                    if (!areElementsInjected()) {
                        debug("Aborting because element container has not been initialized");
                        return;
                    }

                    positionScrollbars(element, width, height);
                });

                if (sizeChanged && done) {
                    batchProcessor.add(2, function () {
                        if (!getState(element)) {
                            debug("Aborting because element has been uninstalled");
                            return;
                        }

                        if (!areElementsInjected()) {
                          debug("Aborting because element container has not been initialized");
                          return;
                        }

                        done();
                    });
                }
            }

            function areElementsInjected() {
                return !!getState(element).container;
            }

            function notifyListenersIfNeeded() {
                function isFirstNotify() {
                    return getState(element).lastNotifiedWidth === undefined;
                }

                debug("notifyListenersIfNeeded invoked");

                var state = getState(element);

                // Don't notify if the current size is the start size, and this is the first notification.
                if (isFirstNotify() && state.lastWidth === state.startSize.width && state.lastHeight === state.startSize.height) {
                    return debug("Not notifying: Size is the same as the start size, and there has been no notification yet.");
                }

                // Don't notify if the size already has been notified.
                if (state.lastWidth === state.lastNotifiedWidth && state.lastHeight === state.lastNotifiedHeight) {
                    return debug("Not notifying: Size already notified");
                }


                debug("Current size not notified, notifying...");
                state.lastNotifiedWidth = state.lastWidth;
                state.lastNotifiedHeight = state.lastHeight;
                forEach(getState(element).listeners, function (listener) {
                    listener(element);
                });
            }

            function handleRender() {
                debug("startanimation triggered.");

                if (isUnrendered(element)) {
                    debug("Ignoring since element is still unrendered...");
                    return;
                }

                debug("Element rendered.");
                var expand = getExpandElement(element);
                var shrink = getShrinkElement(element);
                if (expand.scrollLeft === 0 || expand.scrollTop === 0 || shrink.scrollLeft === 0 || shrink.scrollTop === 0) {
                    debug("Scrollbars out of sync. Updating detector elements...");
                    updateDetectorElements(notifyListenersIfNeeded);
                }
            }

            function handleScroll() {
                debug("Scroll detected.");

                if (isUnrendered(element)) {
                    // Element is still unrendered. Skip this scroll event.
                    debug("Scroll event fired while unrendered. Ignoring...");
                    return;
                }

                updateDetectorElements(notifyListenersIfNeeded);
            }

            debug("registerListenersAndPositionElements invoked.");

            if (!getState(element)) {
                debug("Aborting because element has been uninstalled");
                return;
            }

            getState(element).onRendered = handleRender;
            getState(element).onExpand = handleScroll;
            getState(element).onShrink = handleScroll;

            var style = getState(element).style;
            updateChildSizes(element, style.width, style.height);
        }

        function finalizeDomMutation() {
            debug("finalizeDomMutation invoked.");

            if (!getState(element)) {
                debug("Aborting because element has been uninstalled");
                return;
            }

            var style = getState(element).style;
            storeCurrentSize(element, style.width, style.height);
            positionScrollbars(element, style.width, style.height);
        }

        function ready() {
            callback(element);
        }

        function install() {
            debug("Installing...");
            initListeners();
            storeStartSize();

            batchProcessor.add(0, storeStyle);
            batchProcessor.add(1, injectScrollElements);
            batchProcessor.add(2, registerListenersAndPositionElements);
            batchProcessor.add(3, finalizeDomMutation);
            batchProcessor.add(4, ready);
        }

        debug("Making detectable...");

        if (isDetached(element)) {
            debug("Element is detached");

            injectContainerElement();

            debug("Waiting until element is attached...");

            getState(element).onRendered = function () {
                debug("Element is now attached");
                install();
            };
        } else {
            install();
        }
    }

    function uninstall(element) {
        var state = getState(element);

        if (!state) {
            // Uninstall has been called on a non-erd element.
            return;
        }

        // Uninstall may have been called in the following scenarios:
        // (1) Right between the sync code and async batch (here state.busy = true, but nothing have been registered or injected).
        // (2) In the ready callback of the last level of the batch by another element (here, state.busy = true, but all the stuff has been injected).
        // (3) After the installation process (here, state.busy = false and all the stuff has been injected).
        // So to be on the safe side, let's check for each thing before removing.

        // We need to remove the event listeners, because otherwise the event might fire on an uninstall element which results in an error when trying to get the state of the element.
        state.onExpandScroll && removeEvent(getExpandElement(element), "scroll", state.onExpandScroll);
        state.onShrinkScroll && removeEvent(getShrinkElement(element), "scroll", state.onShrinkScroll);
        state.onAnimationStart && removeEvent(state.container, "animationstart", state.onAnimationStart);

        state.container && element.removeChild(state.container);
    }

    return {
        makeDetectable: makeDetectable,
        addListener: addListener,
        uninstall: uninstall,
        initDocument: initDocument
    };
};


/***/ }),
/* 636 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _table_head_vue_vue_type_template_id_5b1e9d30___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(357);
/* harmony import */ var _table_head_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(215);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _table_head_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _table_head_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _table_head_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _table_head_vue_vue_type_template_id_5b1e9d30___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _table_head_vue_vue_type_template_id_5b1e9d30___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 637 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _this = void 0;

var logger = __webpack_require__(0).get("iview:components:table:header");

var _default = {
  functional: true,
  name: 'TableRenderHeader',
  props: {
    column: Object,
    index: Number,
    render: Function
  },
  render: function render(h, ctx) {
    (0, _newArrowCheck2.default)(this, _this);
    var params = {
      column: ctx.props.column,
      index: ctx.props.index
    };
    return ctx.props.render(h, params);
  }.bind(void 0)
};
exports.default = _default;

/***/ }),
/* 638 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _table_body_vue_vue_type_template_id_a9f9cbea___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(358);
/* harmony import */ var _table_body_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(217);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _table_body_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _table_body_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _table_body_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _table_body_vue_vue_type_template_id_a9f9cbea___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _table_body_vue_vue_type_template_id_a9f9cbea___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 639 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _table_tr_vue_vue_type_template_id_6bccaa79___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(373);
/* harmony import */ var _table_tr_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(219);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _table_tr_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _table_tr_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _table_tr_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _table_tr_vue_vue_type_template_id_6bccaa79___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _table_tr_vue_vue_type_template_id_6bccaa79___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 640 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _cell_vue_vue_type_template_id_b545012a___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(376);
/* harmony import */ var _cell_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(221);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _cell_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _cell_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _cell_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _cell_vue_vue_type_template_id_b545012a___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _cell_vue_vue_type_template_id_b545012a___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 641 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = csv;

var _objectSpread2 = _interopRequireDefault(__webpack_require__(11));

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _this = void 0;

var logger = __webpack_require__(0).get("iview:utils:csv");

/*
  inspired by https://www.npmjs.com/package/react-csv-downloader
  now removed from Github
*/
var newLine = '\r\n';

var appendLine = function appendLine(content, row, _ref) {
  var _this2 = this;

  var separator = _ref.separator,
      quoted = _ref.quoted;
  (0, _newArrowCheck2.default)(this, _this);
  var line = row.map(function (dataRow) {
    (0, _newArrowCheck2.default)(this, _this2);
    var data = dataRow;

    if (!quoted) {
      return data;
    } // quote data


    data = typeof data === 'string' ? data.replace(/"/g, '"') : data;
    return "\"".concat(data, "\"");
  }.bind(this));
  content.push(line.join(separator));
}.bind(void 0);

var defaults = {
  quoted: false,
  separator: ','
};

function csv(columns, datas, opts) {
  var _this3 = this;

  var noHeader = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
  var options = (0, _objectSpread2.default)({}, defaults, opts);
  var columnOrder;
  var content = [];
  var column = [];

  if (columns) {
    columnOrder = columns.map(function (v) {
      (0, _newArrowCheck2.default)(this, _this3);

      if (typeof v === 'string') {
        return v;
      }

      if (!noHeader) {
        column.push(typeof v.title !== 'undefined' ? v.title : v.key);
      }

      return v.key;
    }.bind(this));

    if (column.length > 0) {
      appendLine(content, column, options);
    }
  } else {
    columnOrder = [];
    datas.forEach(function (v) {
      (0, _newArrowCheck2.default)(this, _this3);

      if (!Array.isArray(v)) {
        columnOrder = columnOrder.concat(Object.keys(v));
      }
    }.bind(this));

    if (columnOrder.length > 0) {
      columnOrder = columnOrder.filter(function (value, index, self) {
        (0, _newArrowCheck2.default)(this, _this3);
        return self.indexOf(value) === index;
      }.bind(this));

      if (!noHeader) {
        appendLine(content, columnOrder, options);
      }
    }
  }

  if (Array.isArray(datas)) {
    datas.forEach(function (dataRow) {
      var _this4 = this;

      (0, _newArrowCheck2.default)(this, _this3);
      var row = dataRow;

      if (!Array.isArray(row)) {
        row = columnOrder.map(function (k) {
          (0, _newArrowCheck2.default)(this, _this4);
          return typeof row[k] !== 'undefined' ? row[k] : '';
        }.bind(this));
      }

      appendLine(content, row, options);
    }.bind(this));
  }

  return content.join(newLine);
}

/***/ }),
/* 642 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var logger = __webpack_require__(0).get("iview:components:table:export-csv");

function has(browser) {
  var ua = navigator.userAgent;

  if (browser === 'ie') {
    var isIE = ua.indexOf('compatible') > -1 && ua.indexOf('MSIE') > -1;

    if (isIE) {
      var reIE = new RegExp('MSIE (\\d+\\.\\d+);');
      reIE.test(ua);
      return parseFloat(RegExp.$1);
    }

    return false;
  }

  return ua.indexOf(browser) > -1;
}

var csv = {
  _getDownloadUrl: function _getDownloadUrl(text) {
    var BOM = "\uFEFF"; // Add BOM to text for open in excel correctly

    if (window.Blob && window.URL && window.URL.createObjectURL) {
      var csvData = new Blob([BOM + text], {
        type: 'text/csv'
      });
      return URL.createObjectURL(csvData);
    }

    return "data:attachment/csv;charset=utf-8,".concat(BOM).concat(encodeURIComponent(text));
  },
  _isEdge: function _isEdge() {
    return /Edge/.test(navigator.userAgent);
  },
  _isIE11: function _isIE11() {
    var iev = 0;
    var ieold = /MSIE (\d+\.\d+);/.test(navigator.userAgent);
    var trident = !!navigator.userAgent.match(/Trident\/7.0/);
    var rv = navigator.userAgent.indexOf('rv:11.0');

    if (ieold) {
      iev = Number(RegExp.$1);
    }

    if (navigator.appVersion.indexOf('MSIE 10') !== -1) {
      iev = 10;
    }

    if (trident && rv !== -1) {
      iev = 11;
    }

    return iev === 11;
  },
  download: function download(filename, text) {
    if (has('ie') && has('ie') < 10) {
      // has module unable identify ie11 and Edge
      var oWin = window.top.open('about:blank', '_blank');
      oWin.document.charset = 'utf-8';
      oWin.document.write(text);
      oWin.document.close();
      oWin.document.execCommand('SaveAs', filename);
      oWin.close();
      /* eslint-disable-next-line no-underscore-dangle */
    } else if (has('ie') === 10 || this._isIE11() || this._isEdge()) {
      var BOM = "\uFEFF";
      var csvData = new Blob([BOM + text], {
        type: 'text/csv'
      });
      navigator.msSaveBlob(csvData, filename);
    } else {
      var link = document.createElement('a');
      link.download = filename;
      /* eslint-disable-next-line no-underscore-dangle */

      link.href = this._getDownloadUrl(text);
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
    }
  }
};
var _default = csv;
exports.default = _default;

/***/ }),
/* 643 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getRandomStr = exports.convertToRows = exports.getAllColumns = exports.convertColumnOrder = void 0;

var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(15));

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _assist = __webpack_require__(6);

var _this = void 0;

var logger = __webpack_require__(0).get("iview:components:table:util");

var convertColumnOrder = function convertColumnOrder(columns, fixedType) {
  var _this2 = this;

  (0, _newArrowCheck2.default)(this, _this);
  var list = [];
  var other = [];
  columns.forEach(function (col) {
    (0, _newArrowCheck2.default)(this, _this2);

    if (col.fixed && col.fixed === fixedType) {
      list.push(col);
    } else {
      other.push(col);
    }
  }.bind(this));
  return list.concat(other);
}.bind(void 0);

exports.convertColumnOrder = convertColumnOrder;

// set forTableHead to true when convertToRows, false in normal cases like table.vue
var _getAllColumns = function getAllColumns(cols) {
  var _this3 = this;

  var forTableHead = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  (0, _newArrowCheck2.default)(this, _this);
  var columns = (0, _assist.deepCopy)(cols);
  var result = [];
  columns.forEach(function (column) {
    (0, _newArrowCheck2.default)(this, _this3);

    if (column.children) {
      if (forTableHead) {
        result.push(column);
      }

      result.push.apply(result, (0, _toConsumableArray2.default)(_getAllColumns(column.children, forTableHead)));
    } else {
      result.push(column);
    }
  }.bind(this));
  return result;
}.bind(void 0);

exports.getAllColumns = _getAllColumns;

var convertToRows = function convertToRows(columns) {
  var _this4 = this;

  var fixedType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  (0, _newArrowCheck2.default)(this, _this);
  var originColumns;

  if (fixedType) {
    originColumns = fixedType === 'left' ? (0, _assist.deepCopy)(convertColumnOrder(columns, 'left')) : (0, _assist.deepCopy)(convertColumnOrder(columns, 'right'));
  } else {
    originColumns = (0, _assist.deepCopy)(columns);
  }

  var maxLevel = 1;

  var _traverse = function traverse(column, parent) {
    var _this5 = this;

    (0, _newArrowCheck2.default)(this, _this4);

    if (parent) {
      column.level = parent.level + 1;

      if (maxLevel < column.level) {
        maxLevel = column.level;
      }
    }

    if (column.children) {
      var colSpan = 0;
      column.children.forEach(function (subColumn) {
        (0, _newArrowCheck2.default)(this, _this5);

        _traverse(subColumn, column);

        colSpan += subColumn.colSpan;
      }.bind(this));
      column.colSpan = colSpan;
    } else {
      column.colSpan = 1;
    }
  }.bind(this);

  originColumns.forEach(function (column) {
    (0, _newArrowCheck2.default)(this, _this4);
    column.level = 1;

    _traverse(column);
  }.bind(this));
  var rows = [];

  for (var i = 0; i < maxLevel; i += 1) {
    rows.push([]);
  }

  var allColumns = _getAllColumns(originColumns, true);

  allColumns.forEach(function (column) {
    (0, _newArrowCheck2.default)(this, _this4);

    if (!column.children) {
      column.rowSpan = maxLevel - column.level + 1;
    } else {
      column.rowSpan = 1;
    }

    rows[column.level - 1].push(column);
  }.bind(this));
  return rows;
}.bind(void 0);

exports.convertToRows = convertToRows;

var getRandomStr = function _getRandomStr() {
  var len = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 32;
  var $chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890';
  var maxPos = $chars.length;
  var str = '';

  for (var i = 0; i < len; i += 1) {
    str += $chars.charAt(Math.floor(Math.random() * maxPos));
  }

  return str;
};

exports.getRandomStr = getRandomStr;

/***/ }),
/* 644 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _tabs = _interopRequireDefault(__webpack_require__(645));

var _pane = _interopRequireDefault(__webpack_require__(646));

var logger = __webpack_require__(0).get("iview:components:tabs:index");

_tabs.default.Pane = _pane.default;
var _default = _tabs.default;
exports.default = _default;

/***/ }),
/* 645 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _tabs_vue_vue_type_template_id_5a012fca___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(312);
/* harmony import */ var _tabs_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(223);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _tabs_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _tabs_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _tabs_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _tabs_vue_vue_type_template_id_5a012fca___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _tabs_vue_vue_type_template_id_5a012fca___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 646 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _pane_vue_vue_type_template_id_9d23af5c___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(311);
/* harmony import */ var _pane_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(225);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _pane_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _pane_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _pane_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _pane_vue_vue_type_template_id_9d23af5c___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _pane_vue_vue_type_template_id_9d23af5c___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 647 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _tag = _interopRequireDefault(__webpack_require__(648));

var logger = __webpack_require__(0).get("iview:components:tag:index");

var _default = _tag.default;
exports.default = _default;

/***/ }),
/* 648 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _tag_vue_vue_type_template_id_74b6cd12___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(350);
/* harmony import */ var _tag_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(227);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _tag_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _tag_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _tag_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _tag_vue_vue_type_template_id_74b6cd12___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _tag_vue_vue_type_template_id_74b6cd12___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 649 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _timeline = _interopRequireDefault(__webpack_require__(650));

var _timelineItem = _interopRequireDefault(__webpack_require__(651));

var logger = __webpack_require__(0).get("iview:components:timeline:index");

_timeline.default.Item = _timelineItem.default;
var _default = _timeline.default;
exports.default = _default;

/***/ }),
/* 650 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _timeline_vue_vue_type_template_id_8357ce04___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(309);
/* harmony import */ var _timeline_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(229);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _timeline_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _timeline_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _timeline_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _timeline_vue_vue_type_template_id_8357ce04___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _timeline_vue_vue_type_template_id_8357ce04___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 651 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _timeline_item_vue_vue_type_template_id_6d3dfad7___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(308);
/* harmony import */ var _timeline_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(231);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _timeline_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _timeline_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _timeline_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _timeline_item_vue_vue_type_template_id_6d3dfad7___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _timeline_item_vue_vue_type_template_id_6d3dfad7___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 652 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _timePicker = _interopRequireDefault(__webpack_require__(653));

var logger = __webpack_require__(0).get("iview:components:time-picker:index");

var _default = _timePicker.default;
exports.default = _default;

/***/ }),
/* 653 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _picker = _interopRequireDefault(__webpack_require__(390));

var _time = _interopRequireDefault(__webpack_require__(394));

var _timeRange = _interopRequireDefault(__webpack_require__(398));

var _timeMixins = _interopRequireDefault(__webpack_require__(46));

var _assist = __webpack_require__(6);

var logger = __webpack_require__(0).get("iview:components:date-picker:picker:time-picker");

var _default = {
  components: {
    RangeTimePickerPanel: _timeRange.default,
    TimePickerPanel: _time.default
  },
  computed: {
    ownPickerProps: function ownPickerProps() {
      return {
        disabledHours: this.disabledHours,
        disabledMinutes: this.disabledMinutes,
        disabledSeconds: this.disabledSeconds,
        hideDisabledOptions: this.hideDisabledOptions
      };
    },
    panel: function panel() {
      var isRange = this.type === 'timerange';
      return isRange ? 'RangeTimePickerPanel' : 'TimePickerPanel';
    }
  },
  mixins: [_picker.default, _timeMixins.default],
  props: {
    type: {
      default: 'time',
      validator: function validator(value) {
        return (0, _assist.oneOf)(value, ['time', 'timerange']);
      }
    }
  },
  watch: {
    visible: function visible(_visible) {
      var _this = this;

      if (_visible) {
        this.$nextTick(function () {
          var _this2 = this;

          (0, _newArrowCheck2.default)(this, _this);
          var spinners = (0, _assist.findComponentsDownward)(this, 'TimeSpinner');
          spinners.forEach(function (instance) {
            (0, _newArrowCheck2.default)(this, _this2);
            return instance.updateScroll();
          }.bind(this));
        }.bind(this));
      }
    }
  }
};
exports.default = _default;

/***/ }),
/* 654 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _tooltip = _interopRequireDefault(__webpack_require__(421));

var logger = __webpack_require__(0).get("iview:components:tooltip:index");

var _default = _tooltip.default;
exports.default = _default;

/***/ }),
/* 655 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _transfer = _interopRequireDefault(__webpack_require__(656));

var logger = __webpack_require__(0).get("iview:components:transfer:index");

var _default = _transfer.default;
exports.default = _default;

/***/ }),
/* 656 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _transfer_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(233);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _transfer_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _transfer_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2);
var render, staticRenderFns




/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(
  _transfer_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"],
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 657 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _list_vue_vue_type_template_id_30380a50___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(363);
/* harmony import */ var _list_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(235);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _list_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _list_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _list_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _list_vue_vue_type_template_id_30380a50___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _list_vue_vue_type_template_id_30380a50___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 658 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _search_vue_vue_type_template_id_16aa9655___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(374);
/* harmony import */ var _search_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(237);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _search_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _search_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _search_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _search_vue_vue_type_template_id_16aa9655___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _search_vue_vue_type_template_id_16aa9655___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 659 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _operation_vue_vue_type_template_id_36cdafef___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(351);
/* harmony import */ var _operation_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(239);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _operation_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _operation_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _operation_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _operation_vue_vue_type_template_id_36cdafef___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _operation_vue_vue_type_template_id_36cdafef___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 660 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _tree = _interopRequireDefault(__webpack_require__(661));

var logger = __webpack_require__(0).get("iview:components:tree:index");

var _default = _tree.default;
exports.default = _default;

/***/ }),
/* 661 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _tree_vue_vue_type_template_id_11bafa8e___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(307);
/* harmony import */ var _tree_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(241);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _tree_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _tree_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _tree_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _tree_vue_vue_type_template_id_11bafa8e___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _tree_vue_vue_type_template_id_11bafa8e___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 662 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_vue_vue_type_template_id_67a2eb85___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(364);
/* harmony import */ var _node_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(243);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _node_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _node_vue_vue_type_template_id_67a2eb85___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _node_vue_vue_type_template_id_67a2eb85___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 663 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _this = void 0;

var logger = __webpack_require__(0).get("iview:components:tree:render");

var _default = {
  functional: true,
  name: 'RenderCell',
  props: {
    data: Object,
    node: Array,
    render: Function
  },
  render: function render(h, ctx) {
    (0, _newArrowCheck2.default)(this, _this);
    var params = {
      data: ctx.props.data,
      node: ctx.props.node[1],
      root: ctx.props.node[0]
    };
    return ctx.props.render(h, params);
  }.bind(void 0)
};
exports.default = _default;

/***/ }),
/* 664 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _upload = _interopRequireDefault(__webpack_require__(665));

var logger = __webpack_require__(0).get("iview:components:upload:index");

var _default = _upload.default;
exports.default = _default;

/***/ }),
/* 665 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _upload_vue_vue_type_template_id_bbc4c5fc___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(300);
/* harmony import */ var _upload_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(245);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _upload_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _upload_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _upload_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _upload_vue_vue_type_template_id_bbc4c5fc___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _upload_vue_vue_type_template_id_bbc4c5fc___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 666 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _upload_list_vue_vue_type_template_id_75f1ba71___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(359);
/* harmony import */ var _upload_list_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(247);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _upload_list_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _upload_list_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _upload_list_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _upload_list_vue_vue_type_template_id_75f1ba71___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _upload_list_vue_vue_type_template_id_75f1ba71___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 667 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = upload;

var _newArrowCheck2 = _interopRequireDefault(__webpack_require__(3));

var _has = _interopRequireDefault(__webpack_require__(259));

var logger = __webpack_require__(0).get("iview:components:upload:ajax");

function getError(action, option, xhr) {
  var msg = "fail to post ".concat(action, " ").concat(xhr.status, "'");
  var err = new Error(msg);
  err.status = xhr.status;
  err.method = 'post';
  err.url = action;
  return err;
}

function getBody(xhr) {
  var text = xhr.responseText || xhr.response;

  if (!text) {
    return text;
  }

  try {
    return JSON.parse(text);
  } catch (e) {
    return text;
  }
}

function upload(option) {
  var _this = this;

  if (typeof XMLHttpRequest === 'undefined') {
    return;
  }

  var xhr = new XMLHttpRequest();
  var action = option.action;

  if (xhr.upload) {
    xhr.upload.onprogress = function progress(e) {
      if (e.total > 0) {
        e.percent = e.loaded / e.total * 100;
      }

      option.onProgress(e);
    };
  }

  var formData = new FormData();

  if (option.data) {
    Object.keys(option.data).forEach(function (key) {
      (0, _newArrowCheck2.default)(this, _this);
      formData.append(key, option.data[key]);
    }.bind(this));
  }

  formData.append(option.filename, option.file);

  xhr.onerror = function error(e) {
    option.onError(e);
  };

  xhr.onload = function onload() {
    if (xhr.status < 200 || xhr.status >= 300) {
      return option.onError(getError(action, option, xhr), getBody(xhr));
    }

    option.onSuccess(getBody(xhr));
    return undefined;
  };

  xhr.open('post', action, true);

  if (option.withCredentials && 'withCredentials' in xhr) {
    xhr.withCredentials = true;
  }

  var headers = option.headers || {}; // if (headers['X-Requested-With'] !== null) {
  //   xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
  // }

  /* eslint-disable-next-line no-restricted-syntax */

  for (var item in headers) {
    if ((0, _has.default)(headers, item) && headers[item] !== null) {
      xhr.setRequestHeader(item, headers[item]);
    }
  }

  xhr.send(formData);
}

/***/ }),
/* 668 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "Row", {
  enumerable: true,
  get: function get() {
    return _row.default;
  }
});
Object.defineProperty(exports, "Col", {
  enumerable: true,
  get: function get() {
    return _col.default;
  }
});

var _row = _interopRequireDefault(__webpack_require__(669));

var _col = _interopRequireDefault(__webpack_require__(670));

var logger = __webpack_require__(0).get("iview:components:grid:index");

/***/ }),
/* 669 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _row_vue_vue_type_template_id_af66bc7a___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(299);
/* harmony import */ var _row_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(249);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _row_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _row_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _row_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _row_vue_vue_type_template_id_af66bc7a___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _row_vue_vue_type_template_id_af66bc7a___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 670 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _col_vue_vue_type_template_id_628db20a___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(285);
/* harmony import */ var _col_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(251);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _col_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _col_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _col_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _col_vue_vue_type_template_id_628db20a___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _col_vue_vue_type_template_id_628db20a___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 671 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "Select", {
  enumerable: true,
  get: function get() {
    return _select.default;
  }
});
Object.defineProperty(exports, "Option", {
  enumerable: true,
  get: function get() {
    return _option.default;
  }
});
Object.defineProperty(exports, "OptionGroup", {
  enumerable: true,
  get: function get() {
    return _optionGroup.default;
  }
});
exports.default = void 0;

var _select = _interopRequireDefault(__webpack_require__(257));

var _option = _interopRequireDefault(__webpack_require__(261));

var _optionGroup = _interopRequireDefault(__webpack_require__(672));

var logger = __webpack_require__(0).get("iview:components:select:index");

var _default = _select.default;
exports.default = _default;

/***/ }),
/* 672 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _option_group_vue_vue_type_template_id_146db649___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(284);
/* harmony import */ var _option_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(253);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _option_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _option_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(
  _option_group_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _option_group_vue_vue_type_template_id_146db649___WEBPACK_IMPORTED_MODULE_0__[/* render */ "a"],
  _option_group_vue_vue_type_template_id_146db649___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ "b"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),
/* 673 */,
/* 674 */,
/* 675 */,
/* 676 */,
/* 677 */,
/* 678 */,
/* 679 */,
/* 680 */,
/* 681 */,
/* 682 */,
/* 683 */,
/* 684 */,
/* 685 */,
/* 686 */,
/* 687 */,
/* 688 */,
/* 689 */,
/* 690 */,
/* 691 */,
/* 692 */,
/* 693 */,
/* 694 */,
/* 695 */,
/* 696 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: ./node_modules/babel-runtime/helpers/extends.js
var helpers_extends = __webpack_require__(27);
var extends_default = /*#__PURE__*/__webpack_require__.n(helpers_extends);

// EXTERNAL MODULE: ./node_modules/babel-runtime/helpers/typeof.js
var helpers_typeof = __webpack_require__(16);
var typeof_default = /*#__PURE__*/__webpack_require__.n(helpers_typeof);

// CONCATENATED MODULE: ./node_modules/async-validator/es/util.js


var formatRegExp = /%[sdj%]/g;

var warning = function warning() {};

// don't print warning message when in production env or node runtime
if (false) {}

function format() {
  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  var i = 1;
  var f = args[0];
  var len = args.length;
  if (typeof f === 'function') {
    return f.apply(null, args.slice(1));
  }
  if (typeof f === 'string') {
    var str = String(f).replace(formatRegExp, function (x) {
      if (x === '%%') {
        return '%';
      }
      if (i >= len) {
        return x;
      }
      switch (x) {
        case '%s':
          return String(args[i++]);
        case '%d':
          return Number(args[i++]);
        case '%j':
          try {
            return JSON.stringify(args[i++]);
          } catch (_) {
            return '[Circular]';
          }
          break;
        default:
          return x;
      }
    });
    for (var arg = args[i]; i < len; arg = args[++i]) {
      str += ' ' + arg;
    }
    return str;
  }
  return f;
}

function isNativeStringType(type) {
  return type === 'string' || type === 'url' || type === 'hex' || type === 'email' || type === 'pattern';
}

function isEmptyValue(value, type) {
  if (value === undefined || value === null) {
    return true;
  }
  if (type === 'array' && Array.isArray(value) && !value.length) {
    return true;
  }
  if (isNativeStringType(type) && typeof value === 'string' && !value) {
    return true;
  }
  return false;
}

function isEmptyObject(obj) {
  return Object.keys(obj).length === 0;
}

function asyncParallelArray(arr, func, callback) {
  var results = [];
  var total = 0;
  var arrLength = arr.length;

  function count(errors) {
    results.push.apply(results, errors);
    total++;
    if (total === arrLength) {
      callback(results);
    }
  }

  arr.forEach(function (a) {
    func(a, count);
  });
}

function asyncSerialArray(arr, func, callback) {
  var index = 0;
  var arrLength = arr.length;

  function next(errors) {
    if (errors && errors.length) {
      callback(errors);
      return;
    }
    var original = index;
    index = index + 1;
    if (original < arrLength) {
      func(arr[original], next);
    } else {
      callback([]);
    }
  }

  next([]);
}

function flattenObjArr(objArr) {
  var ret = [];
  Object.keys(objArr).forEach(function (k) {
    ret.push.apply(ret, objArr[k]);
  });
  return ret;
}

function asyncMap(objArr, option, func, callback) {
  if (option.first) {
    var flattenArr = flattenObjArr(objArr);
    return asyncSerialArray(flattenArr, func, callback);
  }
  var firstFields = option.firstFields || [];
  if (firstFields === true) {
    firstFields = Object.keys(objArr);
  }
  var objArrKeys = Object.keys(objArr);
  var objArrLength = objArrKeys.length;
  var total = 0;
  var results = [];
  var next = function next(errors) {
    results.push.apply(results, errors);
    total++;
    if (total === objArrLength) {
      callback(results);
    }
  };
  objArrKeys.forEach(function (key) {
    var arr = objArr[key];
    if (firstFields.indexOf(key) !== -1) {
      asyncSerialArray(arr, func, next);
    } else {
      asyncParallelArray(arr, func, next);
    }
  });
}

function complementError(rule) {
  return function (oe) {
    if (oe && oe.message) {
      oe.field = oe.field || rule.fullField;
      return oe;
    }
    return {
      message: oe,
      field: oe.field || rule.fullField
    };
  };
}

function deepMerge(target, source) {
  if (source) {
    for (var s in source) {
      if (source.hasOwnProperty(s)) {
        var value = source[s];
        if ((typeof value === 'undefined' ? 'undefined' : typeof_default()(value)) === 'object' && typeof_default()(target[s]) === 'object') {
          target[s] = extends_default()({}, target[s], value);
        } else {
          target[s] = value;
        }
      }
    }
  }
  return target;
}
// CONCATENATED MODULE: ./node_modules/async-validator/es/rule/required.js


/**
 *  Rule for validating required fields.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param source The source object being validated.
 *  @param errors An array of errors that this rule may add
 *  validation errors to.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function required(rule, value, source, errors, options, type) {
  if (rule.required && (!source.hasOwnProperty(rule.field) || isEmptyValue(value, type || rule.type))) {
    errors.push(format(options.messages.required, rule.fullField));
  }
}

/* harmony default export */ var rule_required = (required);
// CONCATENATED MODULE: ./node_modules/async-validator/es/rule/whitespace.js


/**
 *  Rule for validating whitespace.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param source The source object being validated.
 *  @param errors An array of errors that this rule may add
 *  validation errors to.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function whitespace(rule, value, source, errors, options) {
  if (/^\s+$/.test(value) || value === '') {
    errors.push(format(options.messages.whitespace, rule.fullField));
  }
}

/* harmony default export */ var rule_whitespace = (whitespace);
// CONCATENATED MODULE: ./node_modules/async-validator/es/rule/type.js




/* eslint max-len:0 */

var pattern = {
  // http://emailregex.com/
  email: /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,
  url: new RegExp('^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\S+(?::\\S*)?@)?(?:(?:(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[0-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))|localhost)(?::\\d{2,5})?(?:(/|\\?|#)[^\\s]*)?$', 'i'),
  hex: /^#?([a-f0-9]{6}|[a-f0-9]{3})$/i
};

var types = {
  integer: function integer(value) {
    return types.number(value) && parseInt(value, 10) === value;
  },
  float: function float(value) {
    return types.number(value) && !types.integer(value);
  },
  array: function array(value) {
    return Array.isArray(value);
  },
  regexp: function regexp(value) {
    if (value instanceof RegExp) {
      return true;
    }
    try {
      return !!new RegExp(value);
    } catch (e) {
      return false;
    }
  },
  date: function date(value) {
    return typeof value.getTime === 'function' && typeof value.getMonth === 'function' && typeof value.getYear === 'function';
  },
  number: function number(value) {
    if (isNaN(value)) {
      return false;
    }
    return typeof value === 'number';
  },
  object: function object(value) {
    return (typeof value === 'undefined' ? 'undefined' : typeof_default()(value)) === 'object' && !types.array(value);
  },
  method: function method(value) {
    return typeof value === 'function';
  },
  email: function email(value) {
    return typeof value === 'string' && !!value.match(pattern.email) && value.length < 255;
  },
  url: function url(value) {
    return typeof value === 'string' && !!value.match(pattern.url);
  },
  hex: function hex(value) {
    return typeof value === 'string' && !!value.match(pattern.hex);
  }
};

/**
 *  Rule for validating the type of a value.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param source The source object being validated.
 *  @param errors An array of errors that this rule may add
 *  validation errors to.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function type_type(rule, value, source, errors, options) {
  if (rule.required && value === undefined) {
    rule_required(rule, value, source, errors, options);
    return;
  }
  var custom = ['integer', 'float', 'array', 'regexp', 'object', 'method', 'email', 'number', 'date', 'url', 'hex'];
  var ruleType = rule.type;
  if (custom.indexOf(ruleType) > -1) {
    if (!types[ruleType](value)) {
      errors.push(format(options.messages.types[ruleType], rule.fullField, rule.type));
    }
    // straight typeof check
  } else if (ruleType && (typeof value === 'undefined' ? 'undefined' : typeof_default()(value)) !== rule.type) {
    errors.push(format(options.messages.types[ruleType], rule.fullField, rule.type));
  }
}

/* harmony default export */ var rule_type = (type_type);
// CONCATENATED MODULE: ./node_modules/async-validator/es/rule/range.js


/**
 *  Rule for validating minimum and maximum allowed values.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param source The source object being validated.
 *  @param errors An array of errors that this rule may add
 *  validation errors to.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function range(rule, value, source, errors, options) {
  var len = typeof rule.len === 'number';
  var min = typeof rule.min === 'number';
  var max = typeof rule.max === 'number';
  // 正则匹配码点范围从U+010000一直到U+10FFFF的文字（补充平面Supplementary Plane）
  var spRegexp = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g;
  var val = value;
  var key = null;
  var num = typeof value === 'number';
  var str = typeof value === 'string';
  var arr = Array.isArray(value);
  if (num) {
    key = 'number';
  } else if (str) {
    key = 'string';
  } else if (arr) {
    key = 'array';
  }
  // if the value is not of a supported type for range validation
  // the validation rule rule should use the
  // type property to also test for a particular type
  if (!key) {
    return false;
  }
  if (arr) {
    val = value.length;
  }
  if (str) {
    // 处理码点大于U+010000的文字length属性不准确的bug，如"𠮷𠮷𠮷".lenght !== 3
    val = value.replace(spRegexp, '_').length;
  }
  if (len) {
    if (val !== rule.len) {
      errors.push(format(options.messages[key].len, rule.fullField, rule.len));
    }
  } else if (min && !max && val < rule.min) {
    errors.push(format(options.messages[key].min, rule.fullField, rule.min));
  } else if (max && !min && val > rule.max) {
    errors.push(format(options.messages[key].max, rule.fullField, rule.max));
  } else if (min && max && (val < rule.min || val > rule.max)) {
    errors.push(format(options.messages[key].range, rule.fullField, rule.min, rule.max));
  }
}

/* harmony default export */ var rule_range = (range);
// CONCATENATED MODULE: ./node_modules/async-validator/es/rule/enum.js

var ENUM = 'enum';

/**
 *  Rule for validating a value exists in an enumerable list.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param source The source object being validated.
 *  @param errors An array of errors that this rule may add
 *  validation errors to.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function enumerable(rule, value, source, errors, options) {
  rule[ENUM] = Array.isArray(rule[ENUM]) ? rule[ENUM] : [];
  if (rule[ENUM].indexOf(value) === -1) {
    errors.push(format(options.messages[ENUM], rule.fullField, rule[ENUM].join(', ')));
  }
}

/* harmony default export */ var rule_enum = (enumerable);
// CONCATENATED MODULE: ./node_modules/async-validator/es/rule/pattern.js


/**
 *  Rule for validating a regular expression pattern.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param source The source object being validated.
 *  @param errors An array of errors that this rule may add
 *  validation errors to.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function pattern_pattern(rule, value, source, errors, options) {
  if (rule.pattern) {
    if (rule.pattern instanceof RegExp) {
      // if a RegExp instance is passed, reset `lastIndex` in case its `global`
      // flag is accidentally set to `true`, which in a validation scenario
      // is not necessary and the result might be misleading
      rule.pattern.lastIndex = 0;
      if (!rule.pattern.test(value)) {
        errors.push(format(options.messages.pattern.mismatch, rule.fullField, value, rule.pattern));
      }
    } else if (typeof rule.pattern === 'string') {
      var _pattern = new RegExp(rule.pattern);
      if (!_pattern.test(value)) {
        errors.push(format(options.messages.pattern.mismatch, rule.fullField, value, rule.pattern));
      }
    }
  }
}

/* harmony default export */ var rule_pattern = (pattern_pattern);
// CONCATENATED MODULE: ./node_modules/async-validator/es/rule/index.js







/* harmony default export */ var es_rule = ({
  required: rule_required,
  whitespace: rule_whitespace,
  type: rule_type,
  range: rule_range,
  'enum': rule_enum,
  pattern: rule_pattern
});
// CONCATENATED MODULE: ./node_modules/async-validator/es/validator/string.js



/**
 *  Performs validation for string types.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function string(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value, 'string') && !rule.required) {
      return callback();
    }
    es_rule.required(rule, value, source, errors, options, 'string');
    if (!isEmptyValue(value, 'string')) {
      es_rule.type(rule, value, source, errors, options);
      es_rule.range(rule, value, source, errors, options);
      es_rule.pattern(rule, value, source, errors, options);
      if (rule.whitespace === true) {
        es_rule.whitespace(rule, value, source, errors, options);
      }
    }
  }
  callback(errors);
}

/* harmony default export */ var validator_string = (string);
// CONCATENATED MODULE: ./node_modules/async-validator/es/validator/method.js



/**
 *  Validates a function.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function method(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value) && !rule.required) {
      return callback();
    }
    es_rule.required(rule, value, source, errors, options);
    if (value !== undefined) {
      es_rule.type(rule, value, source, errors, options);
    }
  }
  callback(errors);
}

/* harmony default export */ var validator_method = (method);
// CONCATENATED MODULE: ./node_modules/async-validator/es/validator/number.js



/**
 *  Validates a number.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function number(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value) && !rule.required) {
      return callback();
    }
    es_rule.required(rule, value, source, errors, options);
    if (value !== undefined) {
      es_rule.type(rule, value, source, errors, options);
      es_rule.range(rule, value, source, errors, options);
    }
  }
  callback(errors);
}

/* harmony default export */ var validator_number = (number);
// CONCATENATED MODULE: ./node_modules/async-validator/es/validator/boolean.js



/**
 *  Validates a boolean.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function boolean_boolean(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value) && !rule.required) {
      return callback();
    }
    es_rule.required(rule, value, source, errors, options);
    if (value !== undefined) {
      es_rule.type(rule, value, source, errors, options);
    }
  }
  callback(errors);
}

/* harmony default export */ var validator_boolean = (boolean_boolean);
// CONCATENATED MODULE: ./node_modules/async-validator/es/validator/regexp.js



/**
 *  Validates the regular expression type.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function regexp(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value) && !rule.required) {
      return callback();
    }
    es_rule.required(rule, value, source, errors, options);
    if (!isEmptyValue(value)) {
      es_rule.type(rule, value, source, errors, options);
    }
  }
  callback(errors);
}

/* harmony default export */ var validator_regexp = (regexp);
// CONCATENATED MODULE: ./node_modules/async-validator/es/validator/integer.js



/**
 *  Validates a number is an integer.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function integer(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value) && !rule.required) {
      return callback();
    }
    es_rule.required(rule, value, source, errors, options);
    if (value !== undefined) {
      es_rule.type(rule, value, source, errors, options);
      es_rule.range(rule, value, source, errors, options);
    }
  }
  callback(errors);
}

/* harmony default export */ var validator_integer = (integer);
// CONCATENATED MODULE: ./node_modules/async-validator/es/validator/float.js



/**
 *  Validates a number is a floating point number.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function floatFn(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value) && !rule.required) {
      return callback();
    }
    es_rule.required(rule, value, source, errors, options);
    if (value !== undefined) {
      es_rule.type(rule, value, source, errors, options);
      es_rule.range(rule, value, source, errors, options);
    }
  }
  callback(errors);
}

/* harmony default export */ var validator_float = (floatFn);
// CONCATENATED MODULE: ./node_modules/async-validator/es/validator/array.js


/**
 *  Validates an array.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function array(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value, 'array') && !rule.required) {
      return callback();
    }
    es_rule.required(rule, value, source, errors, options, 'array');
    if (!isEmptyValue(value, 'array')) {
      es_rule.type(rule, value, source, errors, options);
      es_rule.range(rule, value, source, errors, options);
    }
  }
  callback(errors);
}

/* harmony default export */ var validator_array = (array);
// CONCATENATED MODULE: ./node_modules/async-validator/es/validator/object.js



/**
 *  Validates an object.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function object_object(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value) && !rule.required) {
      return callback();
    }
    es_rule.required(rule, value, source, errors, options);
    if (value !== undefined) {
      es_rule.type(rule, value, source, errors, options);
    }
  }
  callback(errors);
}

/* harmony default export */ var validator_object = (object_object);
// CONCATENATED MODULE: ./node_modules/async-validator/es/validator/enum.js


var enum_ENUM = 'enum';

/**
 *  Validates an enumerable list.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function enum_enumerable(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value) && !rule.required) {
      return callback();
    }
    es_rule.required(rule, value, source, errors, options);
    if (value) {
      es_rule[enum_ENUM](rule, value, source, errors, options);
    }
  }
  callback(errors);
}

/* harmony default export */ var validator_enum = (enum_enumerable);
// CONCATENATED MODULE: ./node_modules/async-validator/es/validator/pattern.js



/**
 *  Validates a regular expression pattern.
 *
 *  Performs validation when a rule only contains
 *  a pattern property but is not declared as a string type.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function validator_pattern_pattern(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value, 'string') && !rule.required) {
      return callback();
    }
    es_rule.required(rule, value, source, errors, options);
    if (!isEmptyValue(value, 'string')) {
      es_rule.pattern(rule, value, source, errors, options);
    }
  }
  callback(errors);
}

/* harmony default export */ var validator_pattern = (validator_pattern_pattern);
// CONCATENATED MODULE: ./node_modules/async-validator/es/validator/date.js



function date(rule, value, callback, source, options) {
  // console.log('integer rule called %j', rule);
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  // console.log('validate on %s value', value);
  if (validate) {
    if (isEmptyValue(value) && !rule.required) {
      return callback();
    }
    es_rule.required(rule, value, source, errors, options);
    if (!isEmptyValue(value)) {
      var dateObject = void 0;

      if (typeof value === 'number') {
        dateObject = new Date(value);
      } else {
        dateObject = value;
      }

      es_rule.type(rule, dateObject, source, errors, options);
      if (dateObject) {
        es_rule.range(rule, dateObject.getTime(), source, errors, options);
      }
    }
  }
  callback(errors);
}

/* harmony default export */ var validator_date = (date);
// CONCATENATED MODULE: ./node_modules/async-validator/es/validator/required.js



function required_required(rule, value, callback, source, options) {
  var errors = [];
  var type = Array.isArray(value) ? 'array' : typeof value === 'undefined' ? 'undefined' : typeof_default()(value);
  es_rule.required(rule, value, source, errors, options, type);
  callback(errors);
}

/* harmony default export */ var validator_required = (required_required);
// CONCATENATED MODULE: ./node_modules/async-validator/es/validator/type.js



function validator_type_type(rule, value, callback, source, options) {
  var ruleType = rule.type;
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value, ruleType) && !rule.required) {
      return callback();
    }
    es_rule.required(rule, value, source, errors, options, ruleType);
    if (!isEmptyValue(value, ruleType)) {
      es_rule.type(rule, value, source, errors, options);
    }
  }
  callback(errors);
}

/* harmony default export */ var validator_type = (validator_type_type);
// CONCATENATED MODULE: ./node_modules/async-validator/es/validator/index.js















/* harmony default export */ var es_validator = ({
  string: validator_string,
  method: validator_method,
  number: validator_number,
  boolean: validator_boolean,
  regexp: validator_regexp,
  integer: validator_integer,
  float: validator_float,
  array: validator_array,
  object: validator_object,
  'enum': validator_enum,
  pattern: validator_pattern,
  date: validator_date,
  url: validator_type,
  hex: validator_type,
  email: validator_type,
  required: validator_required
});
// CONCATENATED MODULE: ./node_modules/async-validator/es/messages.js
function newMessages() {
  return {
    'default': 'Validation error on field %s',
    required: '%s is required',
    'enum': '%s must be one of %s',
    whitespace: '%s cannot be empty',
    date: {
      format: '%s date %s is invalid for format %s',
      parse: '%s date could not be parsed, %s is invalid ',
      invalid: '%s date %s is invalid'
    },
    types: {
      string: '%s is not a %s',
      method: '%s is not a %s (function)',
      array: '%s is not an %s',
      object: '%s is not an %s',
      number: '%s is not a %s',
      date: '%s is not a %s',
      boolean: '%s is not a %s',
      integer: '%s is not an %s',
      float: '%s is not a %s',
      regexp: '%s is not a valid %s',
      email: '%s is not a valid %s',
      url: '%s is not a valid %s',
      hex: '%s is not a valid %s'
    },
    string: {
      len: '%s must be exactly %s characters',
      min: '%s must be at least %s characters',
      max: '%s cannot be longer than %s characters',
      range: '%s must be between %s and %s characters'
    },
    number: {
      len: '%s must equal %s',
      min: '%s cannot be less than %s',
      max: '%s cannot be greater than %s',
      range: '%s must be between %s and %s'
    },
    array: {
      len: '%s must be exactly %s in length',
      min: '%s cannot be less than %s in length',
      max: '%s cannot be greater than %s in length',
      range: '%s must be between %s and %s in length'
    },
    pattern: {
      mismatch: '%s value %s does not match pattern %s'
    },
    clone: function clone() {
      var cloned = JSON.parse(JSON.stringify(this));
      cloned.clone = this.clone;
      return cloned;
    }
  };
}

var messages_messages = newMessages();
// CONCATENATED MODULE: ./node_modules/async-validator/es/index.js






/**
 *  Encapsulates a validation schema.
 *
 *  @param descriptor An object declaring validation rules
 *  for this schema.
 */
function Schema(descriptor) {
  this.rules = null;
  this._messages = messages_messages;
  this.define(descriptor);
}

Schema.prototype = {
  messages: function messages(_messages) {
    if (_messages) {
      this._messages = deepMerge(newMessages(), _messages);
    }
    return this._messages;
  },
  define: function define(rules) {
    if (!rules) {
      throw new Error('Cannot configure a schema with no rules');
    }
    if ((typeof rules === 'undefined' ? 'undefined' : typeof_default()(rules)) !== 'object' || Array.isArray(rules)) {
      throw new Error('Rules must be an object');
    }
    this.rules = {};
    var z = void 0;
    var item = void 0;
    for (z in rules) {
      if (rules.hasOwnProperty(z)) {
        item = rules[z];
        this.rules[z] = Array.isArray(item) ? item : [item];
      }
    }
  },
  validate: function validate(source_) {
    var _this = this;

    var o = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var oc = arguments[2];

    var source = source_;
    var options = o;
    var callback = oc;
    if (typeof options === 'function') {
      callback = options;
      options = {};
    }
    if (!this.rules || Object.keys(this.rules).length === 0) {
      if (callback) {
        callback();
      }
      return;
    }
    function complete(results) {
      var i = void 0;
      var field = void 0;
      var errors = [];
      var fields = {};

      function add(e) {
        if (Array.isArray(e)) {
          errors = errors.concat.apply(errors, e);
        } else {
          errors.push(e);
        }
      }

      for (i = 0; i < results.length; i++) {
        add(results[i]);
      }
      if (!errors.length) {
        errors = null;
        fields = null;
      } else {
        for (i = 0; i < errors.length; i++) {
          field = errors[i].field;
          fields[field] = fields[field] || [];
          fields[field].push(errors[i]);
        }
      }
      callback(errors, fields);
    }

    if (options.messages) {
      var messages = this.messages();
      if (messages === messages_messages) {
        messages = newMessages();
      }
      deepMerge(messages, options.messages);
      options.messages = messages;
    } else {
      options.messages = this.messages();
    }
    var arr = void 0;
    var value = void 0;
    var series = {};
    var keys = options.keys || Object.keys(this.rules);
    keys.forEach(function (z) {
      arr = _this.rules[z];
      value = source[z];
      arr.forEach(function (r) {
        var rule = r;
        if (typeof rule.transform === 'function') {
          if (source === source_) {
            source = extends_default()({}, source);
          }
          value = source[z] = rule.transform(value);
        }
        if (typeof rule === 'function') {
          rule = {
            validator: rule
          };
        } else {
          rule = extends_default()({}, rule);
        }
        rule.validator = _this.getValidationMethod(rule);
        rule.field = z;
        rule.fullField = rule.fullField || z;
        rule.type = _this.getType(rule);
        if (!rule.validator) {
          return;
        }
        series[z] = series[z] || [];
        series[z].push({
          rule: rule,
          value: value,
          source: source,
          field: z
        });
      });
    });
    var errorFields = {};
    asyncMap(series, options, function (data, doIt) {
      var rule = data.rule;
      var deep = (rule.type === 'object' || rule.type === 'array') && (typeof_default()(rule.fields) === 'object' || typeof_default()(rule.defaultField) === 'object');
      deep = deep && (rule.required || !rule.required && data.value);
      rule.field = data.field;
      function addFullfield(key, schema) {
        return extends_default()({}, schema, {
          fullField: rule.fullField + '.' + key
        });
      }

      function cb() {
        var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

        var errors = e;
        if (!Array.isArray(errors)) {
          errors = [errors];
        }
        if (errors.length) {
          Schema.warning('async-validator:', errors);
        }
        if (errors.length && rule.message) {
          errors = [].concat(rule.message);
        }

        errors = errors.map(complementError(rule));

        if (options.first && errors.length) {
          errorFields[rule.field] = 1;
          return doIt(errors);
        }
        if (!deep) {
          doIt(errors);
        } else {
          // if rule is required but the target object
          // does not exist fail at the rule level and don't
          // go deeper
          if (rule.required && !data.value) {
            if (rule.message) {
              errors = [].concat(rule.message).map(complementError(rule));
            } else if (options.error) {
              errors = [options.error(rule, format(options.messages.required, rule.field))];
            } else {
              errors = [];
            }
            return doIt(errors);
          }

          var fieldsSchema = {};
          if (rule.defaultField) {
            for (var k in data.value) {
              if (data.value.hasOwnProperty(k)) {
                fieldsSchema[k] = rule.defaultField;
              }
            }
          }
          fieldsSchema = extends_default()({}, fieldsSchema, data.rule.fields);
          for (var f in fieldsSchema) {
            if (fieldsSchema.hasOwnProperty(f)) {
              var fieldSchema = Array.isArray(fieldsSchema[f]) ? fieldsSchema[f] : [fieldsSchema[f]];
              fieldsSchema[f] = fieldSchema.map(addFullfield.bind(null, f));
            }
          }
          var schema = new Schema(fieldsSchema);
          schema.messages(options.messages);
          if (data.rule.options) {
            data.rule.options.messages = options.messages;
            data.rule.options.error = options.error;
          }
          schema.validate(data.value, data.rule.options || options, function (errs) {
            doIt(errs && errs.length ? errors.concat(errs) : errs);
          });
        }
      }

      var res = rule.validator(rule, data.value, cb, data.source, options);
      if (res && res.then) {
        res.then(function () {
          return cb();
        }, function (e) {
          return cb(e);
        });
      }
    }, function (results) {
      complete(results);
    });
  },
  getType: function getType(rule) {
    if (rule.type === undefined && rule.pattern instanceof RegExp) {
      rule.type = 'pattern';
    }
    if (typeof rule.validator !== 'function' && rule.type && !es_validator.hasOwnProperty(rule.type)) {
      throw new Error(format('Unknown rule type %s', rule.type));
    }
    return rule.type || 'string';
  },
  getValidationMethod: function getValidationMethod(rule) {
    if (typeof rule.validator === 'function') {
      return rule.validator;
    }
    var keys = Object.keys(rule);
    var messageIndex = keys.indexOf('message');
    if (messageIndex !== -1) {
      keys.splice(messageIndex, 1);
    }
    if (keys.length === 1 && keys[0] === 'required') {
      return es_validator.required;
    }
    return es_validator[this.getType(rule)] || false;
  }
};

Schema.register = function register(type, validator) {
  if (typeof validator !== 'function') {
    throw new Error('Cannot register a validator by type, validator is not a function');
  }
  es_validator[type] = validator;
};

Schema.warning = warning;

Schema.messages = messages_messages;

/* harmony default export */ var es = __webpack_exports__["default"] = (Schema);

/***/ })
/******/ ]);
});
//# sourceMappingURL=iview.js.map