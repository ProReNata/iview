{"version":3,"sources":["webpack://iview/webpack/universalModuleDefinition","webpack://iview/webpack/bootstrap","webpack://iview/./node_modules/js-logger/src/logger.js","webpack://iview/./node_modules/@babel/runtime/helpers/interopRequireDefault.js","webpack://iview/./src/components/icon/icon.vue?a747","webpack://iview/src/components/icon/icon.vue","webpack://iview/./src/components/icon/icon.vue?7edc","webpack://iview/./src/components/icon/icon.vue?3ea0","webpack://iview/./node_modules/@babel/runtime/helpers/objectSpread.js","webpack://iview/./node_modules/lodash/castArray.js","webpack://iview/./Global/Assets/oneOf.js","webpack://iview/./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack://iview/./src/components/icon/index.js","webpack://iview/./node_modules/@babel/runtime/helpers/interopRequireWildcard.js","webpack://iview/./node_modules/lodash/keys.js","webpack://iview/./node_modules/lodash/_overArg.js","webpack://iview/./src/components/icon/icon.vue","webpack://iview/./node_modules/@babel/runtime/helpers/newArrowCheck.js","webpack://iview/./node_modules/lodash/_listCacheClear.js","webpack://iview/./node_modules/lodash/_listCacheDelete.js","webpack://iview/./node_modules/lodash/eq.js","webpack://iview/./node_modules/lodash/_listCacheGet.js","webpack://iview/./src/components/richtext/Richtext.vue?4b55","webpack://iview/src/components/richtext/Richtext.vue","webpack://iview/./node_modules/lodash/_listCacheHas.js","webpack://iview/./node_modules/lodash/_listCacheSet.js","webpack://iview/external \"@fortawesome/fontawesome-svg-core\"","webpack://iview/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://iview/external \"@fortawesome/pro-solid-svg-icons\"","webpack://iview/external \"@fortawesome/pro-regular-svg-icons\"","webpack://iview/external \"@fortawesome/pro-light-svg-icons\"","webpack://iview/external \"@fortawesome/vue-fontawesome\"","webpack://iview/./node_modules/lodash/findKey.js","webpack://iview/./src/components/richtext/Richtext.vue?3ae7","webpack://iview/./src/components/richtext/Richtext.vue?eea9","webpack://iview/./node_modules/lodash/_baseFindKey.js","webpack://iview/./node_modules/lodash/_baseForOwn.js","webpack://iview/./node_modules/lodash/_baseFor.js","webpack://iview/./node_modules/lodash/_createBaseFor.js","webpack://iview/./node_modules/lodash/_baseIteratee.js","webpack://iview/./Global/Assets/isProduction.js","webpack://iview/external \"vue\"","webpack://iview/./node_modules/lodash/memoize.js","webpack://iview/./node_modules/lodash/_MapCache.js","webpack://iview/./node_modules/@babel/runtime/helpers/typeof.js","webpack://iview/./Global/Assets/not.js","webpack://iview/./src/components/richtext/index.js","webpack://iview/./src/components/richtext/Richtext.vue","webpack://iview/./Global/Assets/deepFreeze.js","webpack://iview/./src/components/richtext/redactor-3_1_6/redactor/redactor.js","webpack://iview/./src/components/richtext/redactor-3_1_6/redactor/_langs/sv.js","webpack://iview/./Global/Assets/isOneOf.js","webpack://iview/./node_modules/lodash/isArray.js","webpack://iview/./node_modules/lodash/_assocIndexOf.js"],"names":["root","factory","exports","module","require","define","amd","self","window","global","Function","__WEBPACK_EXTERNAL_MODULE__5__","__WEBPACK_EXTERNAL_MODULE__39__","__WEBPACK_EXTERNAL_MODULE__40__","__WEBPACK_EXTERNAL_MODULE__41__","__WEBPACK_EXTERNAL_MODULE__42__","__WEBPACK_EXTERNAL_MODULE__43__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","logHandler","Logger","VERSION","contextualLoggersByNameMap","scope","func","apply","arguments","merge","args","target","length","defineLogLevel","TRACE","DEBUG","INFO","TIME","WARN","ERROR","OFF","ContextualLogger","defaultContext","this","context","setLevel","filterLevel","log","info","newLevel","getLevel","enabledFor","lvl","trace","invoke","debug","warn","error","time","label","timeEnd","level","msgArgs","L","globalLogger","setHandler","createDefaultHandler","options","formatter","messages","unshift","timerStartTimeByLabelMap","invokeConsoleMethod","hdlr","console","Array","slice","timerLabel","Date","getTime","useDefaults","defaultLevel","undefined","obj","default","__webpack_exports__","_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_icon_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__","_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_icon_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default","__WEBPACK_IMPORT_KEY__","_vue","_interopRequireDefault","_fontawesomeSvgCore","_proSolidSvgIcons","_proRegularSvgIcons","_proLightSvgIcons","_vueFontawesome","_findKey","_memoize","_isOneOf","library","add","fas","far","fal","ICON_WEIGHTS","freeze","isOneOfIconWeights","ICON_LIBRARIES","isOneOfIconNames","isIconName","_ref","iconName","some","iconLibrary","Boolean","WEIGHT_MAP","_Object$create","_defineProperty2","vueObject","props","fw","type","required","String","validator","weight","components","FontAwesomeIcon","FontAwesomeLayers","FontAwesomeLayersText","computed","icon","definition","push","el","document","createElement","getIconAsHTML","_objectSpread2","propsData","$mount","$el","outerHTML","render","_h","$createElement","_self","_c","_g","_b","attrs","fixed-width","$attrs","$listeners","staticRenderFns","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","forEach","isArray","comparate","comparates","fallback","_castArray","includes","normalizeComponent","scriptExports","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","_compiled","functional","_scopeId","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","_icon","_interopRequireWildcard","newObj","desc","set","nativeKeys","overArg","transform","arg","_icon_vue_vue_type_template_id_52ceed03___WEBPACK_IMPORTED_MODULE_0__","_icon_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__","_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__","component","innerThis","boundThis","TypeError","__data__","size","assocIndexOf","splice","data","index","pop","other","_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_Richtext_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__","_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_node_modules_source_map_loader_index_js_Richtext_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default","_isProduction","_not","_deepFreeze","BUTTONS_ICON_MAP","BUTTONS","buttons","JSON","parse","stringify","$R","redactor","config","disabled","placeholder","buttonIconHtmlMap","air","lang","styles","tabindex","tabKey","prefixCls","editorState","watch","api","newValue","editor","isFocus","setCode","created","getButtonHTMLMap","mounted","init","methods","_this","reduce","accumulator","button","_newArrowCheck2","getCallbacks","_this2","changed","html","handleInput","val","$emit","app","$refs","$parent","setButtonIcons","_this3","reButton","toolbar","getButton","setIcon","_buttons$button","tooltip","title","setTooltip","configurable","writable","baseFindKey","baseForOwn","baseIteratee","predicate","ref","class","domProps","collection","eachFunc","result","baseFor","iteratee","createBaseFor","fromRight","keysFunc","iterable","process","MapCache","FUNC_ERROR_TEXT","memoize","resolver","memoized","cache","has","Cache","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","ListCache","entries","clear","entry","_typeof2","iterator","constructor","_typeof","_Richtext","_Richtext_vue_vue_type_template_id_5a058804___WEBPACK_IMPORTED_MODULE_0__","_Richtext_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__","propNames","getOwnPropertyNames","deepFreeze","propNamesIteratee","_propNamesIteratee","Ajax","settings","post","AjaxRequest","method","defaults","url","before","success","async","headers","extend","toUpperCase","prepareData","xhr","XMLHttpRequest","open","setHeaders","send","obj1","obj2","isFormData","toParams","setRequestHeader","FormData","isComplete","status","onload","loaded","response","json","parseJson","statusText","str","e","map","k","encodeURIComponent","join","DomCache","DomExpando","DomHClass","DomHMClass","Dom","selector","ready","fn","readyState","addEventListener","dom","nodes","nodeType","childNodes","test","_query","_slice","RegExp","$1","elements","container","children","innerHTML","_toArray","getAll","eq","first","last","contents","each","callback","len","is","node","Node","indexOf","matches","msMatchesSelector","webkitMatchesSelector","not","find","parentNode","parents","_getContext","closest","isNode","next","_getSibling","nextElement","prev","prevElement","css","_getHeightOrWidth","getComputedStyle","style","attr","checked","_getBooleanFromStr","getAttribute","setAttribute","reDataAttr","attributes","replacer","g","nodeName","dataName","match","replace","_isObjectString","_toObject","_isNumber","parseFloat","removeAttr","split","removeAttribute","removeData","dataset","dataindex","dataget","cacheIndex","nextCacheIndex","addClass","_eachClass","removeClass","toggleClass","hasClass","classList","contains","empty","append","text","textContent","after","_inject","frag","insertAdjacentHTML","elms","reverse","insertBefore","nextSibling","appendChild","prepend","firstChild","wrap","wrapper","unwrap","$node","replaceWith","docFrag","createDocumentFragment","replaceChild","remove","removeChild","clone","events","copy","_clone","_cloneEvents","show","_hasDisplayNone","isHidden","isHiddenMobile","display","hide","scrollTop","isWindow","isDocument","scrollingElement","body","documentElement","pageYOffset","scrollTo","offset","_getDim","position","width","adjust","_getSize","height","outerWidth","_getInnerOrOuter","outerHeight","innerWidth","innerHeight","click","_triggerEvent","focus","trigger","names","ev","CustomEvent","bubbles","cancelable","createEvent","initCustomEvent","dispatchEvent","on","handler","one","event","_getEventName","namespace","_getEventNamespace","_getOneHandler","_e","off","testEvent","testNamespace","testEventNamespace","testPositive","_offEvent","serialize","asObject","z","opt","selected","_toParams","ajax","_queryContext","querySelectorAll","element","getElementById","getElementsByClassName","getElementsByTagName","querySelector","res","_events","cloneNode","arr","condition","handlers","toString","removeEventListener","_getDocSize","Math","max","captype","round","_adjustResultHeightOrWidth","charAt","$targets","fixStyle","tmp","thisStyle","fix","isBorderBox","boxSizing","borderTopWidth","borderBottomWidth","marginTop","marginBottom","borderLeftWidth","borderRightWidth","marginLeft","marginRight","top","left","_getPosition","offsetTop","offsetLeft","_getOffset","rect","getBoundingClientRect","doc","ownerDocument","docElem","win","defaultView","clientTop","pageXOffset","clientLeft","sibling","NodeList","params","_encodeUri","isNaN","search","currentStyle","uuid","RedactorApp","version","services","classes","plugins","mixins","modals","keycodes","BACKSPACE","DELETE","UP","DOWN","ENTER","SPACE","ESC","TAB","CTRL","META","SHIFT","ALT","RIGHT","LEFT","env","plugin","service","mixin","jQuery","toArray","instance","isApi","App","methodValue","isDestroy","translations","F","inherit","addLang","current","f","prop","__lookupGetter__","__defineGetter__","super","exception","extended","deep","opts","animation","direction","spellcheck","structure","scrollTarget","stylesClass","showSource","inline","breakline","markup","enterKey","clickToEdit","clickToSave","clickToCancel","focusEnd","minHeight","maxHeight","maxWidth","callbacks","preClass","preSpaces","tabAsSpaces","autosave","autosaveName","autosaveData","toolbarFixed","toolbarFixedTarget","toolbarFixedTopOffset","toolbarExternal","toolbarContext","formatting","formattingAdd","formattingHide","buttonsTextLabeled","buttonsAdd","buttonsAddFirst","buttonsAddAfter","buttonsAddBefore","buttonsHide","buttonsHideOnMobile","imageUpload","imageUploadParam","imageData","imageEditable","imageCaption","imageLink","imagePosition","imageResizable","imageFloatMargin","imageFigure","fileUpload","fileUploadParam","fileData","fileAttachment","uploadData","dragUpload","multipleUpload","clipboardUpload","uploadBase64","linkTarget","linkTitle","linkNewTab","linkNofollow","linkSize","linkValidation","cleanOnEnter","cleanInlineOnEnter","paragraphize","removeScript","removeNewLines","removeComments","replaceTags","b","strike","pastePlainText","pasteLinkTarget","pasteImages","pasteLinks","pasteClean","pasteKeepStyle","pasteKeepClass","pasteKeepAttrs","pasteBlockTags","pasteInlineTags","activeButtons","strong","em","del","u","activeButtonsAdd","activeButtonsObservers","autoparse","autoparseStart","autoparsePaste","autoparseLinks","autoparseImages","autoparseVideo","shortcodes","p.","format","quote.","pre.","h1.","h2.","h3.","h4.","h5.","h6.","*.","shortcodesAdd","shortcuts","ctrl+shift+m, meta+shift+m","ctrl+b, meta+b","ctrl+i, meta+i","ctrl+u, meta+u","ctrl+h, meta+h","ctrl+l, meta+l","ctrl+k, meta+k","ctrl+alt+0, meta+alt+0","ctrl+alt+1, meta+alt+1","ctrl+alt+2, meta+alt+2","ctrl+alt+3, meta+alt+3","ctrl+alt+4, meta+alt+4","ctrl+alt+5, meta+alt+5","ctrl+alt+6, meta+alt+6","ctrl+shift+7, meta+shift+7","ctrl+shift+8, meta+shift+8","shortcutsAdd","grammarly","notranslate","bufferLimit","emptyHtml","markerChar","imageTypes","inlineTags","blockTags","regex","youtube","vimeo","imageurl","input","zindex","modes","original","image","file","link","bold","italic","deleted","underline","superscript","subscript","bold-abbr","italic-abbr","deleted-abbr","underline-abbr","superscript-abbr","subscript-abbr","lists","link-insert","link-edit","link-in-new-tab","unlink","cancel","close","insert","save","delete","edit","paragraph","quote","code","heading1","heading2","heading3","heading4","heading5","heading6","filename","optional","unorderedlist","orderedlist","outdent","indent","horizontalrule","upload","upload-label","accessibility-help-label","caption","bulletslist","numberslist","image-position","none","right","center","undo","redo","dropdown","tag","blockquote","pre","h1","h2","h3","h4","h5","h6","sup","sub","observe","ul","ol","line","instances","started","stopped","rootElement","rootOpts","dragInside","dragComponentInside","$win","$doc","$body","editorReadOnly","buildServices","buildModules","buildPlugins","start","broadcast","stop","isStarted","isStopped","core","bindable","inj","isDragInside","setDragInside","isDragComponentInside","setDragComponentInside","getDragComponentInside","isReadOnly","enableReadOnly","clearActive","disableButtons","disableReadOnly","enableButtons","callMessageHandler","utils","checkProperty","moduleName","isApp","isCallback","isService","isPlugin","isModule","callInstanceMethod","isInstanceExists","Error","buildArgs","applyArgs","selection","_clearAll","clearClass","tags","$elements","getElements","_unwrapSpanWithoutAttr","restore","clearStyle","clearAttr","_removeAllAttr","toggle","className","newVal","oldVal","isRgb","rgb2hex","hex2long","toLowerCase","_convertStyleQuotes","removeEmptyAttr","nodeAttr","removeAttributeNode","finalNodes","tagName","cmnt","vars","_build","rebuild","_set","_loop","path","animationOpt","duration","iterate","delay","timing","prefix","AnimatePlay","effect","hidableEffects","prefixes","buildAnimationOff","isInanimate","inanimate","animate","isHidable","buildHideClass","isAnimated","setTimeout","complete","clean","setStart","_setCaret","setEnd","setBefore","setAfter","isStart","_isStartOrEnd","isEnd","setAtEnd","inspector","getTag","range","createRange","_isInPage","textNode","createInvisibleChar","setStartBefore","collapse","selectNodeContents","setRange","setAtStart","isInline","isEmpty","insertNode","setAtBefore","setAtAfter","setStartAfter","setAtPrev","previousSibling","_isEmptyTextNode","previousElementSibling","setAtNext","nextElementSibling","getNode","_setStart","isText","findFirstNode","item","getFirstElement","dataItem","isComponent","getComponent","isComponentType","isFigcaption","findLastNode","table","getTable","tableData","setActive","_setInline","_setEnd","getLastElement","_setBefore","isFirstTableCell","isFirstListItem","getList","isBlock","_setAfter","isLastTableCell","_hasInlineChild","_getStartEndNode","trimSpaces","isComponentEditable","end","pos","getFirstNode","getLastNode","isInlineTag","trim","removeInvisibleChars","getFigcaption","isTable","isList","sel","anchorNode","isInEditor","isEditor","isCollapsed","getRange","isBackwards","backwards","anchorOffset","focusNode","focusOffset","collapsed","detach","isIn","getCurrent","block","getBlock","blocks","getBlocks","isTableCellTag","isAll","isNonEditable","isActive","output","getElement","getHtml","getText","hasNonEditable","$wrapper","getSelection","removeAllRanges","addRange","setAll","saveScroll","disableNonEditables","marker","build","restoreMarkers","getComponentCodeElement","enableNonEditables","restoreScroll","rangeCount","getRangeAt","getTextBeforeCaret","num","cloneRange","getTextAfterCaret","clonedRange","endContainer","endOffset","getPosition","startOffset","startContainer","bottom","getActive","getParent","isElement","getInline","_isInlineNode","getInlineFirst","getInlineAll","inlines","isBlockTag","getInlinesAllSelected","getInlines","all","textNodes","getNodes","textnodes","_isTextSelected","_filterNodesByTags","filteredNodes","_isInNodesArray","inside","_filterInlinesInside","_filterBlocksFirst","activeComponent","_getNodesComponent","_getRangeSelectedNodes","_filterServicesNodes","_filterEditor","_filterNodesTexts","_filterNodesElements","cloneContents","cleaner","collapseToStart","collapseToEnd","saveActiveComponent","savedComponent","restoreActiveComponent","_clearSaved","saved","savedElement","caret","saveMarkers","_getNextNode","hasChildNodes","startNode","endNode","$editor","getChildNodes","commonAncestorContainer","skip","keepbr","passtexts","nodeTag","isFirst","isCellParent","containsNode","$element","_buildType","isType","getType","scrolltop","pasting","_isContenteditableFocus","startFocus","endFocus","isPasting","enablePasting","disablePasting","_getScrollTarget","$noneditables","isSourceMode","keeplists","isEmptyHtml","$active","activeElement","setEmpty","editableElement","$target","$container","$source","content","_buildName","_buildStartedContent","getCode","getName","getStartedContent","insertion","isNameGenerated","rebuildStartedContent","sourceElement","$statusbar","items","update","$item","getItems","removeItems","dropdownOpened","buttonsObservers","_extendActiveButtons","stopObservers","$toolbar","observer","setButtonsInactive","_inlinesToTags","detector","isMobile","isAir","isFixed","isContextBar","isTarget","getWrapper","getDropdown","getTargetElement","$btn","_findButton","getButtonByIndex","getButtons","_findButtons","getButtonsKeys","addButton","btnObj","_getButtonIndex","$button","$elm","addButtonFirst","addButtonAfter","addButtonBefore","addButtonObserver","setButtons","setDropdown","$buttons","setInactive","setButtonsActive","disable","enable","_init","isDisabled","hasIcon","message","setMessage","setApi","setTitle","alt","aria-label","$icon","_buildTooltip","hideTooltip","preventDefault","_parseTitle","_parseTooltip","_buildCallback","_buildAttributes","_buildObserver","_buildIcon","href","rel","role","isHtml","isDesktop","$items","isOpened","$dropdown","getItem","getItemsByClass","classname","_closeAll","_observe","_handleKeyboard","updatePosition","_isButton","_close","btnHeight","btnWidth","topOffset","leftPos","_buildDom","_buildItems","_buildFormattingItems","which","$span","getTitle","storedComponents","storedImages","storedLinks","deniedTags","convertRules","unconvertRules","reComments","reSpacedEmpty","reScriptTag","addConvertRules","addUnconvertRules","encodePreCode","convert","storeComponents","_setSpanAttr","_setStyleCache","removeTags","_removeScriptTag","_replaceScriptTag","_isSpacedEmpty","restoreComponents","_cleanWrapped","removeMarkers","removeInvisibleSpaces","_isParagraphEmpty","removeServiceTagsAndAttrs","removeSpanWithoutAttributes","removeFirstBlockBreaklineInHtml","_unreplaceScriptTag","_setPreClass","_setLinkNofollow","cleanNewLines","unconvert","removeEmptyAttributes","cleanSpacesInPre","tidy","paste","isMsWord","_isHtmlMsWord","_cleanGDocs","_cleanMsWord","exceptedTags","removeTagsExcept","buildWrapper","$elms","filterStyle","filterClass","filterAttrs","$li","getWrapperHtml","storeLinks","storeImages","getPlainText","_replaceNlToBr","restoreLinks","restoreImages","getFlatText","$div","innerText","replaceToTag","replaceNbspToSpaces","replaceBlocksToBr","removeNl","removeBrAtEnd","denied","re","$0","except","encodeHtml","encodeEntities","matched","_encodeOuter","_encodePreCodeLine","_decodeMarkers","decodeEntities","encodePhpCode","getElementsFromHtml","_storeMatched","_restoreMatched","spaces","floor","exec","parseInt","_parseWordLists","hasAttribute","lines","space","lastLevel","pnt","currentLevel","txt","listTag","$list","stored","encoded","rules","_convertImage","_convertLine","_convertIframe","_convertTable","_convertForm","_convertCode","_convertWidget","_setContenteditableCode","isIe","_acceptExtraRules","_unconvertWidget","_unconvertForm","_unconvertTable","_unconvertImages","_removeTypes","lastChild","_isNonEditable","getRandomId","$link","$figure","_setFigure","_wrapFigure","src","isVideo","encodeURI","decodeURI","hasFigcaption","hasStyle","$code","remStart","remEnd","paragraphizeTags","_isConverted","_convert","markupTag","_storeTags","_trimEmptyLines","_restoreTags","replacement","createTextNode","_isDisabled","_isEmptyHtml","userAgent","navigator","isWebkit","isFirefox","v","documentMode","ie","isIpad","trimmed","_getString","_setComponentOffset","charIndex","nodeStack","foundStart","nextCharIndex","_isFigcaptionNext","nodeValue","_extendTags","_isTag","isHeadingTag","$component","getComponentType","isComponentActive","isPre","getPre","isCode","_getLastOrFirstListItem","isLastListItem","_getLastOrFirstTableCell","isHeading","getHeading","isBlockquote","getBlockquote","isDl","getDl","isParagraph","getParagraph","isLink","getLink","isFile","getFile","hasParent","_getClosestNode","getParentList","_getClosestUpNode","getListItem","getTableCell","$td","getImageElement","_getClosestElement","list","id","_getPos","buildHtml","side","atStart","cloned","setEndBefore","$context","$marker","_restoreInject","activeClass","findSiblings","cell","_find","$caret","_buildCaret","setOnEvent","contextmenu","executeScripts","scripts","$script","head","eval","fragment","isFragment","createFragment","_collapseSelection","_insertFragment","_sendNodes","insertBreakLine","insertNewline","insertText","insertHtml","insertChar","charhtml","insertRaw","insertToEnd","lastNode","$lastNode","$newNode","insertPoint","markerInserted","x","clientX","y","clientY","caretPositionFromPoint","offsetNode","caretRangeFromPoint","insertToPoint","point","insertToOffset","parsedInput","parseHtml","_insertToAllSelected","dataCurrent","_getCleanedInput","isFigure","_isFigure","isComponentSpan","_isComponentSpan","isInsertedText","_insertToEmptyEditor","_insertToWidget","_insertToInline","splitNode","_insertToCode","_insertToPre","_hasBlocksAndImages","_isPlainHtml","_containsTags","_buildList","insertedHtml","dataInserted","normalizeTextNodes","deleteContents","isLastInline","_isLastInline","ucfirst","isPreformatted","_getContainer","createTmpContainer","parentListTag","_hasFigureOrTable","_hasBlocks","_isHtmlString","_prepareTag","_format","_getTags","_wrapInsideTable","clearFormat","replacedTag","_getTextNodesData","_replaceBlocks","_getReplacedTag","nextBr","_getChildTextNodes","_combinePre","_cleanBlocks","_isToggleFormatType","firstNode","count","combinedNodes","$current","$next","newline","headings","_isFormat","arrangeTag","formatCollapsed","formatUncollapsed","replaced","$secondPart","extractedContent","$inline","dataInline","hasSameArgs","insertInline","extractHtmlFromCaret","cloneAttributes","$breaked","$last","same","nodeAttrValue","origRules","styleToObj","innerCount","ruleName","ruleValue","_convertTags","_convertToStrike","execCommand","_clearDecoration","_revertToInlines","_clearEmptyStyle","_normalizeBlocks","_revertTags","_replaceToStrike","_forceRemoveClass","removeFromArrayByValue","textDecoration","textDecorationLine","_clearEmptyStyleAttr","escapeRegExp","$objects","$object","_isKey","reTags","imagesMatches","$video","_formatLinks","_restoreReplaced","enter","_convertToRegExp","$img","setSrc","$cloned","linkProtocol","regexB","substring","decodeURIComponent","observeImages","_addImage","observeFiles","_addFile","setStatus","getChanges","searchInvisibleChars","trimInvisibleChars","div","extractContents","createMarkup","createMarkupBefore","exclude","elems","thisArg","newArr","recursive","nestedNodes","getChildElements","_getFirst","_getLast","$replaced","ax","a","elFrom","elTo","rule","extendData","serializedData","_setData","normalize","rgb","possible","random","$box","$bar","_is","_destroy","onstart","_startStop","onstop","onenable","ondisable","_buildModes","_buildMarkup","_redefineOptions","_isRootOption","autoparser","onenablefocus","_enableFocus","oncontextmenu","onclick","onkeyup","onenablereadonly","_enableReadOnly","ondisablereadonly","_disableReadOnly","onautoparseobserve","onplaceholder","_buildPlaceholder","_togglePlacehodler","_buildEvents","_buildOptions","_buildAccesibility","classesEditor","_destroyEvents","contenteditable","_disableBrowsersEditing","max-width","margin","aria-labelledby","_enableFocusSource","_enableFocusEditor","setSelectionRange","attachEvent","returnValue","destroy","_getEditables","blurNamespace","eventsList","isFocused","isBlured","blur","targets","stopBlur","cut","_passSelectionToClipboard","drop","originalEvent","stopPropagation","_removeOverClass","$dragComponent","dataTransfer","getData","dragenter","dragstart","_setDragData","dragover","dragleave","detail","pad","pageY","keydown","keyup","mouseup","touchstart","_passAllToClipboard","clipboard","clipboardData","setData","dt","effectAllowed","$label","aria-hidden","syncedHtml","onstartcode","sourceContent","startContent","syncContent","onstartcodeshow","ontrytosync","sync","onhardsync","_syncing","_buildClasses","sourceSelection","editorHtml","insertMarkersToEditor","editorHeight","_onChangedSource","_onTabKey","_onFocus","setSelectionOffsetSource","_disableButtons","_setActiveSourceButton","insertMarkersToSource","_enableButtons","_setInactiveSourceButton","isOffset","isOffsetEnd","_isSync","timeout","clearTimeout","keyCode","selectionStart","selectionEnd","markersOffset","markersOffsetEnd","_getHtmlAndRemoveMarkers","startMarker","endMarker","_strpos","markerStart","markerEnd","markerLength","_enlargeOffset","substr","haystack","needle","htmlLength","observerUnit","MutationObserver","subtree","childList","characterData","characterDataOldValue","disconnect","mutations","mutation","onstartclicktoedit","_isEnabled","buttonSave","buttonCancel","_setFocus","objected","enabled","statusbar","oncontextbar","$contextbar","_buildPosition","barWidth","barHeight","docScrollTop","targetOffset","leftFix","topFix","_buildTitle","_buildMessage","_toggle","toolbarModule","onsource","resetPosition","opened","createSourceHelper","destroySourceHelper","closed","openSelected","onobserve","onfocus","_setExternalOnFocus","onsourcefocus","onempty","_buildButtons","_initToolbar","_initButtons","_buildImageButton","_buildFileButton","_buildSourceButton","_buildAdditionalButtons","_buildHiddenButtons","btns","_removeExistButtons","setExternal","clicks","$airHelper","_isSelection","_open","_openCmd","_isOpened","dataTarget","isModalTarget","isButtonCall","_doOpen","containerOffset","winWidth","toolbarWidth","isDropdownCall","$fixedTarget","reset","_doFixed","isHeight","toolbarHeight","boxOffset","boxEnd","scrollOffset","fixedScrollTimeout","isExternalMultiple","_findToolbars","$toolbars","$external","_buildExternal","_buildFixed","_initExternal","_hideToolbarsExceptFirst","contextbar","_buildWrapper","_buildElement","_initWrapper","data-redactor-type","isCurrentLink","currentText","onmodal","$modal","$form","_setFormData","_setFormFocus","_validateData","_update","_insert","_unlink","onbutton","_observeButton","ondropdown","_observeUnlink","_observeEdit","_getCurrent","$point","_truncateText","_buildCurrent","_getModalData","_getLinks","_resetCurrent","_setLinkData","links","_insertSingle","_removeInSelection","_insertMultiple","$clonedLink","_isCurrentTextChanged","_deleteContents","textContext","isTextChanged","linkData","commands","_isLink","handle","currentLink","setError","getField","reUrl","_get","_get_target","_get_url","_get_title","_get_text","_findDeepestChild","_set_target","_set_text","_set_title","_set_url","_cleanUrl","_isMailto","_isUrl","depth","child","childResult","selectionMarkers","$overlay","resize","setWidth","_buildDefaults","_openUrl","_openTemplate","template","_createModal","_buildModalBox","_buildOverlay","_buildModal","_buildModalForm","_buildModalCommands","_broadcast","_buildModalTabs","_opened","_handleEscape","getBody","_handleEnter","_needToClose","_closed","$modalForm","setHeight","$footer","getFooter","_handleCommand","$tabs","_showTab","getForm","isCloseNode","command","getHeader","$modalHeader","$modalBody","$modalFooter","margin-left","windowHeight","$modalClose","_buildClose","_buildHeader","_buildBody","_buildFooter","_buildTemplate","_getFieldEventName","_clearError","clearformat","clearstyle","clearclass","clearattr","onsynced","_send","_complete","lastShiftKey","onpaste","onkeydown","ctrlKey","metaKey","altKey","_selectAll","arrowKeys","isKeys","isArrowKeys","isXKey","isAlphaKeys","shiftKey","_isArrowKey","_isDeleteKey","_isRightLeftKey","_isExitVariable","_isRightDownKey","_isExitOnDownRight","_selectComponent","_isLeftUpKey","_isExitOnUpLeft","_exitPrevElement","isEndEditor","_exitNextElement","isNext","siblingBlock","_selectComponentItem","_removeActiveComponent","_removeAllSelectedTable","_detectVariableOrNonEditable","_traverseBackspace","_traverseDelete","_removeUnwantedStyles","_removeEmptySpans","_removeSpanTagsInHeadings","_removeInlineTagsInPre","isBlockStart","isBlockEnd","isCurrentStart","isCurrentEnd","isCurrentStartSpace","isCurrentEndSpace","_isVariable","_getBlock","dataNext","isNextBlock","$currentList","$first","$lists","$prev","dataPrev","isPrevBlock","$newnode","_replaceBlock","$block","_isNeedToReplaceBlock","_insertBreak","_isExit","_traverse","_disable","isParagraphExit","_isExitableBlock","isBreaklineExit","_isExitableDblBreak","_exitFromElement","blockTag","_traverseDl","nextDd","nextDt","dd","_clearBlock","_isNeedToCleanBlockStyle","pasteHtml","pointInserted","dropPasted","isRawCode","_isPlainText","files","getAsFile","_insertFiles","_restoreSelection","returned","isImage","isClipboard","worked","hotkeys","8","9","10","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","59","61","96","97","98","99","100","101","102","103","104","105","106","107","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","144","145","173","186","187","188","189","190","191","192","219","220","221","222","hotkeysShiftNums","`","1","2","3","4","5","6","7","0","-","=",";","'",",",".","/","\\","_handler","special","character","fromCharCode","modif","cmdKeys","specialKey","_insertHardTab","_tabCode","progress","paramName","_buildInput","_buildBox","$uploadbox","box","_onDropBox","_onDragOver","_onDragLeave","$placeholder","_onChange","_onClick","_onDrop","_clear","_setStatusDrop","_setStatusHover","_removeStatusHover","_setStatusError","_setStatusSuccess","_getUploadParam","_buildData","_sendData","Promise","$pre","_initElement","onform","_remove","imageedit","storage","justResized","oninsert","_observeImages","onstarted","resizer","ondropimage","onbottomclick","onimageresizer","onupload","_uploadError","_change","imagedrop","imagereplace","_setUpload","$image","_save","onimage","resized","_isImage","multiple","_createImageAndStore","inserted","_removeSpaceBeforeFigure","img","_removeInvisibleSpace","align","modal","changeImage","$previewBox","_setReplaceUpload","_buildPreview","_buildPreviewUpload","$preview","$previewImg","$desc","_set_src","_set_id","_set_caption","$figcaption","_set_align","imageFloat","imageMargin","textAlign","positions","alignClass","float","text-align","_set_link","_findLink","_get_src","_get_id","_get_caption","_get_align","_get_link","_setResizerPosition","$resizableBox","$resizableImage","$resizer","leftOffset","resizerWidth","resizerHeight","resizeHandle","pageX","ratio","targetTouches","_start","_move","_stop","_getResizableBoxWidth","ondropfile","filedrop","$file","_createFileAndStore","_insertAsAttachment","wrapAttachment","modalFormData","_truncateUrl","$remover","removeAttachment","$a","state","passed","keyPressed","savedHtml","savedOffset","undoStorage","redoStorage","_listen","onsyncing","onbuffer","onstate","_isUndo","_isRedo","_saveState","_getUndo","_getRedo","_setUndo","ctrl","cmd","_hasUndo","_removeOverStorage","_setRedo","buffer","_hasRedo","_observeDropdown","_getBlocks","_isUnformat","_unformat","$prevChild","$newList","nextItems","nextList","$listItem","$liItem","isTop","isMiddle","isBottom","_getAllNext","_createUnformatContainer","$childList","countLists","_uniteBlocks","_createList","_createListItem","$oldList","lastcell","$cell","_isUniteBlock","selectedItems","_unformatEntire","_getItemsPosition","_unformatAtSide","ci","$secondList","$innerLists","sFirst","sLast","_observeButtonsList","itemOutdent","itemIndent","_observeIndent","isIndent","param","Redactor","upload-change-label","insert-table","insert-row-above","insert-row-below","insert-column-left","insert-column-right","add-head","delete-head","delete-column","delete-row","delete-table","fullscreen","fontcolor","highlight","fontfamily","remove-font-family","remove-size","_oneOf","array"],"mappings":"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","file":"components/richtext.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vue\"), require(\"@fortawesome/fontawesome-svg-core\"), require(\"@fortawesome/pro-solid-svg-icons\"), require(\"@fortawesome/pro-regular-svg-icons\"), require(\"@fortawesome/pro-light-svg-icons\"), require(\"@fortawesome/vue-fontawesome\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"iview\", [\"vue\", \"@fortawesome/fontawesome-svg-core\", \"@fortawesome/pro-solid-svg-icons\", \"@fortawesome/pro-regular-svg-icons\", \"@fortawesome/pro-light-svg-icons\", \"@fortawesome/vue-fontawesome\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"iview\"] = factory(require(\"vue\"), require(\"@fortawesome/fontawesome-svg-core\"), require(\"@fortawesome/pro-solid-svg-icons\"), require(\"@fortawesome/pro-regular-svg-icons\"), require(\"@fortawesome/pro-light-svg-icons\"), require(\"@fortawesome/vue-fontawesome\"));\n\telse\n\t\troot[\"iview\"] = factory(root[\"vue\"], root[\"@fortawesome/fontawesome-svg-core\"], root[\"@fortawesome/pro-solid-svg-icons\"], root[\"@fortawesome/pro-regular-svg-icons\"], root[\"@fortawesome/pro-light-svg-icons\"], root[\"@fortawesome/vue-fontawesome\"]);\n})((function () {\n  'use strict';\n\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n\n  return Function('return this')();\n}()), function(__WEBPACK_EXTERNAL_MODULE__5__, __WEBPACK_EXTERNAL_MODULE__39__, __WEBPACK_EXTERNAL_MODULE__40__, __WEBPACK_EXTERNAL_MODULE__41__, __WEBPACK_EXTERNAL_MODULE__42__, __WEBPACK_EXTERNAL_MODULE__43__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 654);\n","/*!\r\n * js-logger - http://github.com/jonnyreeves/js-logger\r\n * Jonny Reeves, http://jonnyreeves.co.uk/\r\n * js-logger may be freely distributed under the MIT license.\r\n */\r\n(function (global) {\r\n\t\"use strict\";\r\n\r\n\t// Top level module for the global, static logger instance.\r\n\tvar Logger = { };\r\n\r\n\t// For those that are at home that are keeping score.\r\n\tLogger.VERSION = \"1.6.0\";\r\n\r\n\t// Function which handles all incoming log messages.\r\n\tvar logHandler;\r\n\r\n\t// Map of ContextualLogger instances by name; used by Logger.get() to return the same named instance.\r\n\tvar contextualLoggersByNameMap = {};\r\n\r\n\t// Polyfill for ES5's Function.bind.\r\n\tvar bind = function(scope, func) {\r\n\t\treturn function() {\r\n\t\t\treturn func.apply(scope, arguments);\r\n\t\t};\r\n\t};\r\n\r\n\t// Super exciting object merger-matron 9000 adding another 100 bytes to your download.\r\n\tvar merge = function () {\r\n\t\tvar args = arguments, target = args[0], key, i;\r\n\t\tfor (i = 1; i < args.length; i++) {\r\n\t\t\tfor (key in args[i]) {\r\n\t\t\t\tif (!(key in target) && args[i].hasOwnProperty(key)) {\r\n\t\t\t\t\ttarget[key] = args[i][key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn target;\r\n\t};\r\n\r\n\t// Helper to define a logging level object; helps with optimisation.\r\n\tvar defineLogLevel = function(value, name) {\r\n\t\treturn { value: value, name: name };\r\n\t};\r\n\r\n\t// Predefined logging levels.\r\n\tLogger.TRACE = defineLogLevel(1, 'TRACE');\r\n\tLogger.DEBUG = defineLogLevel(2, 'DEBUG');\r\n\tLogger.INFO = defineLogLevel(3, 'INFO');\r\n\tLogger.TIME = defineLogLevel(4, 'TIME');\r\n\tLogger.WARN = defineLogLevel(5, 'WARN');\r\n\tLogger.ERROR = defineLogLevel(8, 'ERROR');\r\n\tLogger.OFF = defineLogLevel(99, 'OFF');\r\n\r\n\t// Inner class which performs the bulk of the work; ContextualLogger instances can be configured independently\r\n\t// of each other.\r\n\tvar ContextualLogger = function(defaultContext) {\r\n\t\tthis.context = defaultContext;\r\n\t\tthis.setLevel(defaultContext.filterLevel);\r\n\t\tthis.log = this.info;  // Convenience alias.\r\n\t};\r\n\r\n\tContextualLogger.prototype = {\r\n\t\t// Changes the current logging level for the logging instance.\r\n\t\tsetLevel: function (newLevel) {\r\n\t\t\t// Ensure the supplied Level object looks valid.\r\n\t\t\tif (newLevel && \"value\" in newLevel) {\r\n\t\t\t\tthis.context.filterLevel = newLevel;\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t// Gets the current logging level for the logging instance\r\n\t\tgetLevel: function () {\r\n\t\t\treturn this.context.filterLevel;\r\n\t\t},\r\n\r\n\t\t// Is the logger configured to output messages at the supplied level?\r\n\t\tenabledFor: function (lvl) {\r\n\t\t\tvar filterLevel = this.context.filterLevel;\r\n\t\t\treturn lvl.value >= filterLevel.value;\r\n\t\t},\r\n\r\n\t\ttrace: function () {\r\n\t\t\tthis.invoke(Logger.TRACE, arguments);\r\n\t\t},\r\n\r\n\t\tdebug: function () {\r\n\t\t\tthis.invoke(Logger.DEBUG, arguments);\r\n\t\t},\r\n\r\n\t\tinfo: function () {\r\n\t\t\tthis.invoke(Logger.INFO, arguments);\r\n\t\t},\r\n\r\n\t\twarn: function () {\r\n\t\t\tthis.invoke(Logger.WARN, arguments);\r\n\t\t},\r\n\r\n\t\terror: function () {\r\n\t\t\tthis.invoke(Logger.ERROR, arguments);\r\n\t\t},\r\n\r\n\t\ttime: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'start' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\ttimeEnd: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'end' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Invokes the logger callback if it's not being filtered.\r\n\t\tinvoke: function (level, msgArgs) {\r\n\t\t\tif (logHandler && this.enabledFor(level)) {\r\n\t\t\t\tlogHandler(msgArgs, merge({ level: level }, this.context));\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Protected instance which all calls to the to level `Logger` module will be routed through.\r\n\tvar globalLogger = new ContextualLogger({ filterLevel: Logger.OFF });\r\n\r\n\t// Configure the global Logger instance.\r\n\t(function() {\r\n\t\t// Shortcut for optimisers.\r\n\t\tvar L = Logger;\r\n\r\n\t\tL.enabledFor = bind(globalLogger, globalLogger.enabledFor);\r\n\t\tL.trace = bind(globalLogger, globalLogger.trace);\r\n\t\tL.debug = bind(globalLogger, globalLogger.debug);\r\n\t\tL.time = bind(globalLogger, globalLogger.time);\r\n\t\tL.timeEnd = bind(globalLogger, globalLogger.timeEnd);\r\n\t\tL.info = bind(globalLogger, globalLogger.info);\r\n\t\tL.warn = bind(globalLogger, globalLogger.warn);\r\n\t\tL.error = bind(globalLogger, globalLogger.error);\r\n\r\n\t\t// Don't forget the convenience alias!\r\n\t\tL.log = L.info;\r\n\t}());\r\n\r\n\t// Set the global logging handler.  The supplied function should expect two arguments, the first being an arguments\r\n\t// object with the supplied log messages and the second being a context object which contains a hash of stateful\r\n\t// parameters which the logging function can consume.\r\n\tLogger.setHandler = function (func) {\r\n\t\tlogHandler = func;\r\n\t};\r\n\r\n\t// Sets the global logging filter level which applies to *all* previously registered, and future Logger instances.\r\n\t// (note that named loggers (retrieved via `Logger.get`) can be configured independently if required).\r\n\tLogger.setLevel = function(level) {\r\n\t\t// Set the globalLogger's level.\r\n\t\tglobalLogger.setLevel(level);\r\n\r\n\t\t// Apply this level to all registered contextual loggers.\r\n\t\tfor (var key in contextualLoggersByNameMap) {\r\n\t\t\tif (contextualLoggersByNameMap.hasOwnProperty(key)) {\r\n\t\t\t\tcontextualLoggersByNameMap[key].setLevel(level);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Gets the global logging filter level\r\n\tLogger.getLevel = function() {\r\n\t\treturn globalLogger.getLevel();\r\n\t};\r\n\r\n\t// Retrieve a ContextualLogger instance.  Note that named loggers automatically inherit the global logger's level,\r\n\t// default context and log handler.\r\n\tLogger.get = function (name) {\r\n\t\t// All logger instances are cached so they can be configured ahead of use.\r\n\t\treturn contextualLoggersByNameMap[name] ||\r\n\t\t\t(contextualLoggersByNameMap[name] = new ContextualLogger(merge({ name: name }, globalLogger.context)));\r\n\t};\r\n\r\n\t// CreateDefaultHandler returns a handler function which can be passed to `Logger.setHandler()` which will\r\n\t// write to the window's console object (if present); the optional options object can be used to customise the\r\n\t// formatter used to format each log message.\r\n\tLogger.createDefaultHandler = function (options) {\r\n\t\toptions = options || {};\r\n\r\n\t\toptions.formatter = options.formatter || function defaultMessageFormatter(messages, context) {\r\n\t\t\t// Prepend the logger's name to the log message for easy identification.\r\n\t\t\tif (context.name) {\r\n\t\t\t\tmessages.unshift(\"[\" + context.name + \"]\");\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Map of timestamps by timer labels used to track `#time` and `#timeEnd()` invocations in environments\r\n\t\t// that don't offer a native console method.\r\n\t\tvar timerStartTimeByLabelMap = {};\r\n\r\n\t\t// Support for IE8+ (and other, slightly more sane environments)\r\n\t\tvar invokeConsoleMethod = function (hdlr, messages) {\r\n\t\t\tFunction.prototype.apply.call(hdlr, console, messages);\r\n\t\t};\r\n\r\n\t\t// Check for the presence of a logger.\r\n\t\tif (typeof console === \"undefined\") {\r\n\t\t\treturn function () { /* no console */ };\r\n\t\t}\r\n\r\n\t\treturn function(messages, context) {\r\n\t\t\t// Convert arguments object to Array.\r\n\t\t\tmessages = Array.prototype.slice.call(messages);\r\n\r\n\t\t\tvar hdlr = console.log;\r\n\t\t\tvar timerLabel;\r\n\r\n\t\t\tif (context.level === Logger.TIME) {\r\n\t\t\t\ttimerLabel = (context.name ? '[' + context.name + '] ' : '') + messages[0];\r\n\r\n\t\t\t\tif (messages[1] === 'start') {\r\n\t\t\t\t\tif (console.time) {\r\n\t\t\t\t\t\tconsole.time(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttimerStartTimeByLabelMap[timerLabel] = new Date().getTime();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (console.timeEnd) {\r\n\t\t\t\t\t\tconsole.timeEnd(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tinvokeConsoleMethod(hdlr, [ timerLabel + ': ' +\r\n\t\t\t\t\t\t\t(new Date().getTime() - timerStartTimeByLabelMap[timerLabel]) + 'ms' ]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Delegate through to custom warn/error loggers if present on the console.\r\n\t\t\t\tif (context.level === Logger.WARN && console.warn) {\r\n\t\t\t\t\thdlr = console.warn;\r\n\t\t\t\t} else if (context.level === Logger.ERROR && console.error) {\r\n\t\t\t\t\thdlr = console.error;\r\n\t\t\t\t} else if (context.level === Logger.INFO && console.info) {\r\n\t\t\t\t\thdlr = console.info;\r\n\t\t\t\t} else if (context.level === Logger.DEBUG && console.debug) {\r\n\t\t\t\t\thdlr = console.debug;\r\n\t\t\t\t} else if (context.level === Logger.TRACE && console.trace) {\r\n\t\t\t\t\thdlr = console.trace;\r\n\t\t\t\t}\r\n\r\n\t\t\t\toptions.formatter(messages, context);\r\n\t\t\t\tinvokeConsoleMethod(hdlr, messages);\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\t// Configure and example a Default implementation which writes to the `window.console` (if present).  The\r\n\t// `options` hash can be used to configure the default logLevel and provide a custom message formatter.\r\n\tLogger.useDefaults = function(options) {\r\n\t\tLogger.setLevel(options && options.defaultLevel || Logger.DEBUG);\r\n\t\tLogger.setHandler(Logger.createDefaultHandler(options));\r\n\t};\r\n\r\n\t// Export to popular environments boilerplate.\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\tdefine(Logger);\r\n\t}\r\n\telse if (typeof module !== 'undefined' && module.exports) {\r\n\t\tmodule.exports = Logger;\r\n\t}\r\n\telse {\r\n\t\tLogger._prevLogger = global.Logger;\r\n\r\n\t\tLogger.noConflict = function () {\r\n\t\t\tglobal.Logger = Logger._prevLogger;\r\n\t\t\treturn Logger;\r\n\t\t};\r\n\r\n\t\tglobal.Logger = Logger;\r\n\t}\r\n}(this));\r\n","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","import mod from \"-!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!../../../node_modules/source-map-loader/index.js!./icon.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!../../../node_modules/source-map-loader/index.js!./icon.vue?vue&type=script&lang=js&\"","<template>\n  <font-awesome-icon\n    :icon=\"icon\"\n    :fixed-width=\"fw\"\n    v-bind=\"$attrs\"\n    v-on=\"$listeners\"\n  ></font-awesome-icon>\n</template>\n\n<script>\nimport Vue from 'vue';\nimport {library} from '@fortawesome/fontawesome-svg-core';\nimport {fas} from '@fortawesome/pro-solid-svg-icons';\nimport {far} from '@fortawesome/pro-regular-svg-icons';\nimport {fal} from '@fortawesome/pro-light-svg-icons';\n// noinspection ES6CheckImport\nimport {FontAwesomeIcon, FontAwesomeLayers, FontAwesomeLayersText} from '@fortawesome/vue-fontawesome';\nimport findKey from 'lodash/findKey';\nimport memoize from 'lodash/memoize';\nimport isOneOf from 'Global/Assets/isOneOf';\n\nlibrary.add(fas);\nlibrary.add(far);\nlibrary.add(fal);\n\n/*\n  Vue.component('font-awesome-icon', FontAwesomeIcon);\n  Vue.component('font-awesome-layers', FontAwesomeLayers);\n  Vue.component('font-awesome-layers-text', FontAwesomeLayersText);\n*/\n\nconst SOLID = 'solid';\nconst REGULAR = 'regular';\nconst LIGHT = 'light';\nconst ICON_WEIGHTS = Object.freeze([SOLID, REGULAR, LIGHT]);\nexport function isOneOfIconWeights(value) {\n  return isOneOf(value, ICON_WEIGHTS);\n}\n\nconst FAS = 'fas';\nconst FAR = 'far';\nconst FAL = 'fal';\nconst ICON_LIBRARIES = Object.freeze([fas, far, fal]);\nexport function isOneOfIconNames(value) {\n  const isIconName = function isIconName({iconName}) {\n    return iconName === value;\n  };\n\n  return ICON_LIBRARIES.some(function libraryIteratee(iconLibrary) {\n    return Boolean(findKey(iconLibrary, isIconName));\n  });\n}\n\nconst WEIGHT_MAP = Object.create(null, {\n  [SOLID]: {\n    enumerable: true,\n    value: FAS,\n  },\n  [REGULAR]: {\n    enumerable: true,\n    value: FAR,\n  },\n  [LIGHT]: {\n    enumerable: true,\n    value: FAL,\n  },\n});\n\nconst vueObject = {\n  name: 'Icon',\n\n  props: {\n    fw: {\n      default: false,\n      type: Boolean,\n    },\n    type: {\n      required: true,\n      type: String,\n      validator: isOneOfIconNames,\n    },\n    weight: {\n      default: REGULAR,\n      type: String,\n      validator: isOneOfIconWeights,\n    },\n  },\n\n  components: {FontAwesomeIcon, FontAwesomeLayers, FontAwesomeLayersText},\n\n  computed: {\n    icon() {\n      const weightClass = WEIGHT_MAP[this.weight] || WEIGHT_MAP[REGULAR];\n      const definition = [weightClass];\n\n      if (this.type) {\n        definition.push(this.type);\n      }\n\n      return definition;\n    },\n  },\n};\n\nconst el = document.createElement('div');\n\nexport const getIconAsHTML = memoize(function createHTML(props = {}) {\n  return new Vue({\n    ...vueObject,\n\n    propsData: {\n      ...props,\n    },\n  }).$mount(el).$el.outerHTML;\n});\n\nexport default vueObject;\n</script>\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('font-awesome-icon',_vm._g(_vm._b({attrs:{\"icon\":_vm.icon,\"fixed-width\":_vm.fw}},'font-awesome-icon',_vm.$attrs,false),_vm.$listeners))}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export * from \"-!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./icon.vue?vue&type=template&id=52ceed03&\"","var defineProperty = require(\"./defineProperty\");\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nmodule.exports = _objectSpread;","var isArray = require('./isArray');\n\n/**\n * Casts `value` as an array if it's not one.\n *\n * @static\n * @memberOf _\n * @since 4.4.0\n * @category Lang\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast array.\n * @example\n *\n * _.castArray(1);\n * // => [1]\n *\n * _.castArray({ 'a': 1 });\n * // => [{ 'a': 1 }]\n *\n * _.castArray('abc');\n * // => ['abc']\n *\n * _.castArray(null);\n * // => [null]\n *\n * _.castArray(undefined);\n * // => [undefined]\n *\n * _.castArray();\n * // => []\n *\n * var array = [1, 2, 3];\n * console.log(_.castArray(array) === array);\n * // => true\n */\nfunction castArray() {\n  if (!arguments.length) {\n    return [];\n  }\n  var value = arguments[0];\n  return isArray(value) ? value : [value];\n}\n\nmodule.exports = castArray;\n","/**\n * @file Utility to test if a comparate exists in a list of comparates, return comparate or supply a fallback.\n * @copyright Copyright (c) 2017-present, ProReNata AB\n * @version 1.0.0\n * @module GlobalAssets/oneOf\n */\n\nimport castArray from 'lodash/castArray';\n\n/**\n * Tests if a comparate exists in a list of comparates an then returns the comparate if there\n * is a match; otherwise returns the fallback value.\n *\n * @param {*} comparate - The value to compare against the supplied list of comparates.\n * @param {Array|*} [comparates=[]] - An array of values or a single value for comparison.\n * @param {*} [fallback=undefined] - The returned value if no match exists.\n * @returns {*} - The comparate upon a match; otherwise the fallback value.\n */\nexport default function oneOf(comparate, comparates, fallback) {\n  return castArray(comparates).includes(comparate) ? comparate : fallback;\n}\n","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","export {default, getIconAsHTML, isOneOfIconNames, isOneOfIconWeights} from './icon.vue';\n","function _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nmodule.exports = _interopRequireWildcard;","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n","import { render, staticRenderFns } from \"./icon.vue?vue&type=template&id=52ceed03&\"\nimport script from \"./icon.vue?vue&type=script&lang=js&\"\nexport * from \"./icon.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","function _newArrowCheck(innerThis, boundThis) {\n  if (innerThis !== boundThis) {\n    throw new TypeError(\"Cannot instantiate an arrow function\");\n  }\n}\n\nmodule.exports = _newArrowCheck;","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!../../../node_modules/source-map-loader/index.js!./Richtext.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!../../../node_modules/source-map-loader/index.js!./Richtext.vue?vue&type=script&lang=js&\"","<template>\n  <textarea\n    ref=\"redactor\"\n    :class=\"prefixCls\"\n    :value=\"value\"\n  >\n  </textarea>\n</template>\n\n<script>\nimport Vue from 'vue';\nimport {getIconAsHTML} from 'Components/icon';\nimport isProduction from 'Global/Assets/isProduction';\nimport not from 'Global/Assets/not';\nimport deepFreeze from 'Global/Assets/deepFreeze';\nimport './redactor-3_1_6/redactor/redactor';\nimport './redactor-3_1_6/redactor/_langs/sv';\n\nconst prefixCls = 'byx-richtext';\nconst NAME = 'Richtext';\nconst DEFAULT_LANG = 'sv';\nconst INPUT = 'input';\nconst CALLBACKS = 'callbacks';\nconst EMPTY_STRING = '';\nconst BOLD = 'bold';\nconst ITALIC = 'italic';\nconst UNDERLINE = 'underline';\nconst LINK = 'link';\nconst HTML = 'html';\nconst CODE = 'code';\nconst BUTTONS_ICON_MAP = Object.create(null, {\n  [BOLD]: {\n    enumerable: true,\n    value: BOLD,\n  },\n  [ITALIC]: {\n    enumerable: true,\n    value: ITALIC,\n  },\n  [UNDERLINE]: {\n    enumerable: true,\n    value: UNDERLINE,\n  },\n  [LINK]: {\n    enumerable: true,\n    value: LINK,\n  },\n  [HTML]: {\n    enumerable: true,\n    value: CODE,\n  },\n});\n\nconst BUTTONS = Object.freeze([BOLD, ITALIC, UNDERLINE, LINK, HTML]);\nconst buttons = deepFreeze(JSON.parse(JSON.stringify($R.buttons)));\n\nexport default {\n  name: NAME,\n\n  redactor: false,\n\n  props: {\n    config: {\n      default: undefined,\n      type: Object,\n    },\n    disabled: {\n      default: false,\n      type: Boolean,\n    },\n    placeholder: {\n      default: undefined,\n      type: String,\n    },\n    value: {\n      default: EMPTY_STRING,\n      type: String,\n    },\n  },\n\n  data() {\n    return {\n      buttonIconHtmlMap: null,\n      options: this.config || {\n        air: true,\n        buttons: BUTTONS,\n        lang: DEFAULT_LANG,\n        placeholder: this.placeholder,\n        styles: false,\n        source: not(isProduction),\n        tabindex: 0,\n        tabKey: false,\n      },\n      prefixCls,\n    };\n  },\n\n  computed: {\n    editorState() {\n      return this.disabled ? 'module.editor.disable' : 'module.editor.enable';\n    },\n  },\n\n  watch: {\n    editorState() {\n      this.redactor.api(this.editorState);\n    },\n    value(newValue) {\n      if (not(this.redactor.editor.isFocus())) {\n        this.redactor.source.setCode(newValue);\n      }\n    },\n  },\n\n  created() {\n    this.buttonIconHtmlMap = this.getButtonHTMLMap();\n  },\n\n  mounted() {\n    this.init();\n  },\n\n  methods: {\n    getButtonHTMLMap() {\n      return BUTTONS.reduce((accumulator, button) => {\n        return Object.defineProperty(accumulator, button, {\n          enumerable: true,\n          value: getIconAsHTML({\n            fw: true,\n            type: BUTTONS_ICON_MAP[button],\n          }),\n        });\n      }, Object.create(null));\n    },\n    getCallbacks() {\n      return {\n        changed: (html) => {\n          this.handleInput(html);\n\n          return html;\n        },\n      };\n    },\n    handleInput(val) {\n      this.$emit(INPUT, val);\n    },\n    init() {\n      // extend config\n      Vue.set(this.options, CALLBACKS, this.getCallbacks());\n\n      // call Redactor\n      const app = $R(this.$refs.redactor, this.options);\n\n      // set instance\n      this.redactor = app;\n      this.$parent.redactor = app;\n      this.redactor.api(this.editorState);\n      this.setButtonIcons();\n    },\n    setButtonIcons() {\n      BUTTONS.forEach((button) => {\n        const reButton = this.redactor.toolbar.getButton(button);\n\n        if (!reButton) {\n          return;\n        }\n\n        reButton.setIcon(this.buttonIconHtmlMap[button]);\n        const {tooltip, title} = buttons[button];\n        reButton.setTooltip(this.redactor.lang.parse(tooltip || title));\n      });\n    },\n  },\n};\n</script>\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__39__;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","module.exports = __WEBPACK_EXTERNAL_MODULE__40__;","module.exports = __WEBPACK_EXTERNAL_MODULE__41__;","module.exports = __WEBPACK_EXTERNAL_MODULE__42__;","module.exports = __WEBPACK_EXTERNAL_MODULE__43__;","var baseFindKey = require('./_baseFindKey'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * This method is like `_.find` except that it returns the key of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Object\n * @param {Object} object The object to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {string|undefined} Returns the key of the matched element,\n *  else `undefined`.\n * @example\n *\n * var users = {\n *   'barney':  { 'age': 36, 'active': true },\n *   'fred':    { 'age': 40, 'active': false },\n *   'pebbles': { 'age': 1,  'active': true }\n * };\n *\n * _.findKey(users, function(o) { return o.age < 40; });\n * // => 'barney' (iteration order is not guaranteed)\n *\n * // The `_.matches` iteratee shorthand.\n * _.findKey(users, { 'age': 1, 'active': true });\n * // => 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findKey(users, ['active', false]);\n * // => 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.findKey(users, 'active');\n * // => 'barney'\n */\nfunction findKey(object, predicate) {\n  return baseFindKey(object, baseIteratee(predicate, 3), baseForOwn);\n}\n\nmodule.exports = findKey;\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('textarea',{ref:\"redactor\",class:_vm.prefixCls,domProps:{\"value\":_vm.value}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export * from \"-!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Richtext.vue?vue&type=template&id=5a058804&\"","/**\n * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n * without support for iteratee shorthands, which iterates over `collection`\n * using `eachFunc`.\n *\n * @private\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {Function} eachFunc The function to iterate over `collection`.\n * @returns {*} Returns the found element or its key, else `undefined`.\n */\nfunction baseFindKey(collection, predicate, eachFunc) {\n  var result;\n  eachFunc(collection, function(value, key, collection) {\n    if (predicate(value, key, collection)) {\n      result = key;\n      return false;\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFindKey;\n","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","/**\n * Indicates if this is the production environment.\n * @type {boolean}\n */\nexport default process.env.NODE_ENV === 'production';\n","module.exports = __WEBPACK_EXTERNAL_MODULE__5__;","var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","export default function not(value) {\n  return !value;\n}\n","export {default} from './Richtext.vue';\n","import { render, staticRenderFns } from \"./Richtext.vue?vue&type=template&id=5a058804&\"\nimport script from \"./Richtext.vue?vue&type=script&lang=js&\"\nexport * from \"./Richtext.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default function deepFreeze(object) {\n  const propNamesIteratee = function _propNamesIteratee(name) {\n    const value = object[name];\n\n    object[name] = value && typeof value === 'object' ? deepFreeze(value) : value;\n  };\n\n  // Retrieve the property names defined on object\n  const propNames = Object.getOwnPropertyNames(object);\n\n  // Freeze properties before freezing self\n  propNames.forEach(propNamesIteratee);\n\n  return Object.freeze(object);\n}\n","/*\n    Redactor\n    Version 3.1.6\n    Updated: December 7, 2018\n\n    http://imperavi.com/redactor/\n\n    Copyright (c) 2009-2018, Imperavi Ltd.\n    License: http://imperavi.com/redactor/license/\n*/\n(function() {\nvar Ajax = {};\n\nAjax.settings = {};\nAjax.post = function(options) { return new AjaxRequest('post', options); };\nAjax.get = function(options) { return new AjaxRequest('get', options); };\n\nvar AjaxRequest = function(method, options)\n{\n    var defaults = {\n        method: method,\n        url: '',\n        before: function() {},\n        success: function() {},\n        error: function() {},\n        data: false,\n        async: true,\n        headers: {}\n    };\n\n    this.p = this.extend(defaults, options);\n    this.p = this.extend(this.p, Ajax.settings);\n    this.p.method = this.p.method.toUpperCase();\n\n    this.prepareData();\n\n    this.xhr = new XMLHttpRequest();\n    this.xhr.open(this.p.method, this.p.url, this.p.async);\n\n    this.setHeaders();\n\n    var before = (typeof this.p.before === 'function') ? this.p.before(this.xhr) : true;\n    if (before !== false)\n    {\n        this.send();\n    }\n};\n\nAjaxRequest.prototype = {\n    extend: function(obj1, obj2)\n    {\n        if (obj2) for (var name in obj2) { obj1[name] = obj2[name]; }\n        return obj1;\n    },\n    prepareData: function()\n    {\n        if (this.p.method === 'POST' && !this.isFormData()) this.p.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n        if (typeof this.p.data === 'object' && !this.isFormData()) this.p.data = this.toParams(this.p.data);\n        if (this.p.method === 'GET') this.p.url = (this.p.data) ? this.p.url + '?' + this.p.data : this.p.url;\n    },\n    setHeaders: function()\n    {\n        this.xhr.setRequestHeader('X-Requested-With', this.p.headers['X-Requested-With'] || 'XMLHttpRequest');\n        for (var name in this.p.headers)\n        {\n            this.xhr.setRequestHeader(name, this.p.headers[name]);\n        }\n    },\n    isFormData: function()\n    {\n        return (typeof window.FormData !== 'undefined' && this.p.data instanceof window.FormData);\n    },\n    isComplete: function()\n    {\n        return !(this.xhr.status < 200 || this.xhr.status >= 300 && this.xhr.status !== 304);\n    },\n    send: function()\n    {\n        if (this.p.async)\n        {\n            this.xhr.onload = this.loaded.bind(this);\n            this.xhr.send(this.p.data);\n        }\n        else\n        {\n            this.xhr.send(this.p.data);\n            this.loaded.call(this);\n        }\n    },\n    loaded: function()\n    {\n        if (this.isComplete())\n        {\n            var response = this.xhr.response;\n            var json = this.parseJson(response);\n            response = (json) ? json : response;\n\n            if (typeof this.p.success === 'function') this.p.success(response, this.xhr);\n        }\n        else\n        {\n            if (typeof this.p.error === 'function') this.p.error(this.xhr.statusText);\n        }\n    },\n    parseJson: function(str)\n    {\n        try {\n            var o = JSON.parse(str);\n            if (o && typeof o === 'object')\n            {\n                return o;\n            }\n\n        } catch (e) {}\n\n        return false;\n    },\n    toParams: function (obj)\n    {\n        return Object.keys(obj).map(\n            function(k){ return encodeURIComponent(k) + '=' + encodeURIComponent(obj[k]); }\n        ).join('&');\n    }\n};\nvar DomCache = [0];\nvar DomExpando = 'data' + +new Date();\nvar DomHClass = 'is-hidden';\nvar DomHMClass = 'is-hidden-mobile';\n\nvar Dom = function(selector, context)\n{\n    return this.parse(selector, context);\n};\n\nDom.ready = function(fn)\n{\n    if (document.readyState != 'loading') fn();\n    else document.addEventListener('DOMContentLoaded', fn);\n};\n\nDom.prototype = {\n    get dom()\n    {\n        return true;\n    },\n    get length()\n    {\n        return this.nodes.length;\n    },\n    parse: function(selector, context)\n    {\n        var nodes;\n        var reHtmlTest = /^\\s*<(\\w+|!)[^>]*>/;\n\n        if (!selector)\n        {\n            nodes = [];\n        }\n        else if (selector.dom)\n        {\n            this.nodes = selector.nodes;\n            return selector;\n        }\n        else if (typeof selector !== 'string')\n        {\n            if (selector.nodeType && selector.nodeType === 11)\n            {\n                nodes = selector.childNodes;\n            }\n            else\n            {\n                nodes = (selector.nodeType || selector === window) ? [selector] : selector;\n            }\n        }\n        else if (reHtmlTest.test(selector))\n        {\n            nodes = this.create(selector);\n        }\n        else\n        {\n            nodes = this._query(selector, context);\n        }\n\n        this.nodes = this._slice(nodes);\n    },\n    create: function(html)\n    {\n        if (/^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/.test(html))\n        {\n            return [document.createElement(RegExp.$1)];\n        }\n\n        var elements = [];\n        var container = document.createElement('div');\n        var children = container.childNodes;\n\n        container.innerHTML = html;\n\n        for (var i = 0, l = children.length; i < l; i++)\n        {\n            elements.push(children[i]);\n        }\n\n        return elements;\n    },\n\n    // add\n    add: function(nodes)\n    {\n        this.nodes = this.nodes.concat(this._toArray(nodes));\n    },\n\n    // get\n    get: function(index)\n    {\n        return this.nodes[(index || 0)] || false;\n    },\n    getAll: function()\n    {\n        return this.nodes;\n    },\n    eq: function(index)\n    {\n        return new Dom(this.nodes[index]);\n    },\n    first: function()\n    {\n        return new Dom(this.nodes[0]);\n    },\n    last: function()\n    {\n        return new Dom(this.nodes[this.nodes.length - 1]);\n    },\n    contents: function()\n    {\n        return this.get().childNodes;\n    },\n\n    // loop\n    each: function(callback)\n    {\n        var len = this.nodes.length;\n        for (var i = 0; i < len; i++)\n        {\n            callback.call(this, (this.nodes[i].dom) ? this.nodes[i].get() : this.nodes[i], i);\n        }\n\n        return this;\n    },\n\n    // traversing\n    is: function(selector)\n    {\n        return (this.filter(selector).length > 0);\n    },\n    filter: function (selector)\n    {\n        var callback;\n        if (selector === undefined)\n        {\n            return this;\n        }\n        else if (typeof selector === 'function')\n        {\n            callback = selector;\n        }\n        else\n        {\n            callback = function(node)\n            {\n                if (selector instanceof Node)\n                {\n                    return (selector === node);\n                }\n                else if (selector && selector.dom)\n                {\n                    return ((selector.nodes).indexOf(node) !== -1);\n                }\n                else\n                {\n                    node.matches = node.matches || node.msMatchesSelector || node.webkitMatchesSelector;\n                    return (node.nodeType === 1) ? node.matches(selector || '*') : false;\n                }\n            };\n        }\n\n        return new Dom(this.nodes.filter(callback));\n    },\n    not: function(filter)\n    {\n        return this.filter(function(node)\n        {\n            return !new Dom(node).is(filter || true);\n        });\n    },\n    find: function(selector)\n    {\n        var nodes = [];\n        this.each(function(node)\n        {\n            var ns = this._query(selector || '*', node);\n            for (var i = 0; i < ns.length; i++)\n            {\n                nodes.push(ns[i]);\n            }\n        });\n\n        return new Dom(nodes);\n    },\n    children: function(selector)\n    {\n        var nodes = [];\n        this.each(function(node)\n        {\n            if (node.children)\n            {\n                var ns = node.children;\n                for (var i = 0; i < ns.length; i++)\n                {\n                    nodes.push(ns[i]);\n                }\n            }\n        });\n\n        return new Dom(nodes).filter(selector);\n    },\n    parent: function(selector)\n    {\n        var nodes = [];\n        this.each(function(node)\n        {\n            if (node.parentNode) nodes.push(node.parentNode);\n        });\n\n        return new Dom(nodes).filter(selector);\n    },\n    parents: function(selector, context)\n    {\n        context = this._getContext(context);\n\n        var nodes = [];\n        this.each(function(node)\n        {\n            var parent = node.parentNode;\n            while (parent && parent !== context)\n            {\n                if (selector)\n                {\n                    if (new Dom(parent).is(selector)) { nodes.push(parent); }\n                }\n                else\n                {\n                    nodes.push(parent);\n                }\n\n                parent = parent.parentNode;\n            }\n        });\n\n        return new Dom(nodes);\n    },\n    closest: function(selector, context)\n    {\n        context = this._getContext(context);\n        selector = (selector.dom) ? selector.get() : selector;\n\n        var nodes = [];\n        var isNode = (selector && selector.nodeType);\n        this.each(function(node)\n        {\n            do {\n                if ((isNode && node === selector) || new Dom(node).is(selector)) return nodes.push(node);\n            } while ((node = node.parentNode) && node !== context);\n        });\n\n        return new Dom(nodes);\n    },\n    next: function(selector)\n    {\n         return this._getSibling(selector, 'nextSibling');\n    },\n    nextElement: function(selector)\n    {\n        return this._getSibling(selector, 'nextElementSibling');\n    },\n    prev: function(selector)\n    {\n        return this._getSibling(selector, 'previousSibling');\n    },\n    prevElement: function(selector)\n    {\n        return this._getSibling(selector, 'previousElementSibling');\n    },\n\n    // css\n    css: function(name, value)\n    {\n        if (value === undefined && (typeof name !== 'object'))\n        {\n            var node = this.get();\n            if (name === 'width' || name === 'height')\n            {\n                return (node.style) ? this._getHeightOrWidth(name, node, false) + 'px' : undefined;\n            }\n            else\n            {\n                return (node.style) ? getComputedStyle(node, null)[name] : undefined;\n            }\n        }\n\n        // set\n        return this.each(function(node)\n        {\n            var obj = {};\n            if (typeof name === 'object') obj = name;\n            else obj[name] = value;\n\n            for (var key in obj)\n            {\n                if (node.style) node.style[key] = obj[key];\n            }\n        });\n    },\n\n    // attr\n    attr: function(name, value, data)\n    {\n        data = (data) ? 'data-' : '';\n\n        if (value === undefined && (typeof name !== 'object'))\n        {\n            var node = this.get();\n            if (node && node.nodeType !== 3)\n            {\n                return (name === 'checked') ? node.checked : this._getBooleanFromStr(node.getAttribute(data + name));\n            }\n            else return;\n        }\n\n        // set\n        return this.each(function(node)\n        {\n            var obj = {};\n            if (typeof name === 'object') obj = name;\n            else obj[name] = value;\n\n            for (var key in obj)\n            {\n                if (node.nodeType !== 3)\n                {\n                    if (key === 'checked') node.checked = obj[key];\n                    else node.setAttribute(data + key, obj[key]);\n                }\n            }\n        });\n    },\n    data: function(name, value)\n    {\n        if (name === undefined)\n        {\n            var reDataAttr = /^data\\-(.+)$/;\n            var attrs = this.get().attributes;\n\n            var data = {};\n            var replacer = function (g) { return g[1].toUpperCase(); };\n\n            for (var key in attrs)\n            {\n                if (attrs[key] && reDataAttr.test(attrs[key].nodeName))\n                {\n                    var dataName = attrs[key].nodeName.match(reDataAttr)[1];\n                    var val = attrs[key].value;\n                    dataName = dataName.replace(/-([a-z])/g, replacer);\n\n                    if (this._isObjectString(val)) val = this._toObject(val);\n                    else val = (this._isNumber(val)) ? parseFloat(val) : this._getBooleanFromStr(val);\n\n                    data[dataName] = val;\n                }\n            }\n\n            return data;\n        }\n\n        return this.attr(name, value, true);\n    },\n    val: function(value)\n    {\n        if (value === undefined)\n        {\n            var el = this.get();\n            if (el.type && el.type === 'checkbox') return el.checked;\n            else return el.value;\n        }\n\n        return this.each(function(node)\n        {\n            node.value = value;\n        });\n    },\n    removeAttr: function(value)\n    {\n        return this.each(function(node)\n        {\n            var rmAttr = function(name) { if (node.nodeType !== 3) node.removeAttribute(name); };\n            value.split(' ').forEach(rmAttr);\n        });\n    },\n    removeData: function(value)\n    {\n        return this.each(function(node)\n        {\n            var rmData = function(name) { if (node.nodeType !== 3) node.removeAttribute('data-' + name); };\n            value.split(' ').forEach(rmData);\n        });\n    },\n\n    // dataset/dataget\n    dataset: function(key, value)\n    {\n        return this.each(function(node)\n        {\n            DomCache[this.dataindex(node)][key] = value;\n        });\n    },\n    dataget: function(key)\n    {\n        return DomCache[this.dataindex(this.get())][key];\n    },\n    dataindex: function(el)\n    {\n        var cacheIndex = el[DomExpando];\n        var nextCacheIndex = DomCache.length;\n\n        if (!cacheIndex)\n        {\n            cacheIndex = el[DomExpando] = nextCacheIndex;\n            DomCache[cacheIndex] = {};\n        }\n\n        return cacheIndex;\n    },\n\n\n    // class\n    addClass: function(value)\n    {\n        return this._eachClass(value, 'add');\n    },\n    removeClass: function(value)\n    {\n        return this._eachClass(value, 'remove');\n    },\n    toggleClass: function(value)\n    {\n        return this._eachClass(value, 'toggle');\n    },\n    hasClass: function(value)\n    {\n        return this.nodes.some(function(node)\n        {\n            return (node.classList) ? node.classList.contains(value) : false;\n        });\n    },\n\n    // html & text\n    empty: function()\n    {\n        return this.each(function(node)\n        {\n            node.innerHTML = '';\n        });\n    },\n    html: function(html)\n    {\n        return (html === undefined) ? (this.get().innerHTML || '') : this.empty().append(html);\n    },\n    text: function(text)\n    {\n        return (text === undefined) ? (this.get().textContent || '') : this.each(function(node) { node.textContent = text; });\n    },\n\n    // manipulation\n    after: function(html)\n    {\n        return this._inject(html, function(frag, node)\n        {\n            if (typeof frag === 'string')\n            {\n                node.insertAdjacentHTML('afterend', frag);\n            }\n            else\n            {\n                var elms = (frag instanceof Node) ? [frag] : this._toArray(frag).reverse();\n                for (var i = 0; i < elms.length; i++)\n                {\n                    node.parentNode.insertBefore(elms[i], node.nextSibling);\n                }\n            }\n\n            return node;\n\n        });\n    },\n    before: function(html)\n    {\n        return this._inject(html, function(frag, node)\n        {\n            if (typeof frag === 'string')\n            {\n                node.insertAdjacentHTML('beforebegin', frag);\n            }\n            else\n            {\n                var elms = (frag instanceof Node) ? [frag] : this._toArray(frag);\n                for (var i = 0; i < elms.length; i++)\n                {\n                    node.parentNode.insertBefore(elms[i], node);\n                }\n            }\n\n            return node;\n        });\n    },\n    append: function(html)\n    {\n        return this._inject(html, function(frag, node)\n        {\n            if (typeof frag === 'string' || typeof frag === 'number')\n            {\n                node.insertAdjacentHTML('beforeend', frag);\n            }\n            else\n            {\n                var elms = (frag instanceof Node) ? [frag] : this._toArray(frag);\n                for (var i = 0; i < elms.length; i++)\n                {\n                    node.appendChild(elms[i]);\n                }\n            }\n\n            return node;\n        });\n    },\n    prepend: function(html)\n    {\n        return this._inject(html, function(frag, node)\n        {\n            if (typeof frag === 'string' || typeof frag === 'number')\n            {\n                node.insertAdjacentHTML('afterbegin', frag);\n            }\n            else\n            {\n                var elms = (frag instanceof Node) ? [frag] : this._toArray(frag).reverse();\n                for (var i = 0; i < elms.length; i++)\n                {\n                    node.insertBefore(elms[i], node.firstChild);\n                }\n            }\n\n            return node;\n        });\n    },\n    wrap: function(html)\n    {\n        return this._inject(html, function(frag, node)\n        {\n            var wrapper = (typeof frag === 'string' || typeof frag === 'number') ? this.create(frag)[0] : (frag instanceof Node) ? frag : this._toArray(frag)[0];\n\n            if (node.parentNode)\n            {\n                node.parentNode.insertBefore(wrapper, node);\n            }\n\n            wrapper.appendChild(node);\n\n            return new Dom(wrapper);\n\n        });\n    },\n    unwrap: function()\n    {\n        return this.each(function(node)\n        {\n            var $node = new Dom(node);\n\n            return $node.replaceWith($node.contents());\n        });\n    },\n    replaceWith: function(html)\n    {\n        return this._inject(html, function(frag, node)\n        {\n            var docFrag = document.createDocumentFragment();\n            var elms = (typeof frag === 'string' || typeof frag === 'number') ? this.create(frag) : (frag instanceof Node) ? [frag] : this._toArray(frag);\n\n            for (var i = 0; i < elms.length; i++)\n            {\n                docFrag.appendChild(elms[i]);\n            }\n\n            var result = docFrag.childNodes[0];\n            node.parentNode.replaceChild(docFrag, node);\n\n            return result;\n\n        });\n    },\n    remove: function()\n    {\n        return this.each(function(node)\n        {\n            if (node.parentNode) node.parentNode.removeChild(node);\n        });\n    },\n    clone: function(events)\n    {\n        var nodes = [];\n        this.each(function(node)\n        {\n            var copy = this._clone(node);\n            if (events) copy = this._cloneEvents(node, copy);\n            nodes.push(copy);\n        });\n\n        return new Dom(nodes);\n    },\n\n    // show/hide\n    show: function()\n    {\n        return this.each(function(node)\n        {\n            if (!node.style || !this._hasDisplayNone(node)) return;\n\n            var target = node.getAttribute('domTargetShow');\n            var isHidden = (node.classList) ? node.classList.contains(DomHClass) : false;\n            var isHiddenMobile = (node.classList) ? node.classList.contains(DomHMClass) : false;\n            var type;\n\n            if (isHidden)\n            {\n                type = DomHClass;\n                node.classList.remove(DomHClass);\n            }\n            else if (isHiddenMobile)\n            {\n                type = DomHMClass;\n                node.classList.remove(DomHMClass);\n            }\n            else\n            {\n                node.style.display = (target) ? target : 'block';\n            }\n\n            if (type) node.setAttribute('domTargetHide', type);\n            node.removeAttribute('domTargetShow');\n\n        }.bind(this));\n    },\n    hide: function()\n    {\n        return this.each(function(node)\n        {\n            if (!node.style || this._hasDisplayNone(node)) return;\n\n            var display = node.style.display;\n            var target = node.getAttribute('domTargetHide');\n\n            if (target === DomHClass)\n            {\n                node.classList.add(DomHClass);\n            }\n            else if (target === DomHMClass)\n            {\n                node.classList.add(DomHMClass);\n            }\n            else\n            {\n                if (display !== 'block') node.setAttribute('domTargetShow', display);\n                node.style.display = 'none';\n            }\n\n            node.removeAttribute('domTargetHide');\n\n        });\n    },\n\n    // dimensions\n    scrollTop: function(value)\n    {\n        var node = this.get();\n        var isWindow = (node === window);\n        var isDocument = (node.nodeType === 9);\n        var el = (isDocument) ? (document.scrollingElement || document.body.parentNode || document.body || document.documentElement) : node;\n\n        if (value !== undefined)\n        {\n            if (isWindow) window.scrollTo(0, value);\n            else el.scrollTop = value;\n            return;\n        }\n\n        if (isDocument)\n        {\n            return (typeof window.pageYOffset != 'undefined') ? window.pageYOffset : ((document.documentElement.scrollTop) ? document.documentElement.scrollTop : ((document.body.scrollTop) ? document.body.scrollTop : 0));\n        }\n        else\n        {\n            return (isWindow) ? window.pageYOffset : el.scrollTop;\n        }\n    },\n    offset: function()\n    {\n        return this._getDim('Offset');\n    },\n    position: function()\n    {\n        return this._getDim('Position');\n    },\n    width: function(value, adjust)\n    {\n        return this._getSize('width', 'Width', value, adjust);\n    },\n    height: function(value, adjust)\n    {\n        return this._getSize('height', 'Height', value, adjust);\n    },\n    outerWidth: function()\n    {\n        return this._getInnerOrOuter('width', 'outer');\n    },\n    outerHeight: function()\n    {\n        return this._getInnerOrOuter('height', 'outer');\n    },\n    innerWidth: function()\n    {\n        return this._getInnerOrOuter('width', 'inner');\n    },\n    innerHeight: function()\n    {\n        return this._getInnerOrOuter('height', 'inner');\n    },\n\n    // events\n    click: function()\n    {\n        return this._triggerEvent('click');\n    },\n    focus: function()\n    {\n        return this._triggerEvent('focus');\n    },\n    trigger: function(names)\n    {\n        return this.each(function(node)\n        {\n            var events = names.split(' ');\n            for (var i = 0; i < events.length; i++)\n            {\n                var ev;\n                var opts = { bubbles: true, cancelable: true };\n\n                try {\n                    ev = new window.CustomEvent(events[i], opts);\n                } catch(e) {\n                    ev = document.createEvent('CustomEvent');\n                    ev.initCustomEvent(events[i], true, true);\n                }\n\n                node.dispatchEvent(ev);\n            }\n        });\n    },\n    on: function(names, handler, one)\n    {\n        return this.each(function(node)\n        {\n            var events = names.split(' ');\n            for (var i = 0; i < events.length; i++)\n            {\n                var event = this._getEventName(events[i]);\n                var namespace = this._getEventNamespace(events[i]);\n\n                handler = (one) ? this._getOneHandler(handler, names) : handler;\n                node.addEventListener(event, handler);\n\n                node._e = node._e || {};\n                node._e[namespace] = node._e[namespace] || {};\n                node._e[namespace][event] = node._e[namespace][event] || [];\n                node._e[namespace][event].push(handler);\n            }\n\n        });\n    },\n    one: function(events, handler)\n    {\n        return this.on(events, handler, true);\n    },\n    off: function(names, handler)\n    {\n        var testEvent = function(name, key, event) { return (name === event); };\n        var testNamespace = function(name, key, event, namespace) { return (key === namespace); };\n        var testEventNamespace = function(name, key, event, namespace) { return (name === event && key === namespace); };\n        var testPositive = function() { return true; };\n\n        if (names === undefined)\n        {\n            // ALL\n            return this.each(function(node)\n            {\n                this._offEvent(node, false, false, handler, testPositive);\n            });\n        }\n\n        return this.each(function(node)\n        {\n            var events = names.split(' ');\n\n            for (var i = 0; i < events.length; i++)\n            {\n                var event = this._getEventName(events[i]);\n                var namespace = this._getEventNamespace(events[i]);\n\n                // 1) event without namespace\n                if (namespace === '_events') this._offEvent(node, event, namespace, handler, testEvent);\n                // 2) only namespace\n                else if (!event && namespace !== '_events') this._offEvent(node, event, namespace, handler, testNamespace);\n                // 3) event + namespace\n                else this._offEvent(node, event, namespace, handler, testEventNamespace);\n            }\n        });\n    },\n\n    // form\n    serialize: function(asObject)\n    {\n        var obj = {};\n        var elms = this.get().elements;\n        for (var i = 0; i < elms.length; i++)\n        {\n            var el = elms[i];\n            if (/(checkbox|radio)/.test(el.type) && !el.checked) continue;\n            if (!el.name || el.disabled || el.type === 'file') continue;\n\n            if (el.type === 'select-multiple')\n            {\n                for (var z = 0; z < el.options.length; z++)\n                {\n                    var opt = el.options[z];\n                    if (opt.selected) obj[el.name] = opt.value;\n                }\n            }\n\n            obj[el.name] = (this._isNumber(el.value)) ? parseFloat(el.value) : this._getBooleanFromStr(el.value);\n        }\n\n        return (asObject) ? obj : this._toParams(obj);\n    },\n    ajax: function(success, error)\n    {\n        if (typeof AjaxRequest !== 'undefined')\n        {\n            var method = this.attr('method') || 'post';\n            var options = {\n                url: this.attr('action'),\n                data: this.serialize(),\n                success: success,\n                error: error\n            };\n\n            return new AjaxRequest(method, options);\n        }\n    },\n\n    // private\n    _queryContext: function(selector, context)\n    {\n        context = this._getContext(context);\n\n        return (context.nodeType !== 3 && typeof context.querySelectorAll === 'function') ? context.querySelectorAll(selector) : [];\n    },\n    _query: function(selector, context)\n    {\n        if (context)\n        {\n            return this._queryContext(selector, context);\n        }\n        else if (/^[.#]?[\\w-]*$/.test(selector))\n        {\n            if (selector[0] === '#')\n            {\n                var element = document.getElementById(selector.slice(1));\n                return element ? [element] : [];\n            }\n\n            if (selector[0] === '.')\n            {\n                return document.getElementsByClassName(selector.slice(1));\n            }\n\n            return document.getElementsByTagName(selector);\n        }\n\n        return document.querySelectorAll(selector);\n    },\n    _getContext: function(context)\n    {\n        context = (typeof context === 'string') ? document.querySelector(context) : context;\n\n        return (context && context.dom) ? context.get() : (context || document);\n    },\n    _inject: function(html, fn)\n    {\n        var len = this.nodes.length;\n        var nodes = [];\n        while (len--)\n        {\n            var res = (typeof html === 'function') ? html.call(this, this.nodes[len]) : html;\n            var el = (len === 0) ? res : this._clone(res);\n            var node = fn.call(this, el, this.nodes[len]);\n\n            if (node)\n            {\n                if (node.dom) nodes.push(node.get());\n                else nodes.push(node);\n            }\n        }\n\n        return new Dom(nodes);\n    },\n    _cloneEvents: function(node, copy)\n    {\n        var events = node._e;\n        if (events)\n        {\n            copy._e = events;\n            for (var name in events._events)\n            {\n                for (var i = 0; i < events._events[name].length; i++)\n                {\n                    copy.addEventListener(name, events._events[name][i]);\n                }\n            }\n        }\n\n        return copy;\n    },\n    _clone: function(node)\n    {\n        if (typeof node === 'undefined') return;\n        if (typeof node === 'string') return node;\n        else if (node instanceof Node || node.nodeType) return node.cloneNode(true);\n        else if ('length' in node)\n        {\n            return [].map.call(this._toArray(node), function(el) { return el.cloneNode(true); });\n        }\n    },\n    _slice: function(obj)\n    {\n        return (!obj || obj.length === 0) ? [] : (obj.length) ? [].slice.call(obj.nodes || obj) : [obj];\n    },\n    _eachClass: function(value, type)\n    {\n        return this.each(function(node)\n        {\n            if (value)\n            {\n                var setClass = function(name) { if (node.classList) node.classList[type](name); };\n                value.split(' ').forEach(setClass);\n            }\n        });\n    },\n    _triggerEvent: function(name)\n    {\n        var node = this.get();\n        if (node && node.nodeType !== 3) node[name]();\n        return this;\n    },\n    _getOneHandler: function(handler, events)\n    {\n        var self = this;\n        return function()\n        {\n            handler.apply(this, arguments);\n            self.off(events);\n        };\n    },\n    _getEventNamespace: function(event)\n    {\n        var arr = event.split('.');\n        var namespace = (arr[1]) ? arr[1] : '_events';\n        return (arr[2]) ? namespace + arr[2] : namespace;\n    },\n    _getEventName: function(event)\n    {\n        return event.split('.')[0];\n    },\n    _offEvent: function(node, event, namespace, handler, condition)\n    {\n        for (var key in node._e)\n        {\n            for (var name in node._e[key])\n            {\n                if (condition(name, key, event, namespace))\n                {\n                    var handlers = node._e[key][name];\n                    for (var i = 0; i < handlers.length; i++)\n                    {\n                        if (typeof handler !== 'undefined' && handlers[i].toString() !== handler.toString())\n                        {\n                            continue;\n                        }\n\n                        node.removeEventListener(name, handlers[i]);\n                        node._e[key][name].splice(i, 1);\n\n                        if (node._e[key][name].length === 0) delete node._e[key][name];\n                        if (Object.keys(node._e[key]).length === 0) delete node._e[key];\n                    }\n                }\n            }\n        }\n    },\n    _getInnerOrOuter: function(method, type)\n    {\n        return this[method](undefined, type);\n    },\n    _getDocSize: function(node, type)\n    {\n        var body = node.body, html = node.documentElement;\n        return Math.max(body['scroll' + type], body['offset' + type], html['client' + type], html['scroll' + type], html['offset' + type]);\n    },\n    _getSize: function(type, captype, value, adjust)\n    {\n        if (value === undefined)\n        {\n            var el = this.get();\n            if (el.nodeType === 3)      value = 0;\n            else if (el.nodeType === 9) value = this._getDocSize(el, captype);\n            else if (el === window)     value = window['inner' + captype];\n            else                        value = this._getHeightOrWidth(type, el, adjust || 'normal');\n\n            return Math.round(value);\n        }\n\n        return this.each(function(node)\n        {\n            value = parseFloat(value);\n            value = value + this._adjustResultHeightOrWidth(type, node, adjust || 'normal');\n\n            new Dom(node).css(type, value + 'px');\n\n        }.bind(this));\n    },\n    _getHeightOrWidth: function(type, el, adjust)\n    {\n        if (!el) return 0;\n\n        var name = type.charAt(0).toUpperCase() + type.slice(1);\n        var result = 0;\n        var style = getComputedStyle(el, null);\n        var $el = new Dom(el);\n        var $targets = $el.parents().filter(function(node)\n        {\n            return (node.nodeType === 1 && getComputedStyle(node, null).display === 'none') ? node : false;\n        });\n\n        if (style.display === 'none') $targets.add(el);\n        if ($targets.length !== 0)\n        {\n            var fixStyle = 'visibility: hidden !important; display: block !important;';\n            var tmp = [];\n\n            $targets.each(function(node)\n            {\n                var $node = new Dom(node);\n                var thisStyle = $node.attr('style');\n                if (thisStyle !== null) tmp.push(thisStyle);\n                $node.attr('style', (thisStyle !== null) ? thisStyle + ';' + fixStyle : fixStyle);\n            });\n\n            result = $el.get()['offset' + name] - this._adjustResultHeightOrWidth(type, el, adjust);\n\n            $targets.each(function(node, i)\n            {\n                var $node = new Dom(node);\n                if (tmp[i] === undefined) $node.removeAttr('style');\n                else $node.attr('style', tmp[i]);\n            });\n        }\n        else\n        {\n            result = el['offset' + name] - this._adjustResultHeightOrWidth(type, el, adjust);\n        }\n\n        return result;\n    },\n    _adjustResultHeightOrWidth: function(type, el, adjust)\n    {\n        if (!el || adjust === false) return 0;\n\n        var fix = 0;\n        var style = getComputedStyle(el, null);\n        var isBorderBox = (style.boxSizing === \"border-box\");\n\n        if (type === 'height')\n        {\n            if (adjust === 'inner' || (adjust === 'normal' && isBorderBox))\n            {\n                fix += (parseFloat(style.borderTopWidth) || 0) + (parseFloat(style.borderBottomWidth) || 0);\n            }\n\n            if (adjust === 'outer') fix -= (parseFloat(style.marginTop) || 0) + (parseFloat(style.marginBottom) || 0);\n        }\n        else\n        {\n            if (adjust === 'inner' || (adjust === 'normal' && isBorderBox))\n            {\n                fix += (parseFloat(style.borderLeftWidth) || 0) + (parseFloat(style.borderRightWidth) || 0);\n            }\n\n            if (adjust === 'outer') fix -= (parseFloat(style.marginLeft) || 0) + (parseFloat(style.marginRight) || 0);\n        }\n\n        return fix;\n    },\n    _getDim: function(type)\n    {\n        var node = this.get();\n        return (node.nodeType === 3) ? { top: 0, left: 0 } : this['_get' + type](node);\n    },\n    _getPosition: function(node)\n    {\n        return { top: node.offsetTop, left: node.offsetLeft };\n    },\n    _getOffset: function(node)\n    {\n        var rect = node.getBoundingClientRect();\n        var doc = node.ownerDocument;\n\t\tvar docElem = doc.documentElement;\n\t\tvar win = doc.defaultView;\n\n\t\treturn {\n\t\t\ttop: rect.top + win.pageYOffset - docElem.clientTop,\n\t\t\tleft: rect.left + win.pageXOffset - docElem.clientLeft\n\t\t};\n    },\n    _getSibling: function(selector, method)\n    {\n        selector = (selector && selector.dom) ? selector.get() : selector;\n\n        var isNode = (selector && selector.nodeType);\n        var sibling;\n\n        this.each(function(node)\n        {\n            while (node = node[method])\n            {\n                if ((isNode && node === selector) || new Dom(node).is(selector))\n                {\n                    sibling = node;\n                    return;\n                }\n            }\n        });\n\n        return new Dom(sibling);\n    },\n    _toArray: function(obj)\n    {\n        if (obj instanceof NodeList)\n        {\n            var arr = [];\n            for (var i = 0; i < obj.length; i++)\n            {\n                arr[i] = obj[i];\n            }\n\n            return arr;\n        }\n        else if (obj === undefined) return [];\n        else\n        {\n            return (obj.dom) ? obj.nodes : obj;\n        }\n    },\n    _toParams: function(obj)\n    {\n        var params = '';\n        for (var key in obj)\n        {\n            params += '&' + this._encodeUri(key) + '=' + this._encodeUri(obj[key]);\n        }\n\n        return params.replace(/^&/, '');\n    },\n    _toObject: function(str)\n    {\n        return (new Function(\"return \" + str))();\n    },\n    _encodeUri: function(str)\n    {\n        return encodeURIComponent(str).replace(/!/g, '%21').replace(/'/g, '%27').replace(/\\(/g, '%28').replace(/\\)/g, '%29').replace(/\\*/g, '%2A').replace(/%20/g, '+');\n    },\n    _isNumber: function(str)\n    {\n        return !isNaN(str) && !isNaN(parseFloat(str));\n    },\n    _isObjectString: function(str)\n    {\n        return (str.search(/^{/) !== -1);\n    },\n    _getBooleanFromStr: function(str)\n    {\n        if (str === 'true') return true;\n        else if (str === 'false') return false;\n\n        return str;\n    },\n    _hasDisplayNone: function(el)\n    {\n        return (el.style.display === 'none') || ((el.currentStyle) ? el.currentStyle.display : getComputedStyle(el, null).display) === 'none';\n    }\n};\n// Unique ID\nvar uuid = 0;\n\n// Wrapper\nvar $R = function(selector, options)\n{\n    return RedactorApp(selector, options, [].slice.call(arguments, 2));\n};\n\n// Globals\n$R.app = [];\n$R.version = '3.1.6';\n$R.options = {};\n$R.modules = {};\n$R.services = {};\n$R.classes = {};\n$R.plugins = {};\n$R.mixins = {};\n$R.modals = {};\n$R.lang = {};\n$R.dom = function(selector, context) { return new Dom(selector, context); };\n$R.ajax = Ajax;\n$R.Dom = Dom;\n$R.keycodes = {\n\tBACKSPACE: 8,\n\tDELETE: 46,\n\tUP: 38,\n\tDOWN: 40,\n\tENTER: 13,\n\tSPACE: 32,\n\tESC: 27,\n\tTAB: 9,\n\tCTRL: 17,\n\tMETA: 91,\n\tSHIFT: 16,\n\tALT: 18,\n\tRIGHT: 39,\n\tLEFT: 37\n};\n$R.env = {\n    'plugin': 'plugins',\n    'module': 'modules',\n    'service': 'services',\n    'class': 'classes',\n    'mixin': 'mixins'\n};\n\n// jQuery Wrapper\n/*eslint-env jquery*/\nif (typeof jQuery !== 'undefined')\n{\n    (function($) { $.fn.redactor = function(options) { return RedactorApp(this.toArray(), options, [].slice.call(arguments, 1)); }; })(jQuery);\n}\n\n// Class\nvar RedactorApp = function(selector, options, args)\n{\n    var namespace = 'redactor';\n    var nodes = (Array.isArray(selector)) ? selector : (selector && selector.nodeType) ? [selector] : document.querySelectorAll(selector);\n    var isApi = (typeof options === 'string' || typeof options === 'function');\n    var value = [];\n    var instance;\n\n    for (var i = 0; i < nodes.length; i++)\n    {\n        var el = nodes[i];\n        var $el = $R.dom(el);\n\n        instance = $el.dataget(namespace);\n        if (!instance && !isApi)\n        {\n            // Initialization\n            instance = new App(el, options, uuid);\n            $el.dataset(namespace, instance);\n            $R.app[uuid] = instance;\n            uuid++;\n        }\n\n        // API\n        if (instance && isApi)\n        {\n            var isDestroy = (options === 'destroy');\n            options = (isDestroy) ? 'stop' : options;\n\n            var methodValue;\n            if (typeof options === 'function')\n            {\n                methodValue = options.apply(instance, args);\n            }\n            else\n            {\n                args.unshift(options);\n                methodValue = instance.api.apply(instance, args);\n            }\n            if (methodValue !== undefined) value.push(methodValue);\n\n            if (isDestroy) $el.dataset(namespace, false);\n        }\n    }\n\n    return (value.length === 0 || value.length === 1) ? ((value.length === 0) ? instance : value[0]) : value;\n};\n\n// add\n$R.add = function(type, name, obj)\n{\n    if (typeof $R.env[type] === 'undefined') return;\n\n    // translations\n    if (obj.translations)\n    {\n        $R.lang = $R.extend(true, {}, $R.lang, obj.translations);\n    }\n\n    // modals\n    if (obj.modals)\n    {\n        $R.modals = $R.extend(true, {}, $R.modals, obj.modals);\n    }\n\n    // mixin\n    if (type === 'mixin')\n    {\n        $R[$R.env[type]][name] = obj;\n    }\n    else\n    {\n        // prototype\n        var F = function() {};\n        F.prototype = obj;\n\n        // mixins\n        if (obj.mixins)\n        {\n            for (var i = 0; i < obj.mixins.length; i++)\n            {\n                $R.inherit(F, $R.mixins[obj.mixins[i]]);\n            }\n        }\n\n        $R[$R.env[type]][name] = F;\n    }\n};\n\n// add lang\n$R.addLang = function(lang, obj)\n{\n    if (typeof $R.lang[lang] === 'undefined')\n    {\n        $R.lang[lang] = {};\n    }\n\n    $R.lang[lang] = $R.extend($R.lang[lang], obj);\n};\n\n// create\n$R.create = function(name)\n{\n    var arr = name.split('.');\n    var args = [].slice.call(arguments, 1);\n\n    var type = 'classes';\n    if (typeof $R.env[arr[0]] !== 'undefined')\n    {\n        type = $R.env[arr[0]];\n        name = arr.slice(1).join('.');\n    }\n\n    // construct\n    var instance = new $R[type][name]();\n\n    // init\n    if (instance.init)\n    {\n        var res = instance.init.apply(instance, args);\n\n        return (res) ? res : instance;\n    }\n\n    return instance;\n};\n\n// inherit\n$R.inherit = function(current, parent)\n{\n    var F = function () {};\n    F.prototype = parent;\n    var f = new F();\n\n    for (var prop in current.prototype)\n    {\n        if (current.prototype.__lookupGetter__(prop)) f.__defineGetter__(prop, current.prototype.__lookupGetter__(prop));\n        else f[prop] = current.prototype[prop];\n    }\n\n    current.prototype = f;\n    current.prototype.super = parent;\n\n    return current;\n};\n\n// error\n$R.error = function(exception)\n{\n    throw exception;\n};\n\n// extend\n$R.extend = function()\n{\n    var extended = {};\n    var deep = false;\n    var i = 0;\n    var length = arguments.length;\n\n    if (Object.prototype.toString.call( arguments[0] ) === '[object Boolean]')\n    {\n        deep = arguments[0];\n        i++;\n    }\n\n    var merge = function(obj)\n    {\n        for (var prop in obj)\n        {\n            if (Object.prototype.hasOwnProperty.call(obj, prop))\n            {\n                if (deep && Object.prototype.toString.call(obj[prop]) === '[object Object]') extended[prop] = $R.extend(true, extended[prop], obj[prop]);\n                else extended[prop] = obj[prop];\n            }\n        }\n    };\n\n    for (; i < length; i++ )\n    {\n        var obj = arguments[i];\n        merge(obj);\n    }\n\n    return extended;\n};\n$R.opts = {\n    animation: true,\n    lang: 'en',\n    direction: 'ltr',\n    spellcheck: true,\n    structure: false,\n    scrollTarget: false,\n    styles: true,\n    stylesClass: 'redactor-styles',\n    placeholder: false,\n\n    source: true,\n    showSource: false,\n\n    inline: false,\n\n    breakline: false,\n    markup: 'p',\n    enterKey: true,\n\n    clickToEdit: false,\n    clickToSave: false,\n    clickToCancel: false,\n\n    focus: false,\n    focusEnd: false,\n\n    minHeight: false, // string, '100px'\n    maxHeight: false, // string, '100px'\n    maxWidth: false, // string, '700px'\n\n    plugins: [], // array\n    callbacks: {},\n\n    // pre & tab\n    preClass: false, // string\n    preSpaces: 4, // or false\n    tabindex: false, // int\n    tabAsSpaces: false, // true or number of spaces\n    tabKey: true,\n\n    // autosave\n    autosave: false, // false or url\n    autosaveName: false,\n    autosaveData: false,\n\n    // toolbar\n    toolbar: true,\n    toolbarFixed: true,\n    toolbarFixedTarget: document,\n    toolbarFixedTopOffset: 0, // pixels\n    toolbarExternal: false, // ID selector\n    toolbarContext: true,\n\n    // air\n    air: false,\n\n    // formatting\n    formatting: ['p', 'blockquote', 'pre', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\n    formattingAdd: false,\n    formattingHide: false,\n\n    // buttons\n    buttons: ['html', 'format', 'bold', 'italic', 'deleted', 'lists', 'image', 'file', 'link'],\n    // + 'line', 'redo', 'undo', 'underline', 'ol', 'ul', 'indent', 'outdent'\n    buttonsTextLabeled: false,\n    buttonsAdd: [],\n    buttonsAddFirst: [],\n    buttonsAddAfter: false,\n    buttonsAddBefore: false,\n    buttonsHide: [],\n    buttonsHideOnMobile: [],\n\n    // image\n    imageUpload: false,\n    imageUploadParam: 'file',\n    imageData: false,\n    imageEditable: true,\n    imageCaption: true,\n    imageLink: true,\n    imagePosition: false,\n    imageResizable: false,\n    imageFloatMargin: '10px',\n    imageFigure: true,\n\n    // file\n    fileUpload: false,\n    fileUploadParam: 'file',\n    fileData: false,\n    fileAttachment: false,\n\n    // upload opts\n    uploadData: false,\n    dragUpload: true,\n    multipleUpload: true,\n    clipboardUpload: true,\n    uploadBase64: false,\n\n    // link\n    linkTarget: false,\n    linkTitle: false,\n    linkNewTab: false,\n    linkNofollow: false,\n    linkSize: 30,\n    linkValidation: true,\n\n    // clean\n    cleanOnEnter: true,\n    cleanInlineOnEnter: false,\n    paragraphize: true,\n    removeScript: true,\n    removeNewLines: false,\n    removeComments: true,\n    replaceTags: {\n        'b': 'strong',\n        'i': 'em',\n        'strike': 'del'\n    },\n\n    // paste\n    pastePlainText: false,\n    pasteLinkTarget: false,\n    pasteImages: true,\n    pasteLinks: true,\n    pasteClean: true,\n    pasteKeepStyle: [],\n    pasteKeepClass: [],\n    pasteKeepAttrs: ['td', 'th'],\n    pasteBlockTags: ['pre', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'table', 'tbody', 'thead', 'tfoot', 'th', 'tr', 'td', 'ul', 'ol', 'li', 'blockquote', 'p', 'figure', 'figcaption'],\n    pasteInlineTags: ['a', 'img', 'br', 'strong', 'ins', 'code', 'del', 'span', 'samp', 'kbd', 'sup', 'sub', 'mark', 'var', 'cite', 'small', 'b', 'u', 'em', 'i', 'abbr'],\n\n    // active buttons\n    activeButtons: {\n        b: 'bold',\n        strong: 'bold',\n        i: 'italic',\n        em: 'italic',\n        del: 'deleted',\n        strike: 'deleted',\n        u: 'underline'\n    },\n    activeButtonsAdd: {},\n    activeButtonsObservers: {},\n\n    // autoparser\n    autoparse: true,\n    autoparseStart: true,\n    autoparsePaste: true,\n    autoparseLinks: true,\n    autoparseImages: true,\n    autoparseVideo: true,\n\n    // shortcodes\n    shortcodes: {\n        'p.': { format: 'p' },\n        'quote.': { format: 'blockquote' },\n        'pre.': { format: 'pre' },\n        'h1.': { format: 'h1' },\n        'h2.': { format: 'h2' },\n        'h3.': { format: 'h3' },\n        'h4.': { format: 'h4' },\n        'h5.': { format: 'h5' },\n        'h6.': { format: 'h6' },\n        //'1.': { format: 'ol' },\n        '*.': { format: 'ul' }\n    },\n    shortcodesAdd: false, // object\n\n    // shortcuts\n    shortcuts: {\n        'ctrl+shift+m, meta+shift+m': { api: 'module.inline.clearformat' },\n        'ctrl+b, meta+b': { api: 'module.inline.format', args: 'b' },\n        'ctrl+i, meta+i': { api: 'module.inline.format', args: 'i' },\n        'ctrl+u, meta+u': { api: 'module.inline.format', args: 'u' },\n        'ctrl+h, meta+h': { api: 'module.inline.format', args: 'sup' },\n        'ctrl+l, meta+l': { api: 'module.inline.format', args: 'sub' },\n        'ctrl+k, meta+k': { api: 'module.link.open' },\n        'ctrl+alt+0, meta+alt+0': { api: 'module.block.format', args: 'p' },\n        'ctrl+alt+1, meta+alt+1': { api: 'module.block.format', args: 'h1' },\n        'ctrl+alt+2, meta+alt+2': { api: 'module.block.format', args: 'h2' },\n        'ctrl+alt+3, meta+alt+3': { api: 'module.block.format', args: 'h3' },\n        'ctrl+alt+4, meta+alt+4': { api: 'module.block.format', args: 'h4' },\n        'ctrl+alt+5, meta+alt+5': { api: 'module.block.format', args: 'h5' },\n        'ctrl+alt+6, meta+alt+6': { api: 'module.block.format', args: 'h6' },\n        'ctrl+shift+7, meta+shift+7': { api: 'module.list.toggle', args: 'ol' },\n        'ctrl+shift+8, meta+shift+8': { api: 'module.list.toggle', args: 'ul' }\n    },\n    shortcutsAdd: false, // object\n\n    // misc\n    grammarly: true,\n    notranslate: false,\n\n    // private\n    bufferLimit: 100,\n    emptyHtml: '<p></p>',\n    markerChar: '\\ufeff',\n    imageTypes: ['image/png', 'image/jpeg', 'image/gif'],\n    inlineTags: ['a', 'span', 'strong', 'strike', 'b', 'u', 'em', 'i', 'code', 'del', 'ins', 'samp', 'kbd', 'sup', 'sub', 'mark', 'var', 'cite', 'small', 'abbr'],\n    blockTags: ['pre', 'ul', 'ol', 'li', 'p', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6',  'dl', 'dt', 'dd', 'div', 'table', 'tbody', 'thead', 'tfoot', 'tr', 'th', 'td', 'blockquote', 'output', 'figcaption', 'figure', 'address', 'section', 'header', 'footer', 'aside', 'article', 'iframe'],\n    regex: {\n        youtube: /https?:\\/\\/(?:[0-9A-Z-]+\\.)?(?:youtu\\.be\\/|youtube\\.com\\S*[^\\w\\-\\s])([\\w\\-]{11})(?=[^\\w\\-]|$)(?![?=&+%\\w.-]*(?:['\"][^<>]*>|<\\/a>))[?=&+%\\w.-]*/gi,\n        vimeo: /(http|https)?:\\/\\/(?:www.|player.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/(?:[^\\/]*)\\/videos\\/|album\\/(?:\\d+)\\/video\\/|video\\/|)(\\d+)(?:[a-zA-Z0-9_-]+)?/gi,\n        imageurl: /((https?|www)[^\\s]+\\.)(jpe?g|png|gif)(\\?[^\\s-]+)?/gi,\n        url: /(https?:\\/\\/(?:www\\.|(?!www))[^\\s\\.]+\\.[^\\s]{2,}|www\\.[^\\s]+\\.[^\\s]{2,})/gi\n    },\n    input: true,\n    zindex: false,\n    modes: {\n        \"inline\": {\n            pastePlainText: true,\n            pasteImages: false,\n            enterKey: false,\n            toolbar: false,\n            autoparse: false,\n            source: false,\n            showSource: false,\n            styles: false,\n            air: false\n        },\n        \"original\": {\n            styles: false\n        }\n    }\n};\n$R.lang['en'] = {\n    \"format\": \"Format\",\n    \"image\": \"Image\",\n    \"file\": \"File\",\n    \"link\": \"Link\",\n    \"bold\": \"Bold\",\n    \"italic\": \"Italic\",\n    \"deleted\": \"Strikethrough\",\n    \"underline\": \"Underline\",\n    \"superscript\": \"Superscript\",\n    \"subscript\": \"Subscript\",\n    \"bold-abbr\": \"B\",\n    \"italic-abbr\": \"I\",\n    \"deleted-abbr\": \"S\",\n    \"underline-abbr\": \"U\",\n    \"superscript-abbr\": \"Sup\",\n    \"subscript-abbr\": \"Sub\",\n    \"lists\": \"Lists\",\n    \"link-insert\": \"Insert Link\",\n    \"link-edit\": \"Edit Link\",\n    \"link-in-new-tab\": \"Open link in new tab\",\n    \"unlink\": \"Unlink\",\n    \"cancel\": \"Cancel\",\n    \"close\": \"Close\",\n    \"insert\": \"Insert\",\n    \"save\": \"Save\",\n    \"delete\": \"Delete\",\n    \"text\": \"Text\",\n    \"edit\": \"Edit\",\n    \"title\": \"Title\",\n    \"paragraph\": \"Normal text\",\n    \"quote\": \"Quote\",\n    \"code\": \"Code\",\n    \"heading1\": \"Heading 1\",\n    \"heading2\": \"Heading 2\",\n    \"heading3\": \"Heading 3\",\n    \"heading4\": \"Heading 4\",\n    \"heading5\": \"Heading 5\",\n    \"heading6\": \"Heading 6\",\n    \"filename\": \"Name\",\n    \"optional\": \"optional\",\n    \"unorderedlist\": \"Unordered List\",\n    \"orderedlist\": \"Ordered List\",\n    \"outdent\": \"Outdent\",\n    \"indent\": \"Indent\",\n    \"horizontalrule\": \"Line\",\n    \"upload\": \"Upload\",\n    \"upload-label\": \"Drop files here or click to upload\",\n    \"accessibility-help-label\": \"Rich text editor\",\n    \"caption\": \"Caption\",\n    \"bulletslist\": \"Bullets\",\n    \"numberslist\": \"Numbers\",\n    \"image-position\": \"Position\",\n    \"none\": \"None\",\n    \"left\": \"Left\",\n    \"right\": \"Right\",\n    \"center\": \"Center\",\n    \"undo\": \"Undo\",\n    \"redo\": \"Redo\"\n};\n$R.buttons = {\n    html: {\n        title: 'HTML',\n        icon: true,\n        api: 'module.source.toggle'\n    },\n    undo: {\n        title: '## undo ##',\n        icon: true,\n        api: 'module.buffer.undo'\n    },\n    redo: {\n        title: '## redo ##',\n        icon: true,\n        api: 'module.buffer.redo'\n    },\n    format: {\n        title: '## format ##',\n        icon: true,\n        dropdown: {\n            p: {\n                title: '## paragraph ##',\n                api: 'module.block.format',\n                args: {\n                    tag: 'p'\n                }\n            },\n            blockquote: {\n                title: '## quote ##',\n                api: 'module.block.format',\n                args: {\n                    tag: 'blockquote'\n                }\n            },\n            pre: {\n                title: '## code ##',\n                api: 'module.block.format',\n                args: {\n                    tag: 'pre'\n                }\n            },\n            h1: {\n                title: '## heading1 ##',\n                api: 'module.block.format',\n                args: {\n                    tag: 'h1'\n                }\n            },\n            h2: {\n                title: '## heading2 ##',\n                api: 'module.block.format',\n                args: {\n                    tag: 'h2'\n                }\n            },\n            h3: {\n                title: '## heading3 ##',\n                api: 'module.block.format',\n                args: {\n                    tag: 'h3'\n                }\n            },\n            h4: {\n                title: '## heading4 ##',\n                api: 'module.block.format',\n                args: {\n                    tag: 'h4'\n                }\n            },\n            h5: {\n                title: '## heading5 ##',\n                api: 'module.block.format',\n                args: {\n                    tag: 'h5'\n                }\n            },\n            h6: {\n                title: '## heading6 ##',\n                api: 'module.block.format',\n                args: {\n                    tag: 'h6'\n                }\n            }\n        }\n    },\n    bold: {\n        title: '## bold-abbr ##',\n        icon: true,\n        tooltip: '## bold ##',\n        api: 'module.inline.format',\n        args: {\n            tag: 'b'\n        }\n    },\n    italic: {\n        title: '## italic-abbr ##',\n        icon: true,\n        tooltip: '## italic ##',\n        api: 'module.inline.format',\n        args: {\n            tag: 'i'\n        }\n    },\n    deleted: {\n        title: '## deleted-abbr ##',\n        icon: true,\n        tooltip: '## deleted ##',\n        api: 'module.inline.format',\n        args: {\n            tag: 'del'\n        }\n    },\n    underline: {\n        title: '## underline-abbr ##',\n        icon: true,\n        tooltip: '## underline ##',\n        api: 'module.inline.format',\n        args: {\n            tag: 'u'\n        }\n    },\n    sup: {\n        title: '## superscript-abbr ##',\n        icon: true,\n        tooltip: '## superscript ##',\n        api: 'module.inline.format',\n        args: {\n            tag: 'sup'\n        }\n    },\n    sub: {\n        title: '## subscript-abbr ##',\n        icon: true,\n        tooltip: '## subscript ##',\n        api: 'module.inline.format',\n        args: {\n            tag: 'sub'\n        }\n    },\n    lists: {\n        title: '## lists ##',\n        icon: true,\n        observe: 'list',\n        dropdown: {\n            observe: 'list',\n            unorderedlist: {\n                title: '&bull; ## unorderedlist ##',\n                api: 'module.list.toggle',\n                args: 'ul'\n            },\n            orderedlist: {\n                title: '1. ## orderedlist ##',\n                api: 'module.list.toggle',\n                args: 'ol'\n            },\n            outdent: {\n                title: '< ## outdent ##',\n                api: 'module.list.outdent'\n            },\n            indent: {\n                title: '> ## indent ##',\n                api: 'module.list.indent'\n            }\n        }\n    },\n    ul: {\n        title: '&bull; ## bulletslist ##',\n        icon: true,\n        api: 'module.list.toggle',\n        observe: 'list',\n        args: 'ul'\n    },\n    ol: {\n        title: '1. ## numberslist ##',\n        icon: true,\n        api: 'module.list.toggle',\n        observe: 'list',\n        args: 'ol'\n    },\n    outdent: {\n        title: '## outdent ##',\n        icon: true,\n        api: 'module.list.outdent',\n        observe: 'list'\n    },\n    indent: {\n        title: '## indent ##',\n        icon: true,\n        api: 'module.list.indent',\n        observe: 'list'\n    },\n    image: {\n        title: '## image ##',\n        icon: true,\n        api: 'module.image.open'\n    },\n    file: {\n        title: '## file ##',\n        icon: true,\n        api: 'module.file.open'\n    },\n    link: {\n        title: '## link ##',\n        icon: true,\n        observe: 'link',\n        dropdown: {\n            observe: 'link',\n            link: {\n                title: '## link-insert ##',\n                api: 'module.link.open'\n            },\n            unlink: {\n                title: '## unlink ##',\n                api: 'module.link.unlink'\n            }\n        }\n    },\n    line: {\n        title: '## horizontalrule ##',\n        icon: true,\n        api: 'module.line.insert'\n    }\n};\nvar App = function(element, options, uuid)\n{\n    this.module = {};\n    this.plugin = {};\n    this.instances = {};\n\n    // start/stop\n    this.started = false;\n    this.stopped = false;\n\n    // environment\n    this.uuid = uuid;\n    this.rootElement = element;\n    this.rootOpts = options;\n    this.dragInside = false;\n    this.dragComponentInside = false;\n    this.keycodes = $R.keycodes;\n    this.namespace = 'redactor';\n    this.$win = $R.dom(window);\n    this.$doc = $R.dom(document);\n    this.$body = $R.dom('body');\n    this.editorReadOnly = false;\n\n    // core services\n    this.opts = $R.create('service.options', options, element);\n    this.lang = $R.create('service.lang', this);\n\n    // build\n    this.buildServices();\n    this.buildModules();\n    this.buildPlugins();\n\n    // start\n    this.start();\n};\n\nApp.prototype = {\n    start: function()\n    {\n        // start\n        this.stopped = false;\n        this.broadcast('start');\n        this.broadcast('startcode');\n\n        if (this.opts.clickToEdit)\n        {\n            this.broadcast('startclicktoedit');\n        }\n        else\n        {\n            this.broadcast('enable');\n            if (this.opts.showSource) this.broadcast('startcodeshow');\n            this.broadcast('enablefocus');\n        }\n\n        // started\n        this.broadcast('started');\n        this.started = true;\n    },\n    stop: function()\n    {\n        this.started = false;\n        this.stopped = true;\n\n        this.broadcast('stop');\n        this.broadcast('disable');\n        this.broadcast('stopped');\n    },\n\n    // started & stopped\n    isStarted: function()\n    {\n        return this.started;\n    },\n    isStopped: function()\n    {\n        return this.stopped;\n    },\n\n    // build\n    buildServices: function()\n    {\n        var core = ['options', 'lang'];\n        var bindable = ['uuid', 'keycodes', 'opts', 'lang', '$win', '$doc', '$body'];\n        var services = [];\n        for (var name in $R.services)\n        {\n            if (core.indexOf(name) === -1)\n            {\n                this[name] = $R.create('service.' + name, this);\n                services.push(name);\n                bindable.push(name);\n            }\n        }\n\n        // binding\n        for (var i = 0; i < services.length; i++)\n        {\n            var service = services[i];\n            for (var z = 0; z < bindable.length; z++)\n            {\n                var inj = bindable[z];\n                if (service !== inj)\n                {\n                    this[service][inj] = this[inj];\n                }\n            }\n        }\n    },\n    buildModules: function()\n    {\n        for (var name in $R.modules)\n        {\n            this.module[name] = $R.create('module.' + name, this);\n            this.instances[name] = this.module[name];\n        }\n    },\n    buildPlugins: function()\n    {\n        var plugins = this.opts.plugins;\n        for (var i = 0; i < plugins.length; i++)\n        {\n            var name = plugins[i];\n            if (typeof $R.plugins[name] !== 'undefined')\n            {\n                this.plugin[name] = $R.create('plugin.' + name, this);\n                this.instances[name] = this.plugin[name];\n            }\n        }\n    },\n\n    // draginside\n    isDragInside: function()\n    {\n        return this.dragInside;\n    },\n    setDragInside: function(dragInside)\n    {\n        this.dragInside = dragInside;\n    },\n    isDragComponentInside: function()\n    {\n        return this.dragComponentInside;\n    },\n    setDragComponentInside: function(dragInside)\n    {\n        this.dragComponentInside = dragInside;\n    },\n    getDragComponentInside: function()\n    {\n        return this.dragComponentInside;\n    },\n\n    // readonly\n    isReadOnly: function()\n    {\n        return this.editorReadOnly;\n    },\n    enableReadOnly: function()\n    {\n        this.editorReadOnly = true;\n        this.broadcast('enablereadonly');\n        this.component.clearActive();\n        this.toolbar.disableButtons();\n    },\n    disableReadOnly: function()\n    {\n        this.editorReadOnly = false;\n        this.broadcast('disablereadonly');\n        this.toolbar.enableButtons();\n    },\n\n    // messaging\n    callMessageHandler: function(instance, name, args)\n    {\n        var arr = name.split('.');\n        if (arr.length === 1)\n        {\n            if (typeof instance['on' + name] === 'function')\n            {\n                instance['on' + name].apply(instance, args);\n            }\n        }\n        else\n        {\n            arr[0] = 'on' + arr[0];\n\n            var func = this.utils.checkProperty(instance, arr);\n            if (typeof func === 'function')\n            {\n                func.apply(instance, args);\n            }\n        }\n    },\n    broadcast: function(name)\n    {\n        var args = [].slice.call(arguments, 1);\n        for (var moduleName in this.instances)\n        {\n            this.callMessageHandler(this.instances[moduleName], name, args);\n        }\n\n        // callback\n        return this.callback.trigger(name, args);\n    },\n\n    // callback\n    on: function(name, func)\n    {\n        this.callback.add(name, func);\n    },\n    off: function(name, func)\n    {\n        this.callback.remove(name, func);\n    },\n\n    // api\n    api: function(name)\n    {\n        if (!this.isStarted() && name !== 'start') return;\n        if (this.isReadOnly() && name !== 'disableReadOnly') return;\n\n        this.broadcast('state');\n\n        var args = [].slice.call(arguments, 1);\n        var arr = name.split('.');\n\n        var isApp = (arr.length === 1);\n        var isCallback = (arr[0] === 'on' || arr[0] === 'off');\n        var isService = (!isCallback && arr.length === 2);\n        var isPlugin = (arr[0] === 'plugin');\n        var isModule = (arr[0] === 'module');\n\n        // app\n        if (isApp)\n        {\n            if (typeof this[arr[0]] === 'function')\n            {\n                return this.callInstanceMethod(this, arr[0], args);\n            }\n        }\n        // callback\n        else if (isCallback)\n        {\n            return (arr[0] === 'on') ? this.on(arr[1], args[0]) : this.off(arr[1], args[0] || undefined);\n        }\n        // service\n        else if (isService)\n        {\n            if (this.isInstanceExists(this, arr[0]))\n            {\n                return this.callInstanceMethod(this[arr[0]], arr[1], args);\n            }\n            else\n            {\n                $R.error(new Error('Service \"' + arr[0] + '\" not found'));\n            }\n        }\n        // plugin\n        else if (isPlugin)\n        {\n            if (this.isInstanceExists(this.plugin, arr[1]))\n            {\n                return this.callInstanceMethod(this.plugin[arr[1]], arr[2], args);\n            }\n            else\n            {\n                $R.error(new Error('Plugin \"' + arr[1] + '\" not found'));\n            }\n        }\n        // module\n        else if (isModule)\n        {\n            if (this.isInstanceExists(this.module, arr[1]))\n            {\n                return this.callInstanceMethod(this.module[arr[1]], arr[2], args);\n            }\n            else\n            {\n                $R.error(new Error('Module \"' + arr[1] + '\" not found'));\n            }\n        }\n\n    },\n    isInstanceExists: function(obj, name)\n    {\n        return (typeof obj[name] !== 'undefined');\n    },\n    callInstanceMethod: function(instance, method, args)\n    {\n        if (typeof instance[method] === 'function')\n        {\n            return instance[method].apply(instance, args);\n        }\n    }\n};\n$R.add('mixin', 'formatter', {\n\n    // public\n    buildArgs: function(args)\n    {\n        this.args = {\n            'class': args['class'] || false,\n            'style': args['style'] || false,\n            'attr': args['attr'] || false\n        };\n\n        if (!this.args['class'] && !this.args['style'] && !this.args['attr'])\n        {\n            this.args = false;\n        }\n    },\n    applyArgs: function(nodes, selection)\n    {\n        if (this.args)\n        {\n            nodes = this[this.type](this.args, false, nodes, selection);\n        }\n        else\n        {\n            nodes = this._clearAll(nodes, selection);\n        }\n\n        return nodes;\n    },\n    clearClass: function(tags, nodes)\n    {\n        this.selection.save();\n\n        var $elements = (nodes) ? $R.dom(nodes) : this.getElements(tags, true);\n        $elements.removeAttr('class');\n\n        nodes = this._unwrapSpanWithoutAttr($elements.getAll());\n\n        this.selection.restore();\n\n        return nodes;\n    },\n    clearStyle: function(tags, nodes)\n    {\n        this.selection.save();\n\n        var $elements = (nodes) ? $R.dom(nodes) : this.getElements(tags, true);\n        $elements.removeAttr('style');\n\n        nodes = this._unwrapSpanWithoutAttr($elements.getAll());\n\n        this.selection.restore();\n\n        return nodes;\n    },\n    clearAttr: function(tags, nodes)\n    {\n        this.selection.save();\n\n        var $elements = (nodes) ? $R.dom(nodes) : this.getElements(tags, true);\n        this._removeAllAttr($elements);\n\n        nodes = this._unwrapSpanWithoutAttr($elements.getAll());\n\n        this.selection.restore();\n\n        return nodes;\n    },\n    set: function(args, tags, nodes, selection)\n    {\n        if (selection !== false) this.selection.save();\n\n        var $elements = (nodes) ? $R.dom(nodes) : this.getElements(tags);\n\n        if (args['class'])\n        {\n            $elements.removeAttr('class');\n            $elements.addClass(args['class']);\n        }\n\n        if (args['style'])\n        {\n            $elements.removeAttr('style');\n            $elements.css(args['style']);\n            $elements.each(function(node)\n            {\n                var $node = $R.dom(node);\n                $node.attr('data-redactor-style-cache', $node.attr('style'));\n            });\n        }\n\n        if (args['attr'])\n        {\n            this._removeAllAttr($elements);\n            $elements.attr(args['attr']);\n        }\n\n        if (selection !== false) this.selection.restore();\n\n        return $elements.getAll();\n    },\n    toggle: function(args, tags, nodes, selection)\n    {\n        if (selection !== false) this.selection.save();\n\n        var $elements = (nodes) ? $R.dom(nodes) : this.getElements(tags);\n\n        if (args['class'])\n        {\n            $elements.toggleClass(args['class']);\n            $elements.each(function(node)\n            {\n                if (node.className === '') node.removeAttribute('class');\n            });\n        }\n\n        var params;\n        if (args['style'])\n        {\n            params = args['style'];\n            $elements.each(function(node)\n            {\n                var $node = $R.dom(node);\n                for (var key in params)\n                {\n                    var newVal = params[key];\n                    var oldVal = $node.css(key);\n\n                    oldVal = (this.utils.isRgb(oldVal)) ? this.utils.rgb2hex(oldVal) : oldVal.replace(/\"/g, '');\n                    newVal = (this.utils.isRgb(newVal)) ? this.utils.rgb2hex(newVal) : newVal.replace(/\"/g, '');\n\n                    oldVal = this.utils.hex2long(oldVal);\n                    newVal = this.utils.hex2long(newVal);\n\n                    var compareNew = (typeof newVal === 'string') ? newVal.toLowerCase() : newVal;\n                    var compareOld = (typeof oldVal === 'string') ? oldVal.toLowerCase() : oldVal;\n\n                    if (compareNew === compareOld) $node.css(key, '');\n                    else $node.css(key, newVal);\n                }\n\n                this._convertStyleQuotes($node);\n                if (this.utils.removeEmptyAttr(node, 'style'))\n                {\n                    $node.removeAttr('data-redactor-style-cache');\n                }\n                else\n                {\n                    $node.attr('data-redactor-style-cache', $node.attr('style'));\n                }\n\n            }.bind(this));\n        }\n\n        if (args['attr'])\n        {\n            params = args['attr'];\n            $elements.each(function(node)\n            {\n                var $node = $R.dom(node);\n                for (var key in params)\n                {\n                    if ($node.attr(key)) $node.removeAttr(key);\n                    else $node.attr(key, params[key]);\n                }\n            });\n\n        }\n\n        if (selection !== false) this.selection.restore();\n\n        return $elements.getAll();\n    },\n    add: function(args, tags, nodes, selection)\n    {\n        if (selection !== false) this.selection.save();\n\n        var $elements = (nodes) ? $R.dom(nodes) : this.getElements(tags);\n\n        if (args['class'])\n        {\n            $elements.addClass(args['class']);\n        }\n\n        if (args['style'])\n        {\n            var params = args['style'];\n            $elements.each(function(node)\n            {\n                var $node = $R.dom(node);\n                $node.css(params);\n                $node.attr('data-redactor-style-cache', $node.attr('style'));\n\n                this._convertStyleQuotes($node);\n\n            }.bind(this));\n        }\n\n        if (args['attr'])\n        {\n            $elements.attr(args['attr']);\n        }\n\n        if (selection !== false) this.selection.restore();\n\n        return $elements.getAll();\n    },\n    remove: function(args, tags, nodes, selection)\n    {\n        if (selection !== false) this.selection.save();\n\n        var $elements = (nodes) ? $R.dom(nodes) : this.getElements(tags);\n\n        if (args['class'])\n        {\n            $elements.removeClass(args['class']);\n            $elements.each(function(node)\n            {\n                if (node.className === '') node.removeAttribute('class');\n            });\n        }\n\n        if (args['style'])\n        {\n            var name = args['style'];\n            $elements.each(function(node)\n            {\n                var $node = $R.dom(node);\n                $node.css(name, '');\n\n                if (this.utils.removeEmptyAttr(node, 'style'))\n                {\n                    $node.removeAttr('data-redactor-style-cache');\n                }\n                else\n                {\n                    $node.attr('data-redactor-style-cache', $node.attr('style'));\n                }\n\n            }.bind(this));\n        }\n\n        if (args['attr'])\n        {\n            $elements.removeAttr(args['attr']);\n        }\n\n        nodes = this._unwrapSpanWithoutAttr($elements.getAll());\n\n        if (selection !== false) this.selection.restore();\n\n        return nodes;\n    },\n\n    // private\n    _removeAllAttr: function($elements)\n    {\n        $elements.each(function(node)\n        {\n            for (var i = node.attributes.length; i-->0;)\n            {\n                var nodeAttr = node.attributes[i];\n                var name = nodeAttr.name;\n                if (name !== 'style' && name !== 'class')\n                {\n                    node.removeAttributeNode(nodeAttr);\n                }\n            }\n        });\n    },\n    _convertStyleQuotes: function($node)\n    {\n        var style = $node.attr('style');\n        if (style) $node.attr('style', style.replace(/\"/g, '\\''));\n    },\n    _clearAll: function(nodes, selection)\n    {\n        if (selection !== false) this.selection.save();\n\n        for (var i = 0; i < nodes.length; i++)\n        {\n            var node = nodes[i];\n            while (node.attributes.length > 0)\n            {\n                node.removeAttribute(node.attributes[0].name);\n            }\n        }\n\n        nodes = this._unwrapSpanWithoutAttr(nodes);\n\n        if (selection !== false) this.selection.restore();\n\n        return nodes;\n    },\n    _unwrapSpanWithoutAttr: function(nodes)\n    {\n        var finalNodes = [];\n        for (var i = 0; i < nodes.length; i++)\n        {\n            var node = nodes[i];\n            var len = node.attributes.length;\n            if (len <= 0 && node.nodeType !== 3 && node.tagName === 'SPAN')\n            {\n                $R.dom(node).unwrap();\n            }\n            else\n            {\n                finalNodes.push(node);\n            }\n        }\n\n        return finalNodes;\n    }\n});\n$R.add('mixin', 'dom', $R.Dom.prototype);\n$R.add('mixin', 'component', {\n    get cmnt()\n    {\n        return true;\n    }\n});\n$R.add('service', 'options', {\n    init: function(options, element)\n    {\n        var $el = $R.dom(element);\n        var opts = $R.extend({}, $R.opts, (element) ? $el.data() : {}, $R.options);\n        opts = $R.extend(true, opts, options);\n\n        return opts;\n    }\n});\n$R.add('service', 'lang', {\n    init: function(app)\n    {\n        this.app = app;\n        this.opts = app.opts;\n\n        // build\n        this.vars = this._build(this.opts.lang);\n    },\n\n    // public\n    rebuild: function(lang)\n    {\n        this.opts.lang = lang;\n        this.vars = this._build(lang);\n    },\n    extend: function(obj)\n    {\n        this.vars = $R.extend(this.vars, obj);\n    },\n    parse: function(str)\n    {\n        if (str === undefined)\n        {\n            return '';\n        }\n\n        var matches = str.match(/## (.*?) ##/g);\n        if (matches)\n        {\n            for (var i = 0; i < matches.length; i++)\n            {\n                var key = matches[i].replace(/^##\\s/g, '').replace(/\\s##$/g, '');\n                str = str.replace(matches[i], this.get(key));\n            }\n        }\n\n        return str;\n    },\n    get: function(name)\n    {\n        var str = '';\n        if (typeof this.vars[name] !== 'undefined')\n        {\n            str = this.vars[name];\n        }\n        else if (this.opts.lang !== 'en' && typeof $R.lang['en'][name] !== 'undefined')\n        {\n            str = $R.lang['en'][name];\n        }\n\n        return str;\n    },\n\n    // private\n    _build: function(lang)\n    {\n        var vars = $R.lang['en'];\n        if (lang !== 'en')\n        {\n            vars = ($R.lang[lang] !== undefined) ? $R.lang[lang] : vars;\n        }\n\n        return vars;\n    }\n});\n$R.add('service', 'callback', {\n    init: function(app)\n    {\n        this.app = app;\n        this.opts = app.opts;\n\n        // local\n        this.callbacks = {};\n\n        // build\n        if (this.opts.callbacks)\n        {\n            this._set(this.opts.callbacks, '');\n        }\n    },\n    stop: function()\n    {\n        this.callbacks = {};\n    },\n    add: function(name, handler)\n    {\n        if (!this.callbacks[name]) this.callbacks[name] = [];\n        this.callbacks[name].push(handler);\n    },\n    remove: function(name, handler)\n    {\n        if (handler === undefined)\n        {\n            delete this.callbacks[name];\n        }\n        else\n        {\n            for (var i = 0; i < this.callbacks[name].length; i++)\n            {\n                this.callbacks[name].splice(i, 1);\n            }\n\n            if (Object.keys(this.callbacks[name]).length === 0) delete this.callbacks[name];\n        }\n    },\n    trigger: function(name, args)\n    {\n        var value = this._loop(name, args, this.callbacks);\n        return (typeof value === 'undefined' && args && args[0] !== false) ? args[0] : value;\n    },\n\n    // private\n    _set: function(obj, name)\n    {\n        for (var key in obj)\n        {\n            var path = (name === '') ? key : name + '.' + key;\n            if (typeof obj[key] === 'object')\n            {\n                this._set(obj[key], path);\n            }\n            else\n            {\n                this.callbacks[path] = [];\n                this.callbacks[path].push(obj[key]);\n            }\n        }\n    },\n    _loop: function(name, args, obj)\n    {\n        var value;\n        for (var key in obj)\n        {\n            if (name === key)\n            {\n                for (var i = 0; i < obj[key].length; i++)\n                {\n                    value = obj[key][i].apply(this.app, args);\n                }\n            }\n        }\n\n        return value;\n    }\n});\n$R.add('service', 'animate', {\n    init: function(app)\n    {\n        this.animationOpt = app.opts.animation;\n    },\n    start: function(element, animation, options, callback)\n    {\n        var defaults = {\n            duration: false,\n            iterate: false,\n            delay: false,\n            timing: false,\n            prefix: 'redactor-'\n        };\n\n        defaults = (typeof options === 'function') ? defaults : $R.extend(defaults, options);\n        callback = (typeof options === 'function') ? options : callback;\n\n        // play\n        return new $R.AnimatePlay(element, animation, defaults, callback, this.animationOpt);\n    },\n    stop: function(element)\n    {\n        this.$el = $R.dom(element);\n        this.$el.removeClass('redactor-animated');\n\n        var effect = this.$el.attr('redactor-animate-effect');\n        this.$el.removeClass(effect);\n\n        this.$el.removeAttr('redactor-animate-effect');\n        var hide = this.$el.attr('redactor-animate-hide');\n        if (hide)\n        {\n            this.$el.addClass(hide).removeAttr('redactor-animate-hide');\n        }\n\n        this.$el.off('animationend webkitAnimationEnd');\n    }\n});\n\n$R.AnimatePlay = function(element, animation, defaults, callback, animationOpt)\n{\n    this.hidableEffects = ['fadeOut', 'flipOut', 'slideUp', 'zoomOut', 'slideOutUp', 'slideOutRight', 'slideOutLeft'];\n    this.prefixes = ['', '-webkit-'];\n\n    this.$el = $R.dom(element);\n    this.$body = $R.dom('body');\n    this.callback = callback;\n    this.animation = (!animationOpt) ? this.buildAnimationOff(animation) : animation;\n    this.defaults = defaults;\n\n    if (this.animation === 'slideUp')\n    {\n        this.$el.height(this.$el.height());\n    }\n\n    // animate\n    return (this.isInanimate()) ? this.inanimate() : this.animate();\n};\n\n$R.AnimatePlay.prototype = {\n    buildAnimationOff: function(animation)\n    {\n        return (this.isHidable(animation)) ? 'hide' : 'show';\n    },\n    buildHideClass: function()\n    {\n        return 'redactor-animate-hide';\n    },\n    isInanimate: function()\n    {\n        return (this.animation === 'show' || this.animation === 'hide');\n    },\n    isAnimated: function()\n    {\n        return this.$el.hasClass('redactor-animated');\n    },\n    isHidable: function(effect)\n    {\n        return (this.hidableEffects.indexOf(effect) !== -1);\n    },\n    inanimate: function()\n    {\n        this.defaults.timing = 'linear';\n\n        var hide;\n        if (this.animation === 'show')\n        {\n            hide = this.buildHideClass();\n            this.$el.attr('redactor-animate-hide', hide);\n            this.$el.removeClass(hide);\n        }\n        else\n        {\n            hide = this.$el.attr('redactor-animate-hide');\n            this.$el.addClass(hide).removeAttr('redactor-animate-hide');\n        }\n\n        if (typeof this.callback === 'function') this.callback(this);\n\n        return this;\n    },\n    animate: function()\n    {\n        var delay = (this.defaults.delay) ? this.defaults.delay : 0;\n        setTimeout(function()\n        {\n            this.$body.addClass('no-scroll-x');\n            this.$el.addClass('redactor-animated');\n            if (!this.$el.attr('redactor-animate-hide'))\n            {\n                var hide = this.buildHideClass();\n                this.$el.attr('redactor-animate-hide', hide);\n                this.$el.removeClass(hide);\n            }\n\n            this.$el.addClass(this.defaults.prefix + this.animation);\n            this.$el.attr('redactor-animate-effect', this.defaults.prefix + this.animation);\n\n            this.set(this.defaults.duration + 's', this.defaults.iterate, this.defaults.timing);\n            this.complete();\n\n        }.bind(this), delay * 1000);\n\n        return this;\n    },\n    set: function(duration, iterate, timing)\n    {\n        var len = this.prefixes.length;\n\n        while (len--)\n        {\n            if (duration !== false || duration === '') this.$el.css(this.prefixes[len] + 'animation-duration', duration);\n            if (iterate !== false || iterate === '') this.$el.css(this.prefixes[len] + 'animation-iteration-count', iterate);\n            if (timing !== false || timing === '') this.$el.css(this.prefixes[len] + 'animation-timing-function', timing);\n        }\n    },\n    clean: function()\n    {\n        this.$body.removeClass('no-scroll-x');\n        this.$el.removeClass('redactor-animated');\n        this.$el.removeClass(this.defaults.prefix + this.animation);\n        this.$el.removeAttr('redactor-animate-effect');\n\n        this.set('', '', '');\n    },\n    complete: function()\n    {\n        this.$el.one('animationend webkitAnimationEnd', function()\n        {\n            if (this.$el.hasClass(this.defaults.prefix + this.animation)) this.clean();\n            if (this.isHidable(this.animation))\n            {\n                var hide = this.$el.attr('redactor-animate-hide');\n                this.$el.addClass(hide).removeAttr('redactor-animate-hide');\n            }\n\n            if (this.animation === 'slideUp') this.$el.height('');\n            if (typeof this.callback === 'function') this.callback(this.$el);\n\n        }.bind(this));\n    }\n};\n$R.add('service', 'caret', {\n    init: function(app)\n    {\n        this.app = app;\n    },\n\n    // set\n    setStart: function(el)\n    {\n        this._setCaret('Start', el);\n    },\n    setEnd: function(el)\n    {\n        this._setCaret('End', el);\n    },\n    setBefore: function(el)\n    {\n        this._setCaret('Before', el);\n    },\n    setAfter: function(el)\n    {\n        this._setCaret('After', el);\n    },\n\n    // is\n    isStart: function(el)\n    {\n        return this._isStartOrEnd(el, 'First');\n    },\n    isEnd: function(el)\n    {\n        return this._isStartOrEnd(el, 'Last');\n    },\n\n    // set side\n    setAtEnd: function(node)\n    {\n        var data = this.inspector.parse(node);\n        var tag = data.getTag();\n        var range = document.createRange();\n        if (this._isInPage(node))\n        {\n            if (tag === 'a')\n            {\n                var textNode = this.utils.createInvisibleChar();\n                node.appendChild(textNode);\n\n                range.setStartBefore(textNode);\n                range.collapse(true);\n            }\n            else\n            {\n                range.selectNodeContents(node);\n                range.collapse(false);\n            }\n\n            this.selection.setRange(range);\n        }\n    },\n    setAtStart: function(node)\n    {\n\t\tvar range = document.createRange();\n\t\tvar data = this.inspector.parse(node);\n        if (this._isInPage(node))\n        {\n            range.setStart(node, 0);\n            range.collapse(true);\n\n            if (data.isInline() || this.utils.isEmpty(node))\n            {\n                var textNode = this.utils.createInvisibleChar();\n                range.insertNode(textNode);\n                range.selectNodeContents(textNode);\n                range.collapse(false);\n            }\n\n            this.selection.setRange(range);\n        }\n    },\n    setAtBefore: function(node)\n    {\n        var data = this.inspector.parse(node);\n        var range = document.createRange();\n        if (this._isInPage(node))\n        {\n            range.setStartBefore(node);\n            range.collapse(true);\n\n            if (data.isInline())\n            {\n                var textNode = this.utils.createInvisibleChar();\n                node.parentNode.insertBefore(textNode, node);\n                range.selectNodeContents(textNode);\n                range.collapse(false);\n            }\n\n            this.selection.setRange(range);\n        }\n    },\n    setAtAfter: function(node)\n    {\n\n        var range = document.createRange();\n        if (this._isInPage(node))\n        {\n            range.setStartAfter(node);\n            range.collapse(true);\n\n            var textNode = this.utils.createInvisibleChar();\n            range.insertNode(textNode);\n            range.selectNodeContents(textNode);\n            range.collapse(false);\n\n            this.selection.setRange(range);\n        }\n    },\n    setAtPrev: function(node)\n    {\n        var prev = node.previousSibling;\n        if (prev)\n        {\n            prev = (prev.nodeType === 3 && this._isEmptyTextNode(prev)) ? prev.previousElementSibling : prev;\n            if (prev) this.setEnd(prev);\n        }\n    },\n    setAtNext: function(node)\n    {\n        var next = node.nextSibling;\n        if (next)\n        {\n            next = (next.nodeType === 3 && this._isEmptyTextNode(next)) ? next.nextElementSibling : next;\n            if (next) this.setStart(next);\n        }\n    },\n\n    // private\n    _setCaret: function(type, el)\n    {\n        var data = this.inspector.parse(el);\n        var node = data.getNode();\n\n        if (node)\n        {\n            this.component.clearActive();\n            this['_set' + type](node, data, data.getTag());\n        }\n    },\n    _setStart: function(node, data, tag)\n    {\n        // 1. text\n        if (data.isText())\n        {\n            this.editor.focus();\n            return this.setAtStart(node);\n        }\n        // 2. ul, ol\n        else if (tag === 'ul' || tag === 'ol')\n        {\n            node = data.findFirstNode('li');\n\n            var item = this.utils.getFirstElement(node);\n            var dataItem = this.inspector.parse(item);\n            if (item && dataItem.isComponent())\n            {\n                return this.setStart(dataItem.getComponent());\n            }\n        }\n        // 3. dl\n        else if (tag === 'dl')\n        {\n            node = data.findFirstNode('dt');\n        }\n        // 4. br / hr\n        else if (tag === 'br' || tag === 'hr')\n        {\n            return this.setBefore(node);\n        }\n        // 5. th, td\n        else if (tag === 'td' || tag === 'th')\n        {\n            var el = data.getFirstElement(node);\n            if (el)\n            {\n                return this.setStart(el);\n            }\n        }\n        // 6. table\n        else if (tag === 'table' || tag === 'tr')\n        {\n            return this.setStart(data.findFirstNode('th, td'));\n        }\n        // 7. figure code\n        else if (data.isComponentType('code') && !data.isFigcaption())\n        {\n            var code = data.findLastNode('pre, code');\n\n            this.editor.focus();\n            return this.setAtStart(code);\n        }\n        // 8. table component\n        else if (tag === 'figure' && data.isComponentType('table'))\n        {\n            var table = data.getTable();\n            var tableData = this.inspector.parse(table);\n\n            return this.setStart(tableData.findFirstNode('th, td'));\n        }\n        // 9. non editable components\n        else if (!data.isComponentType('table') && data.isComponent() && !data.isFigcaption())\n        {\n            return this.component.setActive(node);\n        }\n\n        this.editor.focus();\n\n        // set\n        if (!this._setInline(node, 'Start'))\n        {\n            this.setAtStart(node);\n        }\n    },\n    _setEnd: function(node, data, tag)\n    {\n        // 1. text\n        if (data.isText())\n        {\n            this.editor.focus();\n            return this.setAtEnd(node);\n        }\n        // 2. ul, ol\n        else if (tag === 'ul' || tag === 'ol')\n        {\n            node = data.findLastNode('li');\n\n            var item = this.utils.getLastElement(node);\n            var dataItem = this.inspector.parse(item);\n            if (item && dataItem.isComponent())\n            {\n                return this.setEnd(dataItem.getComponent());\n            }\n        }\n        // 3. dl\n        else if (tag === 'dl')\n        {\n            node = data.findLastNode('dd');\n        }\n        // 4. br / hr\n        else if (tag === 'br' || tag === 'hr')\n        {\n            return this.setAfter(node);\n        }\n        // 5. th, td\n        else if (tag === 'td' || tag === 'th')\n        {\n            var el = data.getLastElement();\n            if (el)\n            {\n                return this.setEnd(el);\n            }\n        }\n        // 6. table\n        else if (tag === 'table' || tag === 'tr')\n        {\n            return this.setEnd(data.findLastNode('th, td'));\n        }\n        // 7. figure code\n        else if (data.isComponentType('code') && !data.isFigcaption())\n        {\n            var code = data.findLastNode('pre, code');\n\n            this.editor.focus();\n            return this.setAtEnd(code);\n        }\n        // 8. table component\n        else if (tag === 'figure' && data.isComponentType('table'))\n        {\n            var table = data.getTable();\n            var tableData = this.inspector.parse(table);\n\n            return this.setEnd(tableData.findLastNode('th, td'));\n        }\n        // 9. non editable components\n        else if (!data.isComponentType('table') && data.isComponent() && !data.isFigcaption())\n        {\n            return this.component.setActive(node);\n        }\n\n        this.editor.focus();\n\n        // set\n        if (!this._setInline(node, 'End'))\n        {\n            // is element empty\n            if (this.utils.isEmpty(node))\n            {\n                return this.setStart(node);\n            }\n\n            this.setAtEnd(node);\n        }\n    },\n    _setBefore: function(node, data, tag)\n    {\n        // text\n        if (node.nodeType === 3)\n        {\n            return this.setAtBefore(node);\n        }\n        // inline\n        else if (data.isInline())\n        {\n            return this.setAtBefore(node);\n        }\n        // td / th\n        else if (data.isFirstTableCell())\n        {\n            return this.setAtPrev(data.getComponent());\n        }\n        else if (tag === 'td' || tag === 'th')\n        {\n            return this.setAtPrev(node);\n        }\n        // li\n        else if (data.isFirstListItem())\n        {\n            return this.setAtPrev(data.getList());\n        }\n        // figcaption\n        else if (data.isFigcaption())\n        {\n            return this.setStart(data.getComponent());\n        }\n        // component\n        else if (!data.isComponentType('table') && data.isComponent())\n        {\n            return this.setAtPrev(data.getComponent());\n        }\n        // block\n        else if (data.isBlock())\n        {\n            return this.setAtPrev(node);\n        }\n\n        this.editor.focus();\n        this.setAtBefore(node);\n\n    },\n    _setAfter: function(node, data, tag)\n    {\n        // text\n        if (node.nodeType === 3)\n        {\n            return this.setAtAfter(node);\n        }\n        // inline\n        else if (data.isInline())\n        {\n            return this.setAtAfter(node);\n        }\n        // td / th\n        else if (data.isLastTableCell())\n        {\n            return this.setAtNext(data.getComponent());\n        }\n        else if (tag === 'td' || tag === 'th')\n        {\n            return this.setAtNext(node);\n        }\n        // li\n        else if (data.isFirstListItem())\n        {\n            return this.setAtNext(data.getList());\n        }\n        // component\n        else if (!data.isComponentType('table') && data.isComponent())\n        {\n            return this.setAtNext(data.getComponent());\n        }\n        // block\n        else if (data.isBlock())\n        {\n            return this.setAtNext(node);\n        }\n\n        this.editor.focus();\n        this.setAtAfter(node);\n    },\n    _setInline: function(node, type)\n    {\n        // is first element inline (FF only)\n        var inline = this._hasInlineChild(node, (type === 'Start') ? 'first' : 'last');\n        if (inline)\n        {\n            if (type === 'Start')\n            {\n                this.setStart(inline);\n            }\n            else\n            {\n                this.setEnd(inline);\n            }\n\n            return true;\n        }\n    },\n    _isStartOrEnd: function(el, type)\n    {\n        var node = this.utils.getNode(el);\n        if (!node) return false;\n\n        var data = this.inspector.parse(node);\n        node = this._getStartEndNode(node, data, type);\n\n        if (node && (node.nodeType !== 3 && node.tagName !== 'LI'))\n        {\n            var html = (node.nodeType === 3) ? node.textContent : node.innerHTML;\n            html = this.utils.trimSpaces(html);\n            if (html === '') return true;\n        }\n\n        if (!data.isFigcaption() && data.isComponent() && !data.isComponentEditable())\n        {\n            return true;\n        }\n\n        var offset = this.offset.get(node, true);\n        if (offset)\n        {\n            return (type === 'First') ? (offset.start === 0) : (offset.end === this.offset.size(node, true));\n        }\n        else\n        {\n            return false;\n        }\n    },\n    _isInPage: function(node)\n    {\n        if (node && node.nodeType)\n        {\n            return (node === document.body) ? false : document.body.contains(node);\n        }\n        else\n        {\n            return false;\n        }\n    },\n    _hasInlineChild: function(el, pos)\n    {\n        var data = this.inspector.parse(el);\n        var node = (pos === 'first') ? data.getFirstNode() : data.getLastNode();\n        var $node = $R.dom(node);\n\n        if (node && node.nodeType !== 3\n            && this.inspector.isInlineTag(node.tagName)\n            && !$node.hasClass('redactor-component')\n             && !$node.hasClass('non-editable'))\n        {\n            return node;\n        }\n    },\n    _isEmptyTextNode: function(node)\n    {\n        var text = node.textContent.trim().replace(/\\n/, '');\n        text = this.utils.removeInvisibleChars(text);\n\n        return (text === '');\n    },\n    _getStartEndNode: function(node, data, type)\n    {\n        if (data.isFigcaption())\n        {\n            node = data.getFigcaption();\n        }\n        else if (data.isTable())\n        {\n            node = data['find' + type + 'Node']('th, td');\n        }\n        else if (data.isList())\n        {\n            node = data['find' + type + 'Node']('li');\n        }\n        else if (data.isComponentType('code'))\n        {\n            node = data.findLastNode('pre, code');\n        }\n\n        return node;\n    }\n});\n$R.add('service', 'selection', {\n    init: function(app)\n    {\n        this.app = app;\n    },\n    // is\n    is: function()\n    {\n        var sel = this.get();\n        if (sel)\n        {\n            var node = sel.anchorNode;\n            var data = this.inspector.parse(node);\n\n            return (data.isInEditor() || data.isEditor());\n        }\n\n        return false;\n    },\n    isCollapsed: function()\n    {\n        var sel = this.get();\n        var range = this.getRange();\n\n        if (sel && sel.isCollapsed) return true;\n        else if (range && range.toString().length === 0) return true;\n\n        return false;\n    },\n    isBackwards: function()\n    {\n        var backwards = false;\n        var sel = this.get();\n\n        if (sel && !sel.isCollapsed)\n        {\n            var range = document.createRange();\n            range.setStart(sel.anchorNode, sel.anchorOffset);\n            range.setEnd(sel.focusNode, sel.focusOffset);\n            backwards = range.collapsed;\n            range.detach();\n        }\n\n        return backwards;\n    },\n    isIn: function(el)\n    {\n        var node = $R.dom(el).get();\n        var current = this.getCurrent();\n\n        return (current && node) ? node.contains(current) : false;\n    },\n    isText: function()\n    {\n        var sel = this.get();\n        if (sel)\n        {\n            var el = sel.anchorNode;\n            var block = this.getBlock(el);\n            var blocks = this.getBlocks();\n\n            // td, th or hasn't block\n            if ((block && this.inspector.isTableCellTag(block.tagName)) || (block === false && blocks.length === 0))\n            {\n                return true;\n            }\n        }\n\n        return false;\n    },\n    isAll: function(el)\n    {\n        var node = this.utils.getNode(el);\n        if (!node) return false;\n\n        var isEditor = this.editor.isEditor(node);\n        var data = this.inspector.parse(node);\n\n        // component\n        if (!data.isFigcaption() && this.component.isNonEditable(node) && this.component.isActive(node))\n        {\n            return true;\n        }\n\n        if (isEditor)\n        {\n            var $editor = this.editor.getElement();\n            var output = $editor.html().replace(/<p><\\/p>$/i, '');\n            var htmlLen = this.getHtml(false).length;\n            var outputLen = output.length;\n\n            if (htmlLen !== outputLen)\n            {\n                return false;\n            }\n        }\n\n        // editor empty or collapsed\n        if ((isEditor && this.editor.isEmpty()) || this.isCollapsed())\n        {\n            return false;\n        }\n\n        // all\n        var offset = this.offset.get(node, true);\n        var size = this.offset.size(node, true);\n\n        // pre, table, or pre/code in figure\n        if (!isEditor && data.isComponentType('code'))\n        {\n            size = this.getText().trim().length;\n        }\n\n        if (offset && offset.start === 0 && offset.end === size)\n        {\n            return true;\n        }\n\n        return false;\n    },\n\n    // has\n    hasNonEditable: function()\n    {\n        var selected = this.getHtml();\n        var $wrapper = $R.dom('<div>').html(selected);\n\n        return (!this.isCollapsed() && $wrapper.find('.non-editable').length !== 0);\n    },\n\n    // set\n    setRange: function(range)\n    {\n        var sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(range);\n    },\n    setAll: function(el)\n    {\n        var node = this.utils.getNode(el);\n        if (!node) return;\n\n        var data = this.inspector.parse(node);\n\n        this.component.clearActive();\n\n        this.editor.focus();\n        this.editor.saveScroll();\n        this.editor.disableNonEditables();\n\n        if (node && node.tagName === 'TABLE')\n        {\n            var first = data.findFirstNode('td, th');\n            var last = data.findLastNode('td, th');\n\n            $R.dom(first).prepend(this.marker.build('start'));\n            $R.dom(last).append(this.marker.build('end'));\n\n            this.restoreMarkers();\n        }\n        else if (!data.isFigcaption() && this.component.isNonEditable(node))\n        {\n            this.component.setActive(node);\n        }\n        else\n        {\n            if (data.isComponentType('code'))\n            {\n                node = data.getComponentCodeElement();\n                node.focus();\n            }\n\n            var range = document.createRange();\n            range.selectNodeContents(node);\n\n            this.setRange(range);\n        }\n\n        this.editor.enableNonEditables();\n        this.editor.restoreScroll();\n    },\n\n    // get\n    get: function()\n    {\n        var sel = window.getSelection();\n        return (sel.rangeCount > 0) ? sel : null;\n    },\n    getRange: function()\n    {\n        var sel = this.get();\n        return (sel) ? ((sel.getRangeAt(0)) ? sel.getRangeAt(0) : null) : null;\n    },\n    getTextBeforeCaret: function(num)\n    {\n        num = (typeof num === 'undefined') ? 1 : num;\n\n        var el = this.editor.getElement().get();\n        var range = this.getRange();\n        var text = false;\n        if (range)\n        {\n            range = range.cloneRange();\n            range.collapse(true);\n            range.setStart(el, 0);\n            text = range.toString().slice(-num);\n        }\n\n        return text;\n    },\n    getTextAfterCaret: function(num)\n    {\n        num = (typeof num === 'undefined') ? 1 : num;\n\n        var el = this.editor.getElement().get();\n        var range = this.getRange();\n        var text = false;\n        if (range)\n        {\n            var clonedRange = range.cloneRange();\n            clonedRange.selectNodeContents(el);\n            clonedRange.setStart(range.endContainer, range.endOffset);\n\n            text = clonedRange.toString().slice(0, num);\n        }\n\n        return text;\n    },\n    getPosition: function()\n    {\n        var range = this.getRange();\n        var pos = { top: 0, left: 0, width: 0, height: 0 };\n        if (window.getSelection && range.getBoundingClientRect)\n        {\n            range = range.cloneRange();\n            var offset = (range.startOffset-1);\n            range.setStart(range.startContainer, (offset < 0) ? 0 : offset);\n            var rect = range.getBoundingClientRect();\n            pos = { top: rect.top, left: rect.left, width: (rect.right - rect.left) , height: (rect.bottom - rect.top) };\n        }\n\n        return pos;\n    },\n    getCurrent: function()\n    {\n        var node = false;\n        var sel = this.get();\n        var component = this.component.getActive();\n\n        if (component)\n        {\n            node = component;\n        }\n        else if (sel && this.is())\n        {\n            var data = this.inspector.parse(sel.anchorNode);\n            node = (!data.isEditor()) ? sel.anchorNode : false;\n        }\n\n        return node;\n    },\n    getParent: function()\n    {\n        var node = false;\n        var current = this.getCurrent();\n        if (current)\n        {\n            var parent = current.parentNode;\n            var data = this.inspector.parse(parent);\n\n            node = (!data.isEditor()) ? parent : false;\n        }\n\n        return node;\n    },\n    getElement: function(el)\n    {\n        var node = el || this.getCurrent();\n        while (node)\n        {\n            var data = this.inspector.parse(node);\n            if (data.isElement() && data.isInEditor())\n            {\n                return node;\n            }\n\n            node = node.parentNode;\n        }\n\n        return false;\n    },\n    getInline: function(el)\n    {\n        var node = el || this.getCurrent();\n        var inline = false;\n        while (node)\n        {\n            if (this._isInlineNode(node))\n            {\n                inline = node;\n            }\n\n            node = node.parentNode;\n        }\n\n        return inline;\n    },\n    getInlineFirst: function(el)\n    {\n        var node = el || this.getCurrent();\n        while (node)\n        {\n            if (this._isInlineNode(node))\n            {\n                return node;\n            }\n\n            node = node.parentNode;\n        }\n\n        return false;\n    },\n    getInlineAll: function(el)\n    {\n        var node = el || this.getCurrent();\n        var inlines = [];\n        while (node)\n        {\n            if (this._isInlineNode(node))\n            {\n                inlines.push(node);\n            }\n\n            node = node.parentNode;\n        }\n\n        return inlines;\n    },\n    getBlock: function(el)\n    {\n        var node = el || this.getCurrent();\n        while (node)\n        {\n            var data = this.inspector.parse(node);\n            var isBlock = this.inspector.isBlockTag(node.tagName);\n\n            if (isBlock && data.isInEditor(node))\n            {\n                return node;\n            }\n\n            node = node.parentNode;\n        }\n\n        return false;\n    },\n    getInlinesAllSelected: function(options)\n    {\n        if (this.isAll()) return [];\n\n        var inlines = this.getInlines({ all: true });\n        var textNodes = this.getNodes({ textnodes: true, inline: false });\n        var selected = this.getText().replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n        var finalNodes = [];\n\n        if (textNodes.length !== 0)\n        {\n            return finalNodes;\n        }\n\n        if (selected === '')\n        {\n            finalNodes = inlines;\n        }\n        else if (inlines.length > 1)\n        {\n            for (var i = 0; i < inlines.length; i++)\n            {\n                if (this._isTextSelected(inlines[i], selected))\n                {\n                    finalNodes.push(inlines[i]);\n                }\n            }\n        }\n        else if (inlines.length === 1)\n        {\n            if (this._isTextSelected(inlines[0], selected))\n            {\n                finalNodes = inlines;\n            }\n        }\n\n        finalNodes = (options && options.tags) ? this._filterNodesByTags(finalNodes, options.tags) : finalNodes;\n\n        return finalNodes;\n    },\n    getInlines: function(options)\n    {\n        var nodes = this.getNodes();\n        var filteredNodes = [];\n        for (var i = 0; i < nodes.length; i++)\n        {\n            var node;\n            if (options && options.all)\n            {\n                node = nodes[i];\n                while (node)\n                {\n                    if (this._isInlineNode(node) && !this._isInNodesArray(filteredNodes, node))\n                    {\n                        filteredNodes.push(node);\n                    }\n\n                    node = node.parentNode;\n                }\n            }\n            else\n            {\n                node = this.getInline(nodes[i]);\n                if (node && !this._isInNodesArray(filteredNodes, node))\n                {\n                    filteredNodes.push(node);\n                }\n            }\n        }\n\n        // filter\n        filteredNodes = (options && options.tags) ? this._filterNodesByTags(filteredNodes, options.tags) : filteredNodes;\n        filteredNodes = (options && options.inside) ? this._filterInlinesInside(filteredNodes, options) : filteredNodes;\n\n        return filteredNodes;\n    },\n    getBlocks: function(options)\n    {\n        var nodes = this.getNodes();\n        var block = this.getBlock();\n        nodes = (nodes.length === 0 && block) ? [block] : nodes;\n\n        var filteredNodes = [];\n        for (var i = 0; i < nodes.length; i++)\n        {\n            var node = this.getBlock(nodes[i]);\n            if (node && !this._isInNodesArray(filteredNodes, node))\n            {\n                filteredNodes.push(node);\n            }\n        }\n\n        // filter\n        filteredNodes = (options && options.tags) ? this._filterNodesByTags(filteredNodes, options.tags) : filteredNodes;\n        filteredNodes = (options && options.first) ? this._filterBlocksFirst(filteredNodes, options) : filteredNodes;\n\n        return filteredNodes;\n    },\n    getElements: function(options)\n    {\n        var nodes = this.getNodes({ textnodes: false });\n        var block = this.getBlock();\n        nodes = (nodes.length === 0 && block) ? [block] : nodes;\n\n        var filteredNodes = [];\n        for (var i = 0; i < nodes.length; i++)\n        {\n            if (!this._isInNodesArray(filteredNodes, nodes[i]))\n            {\n                filteredNodes.push(nodes[i]);\n            }\n        }\n\n        // filter\n        filteredNodes = (options && options.tags) ? this._filterNodesByTags(filteredNodes, options.tags) : filteredNodes;\n\n        return filteredNodes;\n    },\n    getNodes: function(options)\n    {\n        var nodes = [];\n        var activeComponent = this.component.getActive();\n        if (activeComponent)\n        {\n            nodes = this._getNodesComponent(activeComponent);\n        }\n        else if (this.isCollapsed())\n        {\n            var current = this.getCurrent();\n            nodes = (current) ? [current] : [];\n        }\n        else if (this.is() && !activeComponent)\n        {\n            nodes = this._getRangeSelectedNodes();\n        }\n\n        // filter\n        nodes = this._filterServicesNodes(nodes);\n        nodes = this._filterEditor(nodes);\n\n        // options\n        nodes = (options && options.tags) ? this._filterNodesByTags(nodes, options.tags) : nodes;\n        nodes = (options && options.textnodes) ? this._filterNodesTexts(nodes, options) : nodes;\n        nodes = (options && !options.textnodes) ? this._filterNodesElements(nodes) : nodes;\n\n        return nodes;\n    },\n\n    // text & html\n    getText: function()\n    {\n        var sel = this.get();\n        return (sel) ? this.utils.removeInvisibleChars(sel.toString()) : '';\n    },\n    getHtml: function(clean)\n    {\n        var html = '';\n        var sel = this.get();\n        if (sel)\n        {\n            var container = document.createElement('div');\n            var len = sel.rangeCount;\n            for (var i = 0; i < len; ++i)\n            {\n                container.appendChild(sel.getRangeAt(i).cloneContents());\n            }\n\n            html = container.innerHTML;\n            html = (clean !== false) ? this.cleaner.output(html) : html;\n            html = html.replace(/<p><\\/p>$/i, '');\n        }\n\n        return html;\n    },\n\n    // clear\n    clear: function()\n    {\n        this.component.clearActive();\n        this.get().removeAllRanges();\n    },\n\n    // collapse\n    collapseToStart: function()\n    {\n        var sel = this.get();\n        if (sel && !sel.isCollapsed) sel.collapseToStart();\n    },\n    collapseToEnd: function()\n    {\n        var sel = this.get();\n        if (sel && !sel.isCollapsed) sel.collapseToEnd();\n    },\n\n    // save\n    saveActiveComponent: function()\n    {\n        var activeComponent = this.component.getActive();\n        if (activeComponent)\n        {\n            this.savedComponent = activeComponent;\n            return true;\n        }\n\n        return false;\n    },\n    restoreActiveComponent: function()\n    {\n        if (this.savedComponent)\n        {\n            this.component.setActive(this.savedComponent);\n            return true;\n        }\n\n        return false;\n    },\n    save: function()\n    {\n        this._clearSaved();\n\n        var el = this.getElement();\n        var tags = ['TD', 'TH', 'P', 'DIV', 'PRE', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'LI', 'BLOCKQUOTE'];\n        if (el && (tags.indexOf(el.tagName) !== -1) && (el.innerHTML === '' || el.innerHTML === '<br>'))\n        {\n            this.savedElement = el;\n        }\n        else if (!this.saveActiveComponent())\n        {\n            this.saved = this.offset.get();\n        }\n    },\n    restore: function()\n    {\n        if (!this.saved && !this.savedComponent && !this.savedElement) return;\n\n        this.editor.saveScroll();\n\n        if (this.savedElement)\n        {\n            this.caret.setStart(this.savedElement);\n        }\n        else if (!this.restoreActiveComponent())\n        {\n            this.offset.set(this.saved);\n        }\n\n        this._clearSaved();\n        this.editor.restoreScroll();\n    },\n    saveMarkers: function()\n    {\n        this._clearSaved();\n\n        if (!this.saveActiveComponent())\n        {\n            this.marker.insert();\n        }\n    },\n    restoreMarkers: function()\n    {\n        this.editor.saveScroll();\n\n        if (!this.restoreActiveComponent())\n        {\n            this.marker.restore();\n        }\n\n        this._clearSaved();\n        this.editor.restoreScroll();\n    },\n\n    // private\n    _getNextNode: function(node)\n    {\n        if (node.hasChildNodes()) return node.firstChild;\n\n        while (node && !node.nextSibling)\n        {\n            node = node.parentNode;\n        }\n\n        if (!node) return null;\n\n        return node.nextSibling;\n    },\n    _getNodesComponent: function(component)\n    {\n        var current = this.getCurrent();\n        var data = this.inspector.parse(current);\n\n        return (data.isFigcaption()) ? [data.getFigcaption()] : [component];\n    },\n    _getRangeSelectedNodes: function()\n    {\n        var nodes = [];\n        var range = this.getRange();\n        var node = range.startContainer;\n        var startNode = range.startContainer;\n        var endNode = range.endContainer;\n        var $editor = this.editor.getElement();\n\n        // editor\n        if (startNode === $editor.get() && this.isAll())\n        {\n            nodes = this.utils.getChildNodes($editor);\n        }\n        // single node\n        else if (node == endNode)\n        {\n            nodes = [node];\n        }\n        else\n        {\n            while (node && node != endNode)\n            {\n                nodes.push(node = this._getNextNode(node));\n            }\n\n            node = range.startContainer;\n            while (node && node != range.commonAncestorContainer)\n            {\n                nodes.unshift(node);\n                node = node.parentNode;\n            }\n        }\n\n        return nodes;\n    },\n    _isInNodesArray: function(nodes, node)\n    {\n        return (nodes.indexOf(node) !== -1);\n    },\n    _filterEditor: function(nodes)\n    {\n        var filteredNodes = [];\n        for (var i = 0; i < nodes.length; i++)\n        {\n            var data = this.inspector.parse(nodes[i]);\n            if (data.isInEditor())\n            {\n                filteredNodes.push(nodes[i]);\n            }\n        }\n\n        return filteredNodes;\n    },\n    _filterServicesNodes: function(nodes)\n    {\n        var filteredNodes = [];\n        for (var i = 0; i < nodes.length; i++)\n        {\n            var $el = $R.dom(nodes[i]);\n            var skip = false;\n\n            if (nodes[i] && nodes[i].nodeType === 3 && this.utils.isEmpty(nodes[i])) skip = true;\n            if ($el.hasClass('redactor-script-tag')\n                || $el.hasClass('redactor-component-caret')\n                || $el.hasClass('redactor-selection-marker')\n                || $el.hasClass('non-editable')) skip = true;\n\n            if (!skip)\n            {\n                filteredNodes.push(nodes[i]);\n            }\n        }\n\n        return filteredNodes;\n    },\n    _filterNodesTexts: function(nodes, options)\n    {\n        var filteredNodes = [];\n        for (var i = 0; i < nodes.length; i++)\n        {\n            if (nodes[i].nodeType === 3 || (options.keepbr && nodes[i].tagName === 'BR'))\n            {\n                var inline = this.getInline(nodes[i]);\n                var isInline = (inline && options && options.inline === false);\n                if (!isInline)\n                {\n                    filteredNodes.push(nodes[i]);\n                }\n            }\n        }\n\n        return filteredNodes;\n    },\n    _filterNodesElements: function(nodes)\n    {\n        var filteredNodes = [];\n        for (var i = 0; i < nodes.length; i++)\n        {\n            if (nodes[i].nodeType !== 3)\n            {\n                filteredNodes.push(nodes[i]);\n            }\n        }\n\n        return filteredNodes;\n    },\n    _filterNodesByTags: function(nodes, tags, passtexts)\n    {\n        var filteredNodes = [];\n        for (var i = 0; i < nodes.length; i++)\n        {\n            if (passtexts && nodes[i].nodeType === 3)\n            {\n                filteredNodes.push(nodes[i]);\n            }\n            else if (nodes[i].nodeType !== 3)\n            {\n                var nodeTag = nodes[i].tagName.toLowerCase();\n                if (tags.indexOf(nodeTag.toLowerCase()) !== -1)\n                {\n                    filteredNodes.push(nodes[i]);\n                }\n            }\n        }\n\n        return filteredNodes;\n    },\n    _filterBlocksFirst: function(nodes)\n    {\n        var filteredNodes = [];\n        for (var i = 0; i < nodes.length; i++)\n        {\n            var $node = $R.dom(nodes[i]);\n            var parent = $node.parent().get();\n            var isFirst = ($node.parent().hasClass('redactor-in'));\n            var isCellParent = (parent && (parent.tagName === 'TD' || parent.tagName === 'TH'));\n            if (isFirst || isCellParent)\n            {\n                filteredNodes.push(nodes[i]);\n            }\n        }\n\n        return filteredNodes;\n    },\n    _filterInlinesInside: function(nodes)\n    {\n        var filteredNodes = [];\n        for (var i = 0; i < nodes.length; i++)\n        {\n            if (window.getSelection().containsNode(nodes[i], true))\n            {\n                filteredNodes.push(nodes[i]);\n            }\n        }\n\n        return filteredNodes;\n    },\n    _isTextSelected: function(node, selected)\n    {\n        var text = this.utils.removeInvisibleChars(node.textContent);\n\n        return (\n            selected === text\n            || text.search(selected) !== -1\n            || selected.search(new RegExp('^' + text)) !== -1\n            || selected.search(new RegExp(text + '$')) !== -1\n        );\n    },\n    _isInlineNode: function(node)\n    {\n        var data = this.inspector.parse(node);\n\n        return (this.inspector.isInlineTag(node.tagName) && data.isInEditor());\n    },\n    _clearSaved: function()\n    {\n        this.saved = false;\n        this.savedComponent = false;\n        this.savedElement = false;\n    }\n});\n$R.add('service', 'element', {\n    init: function(app)\n    {\n        this.app = app;\n        this.rootElement = app.rootElement;\n\n        // local\n        this.$element = {};\n        this.type = 'inline';\n    },\n    start: function()\n    {\n        this._build();\n        this._buildType();\n    },\n\n    // public\n    isType: function(type)\n    {\n        return (type === this.type);\n    },\n    getType: function()\n    {\n        return this.type;\n    },\n    getElement: function()\n    {\n        return this.$element;\n    },\n\n    // private\n    _build: function()\n    {\n        this.$element = $R.dom(this.rootElement);\n    },\n    _buildType: function()\n    {\n        var tag = this.$element.get().tagName;\n\n        this.type = (tag === 'TEXTAREA') ? 'textarea' : this.type;\n        this.type = (tag === 'DIV') ? 'div' : this.type;\n        this.type = (this.opts.inline) ? 'inline' : this.type;\n    }\n});\n$R.add('service', 'editor', {\n    init: function(app)\n    {\n        this.app = app;\n\n        // local\n        this.scrolltop = false;\n        this.pasting = false;\n    },\n\n    // start\n    start: function()\n    {\n        this._build();\n    },\n\n    // focus\n    focus: function()\n    {\n        if (!this.isFocus() && !this._isContenteditableFocus())\n        {\n            this.saveScroll();\n            this.$editor.focus();\n            this.restoreScroll();\n        }\n    },\n    startFocus: function()\n    {\n        this.caret.setStart(this.getFirstNode());\n    },\n    endFocus: function()\n    {\n        this.caret.setEnd(this.getLastNode());\n    },\n\n    // pasting\n    isPasting: function()\n    {\n        return this.pasting;\n    },\n    enablePasting: function()\n    {\n        this.pasting = true;\n    },\n    disablePasting: function()\n    {\n        this.pasting = false;\n    },\n\n    // scroll\n    saveScroll: function()\n    {\n        this.scrolltop = this._getScrollTarget().scrollTop();\n    },\n    restoreScroll: function()\n    {\n        if (this.scrolltop !== false)\n        {\n            this._getScrollTarget().scrollTop(this.scrolltop);\n            this.scrolltop = false;\n        }\n    },\n\n    // non editables\n    disableNonEditables: function()\n    {\n        this.$noneditables = this.$editor.find('[contenteditable=false]');\n        this.$noneditables.attr('contenteditable', true);\n    },\n    enableNonEditables: function()\n    {\n        if (this.$noneditables)\n        {\n            setTimeout(function() { this.$noneditables.attr('contenteditable', false); }.bind(this), 1);\n        }\n    },\n\n    // nodes\n    getFirstNode: function()\n    {\n        return this.$editor.contents()[0];\n    },\n    getLastNode: function()\n    {\n        var nodes = this.$editor.contents();\n\n        return nodes[nodes.length-1];\n    },\n\n    // utils\n    isSourceMode: function()\n    {\n        var $source = this.source.getElement();\n\n        return $source.hasClass('redactor-source-open');\n    },\n    isEditor: function(el)\n    {\n        var node = $R.dom(el).get();\n\n        return (node === this.$editor.get());\n    },\n    isEmpty: function(keeplists)\n    {\n        return this.utils.isEmptyHtml(this.$editor.html(), false, keeplists);\n    },\n    isFocus: function()\n    {\n        var $active = $R.dom(document.activeElement);\n        var isComponentSelected = (this.$editor.find('.redactor-component-active').length !== 0);\n\n        return (isComponentSelected || $active.closest('.redactor-in-' + this.uuid).length !== 0);\n    },\n    setEmpty: function()\n    {\n        this.$editor.html(this.opts.emptyHtml);\n    },\n\n    // element\n    getElement: function()\n    {\n        return this.$editor;\n    },\n\n    // private\n    _build: function()\n    {\n        var $element = this.element.getElement();\n        var editableElement = (this.element.isType('textarea')) ? '<div>' : $element.get();\n\n        this.$editor = $R.dom(editableElement);\n    },\n    _getScrollTarget: function()\n    {\n        var $target = this.$doc;\n        if (this.opts.toolbarFixedTarget !== document)\n        {\n            $target = $R.dom(this.opts.toolbarFixedTarget);\n        }\n        else\n        {\n            $target = (this.opts.scrollTarget) ? $R.dom(this.opts.scrollTarget) : $target;\n        }\n\n        return $target;\n    },\n    _isContenteditableFocus: function()\n    {\n        var block = this.selection.getBlock();\n        var $blockParent = (block) ? $R.dom(block).closest('[contenteditable=true]').not('.redactor-in') : [];\n\n        return ($blockParent.length !== 0);\n    }\n});\n$R.add('service', 'container', {\n    init: function(app)\n    {\n        this.app = app;\n    },\n    // public\n    start: function()\n    {\n        this._build();\n    },\n    getElement: function()\n    {\n        return this.$container;\n    },\n\n    // private\n    _build: function()\n    {\n        var tag = (this.element.isType('inline')) ? '<span>' : '<div>';\n        this.$container = $R.dom(tag);\n    }\n});\n$R.add('service', 'source', {\n    init: function(app)\n    {\n        this.app = app;\n\n        // local\n        this.$source = {};\n        this.content = '';\n    },\n    // public\n    start: function()\n    {\n        this._build();\n        this._buildName();\n        this._buildStartedContent();\n    },\n    getElement: function()\n    {\n        return this.$source;\n    },\n    getCode: function()\n    {\n        return this.$source.val();\n    },\n    getName: function()\n    {\n        return this.$source.attr('name');\n    },\n    getStartedContent: function()\n    {\n        return this.content;\n    },\n    setCode: function(html)\n    {\n        return this.insertion.set(html, true, false);\n    },\n    isNameGenerated: function()\n    {\n        return (this.name);\n    },\n    rebuildStartedContent: function()\n    {\n        this._buildStartedContent();\n    },\n\n    // private\n    _build: function()\n    {\n        var $element = this.element.getElement();\n        var isTextarea = this.element.isType('textarea');\n        var sourceElement = (isTextarea) ? $element.get() : '<textarea>';\n\n        this.$source = $R.dom(sourceElement);\n    },\n    _buildName: function()\n    {\n        var $element = this.element.getElement();\n\n        this.name = $element.attr('name');\n        this.$source.attr('name', (this.name) ? this.name : 'content-' + this.uuid);\n    },\n    _buildStartedContent: function()\n    {\n        var $element = this.element.getElement();\n        var content = (this.element.isType('textarea')) ? $element.val() : $element.html();\n\n        this.content = content.trim();\n    }\n});\n$R.add('service', 'statusbar', {\n    init: function(app)\n    {\n        this.app = app;\n\n        // local\n        this.$statusbar = {};\n        this.items = [];\n    },\n    // public\n    start: function()\n    {\n        this.$statusbar = $R.dom('<ul>');\n        this.$statusbar.attr('dir', this.opts.direction);\n    },\n    add: function(name, html)\n    {\n        return this.update(name, html);\n    },\n    update: function(name, html)\n    {\n        var $item;\n        if (typeof this.items[name] !== 'undefined')\n        {\n            $item = this.items[name];\n        }\n        else\n        {\n            $item = $R.dom('<li>');\n            this.$statusbar.append($item);\n            this.items[name] = $item;\n        }\n\n        return $item.html(html);\n    },\n    get: function(name)\n    {\n        return (this.items[name]) ? this.items[name] : false;\n    },\n    remove: function(name)\n    {\n        if (this.items[name])\n        {\n            this.items[name].remove();\n            delete this.items[name];\n        }\n    },\n    getItems: function()\n    {\n        return this.items;\n    },\n    removeItems: function()\n    {\n        this.items = {};\n        this.$statusbar.html('');\n    },\n    getElement: function()\n    {\n        return this.$statusbar;\n    }\n});\n$R.add('service', 'toolbar', {\n    init: function(app)\n    {\n        this.app = app;\n\n        // local\n        this.buttons = [];\n        this.dropdownOpened = false;\n        this.buttonsObservers = {};\n    },\n    // public\n    start: function()\n    {\n        if (this.is())\n        {\n            this.opts.activeButtons = (this.opts.activeButtonsAdd) ? this._extendActiveButtons() : this.opts.activeButtons;\n            this.create();\n        }\n    },\n    stopObservers: function()\n    {\n        this.buttonsObservers = {};\n    },\n    create: function()\n    {\n        this.$wrapper = $R.dom('<div>');\n        this.$toolbar = $R.dom('<div>');\n    },\n    observe: function()\n    {\n        if (!this.is()) return;\n\n        this.setButtonsInactive();\n\n        var button, observer;\n\n        // observers\n        for (var name in this.buttonsObservers)\n        {\n            observer = this.buttonsObservers[name];\n            button = this.getButton(name);\n            this.app.broadcast('button.' + observer + '.observe', button);\n        }\n\n        // inline buttons\n        var buttons = this.opts.activeButtons;\n        var inlines = this.selection.getInlinesAllSelected();\n        var current = this.selection.getInline();\n        if (this.selection.isCollapsed() && current)\n        {\n            inlines.push(current);\n        }\n\n        var tags = this._inlinesToTags(inlines);\n        for (var key in buttons)\n        {\n            if (tags.indexOf(key) !== -1)\n            {\n                button = this.getButton(buttons[key]);\n                button.setActive();\n            }\n\n        }\n    },\n\n    // is\n    is: function()\n    {\n        return !(!this.opts.toolbar || (this.detector.isMobile() && this.opts.air));\n    },\n    isAir: function()\n    {\n        return (this.is()) ? this.$toolbar.hasClass('redactor-air') : false;\n    },\n    isFixed: function()\n    {\n        return (this.is()) ? this.$toolbar.hasClass('redactor-toolbar-fixed') : false;\n    },\n    isContextBar: function()\n    {\n        var $bar = this.$body.find('#redactor-context-toolbar-' + this.uuid);\n        return $bar.hasClass('open');\n    },\n    isTarget: function()\n    {\n        return (this.opts.toolbarFixedTarget !== document);\n    },\n\n    // get\n    getElement: function()\n    {\n        return this.$toolbar;\n    },\n    getWrapper: function()\n    {\n        return this.$wrapper;\n    },\n    getDropdown: function()\n    {\n        return this.dropdownOpened;\n    },\n    getTargetElement: function()\n    {\n        return $R.dom(this.opts.toolbarFixedTarget);\n    },\n    getButton: function(name)\n    {\n        var $btn = this._findButton('.re-' + name);\n\n        return ($btn.length !== 0) ? $btn.dataget('data-button-instance') : false;\n    },\n    getButtonByIndex: function(index)\n    {\n        var $btn = this.$toolbar.find('.re-button').eq(index);\n\n        return ($btn.length !== 0) ? $btn.dataget('data-button-instance') : false;\n    },\n    getButtons: function()\n    {\n        var buttons = [];\n        this._findButtons().each(function(node)\n        {\n            var $node = $R.dom(node);\n            buttons.push($node.dataget('data-button-instance'));\n        });\n\n        return buttons;\n    },\n    getButtonsKeys: function()\n    {\n        var keys = [];\n        this._findButtons().each(function(node)\n        {\n            var $node = $R.dom(node);\n            keys.push($node.attr('data-re-name'));\n        });\n\n        return keys;\n    },\n\n    // add\n    addButton: function(name, btnObj, position, $el, start)\n    {\n        position = position || 'end';\n\n        var index = this._getButtonIndex(name);\n        var $button = $R.create('toolbar.button', this.app, name, btnObj);\n\n        if (btnObj.observe)\n        {\n            this.opts.activeButtonsObservers[name] = { observe: btnObj.observe, button: $button };\n        }\n\n        // api added\n        if (start !== true)\n        {\n            if (index === 0) position = 'first';\n            else if (index !== -1)\n            {\n                var $elm = this.getButtonByIndex(index-1);\n                if ($elm)\n                {\n                    position = 'after';\n                    $el = $elm;\n                }\n            }\n        }\n\n        if (this.is())\n        {\n            if (position === 'first') this.$toolbar.prepend($button);\n            else if (position === 'after') $el.after($button);\n            else if (position === 'before') $el.before($button);\n            else this.$toolbar.append($button);\n        }\n\n        return $button;\n    },\n    addButtonFirst: function(name, btnObj)\n    {\n        return this.addButton(name, btnObj, 'first');\n    },\n    addButtonAfter: function(after, name, btnObj)\n    {\n        var $btn = this.getButton(after);\n\n        return ($btn) ? this.addButton(name, btnObj, 'after', $btn) : this.addButton(name, btnObj);\n    },\n    addButtonBefore: function(before, name, btnObj)\n    {\n        var $btn = this.getButton(before);\n\n        return ($btn) ? this.addButton(name, btnObj, 'before', $btn) : this.addButton(name, btnObj);\n    },\n    addButtonObserver: function(name, observer)\n    {\n        this.buttonsObservers[name] = observer;\n    },\n\n    // set\n    setButtons: function(buttons)\n    {\n        this.buttons = buttons;\n    },\n    setDropdown: function(dropdown)\n    {\n        this.dropdownOpened = dropdown;\n    },\n    setButtonsInactive: function()\n    {\n        var $buttons = this.getButtons();\n        for (var i = 0; i < $buttons.length; i++)\n        {\n            $buttons[i].setInactive();\n        }\n    },\n    setButtonsActive: function()\n    {\n        var $buttons = this.getButtons();\n        for (var i = 0; i < $buttons.length; i++)\n        {\n            $buttons[i].setActive();\n        }\n    },\n\n    // disable & enable\n    disableButtons: function()\n    {\n        var $buttons = this.getButtons();\n        for (var i = 0; i < $buttons.length; i++)\n        {\n            $buttons[i].disable();\n        }\n    },\n    enableButtons: function()\n    {\n        var $buttons = this.getButtons();\n        for (var i = 0; i < $buttons.length; i++)\n        {\n            $buttons[i].enable();\n        }\n\n    },\n\n    // private\n    _getButtonIndex: function(name)\n    {\n        var index = this.buttons.indexOf(name);\n\n        return (index === -1) ? false : index;\n    },\n    _findButton: function(selector)\n    {\n        return (this.is()) ? this.$toolbar.find(selector) : $R.dom();\n    },\n    _findButtons: function()\n    {\n        return (this.is()) ? this.$toolbar.find('.re-button') : $R.dom();\n    },\n    _extendActiveButtons: function()\n    {\n        return $R.extend({}, this.opts.activeButtons, this.opts.activeButtonsAdd);\n    },\n    _inlinesToTags: function(inlines)\n    {\n        var tags = [];\n        for (var i = 0; i < inlines.length; i++)\n        {\n            tags.push(inlines[i].tagName.toLowerCase());\n        }\n\n        return tags;\n    }\n});\n$R.add('class', 'toolbar.button', {\n    mixins: ['dom'],\n    init: function(app, name, btnObj)\n    {\n        this.app = app;\n        this.opts = app.opts;\n        this.lang = app.lang;\n        this.$body = app.$body;\n        this.toolbar = app.toolbar;\n        this.detector = app.detector;\n\n        // local\n        this.obj = btnObj;\n        this.name = name;\n        this.dropdown = false;\n        this.tooltip = false;\n\n        // init\n        this._init();\n    },\n    // is\n    isActive: function()\n    {\n        return this.hasClass('redactor-button-active');\n    },\n    isDisabled: function()\n    {\n        return this.hasClass('redactor-button-disabled');\n    },\n\n    // has\n    hasIcon: function()\n    {\n        return (this.obj.icon && !this.opts.buttonsTextLabeled);\n    },\n\n    // set\n    setDropdown: function(dropdown)\n    {\n        this.obj.dropdown = dropdown;\n        this.obj.message = false;\n        this.dropdown = $R.create('toolbar.dropdown', this.app, this.name, this.obj.dropdown);\n        this.attr('data-dropdown', true);\n    },\n    setMessage: function(message, args)\n    {\n        this.obj.message = message;\n        this.obj.args = args;\n        this.obj.dropdown = false;\n    },\n    setApi: function(api, args)\n    {\n        this.obj.api = api;\n        this.obj.args = args;\n        this.obj.dropdown = false;\n    },\n    setTitle: function(title)\n    {\n        this.obj.title = this.lang.parse(title);\n        this.obj.tooltip = this.obj.title;\n\n        this.attr({ 'alt': this.obj.tooltip, 'aria-label': this.obj.tooltip });\n        if (!this.attr('data-re-icon')) this.html(this.obj.title);\n    },\n    setTooltip: function(tooltip)\n    {\n        this.obj.tooltip = this.lang.parse(tooltip);\n        this.attr({ 'alt': this.obj.tooltip, 'aria-label': this.obj.tooltip });\n    },\n    setIcon: function(icon)\n    {\n        if (this.opts.buttonsTextLabeled) return;\n\n        this.obj.icon = true;\n        this.$icon = $R.dom(icon);\n\n        this.html('');\n        this.append(this.$icon);\n        this.attr('data-re-icon', true);\n        this.addClass('re-button-icon');\n        this.setTooltip(this.obj.title);\n        this._buildTooltip();\n    },\n    setActive: function()\n    {\n        this.addClass('redactor-button-active');\n    },\n    setInactive: function()\n    {\n        this.removeClass('redactor-button-active');\n    },\n\n    // hide\n    hideTooltip: function()\n    {\n        this.$body.find('.re-button-tooltip').remove();\n    },\n\n    // get\n    getDropdown: function()\n    {\n        return this.dropdown;\n    },\n\n    // enable & disable\n    disable: function()\n    {\n        this.addClass('redactor-button-disabled');\n    },\n    enable: function()\n    {\n        this.removeClass('redactor-button-disabled');\n    },\n\n    // toggle\n    toggle: function(e)\n    {\n        if (e) e.preventDefault();\n        if (this.isDisabled()) return;\n\n        if (this.obj.dropdown)\n        {\n            this.dropdown.toggle(e);\n        }\n        else if (this.obj.api)\n        {\n            // broadcast\n            this.app.api(this.obj.api, this.obj.args, this.name);\n        }\n        else if (this.obj.message)\n        {\n            // broadcast\n            this.app.broadcast(this.obj.message, this.obj.args, this.name);\n        }\n\n        this.hideTooltip();\n    },\n\n    // private\n    _init: function()\n    {\n        // parse\n        this._parseTitle();\n        this._parseTooltip();\n\n        // build\n        this._build();\n        this._buildCallback();\n        this._buildAttributes();\n        this._buildObserver();\n\n        if (this.hasIcon())\n        {\n            this._buildIcon();\n            this._buildTooltip();\n        }\n        else\n        {\n            this.html(this.obj.title);\n        }\n    },\n    _parseTooltip: function()\n    {\n        this.obj.tooltip = (this.obj.tooltip) ? this.lang.parse(this.obj.tooltip) : this.obj.title;\n    },\n    _parseTitle: function()\n    {\n        this.obj.title = this.lang.parse(this.obj.title);\n    },\n    _build: function()\n    {\n        this.parse('<a>');\n        this.addClass('re-button re-' + this.name);\n        this.attr('data-re-name', this.name);\n        this.dataset('data-button-instance', this);\n\n        if (this.obj.dropdown) this.setDropdown(this.obj.dropdown);\n    },\n    _buildCallback: function()\n    {\n        this.on('click', this.toggle.bind(this));\n    },\n    _buildAttributes: function()\n    {\n        var attrs = {\n            'href': '#',\n            'alt': this.obj.tooltip,\n            'rel': this.name,\n            'role': 'button',\n            'aria-label': this.obj.tooltip,\n            'tabindex': '-1'\n        };\n\n        this.attr(attrs);\n    },\n    _buildObserver: function()\n    {\n        if (typeof this.obj.observe !== 'undefined')\n        {\n            this.toolbar.addButtonObserver(this.name, this.obj.observe);\n        }\n    },\n    _buildIcon: function()\n    {\n        var icon = this.obj.icon;\n        var isHtml = (/(<([^>]+)>)/ig.test(icon));\n\n        this.$icon = (isHtml) ? $R.dom(icon) : $R.dom('<i>');\n        if (!isHtml) this.$icon.addClass('re-icon-' + this.name);\n\n        this.append(this.$icon);\n        this.attr('data-re-icon', true);\n        this.addClass('re-button-icon');\n    },\n    _buildTooltip: function()\n    {\n        if (this.detector.isDesktop())\n        {\n            this.tooltip = $R.create('toolbar.button.tooltip', this.app, this);\n        }\n    }\n});\n$R.add('class', 'toolbar.button.tooltip', {\n    mixins: ['dom'],\n    init: function(app, $button)\n    {\n        this.app = app;\n        this.uuid = app.uuid;\n        this.opts = app.opts;\n        this.$body = app.$body;\n        this.toolbar = app.toolbar;\n\n        // local\n        this.$button = $button;\n        this.created = false;\n\n        // init\n        this._init();\n    },\n    open: function()\n    {\n        if (this.$button.hasClass('redactor-button-disabled') || this.$button.hasClass('redactor-button-active')) return;\n\n        this.created = true;\n        this.parse('<span>');\n        this.addClass('re-button-tooltip re-button-tooltip-' + this.uuid);\n        this.$body.append(this);\n        this.html(this.$button.attr('alt'));\n\n        var offset = this.$button.offset();\n        var position = 'absolute';\n        var height = this.$button.height();\n        var width = this.$button.width();\n        var arrowOffset = 4;\n\n        this.css({\n            top: (offset.top + height + arrowOffset) + 'px',\n            left: (offset.left + width/2 - this.width()/2) + 'px',\n            position: position\n        });\n\n        this.show();\n    },\n    close: function()\n    {\n        if (!this.created || this.$button.hasClass('redactor-button-disabled')) return;\n\n        this.remove();\n        this.created = false;\n    },\n\n    // private\n    _init: function()\n    {\n        this.$button.on('mouseover', this.open.bind(this));\n        this.$button.on('mouseout', this.close.bind(this));\n    }\n});\n$R.add('class', 'toolbar.dropdown', {\n    mixins: ['dom'],\n    init: function(app, name, items)\n    {\n        this.app = app;\n        this.uuid = app.uuid;\n        this.opts = app.opts;\n        this.$win = app.$win;\n        this.$doc = app.$doc;\n        this.$body = app.$body;\n        this.animate = app.animate;\n        this.toolbar = app.toolbar;\n\n        // local\n        this.name = name;\n        this.started = false;\n        this.items = items;\n        this.$items = [];\n    },\n    // public\n    toggle: function(e)\n    {\n        if (!this.started)\n        {\n            this._build();\n        }\n\n        // toggle\n        if (this.isOpened() && this.isActive())\n        {\n            this.close(false);\n        }\n        else\n        {\n            this.open(e);\n        }\n    },\n    isOpened: function()\n    {\n        var $dropdown = this.$body.find('.redactor-dropdown-' + this.uuid + '.open');\n\n        return ($dropdown.length !== 0 && $dropdown.attr('data-re-name') === this.name);\n    },\n    isActive: function()\n    {\n        var $dropdown = this.$body.find('#redactor-dropdown-' + this.uuid + '-' + this.name + '.open');\n        return ($dropdown.length !== 0);\n    },\n    getName: function()\n    {\n        return this.attr('data-re-name');\n    },\n    getItem: function(name)\n    {\n        return this.$items[name];\n    },\n    getItemsByClass: function(classname)\n    {\n        var result = [];\n        for (var key in this.$items)\n        {\n            if (typeof this.$items[key] === 'object' && this.$items[key].hasClass(classname))\n            {\n                result.push(this.$items[key]);\n            }\n        }\n\n        return result;\n    },\n    open: function(e)\n    {\n        this._closeAll();\n\n        this.$btn = this.toolbar.getButton(this.name);\n        this.app.broadcast('dropdown.open', e, this, this.$btn);\n        this.toolbar.setDropdown(this);\n\n        this.show();\n        this.removeClass('redactor-animate-hide');\n        this.addClass('open');\n        this._observe();\n\n        this.$btn.hideTooltip();\n        this.$btn.setActive();\n\n        this.$doc.on('keyup.redactor.dropdown-' + this.uuid, this._handleKeyboard.bind(this));\n        this.$doc.on('click.redactor.dropdown-' + this.uuid + ' touchstart.redactor.dropdown-' + this.uuid, this.close.bind(this));\n\n        this.updatePosition();\n        this.app.broadcast('dropdown.opened', e, this, this.$btn);\n\n    },\n    close: function(e, animate)\n    {\n        if (e)\n        {\n            var $el = $R.dom(e.target);\n            if (this._isButton(e) || $el.hasClass('redactor-dropdown-not-close') || $el.hasClass('redactor-dropdown-item-disabled'))\n            {\n                e.preventDefault();\n                return;\n            }\n        }\n\n        this.app.broadcast('dropdown.close', this, this.$btn);\n        this.toolbar.setDropdown(false);\n\n        this.$btn.setInactive();\n        if (animate === false)\n        {\n            this._close();\n        }\n        else\n        {\n            this.animate.start(this, 'fadeOut', this._close.bind(this));\n        }\n    },\n    updatePosition: function()\n    {\n        var isFixed = this.toolbar.isFixed();\n        var pos = this.$btn.offset();\n        pos.top = (isFixed) ? this.$btn.position().top : pos.top;\n\n        var btnHeight = this.$btn.height();\n        var btnWidth = this.$btn.width();\n        var position = (isFixed) ? 'fixed' : 'absolute';\n        var topOffset = (isFixed) ? (2 + this.opts.toolbarFixedTopOffset) : 2;\n        var leftOffset = 0;\n        var left = (pos.left + leftOffset);\n        var width = parseFloat(this.css('width'));\n        var winWidth = this.$win.width();\n        var leftFix = (winWidth < (left + width)) ? (width - btnWidth) : 0;\n        var leftPos = (left - leftFix);\n        leftPos = (leftPos < 0) ? 4 : leftPos;\n\n        this.css({ position: position, top: (pos.top + btnHeight + topOffset) + 'px', left: leftPos + 'px' });\n    },\n\n    // private\n    _build: function()\n    {\n        this.parse('<div>');\n        this.attr('dir', this.opts.direction);\n        this.attr('id', 'redactor-dropdown-' + this.uuid + '-' + this.name);\n        this.attr('data-re-name', this.name);\n\n        this.addClass('redactor-dropdown redactor-dropdown-' + this.uuid + ' redactor-dropdown-' + this.name);\n        this.dataset('data-dropdown-instance', this);\n        var isDom = (this.items.dom || typeof this.items === 'string');\n\n        if (isDom) this._buildDom();\n        else this._buildItems();\n\n        this.$body.append(this);\n        this.started = true;\n    },\n    _buildDom: function()\n    {\n        this.html('').append($R.dom(this.items));\n    },\n    _buildItems: function()\n    {\n        this.items = (this.name === 'format') ? this._buildFormattingItems() : this.items;\n\n        for (var key in this.items)\n        {\n            var obj = this.items[key];\n\n            if (key === 'observe')\n            {\n                this.attr('data-observe', this.items[key]);\n            }\n            else\n            {\n                var $item = $R.create('toolbar.dropdown.item', this.app, key, obj, this);\n\n                this.$items[key] = $item;\n                this.append($item);\n            }\n        }\n    },\n    _buildFormattingItems: function()\n    {\n        // build the format set\n        for (var key in this.items)\n        {\n            if (this.opts.formatting.indexOf(key) === -1) delete this.items[key];\n        }\n\n        // remove from the format set\n        if (this.opts.formattingHide)\n        {\n            for (var key in this.items)\n            {\n                if (this.opts.formattingHide.indexOf(key) !== -1) delete this.items[key];\n            }\n        }\n\n        // add to the format set\n        if (this.opts.formattingAdd)\n        {\n            for (var key in this.opts.formattingAdd)\n            {\n                this.items[key] = this.opts.formattingAdd[key];\n            }\n        }\n\n        return this.items;\n    },\n    _handleKeyboard: function(e)\n    {\n        if (e.which === 27) this.close();\n    },\n    _isButton: function(e)\n    {\n        var $el = $R.dom(e.target);\n        var $btn = $el.closest('.re-button');\n\n        return ($btn.get() === this.$btn.get());\n    },\n    _close: function()\n    {\n        this.$btn.setInactive();\n        this.$doc.off('.redactor.dropdown-' + this.uuid);\n        this.removeClass('open');\n        this.addClass('redactor-animate-hide');\n        this.app.broadcast('dropdown.closed', this, this.$btn);\n    },\n    _closeAll: function()\n    {\n        this.$body.find('.redactor-dropdown-' + this.uuid + '.open').each(function(node)\n        {\n            var $node = $R.dom(node);\n            var instance =  $node.dataget('data-dropdown-instance');\n            instance._close();\n        });\n    },\n    _observe: function()\n    {\n        var observer = this.attr('data-observe');\n        if (observer)\n        {\n            this.app.broadcast('dropdown.' + observer + '.observe', this);\n        }\n    }\n});\n$R.add('class', 'toolbar.dropdown.item', {\n    mixins: ['dom'],\n    init: function(app, name, obj, dropdown)\n    {\n        this.app = app;\n        this.lang = app.lang;\n\n        // local\n        this.dropdown = dropdown;\n        this.name = name;\n        this.obj = obj;\n\n        // init\n        this._init();\n    },\n    setTitle: function(html)\n    {\n        this.$span.html(html);\n    },\n    getTitle: function()\n    {\n        return this.$span.html();\n    },\n    enable: function()\n    {\n        this.removeClass('redactor-dropdown-item-disabled');\n    },\n    disable: function()\n    {\n        this.addClass('redactor-dropdown-item-disabled');\n    },\n    toggle: function(e)\n    {\n        if (e) e.preventDefault();\n        if (this.hasClass('redactor-dropdown-item-disabled')) return;\n\n        if (this.obj.message)\n        {\n            // broadcast\n            this.app.broadcast(this.obj.message, this.obj.args, this.name);\n        }\n        else if (this.obj.api)\n        {\n            this.app.api(this.obj.api, this.obj.args, this.name);\n        }\n    },\n\n    // private\n    _init: function()\n    {\n        this.parse('<a>');\n        this.attr('href', '#');\n        this.addClass('redactor-dropdown-item-' + this.name);\n\n        if (this.obj.classname)\n        {\n            this.addClass(this.obj.classname);\n        }\n\n        this.attr('data-re-name', this.name);\n        this.on('click', this.toggle.bind(this));\n\n        this.$span = $R.dom('<span>');\n        this.append(this.$span);\n        this.setTitle(this.lang.parse(this.obj.title));\n    }\n});\n$R.add('service', 'cleaner', {\n    init: function(app)\n    {\n        this.app = app;\n        this.opts = app.opts;\n\n        // local\n        this.storedComponents = [];\n        this.storedImages = [];\n        this.storedLinks = [];\n        this.deniedTags = ['font', 'html', 'head', 'link', 'title', 'body', 'meta', 'applet'];\n        this.convertRules = {};\n        this.unconvertRules = {};\n\n        // regex\n        this.reComments = /<!--[\\s\\S]*?-->/g;\n        this.reSpacedEmpty = /^(||\\s||<br\\s?\\/?>||&nbsp;)$/i;\n        this.reScriptTag = /<script(.*?[^>]?)>([\\w\\W]*?)<\\/script>/gi;\n    },\n    // public\n    addConvertRules: function(name, func)\n    {\n        this.convertRules[name] = func;\n    },\n    addUnconvertRules: function(name, func)\n    {\n        this.unconvertRules[name] = func;\n    },\n    input: function(html, paragraphize, started)\n    {\n        // pre/code\n        html = this.encodePreCode(html);\n\n        // converting entity\n        html = html.replace(/\\$/g, '&#36;');\n        html = html.replace(/&amp;/g, '&');\n\n        // convert to figure\n        var converter = $R.create('cleaner.figure', this.app);\n        html = converter.convert(html, this.convertRules);\n\n        // store components\n        html = this.storeComponents(html);\n\n        // clean\n        html = this.replaceTags(html, this.opts.replaceTags);\n        html = this._setSpanAttr(html);\n        html = this._setStyleCache(html);\n        html = this.removeTags(html, this.deniedTags);\n        html = (this.opts.removeScript) ? this._removeScriptTag(html) : this._replaceScriptTag(html);\n        html = (this.opts.removeComments) ? this.removeComments(html) : html;\n        html = (this._isSpacedEmpty(html)) ? this.opts.emptyHtml : html;\n\n        // restore components\n        html = this.restoreComponents(html);\n\n        // clear wrapped components\n        html = this._cleanWrapped(html);\n\n        // paragraphize\n        html = (paragraphize) ? this.paragraphize(html) : html;\n\n        return html;\n    },\n    output: function(html, removeMarkers)\n    {\n        html = this.removeInvisibleSpaces(html);\n\n        // empty\n        if (this._isSpacedEmpty(html)) return '';\n        if (this._isParagraphEmpty(html)) return '';\n\n        html = this.removeServiceTagsAndAttrs(html, removeMarkers);\n\n        // store components\n        html = this.storeComponents(html);\n\n        html = this.removeSpanWithoutAttributes(html);\n        html = this.removeFirstBlockBreaklineInHtml(html);\n\n        html = (this.opts.removeScript) ? html : this._unreplaceScriptTag(html);\n        html = (this.opts.preClass) ? this._setPreClass(html) : html;\n        html = (this.opts.linkNofollow) ? this._setLinkNofollow(html) : html;\n        html = (this.opts.removeNewLines) ? this.cleanNewLines(html) : html;\n\n        // restore components\n        html = this.restoreComponents(html);\n\n        // convert to figure\n        var converter = $R.create('cleaner.figure', this.app);\n        html = converter.unconvert(html, this.unconvertRules);\n\n        // final clean up\n        html = this.removeEmptyAttributes(html, ['style', 'class', 'rel', 'alt', 'title']);\n        html = this.cleanSpacesInPre(html);\n        html = this.tidy(html);\n\n        // converting entity\n        html = html.replace(/&amp;/g, '&');\n\n        // check whitespaces\n        html = (html.replace(/\\n/g, '') === '') ? '' : html;\n\n        return html;\n    },\n    paste: function(html)\n    {\n        // store components\n        html = this.storeComponents(html);\n\n        // remove tags\n        var deniedTags = this.deniedTags.concat(['iframe']);\n        html = this.removeTags(html, deniedTags);\n\n        // remove doctype tag\n        html = html.replace(new RegExp(\"<\\!doctype([\\\\s\\\\S]+?)>\", 'gi'), '');\n\n        // remove style tag\n        html = html.replace(new RegExp(\"<style([\\\\s\\\\S]+?)</style>\", 'gi'), '');\n\n        // remove br between\n        html = html.replace(new RegExp(\"</p><br /><p\", 'gi'), '</p><p');\n\n        // gdocs & word\n        var isMsWord = this._isHtmlMsWord(html);\n\n        html = this._cleanGDocs(html);\n        html = (isMsWord) ? this._cleanMsWord(html) : html;\n\n        // do not clean\n        if (!this.opts.pasteClean)\n        {\n            // restore components\n            html = this.restoreComponents(html);\n\n            return html;\n        }\n\n        // plain text\n        if (this.opts.pastePlainText)\n        {\n            // restore components\n            html = this.restoreComponents(html);\n\n            return this.pastePlainText(html);\n        }\n\n        // remove tags\n        var exceptedTags = this.opts.pasteBlockTags.concat(this.opts.pasteInlineTags);\n        html = this.removeTagsExcept(html, exceptedTags);\n\n        // links & images\n        html = (this.opts.pasteLinks) ? html : this.removeTags(html, ['a']);\n        html = (this.opts.pasteImages) ? html : this.removeTags(html, ['img']);\n\n        // build wrapper\n        var $wrapper = this.utils.buildWrapper(html);\n\n        // clean attrs\n        var $elms = $wrapper.find('*');\n\n        // remove style\n        var filterStyle = (this.opts.pasteKeepStyle.length !== 0) ? ',' + this.opts.pasteKeepStyle.join(',') : '';\n        $elms.not('[data-redactor-style-cache]' + filterStyle).removeAttr('style');\n\n        // remove class\n        var filterClass = (this.opts.pasteKeepClass.length !== 0) ? ',' + this.opts.pasteKeepClass.join(',') : '';\n        $elms.not('[data-redactor-style-cache], span.redactor-component' + filterClass).removeAttr('class');\n\n        // remove attrs\n        var filterAttrs = (this.opts.pasteKeepAttrs.length !== 0) ? ',' + this.opts.pasteKeepAttrs.join(',') : '';\n        $elms.not('img, a, span.redactor-component, [data-redactor-style-cache]' + filterAttrs).each(function(node)\n        {\n            while(node.attributes.length > 0)\n            {\n                node.removeAttribute(node.attributes[0].name);\n            }\n        });\n\n        // paste link target\n        if (this.opts.pasteLinks && this.opts.pasteLinkTarget !== false)\n        {\n            $wrapper.find('a').attr('target', this.opts.pasteLinkTarget);\n        }\n\n        // keep style\n        $wrapper.find('[data-redactor-style-cache]').each(function(node)\n        {\n            var style = node.getAttribute('data-redactor-style-cache');\n            node.setAttribute('style', style);\n        });\n\n        // remove empty span\n        $wrapper.find('span').each(function(node)\n        {\n            if (node.attributes.length === 0)\n            {\n                $R.dom(node).unwrap();\n            }\n        });\n\n        // remove empty inline\n        $wrapper.find(this.opts.inlineTags.join(',')).each(function(node)\n        {\n            if (node.attributes.length === 0 && this.utils.isEmptyHtml(node.innerHTML))\n            {\n                $R.dom(node).unwrap();\n            }\n\n        }.bind(this));\n\n        // place ul/ol into li\n        $wrapper.find('ul, ol').each(function(node)\n        {\n            var prev = node.previousSibling;\n            if (prev && prev.tagName === 'LI')\n            {\n                var $li = $R.dom(prev);\n                $li.find('p').unwrap();\n                $li.append(node);\n            }\n        });\n\n        // get wrapper\n        html = this.utils.getWrapperHtml($wrapper);\n\n        // remove paragraphs form lists (google docs bug)\n        html = html.replace(/<li><p>/gi, '<li>');\n        html = html.replace(/<\\/p><\\/li>/gi, '</li>');\n\n        // clean empty p\n        html = html.replace(/<p>&nbsp;<\\/p>/gi, '<p></p>');\n        html = html.replace(/<p><br\\s?\\/?><\\/p>/gi, '<p></p>');\n\n        if (isMsWord)\n        {\n            html = html.replace(/<p><\\/p>/gi, '');\n            html = html.replace(/<p>\\s<\\/p>/gi, '');\n        }\n\n        // restore components\n        html = this.restoreComponents(html);\n\n        return html;\n    },\n    pastePlainText: function(html)\n    {\n        html = (this.opts.pasteLinks) ? this.storeLinks(html) : html;\n        html = (this.opts.pasteImages) ? this.storeImages(html) : html;\n\n        html = this.getPlainText(html);\n        html = this._replaceNlToBr(html);\n\n        html = (this.opts.pasteLinks) ? this.restoreLinks(html) : html;\n        html = (this.opts.pasteImages) ? this.restoreImages(html) : html;\n\n        return html;\n    },\n    tidy: function(html)\n    {\n        return html;\n    },\n    paragraphize: function(html)\n    {\n        var paragraphize = $R.create('cleaner.paragraphize', this.app);\n\n        return paragraphize.convert(html);\n    },\n\n    // get\n    getFlatText: function(html)\n    {\n        var $div = $R.dom('<div>');\n\n        if (!html.nodeType && !html.dom)\n        {\n            html = html.toString();\n            html = html.trim();\n            $div.html(html);\n        }\n        else\n        {\n            $div.append(html);\n        }\n\n        html = $div.get().textContent || $div.get().innerText || '';\n\n        return (html === undefined) ? '' : html;\n    },\n\tgetPlainText: function(html)\n\t{\n\t\thtml = html.replace(/<!--[\\s\\S]*?-->/gi, '');\n\t\thtml = html.replace(/<style[\\s\\S]*?style>/gi, '');\n        html = html.replace(/<p><\\/p>/g, '');\n\t\thtml = html.replace(/<\\/div>|<\\/li>|<\\/td>/gi, '\\n');\n\t\thtml = html.replace(/<\\/p>/gi, '\\n\\n');\n\t\thtml = html.replace(/<\\/H[1-6]>/gi, '\\n\\n');\n\n\t\tvar tmp = document.createElement('div');\n\t\ttmp.innerHTML = html;\n\n\t\thtml = tmp.textContent || tmp.innerText;\n\n\t\treturn html.trim();\n\t},\n\n    // replace\n    replaceTags: function(html, tags)\n    {\n        if (tags)\n        {\n            var self = this;\n            var keys = Object.keys(tags);\n            var $wrapper = this.utils.buildWrapper(html);\n            $wrapper.find(keys.join(',')).each(function(node)\n            {\n                self.utils.replaceToTag(node, tags[node.tagName.toLowerCase()]);\n            });\n\n            html = this.utils.getWrapperHtml($wrapper);\n        }\n\n        return html;\n    },\n    replaceNbspToSpaces: function(html)\n    {\n        return html.replace('&nbsp;', ' ');\n    },\n    replaceBlocksToBr: function(html)\n    {\n        html = html.replace(/<\\/div>|<\\/li>|<\\/td>|<\\/p>|<\\/H[1-6]>/gi, '<br>');\n\n        return html;\n    },\n\n    // clean\n    cleanNewLines: function(html)\n    {\n        return html.replace(/\\r?\\n/g, \"\");\n    },\n    cleanSpacesInPre: function(html)\n    {\n        return html.replace('&nbsp;&nbsp;&nbsp;&nbsp;', '    ');\n    },\n\n    // remove\n    removeInvisibleSpaces: function(html)\n    {\n        html = this.utils.removeInvisibleChars(html);\n        html = html.replace(/&#65279;/gi, '');\n\n        return html;\n    },\n    removeNl: function(html)\n    {\n        html = html.replace(/\\n/g, \" \");\n        html = html.replace(/\\s+/g, \"\\s\");\n\n        return html;\n    },\n    removeBrAtEnd: function(html)\n    {\n        html = html.replace(/<br\\s?\\/?>$/gi, ' ');\n        html = html.replace(/<br\\s?\\/?><li/gi, '<li');\n\n        return html;\n    },\n    removeTags: function(input, denied)\n    {\n        var re = (denied) ? /<\\/?([a-z][a-z0-9]*)\\b[^>]*>/gi : /(<([^>]+)>)/gi;\n        var replacer = (!denied) ? '' : function ($0, $1)\n        {\n            return denied.indexOf($1.toLowerCase()) === -1 ? $0 : '';\n        };\n\n        return input.replace(re, replacer);\n    },\n    removeTagsExcept: function(input, except)\n    {\n        if (except === undefined) return input.replace(/(<([^>]+)>)/gi, '');\n\n        var tags = /<\\/?([a-z][a-z0-9]*)\\b[^>]*>/gi;\n        return input.replace(tags, function($0, $1)\n        {\n            return except.indexOf($1.toLowerCase()) === -1 ? '' : $0;\n        });\n    },\n    removeComments: function(html)\n    {\n        return html.replace(this.reComments, '');\n    },\n    removeServiceTagsAndAttrs: function(html, removeMarkers)\n    {\n        var $wrapper = this.utils.buildWrapper(html);\n        var self = this;\n        if (removeMarkers !== false)\n        {\n            $wrapper.find('.redactor-selection-marker').each(function(node)\n            {\n                var $el = $R.dom(node);\n                var text = self.utils.removeInvisibleChars($el.text());\n\n                return (text === '') ? $el.remove() : $el.unwrap();\n            });\n        }\n\n        $wrapper.find('[data-redactor-style-cache]').removeAttr('data-redactor-style-cache');\n\n        return this.utils.getWrapperHtml($wrapper);\n    },\n    removeSpanWithoutAttributes: function(html)\n    {\n        var $wrapper = this.utils.buildWrapper(html);\n        $wrapper.find('span').removeAttr('data-redactor-span data-redactor-style-cache').each(function(node)\n        {\n            if (node.attributes.length === 0) $R.dom(node).unwrap();\n        });\n\n        return this.utils.getWrapperHtml($wrapper);\n    },\n    removeFirstBlockBreaklineInHtml: function(html)\n    {\n        return html.replace(new RegExp('</li><br\\\\s?/?>', 'gi'), '</li>');\n    },\n    removeEmptyAttributes: function(html, attrs)\n    {\n        var $wrapper = this.utils.buildWrapper(html);\n        for (var i = 0; i < attrs.length; i++)\n        {\n            $wrapper.find('[' + attrs[i] + '=\"\"]').removeAttr(attrs[i]);\n        }\n\n        return this.utils.getWrapperHtml($wrapper);\n    },\n\n    // encode / decode\n    encodeHtml: function(html)\n    {\n        html = html.replace(/<br\\s?\\/?>/g, \"\\n\");\n        html = html.replace(/&nbsp;/g, ' ');\n        html = html.replace(/”/g, '\"');\n        html = html.replace(/“/g, '\"');\n        html = html.replace(/‘/g, '\\'');\n        html = html.replace(/’/g, '\\'');\n        html = this.encodeEntities(html);\n        html = html.replace(/\\$/g, '&#36;');\n\n        if (this.opts.preSpaces)\n        {\n            html = html.replace(/\\t/g, new Array(this.opts.preSpaces + 1).join(' '));\n        }\n\n        return html;\n    },\n    encodePreCode: function(html)\n    {\n        var matched = html.match(new RegExp('<code(.*?)>(.*?)<pre(.*?)>(.*?)</pre>(.*?)</code>', 'gi'));\n        if (matched !== null)\n        {\n            for (var i = 0; i < matched.length; i++)\n            {\n                var arr = matched[i].match(new RegExp('<pre(.*?)>([\\\\w\\\\W]*?)</pre>', 'i'));\n                html = html.replace(arr[0], this.encodeEntities(arr[0]));\n            }\n        }\n\n        var $wrapper = this.utils.buildWrapper(html);\n\n        $wrapper.find('code code').replaceWith(this._encodeOuter.bind(this));\n        $wrapper.find('code pre').replaceWith(this._encodeOuter.bind(this));\n        $wrapper.find('pre pre').replaceWith(this._encodeOuter.bind(this));\n        $wrapper.find('code, pre').each(this._encodePreCodeLine.bind(this));\n\n        html = this.utils.getWrapperHtml($wrapper);\n\n        // restore markers\n        html = this._decodeMarkers(html);\n\n        return html;\n    },\n    encodeEntities: function(str)\n    {\n        str = this.decodeEntities(str);\n        str = str.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n\n        return str;\n    },\n    encodePhpCode: function(html)\n    {\n        html = html.replace('<?php', '&lt;?php');\n        html = html.replace('<?', '&lt;?');\n        html = html.replace('?>', '?&gt;');\n\n        return html;\n    },\n    decodeEntities: function(str)\n    {\n        return String(str).replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&quot;/g, '\"').replace(/&amp;/g, '&');\n    },\n\n    // store / restore\n    storeComponents: function(html)\n    {\n        var matched = this.utils.getElementsFromHtml(html, 'figure', 'table');\n\n        return this._storeMatched(html, matched, 'Components', 'figure');\n    },\n    restoreComponents: function(html)\n    {\n        return this._restoreMatched(html, 'Components', 'figure');\n    },\n    storeLinks: function(html)\n    {\n        var matched = this.utils.getElementsFromHtml(html, 'a');\n\n        return this._storeMatched(html, matched, 'Links', 'a');\n    },\n    storeImages: function(html)\n    {\n        var matched = this.utils.getElementsFromHtml(html, 'img');\n\n        return this._storeMatched(html, matched, 'Images', 'img');\n    },\n    restoreLinks: function(html)\n    {\n        return this._restoreMatched(html, 'Links', 'a');\n    },\n    restoreImages: function(html)\n    {\n        return this._restoreMatched(html, 'Images', 'img');\n    },\n\n    // PRIVATE\n\n    // clean\n    _cleanWrapped: function(html)\n    {\n        html = html.replace(new RegExp('<p><figure([\\\\w\\\\W]*?)</figure></p>', 'gi'), '<figure$1</figure>');\n\n        return html;\n    },\n    _cleanGDocs: function(html)\n    {\n        // remove google docs markers\n        html = html.replace(/<b\\sid=\"internal-source-marker(.*?)\">([\\w\\W]*?)<\\/b>/gi, \"$2\");\n        html = html.replace(/<b(.*?)id=\"docs-internal-guid(.*?)\">([\\w\\W]*?)<\\/b>/gi, \"$3\");\n\n        html = html.replace(/<span[^>]*(font-style: italic; font-weight: bold|font-weight: bold; font-style: italic)[^>]*>([\\w\\W]*?)<\\/span>/gi, '<b><i>$2</i></b>');\n        html = html.replace(/<span[^>]*(font-style: italic; font-weight: 700|font-weight: 700; font-style: italic)[^>]*>([\\w\\W]*?)<\\/span>/gi, '<b><i>$2</i></b>');\n        html = html.replace(/<span[^>]*font-style: italic[^>]*>([\\w\\W]*?)<\\/span>/gi, '<i>$1</i>');\n        html = html.replace(/<span[^>]*font-weight: bold[^>]*>([\\w\\W]*?)<\\/span>/gi, '<b>$1</b>');\n        html = html.replace(/<span[^>]*font-weight: 700[^>]*>([\\w\\W]*?)<\\/span>/gi, '<b>$1</b>');\n\n        return html;\n    },\n    _cleanMsWord: function(html)\n    {\n        html = html.replace(/<!--[\\s\\S]+?-->/gi, '');\n        html = html.replace(/<(!|script[^>]*>.*?<\\/script(?=[>\\s])|\\/?(\\?xml(:\\w+)?|img|meta|link|style|\\w:\\w+)(?=[\\s\\/>]))[^>]*>/gi, '');\n        html = html.replace(/<(\\/?)s>/gi, \"<$1strike>\");\n        html = html.replace(/&nbsp;/gi, ' ');\n        html = html.replace(/<span\\s+style\\s*=\\s*\"\\s*mso-spacerun\\s*:\\s*yes\\s*;?\\s*\"\\s*>([\\s\\u00a0]*)<\\/span>/gi, function(str, spaces) {\n            return (spaces.length > 0) ? spaces.replace(/./, \" \").slice(Math.floor(spaces.length/2)).split(\"\").join(\"\\u00a0\") : '';\n        });\n\n        // build wrapper\n        var $wrapper = this.utils.buildWrapper(html);\n\n        $wrapper.find('p').each(function(node)\n        {\n            var $node = $R.dom(node);\n            var str = $node.attr('style');\n            var matches = /mso-list:\\w+ \\w+([0-9]+)/.exec(str);\n            if (matches)\n            {\n                $node.data('_listLevel',  parseInt(matches[1], 10));\n            }\n        });\n\n        // parse Lists\n        this._parseWordLists($wrapper);\n\n        $wrapper.find('[style]').removeAttr('style');\n        $wrapper.find('[align]').removeAttr('align');\n        $wrapper.find('[name]').removeAttr('name');\n        $wrapper.find('span').unwrap();\n        $wrapper.find(\"[class^='Mso']\").removeAttr('class');\n        $wrapper.find('a').filter(function(node) { return !node.hasAttribute('href'); }).unwrap();\n\n        // get wrapper\n        html = this.utils.getWrapperHtml($wrapper);\n        html = html.replace(/<p[^>]*><\\/p>/gi, '');\n        html = html.replace(/<li>·/gi, '<li>');\n        html = html.trim();\n\n        // remove spaces between\n        html = html.replace(/\\/(p|ul|ol|h1|h2|h3|h4|h5|h6|blockquote)>\\s+<(p|ul|ol|h1|h2|h3|h4|h5|h6|blockquote)/gi, '/$1>\\n<$2');\n\n        var result = '';\n        var lines = html.split(/\\n/);\n        for (var i = 0; i < lines.length; i++)\n        {\n            var space = (lines[i] !== '' && lines[i].search(/>$/) === -1) ? ' ' : '\\n';\n\n            result += lines[i] + space;\n        }\n\n        return result;\n    },\n    _parseWordLists: function($wrapper)\n    {\n        var lastLevel = 0;\n        var pnt = null;\n\n        $wrapper.find('p').each(function(node)\n        {\n            var $node = $R.dom(node);\n            var currentLevel = $node.data('_listLevel');\n            if (currentLevel !== null)\n            {\n                var txt = $node.text();\n                var listTag = '<ul></ul>';\n                if (/^\\s*\\w+\\./.test(txt))\n                {\n                    var matches = /([0-9])\\./.exec(txt);\n                    if (matches)\n                    {\n                        var start = parseInt(matches[1], 10);\n                        listTag = (start > 1) ? '<ol start=\"' + start + '\"></ol>' : '<ol></ol>';\n                    }\n                    else\n                    {\n                        listTag = '<ol></ol>';\n                    }\n                }\n\n                if (currentLevel > lastLevel)\n                {\n                    if (lastLevel === 0)\n                    {\n                        $node.before(listTag);\n                        pnt = $node.prev();\n                    }\n                    else\n                    {\n                        var $list = $R.dom(listTag);\n                        pnt.append($list);\n                    }\n                }\n\n                if (currentLevel < lastLevel)\n                {\n                    for (var i = 0; i < (lastLevel - currentLevel); i++)\n                    {\n                        pnt = pnt.parent();\n                    }\n                }\n\n                $node.find('span').first().unwrap();\n                pnt.append('<li>' + $node.html() + '</li>');\n                $node.remove();\n                lastLevel = currentLevel;\n            }\n            else\n            {\n                lastLevel = 0;\n            }\n        });\n    },\n\n    // is\n    _isSpacedEmpty: function(html)\n    {\n        return (html.search(this.reSpacedEmpty) !== -1);\n    },\n    _isParagraphEmpty: function(html)\n    {\n        return (html.search(/^<p><\\/p>$/i) !== -1);\n    },\n    _isHtmlMsWord: function(html)\n    {\n        return html.match(/class=\"?Mso|style=\"[^\"]*\\bmso-|style='[^'']*\\bmso-|w:WordDocument/i);\n    },\n\n    // set\n    _setSpanAttr: function(html)\n    {\n        var $wrapper = this.utils.buildWrapper(html);\n        $wrapper.find('span').attr('data-redactor-span', true);\n\n        return this.utils.getWrapperHtml($wrapper);\n    },\n    _setStyleCache: function(html)\n    {\n        var $wrapper = this.utils.buildWrapper(html);\n        $wrapper.find('[style]').each(function(node)\n        {\n            var $el = $R.dom(node);\n            $el.attr('data-redactor-style-cache', $el.attr('style'));\n        });\n\n        return this.utils.getWrapperHtml($wrapper);\n    },\n    _setPreClass: function(html)\n    {\n        var $wrapper = this.utils.buildWrapper(html);\n        $wrapper.find('pre').addClass(this.opts.preClass);\n\n        return this.utils.getWrapperHtml($wrapper);\n    },\n    _setLinkNofollow: function(html)\n    {\n        var $wrapper = this.utils.buildWrapper(html);\n        $wrapper.find('a').attr('rel', 'nofollow');\n\n        return this.utils.getWrapperHtml($wrapper);\n    },\n\n    // replace\n    _replaceScriptTag: function(html)\n    {\n        return html.replace(this.reScriptTag, '<pre class=\"redactor-script-tag\" $1>$2</pre>');\n    },\n    _unreplaceScriptTag: function(html)\n    {\n        return html.replace(/<pre class=\"redactor-script-tag\"(.*?[^>]?)>([\\w\\W]*?)<\\/pre>/gi, '<script$1>$2</script>');\n    },\n\t_replaceNlToBr: function(html)\n\t{\n\t\treturn html.replace(/\\n/g, '<br />');\n\t},\n\n    // remove\n    _removeScriptTag: function(html)\n    {\n        return html.replace(this.reScriptTag, '');\n    },\n\n    // private\n    _storeMatched: function(html, matched, stored, name)\n    {\n        this['stored' + stored] = [];\n        if (matched)\n        {\n            for (var i = 0; i < matched.length; i++)\n            {\n                this['stored' + stored][i] = matched[i];\n                html = html.replace(matched[i], '####' + name + i + '####');\n            }\n        }\n\n        return html;\n    },\n    _restoreMatched: function(html, stored, name)\n    {\n        if (this['stored' + stored])\n        {\n            for (var i = 0; i < this['stored' + stored].length; i++)\n            {\n                html = html.replace('####' + name + i + '####', this['stored' + stored][i]);\n            }\n        }\n\n        return html;\n    },\n    _decodeMarkers: function(html)\n    {\n        var decodedMarkers = '<span id=\"selection-marker-$1\" class=\"redactor-selection-marker\">​</span>';\n        return html.replace(/&lt;span\\sid=\"selection-marker-(start|end)\"\\sclass=\"redactor-selection-marker\"&gt;(.*?[^>]?)&lt;\\/span&gt;/g, decodedMarkers);\n    },\n    _encodeOuter: function(node)\n    {\n        return this.encodeEntities(node.outerHTML);\n    },\n    _encodePreCodeLine: function(node)\n    {\n        var first = node.firstChild;\n        if (node.tagName == 'PRE' && (first && first.tagName === 'CODE')) return;\n\n        var encoded = this.decodeEntities(node.innerHTML);\n        encoded = encoded.replace(/&nbsp;/g, ' ').replace(/<br\\s?\\/?>/g, '\\n');\n        encoded = (this.opts.preSpaces) ? encoded.replace(/\\t/g, new Array(this.opts.preSpaces + 1).join(' ')) : encoded;\n\n        node.textContent = encoded;\n    }\n});\n$R.add('class', 'cleaner.figure', {\n    init: function(app)\n    {\n        this.app = app;\n        this.opts = app.opts;\n        this.utils = app.utils;\n        this.detector = app.detector;\n    },\n    // public\n    convert: function(html, rules)\n    {\n        var $wrapper = this.utils.buildWrapper(html);\n\n        // convert\n        $wrapper.find('img').each(this._convertImage.bind(this));\n        $wrapper.find('hr').each(this._convertLine.bind(this));\n        $wrapper.find('iframe').each(this._convertIframe.bind(this));\n        $wrapper.find('table').each(this._convertTable.bind(this));\n        $wrapper.find('form').each(this._convertForm.bind(this));\n        $wrapper.find('figure pre').each(this._convertCode.bind(this));\n\n        // variables\n        $wrapper.find('[data-redactor-type=variable]').addClass('redactor-component');\n\n        // widgets\n        $wrapper.find('figure').not('.redactor-component, .redactor-figure-code').each(this._convertWidget.bind(this));\n\n        // contenteditable\n        $wrapper.find('figure pre').each(this._setContenteditableCode.bind(this));\n        $wrapper.find('.redactor-component, .non-editable').attr('contenteditable', false);\n\n        if (this.detector.isIe())\n        {\n            $wrapper.find('[data-redactor-type=table]').attr('contenteditable', true);\n        }\n\n        $wrapper.find('figcaption, td, th').attr('contenteditable', true);\n        $wrapper.find('.redactor-component, figcaption').attr('tabindex', '-1');\n\n        // extra rules\n        this._acceptExtraRules($wrapper, rules);\n\n        return this.utils.getWrapperHtml($wrapper);\n    },\n    unconvert: function(html, rules)\n    {\n        var $wrapper = this.utils.buildWrapper(html);\n\n        // contenteditable\n        $wrapper.find('th, td, figcaption, figure, pre, code, .redactor-component').removeAttr('contenteditable tabindex');\n\n        // remove class\n        $wrapper.find('figure').removeClass('redactor-component redactor-component-active redactor-uploaded-figure');\n\n        // unconvert\n        $wrapper.find('[data-redactor-type=variable]').removeClass('redactor-component');\n        $wrapper.find('figure[data-redactor-type=line]').unwrap();\n        $wrapper.find('figure[data-redactor-type=widget]').each(this._unconvertWidget.bind(this));\n        $wrapper.find('figure[data-redactor-type=form]').each(this._unconvertForm.bind(this));\n        $wrapper.find('figure[data-redactor-type=table]').each(this._unconvertTable.bind(this));\n        $wrapper.find('figure[data-redactor-type=image]').removeAttr('rel').each(this._unconvertImages.bind(this));\n\n        $wrapper.find('img').removeAttr('data-redactor-type').removeClass('redactor-component');\n        $wrapper.find('.non-editable').removeAttr('contenteditable');\n\n        // remove types\n        $wrapper.find('figure').each(this._removeTypes.bind(this));\n\n        // remove caret\n        $wrapper.find('span.redactor-component-caret').remove();\n\n        if (this.opts.breakline)\n        {\n            $wrapper.find('[data-redactor-tag=\"br\"]').each(function(node)\n            {\n                if (node.lastChild && node.lastChild.tagName !== 'BR')\n                {\n                    node.appendChild(document.createElement('br'));\n                }\n            }).unwrap();\n        }\n\n        // extra rules\n        this._acceptExtraRules($wrapper, rules);\n\n        html = this.utils.getWrapperHtml($wrapper);\n        html = html.replace(/<br\\s?\\/?>$/, '');\n\n        return html;\n    },\n\n    // private\n    _convertImage: function(node)\n    {\n        var $node = $R.dom(node);\n        if (this._isNonEditable($node)) return;\n\n        // set id\n        if (!$node.attr('data-image'))\n        {\n            $node.attr('data-image', this.utils.getRandomId());\n        }\n\n        var $link = $node.closest('a');\n        var $figure = $node.closest('figure');\n        var isImage = ($figure.children().not('a, img, br, figcaption').length === 0);\n        if (!isImage) return;\n\n        if ($figure.length === 0)\n        {\n            $figure = ($link.length !== 0) ? $link.wrap('<figure>') : $node.wrap('<figure>');\n        }\n        else\n        {\n            if ($figure.hasClass('redactor-uploaded-figure'))\n            {\n                $figure.removeClass('redactor-uploaded-figure');\n            }\n            else\n            {\n                $figure.addClass('redactor-keep-figure');\n            }\n        }\n\n        this._setFigure($figure, 'image');\n    },\n    _convertTable: function(node)\n    {\n        if (this._isNonEditable(node)) return;\n\n        var $figure = this._wrapFigure(node);\n        this._setFigure($figure, 'table');\n    },\n    _convertLine: function(node)\n    {\n        if (this._isNonEditable(node)) return;\n\n        var $figure = this._wrapFigure(node);\n        this._setFigure($figure, 'line');\n    },\n    _convertForm: function(node)\n    {\n        if (this._isNonEditable(node)) return;\n\n        var $figure = this.utils.replaceToTag(node, 'figure');\n        this._setFigure($figure, 'form');\n    },\n    _convertIframe: function(node)\n    {\n        if (this._isNonEditable(node)) return;\n\n        var $node = $R.dom(node);\n        if ($node.closest('.redactor-component').length !== 0) return;\n\n        var src = node.getAttribute('src');\n        var isVideo = (src && (src.match(this.opts.regex.youtube) || src.match(this.opts.regex.vimeo)));\n        var $figure = this._wrapFigure(node);\n\n        if (isVideo)\n        {\n            this._setFigure($figure, 'video');\n        }\n    },\n    _convertCode: function(node)\n    {\n        if (this._isNonEditable(node)) return;\n\n        var $figure = this._wrapFigure(node);\n        this._setFigure($figure, 'code');\n    },\n    _convertWidget: function(node)\n    {\n        if (this._isNonEditable(node)) return;\n\n        var $node = $R.dom(node);\n        $node.addClass('redactor-component');\n        $node.attr('data-redactor-type', 'widget');\n        $node.attr('data-widget-code', encodeURI(node.innerHTML.trim()));\n    },\n\n    // unconvert\n    _unconvertForm: function(node)\n    {\n        this.utils.replaceToTag(node, 'form');\n    },\n    _unconvertTable: function(node)\n    {\n        var $node = $R.dom(node);\n        $node.unwrap();\n    },\n    _unconvertWidget: function(node)\n    {\n        var $node = $R.dom(node);\n        $node.html(decodeURI($node.attr('data-widget-code')));\n        $node.removeAttr('data-widget-code');\n    },\n    _unconvertImages: function(node)\n    {\n        var $node = $R.dom(node);\n        $node.removeClass('redactor-component');\n\n        var isList = ($node.closest('li').length !== 0);\n        var isTable = ($node.closest('table').length !== 0);\n        var hasFigcaption = ($node.find('figcaption').length !== 0);\n\n        var style = $node.attr('style');\n        var hasStyle = !(style === null || style === '');\n        var hasClass = ($node.attr('class') !== '');\n\n        if (isList || (isTable && !hasFigcaption && !hasStyle && !hasClass))\n        {\n            $node.unwrap();\n        }\n    },\n    _removeTypes: function(node)\n    {\n        var $node = $R.dom(node);\n        var type = $node.attr('data-redactor-type');\n        var removed = ['image', 'widget', 'line', 'video', 'code', 'form', 'table'];\n        if (type && removed.indexOf(type) !== -1)\n        {\n            $node.removeAttr('data-redactor-type');\n        }\n\n        // keep figure\n        if ($node.hasClass('redactor-keep-figure'))\n        {\n            $node.removeClass('redactor-keep-figure');\n        }\n        // unwrap figure\n        else if (this.opts.imageFigure === false)\n        {\n            var hasFigcaption = ($node.find('figcaption').length !== 0);\n            if (!hasFigcaption)\n            {\n                $node.unwrap();\n            }\n        }\n    },\n\n    // wrap\n    _wrapFigure: function(node)\n    {\n        var $node = $R.dom(node);\n        var $figure = $node.closest('figure');\n\n        return ($figure.length === 0) ? $node.wrap('<figure>') : $figure;\n    },\n\n    // set\n    _setFigure: function($figure, type)\n    {\n        $figure.addClass('redactor-component');\n        $figure.attr('data-redactor-type', type);\n    },\n    _setContenteditableCode: function(node)\n    {\n        if (this._isNonEditable(node)) return;\n\n        var $node = $R.dom(node);\n        var $code = $node.children('code').first();\n\n        var $el = ($code.length !== 0) ? $code : $node;\n        $el.attr('contenteditable', true).attr('tabindex', '-1');\n    },\n\n    // utils\n    _acceptExtraRules: function($wrapper, rules)\n    {\n        for (var key in rules)\n        {\n            if (typeof rules[key] === 'function')\n            {\n                rules[key]($wrapper);\n            }\n        }\n    },\n    _isNonEditable: function(node)\n    {\n        return ($R.dom(node).closest('.non-editable').length !== 0);\n    }\n});\n$R.add('class', 'cleaner.paragraphize', {\n    init: function(app)\n    {\n        this.app = app;\n        this.opts = app.opts;\n        this.utils = app.utils;\n        this.element = app.element;\n\n        // local\n        this.stored = [];\n        this.remStart = '#####replace';\n        this.remEnd = '#####';\n        this.paragraphizeTags = ['table', 'div', 'pre', 'form', 'ul', 'ol', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'dl', 'blockquote', 'figcaption',\n                'address', 'section', 'header', 'footer', 'aside', 'article', 'object', 'style', 'script', 'iframe', 'select', 'input', 'textarea',\n                'button', 'option', 'map', 'area', 'math', 'hr', 'fieldset', 'legend', 'hgroup', 'nav', 'figure', 'details', 'menu', 'summary', 'p'];\n    },\n    // public\n    convert: function(html)\n    {\n        var value = this._isConverted(html);\n\n        return (value === true) ? this._convert(html) : value;\n    },\n\n    // private\n    _convert: function(html)\n    {\n        // build markup tag\n        var markupTag = (this.opts.breakline) ? 'sdivtag' : this.opts.markup;\n\n        // store tags\n        html = this._storeTags(html);\n\n        // remove new lines\n        html = html.trim();\n\n        if (this.opts.breakline)\n        {\n            html = html.replace(new RegExp('\\\\n#####', 'gi'), 'xnonbreakmarkerz#####');\n            html = html.replace(new RegExp('#####\\\\n\\\\n', 'gi'), \"#####\\nxnonbreakmarkerz\");\n            html = html.replace(new RegExp('#####\\\\n', 'gi'), \"#####xnonbreakmarkerz\");\n            html = html.replace(/<br\\s?\\/?>\\n/gi, \"<br>\");\n            html = html.replace(/\\n/g, \"<br>\");\n            html = html.replace(/xnonbreakmarkerz/gi, \"\\n\");\n        }\n        else\n        {\n            html = html.replace(/[\\n]+/g, \"\\n\");\n        }\n\n        html = this._trimEmptyLines(html);\n\n        // paragraph and break markers\n        html = (this.opts.breakline) ? html : html.replace(/<br\\s?\\/?>\\n/gi, \"xbreakmarkerz\\n\");\n        html = html.replace(/(?:\\r\\n|\\r|\\n)/g, \"xparagraphmarkerz\");\n\n        // replace markers\n        html = html.replace(/xparagraphmarkerz/gi, \"</\" + markupTag + \">\\n<\" + markupTag + \">\");\n        html = (this.opts.breakline) ? html : html.replace(/xbreakmarkerz/gi, \"<br>\");\n\n        // wrap all\n        html = '<' + markupTag + '>' + html + '</' + markupTag + '>';\n\n        // clean\n        html = html.replace(new RegExp('<' + markupTag + '>#####', 'gi'), '#####');\n        html = html.replace(new RegExp('#####</' + markupTag + '>', 'gi'), '#####');\n\n        // restore tags\n        html = this._restoreTags(html);\n\n        // clean restored\n        html = (this.opts.breakline) ? html : html.replace(new RegExp('<' + markupTag + '><br\\\\s?/?></' + markupTag + '>', 'gi'), '<' + markupTag + '></' + markupTag + '>');\n        html = html.replace(new RegExp('<sdivtag>', 'gi'), '<div data-redactor-tag=\"br\">');\n        html = html.replace(new RegExp('sdivtag', 'gi'), 'div');\n\n        return html;\n    },\n    _storeTags: function(html)\n    {\n        var self = this;\n        var $wrapper = this.utils.buildWrapper(html);\n\n        if (this.opts.breakline)\n        {\n            $wrapper.find('p').each(function(node)\n            {\n                var $node = $R.dom(node);\n                var isUnwrap = ($node.closest('figure[data-redactor-type=widget],figure[data-redactor-type=form],.non-editable').length === 0);\n\n                if (isUnwrap)\n                {\n                    $node.append('<br><br>');\n                    $node.unwrap();\n                }\n            });\n        }\n\n        $wrapper.find(this.paragraphizeTags.join(', ')).each(function(node, i)\n        {\n            var replacement = document.createTextNode(\"\\n\" + self.remStart + i + self.remEnd + \"\\n\");\n            self.stored.push(node.outerHTML);\n            node.parentNode.replaceChild(replacement, node);\n        });\n\n        return this.utils.getWrapperHtml($wrapper);\n    },\n    _restoreTags: function(html)\n    {\n        for (var i = 0; i < this.stored.length; i++)\n        {\n            this.stored[i] = this.stored[i].replace(/\\$/g, '&#36;');\n            html = html.replace(this.remStart + i + this.remEnd, this.stored[i]);\n        }\n\n        return html;\n    },\n    _trimEmptyLines: function(html)\n    {\n        var str = '';\n        var arr = html.split(\"\\n\");\n        for (var i = 0; i < arr.length; i++)\n        {\n            if (arr[i].trim() !== '')\n            {\n                str += arr[i] + \"\\n\";\n            }\n        }\n\n        return str.replace(/\\n$/, '');\n    },\n    _isConverted: function(html)\n    {\n        if (this._isDisabled(html)) return html;\n        else if (this._isEmptyHtml(html)) return this.opts.emptyHtml;\n        else return true;\n    },\n    _isDisabled: function()\n    {\n        return (this.opts.paragraphize === false || this.element.isType('inline'));\n    },\n    _isEmptyHtml: function(html)\n    {\n        return (html === '' || html === '<p></p>' || html === '<div></div>');\n    }\n});\n$R.add('service', 'detector', {\n    init: function(app)\n    {\n        this.app = app;\n\n        // local\n        this.userAgent = navigator.userAgent.toLowerCase();\n    },\n\tisWebkit: function()\n\t{\n\t\treturn /webkit/.test(this.userAgent);\n\t},\n\tisFirefox: function()\n\t{\n\t\treturn (this.userAgent.indexOf('firefox') > -1);\n\t},\n\tisIe: function(v)\n\t{\n        if (document.documentMode || /Edge/.test(navigator.userAgent)) return 'edge';\n\n\t\tvar ie;\n\t\tie = RegExp('msie' + (!isNaN(v)?('\\\\s'+v):''), 'i').test(navigator.userAgent);\n\t\tif (!ie) ie = !!navigator.userAgent.match(/Trident.*rv[ :]*11\\./);\n\n\t\treturn ie;\n\t},\n\tisMobile: function()\n\t{\n\t\treturn /(iPhone|iPod|Android)/.test(navigator.userAgent);\n\t},\n\tisDesktop: function()\n\t{\n\t\treturn !/(iPhone|iPod|iPad|Android)/.test(navigator.userAgent);\n\t},\n\tisIpad: function()\n\t{\n\t\treturn /iPad/.test(navigator.userAgent);\n\t}\n});\n$R.add('service', 'offset', {\n    init: function(app)\n    {\n        this.app = app;\n    },\n    get: function(el, trimmed)\n    {\n        var offset = { start: 0, end: 0 };\n        var node = this.utils.getNode(el);\n        if (!node) return false;\n\n        var isEditor = this.editor.isEditor(node);\n        var isIn = (isEditor) ? true : this.selection.isIn(node);\n        var range = this.selection.getRange();\n\n        if (!isEditor && !isIn)\n        {\n            offset = false;\n        }\n        else if (this.selection.is() && isIn)\n        {\n            var $startNode = $R.dom(range.startContainer);\n            var fix = ($startNode.hasClass('redactor-component')) ? range.startOffset : 0;\n            var clonedRange = range.cloneRange();\n\n            clonedRange.selectNodeContents(node);\n            clonedRange.setEnd(range.startContainer, range.startOffset);\n\n            var selection = this._getString(range, trimmed);\n\n            offset.start = this._getString(clonedRange, trimmed).length - fix;\n            offset.end = offset.start + selection.length + fix;\n        }\n\n        return offset;\n    },\n    set: function(offset, el)\n    {\n        if (this._setComponentOffset(el)) return;\n\n        this.component.clearActive();\n        var node = this.utils.getNode(el);\n        if (!node) return;\n\n        var size = this.size(node);\n        var charIndex = 0, range = document.createRange();\n\n        offset.end = (offset.end > size) ? size : offset.end;\n\n        range.setStart(node, 0);\n        range.collapse(true);\n\n        var nodeStack = [node], foundStart = false, stop = false;\n        while (!stop && (node = nodeStack.pop()))\n        {\n            if (node.nodeType == 3)\n            {\n                var nextCharIndex = charIndex + node.length;\n\n                if (!foundStart && !this._isFigcaptionNext(node) && offset.start >= charIndex && offset.start <= nextCharIndex)\n                {\n                    range.setStart(node, offset.start - charIndex);\n                    foundStart = true;\n                }\n\n                if (foundStart && offset.end >= charIndex && offset.end <= nextCharIndex)\n                {\n                    range.setEnd(node, offset.end - charIndex);\n                    stop = true;\n                }\n\n                charIndex = nextCharIndex;\n            }\n            else\n            {\n                var i = node.childNodes.length;\n                while (i--)\n                {\n                    nodeStack.push(node.childNodes[i]);\n                }\n            }\n        }\n\n        this.selection.setRange(range);\n    },\n    size: function(el, trimmed)\n    {\n        var node = this.utils.getNode(el);\n        if (node)\n        {\n            var range = document.createRange();\n\n            var clonedRange = range.cloneRange();\n            clonedRange.selectNodeContents(node);\n\n            return this._getString(clonedRange, trimmed).length;\n        }\n\n        return 0;\n    },\n\n    // private\n    _getString: function(obj, trimmed)\n    {\n        var str = obj.toString();\n        str = (this.editor.isEmpty()) ? str.replace(/\\uFEFF/g, '') : str;\n        str = (trimmed) ? str.trim() : str;\n\n        return str;\n    },\n    _setComponentOffset: function(el)\n    {\n        return (this.component.isNonEditable(el)) ? this.component.setActive(el) : false;\n    },\n    _isFigcaptionNext: function(node)\n    {\n        var next = node.nextSibling;\n        return (node.nodeValue.trim() === '' && next && next.tagName === 'FIGCAPTION');\n    }\n});\n$R.add('service', 'inspector', {\n    init: function(app)\n    {\n        this.app = app;\n    },\n    // parse\n    parse: function(el)\n    {\n        return $R.create('inspector.parser', this.app, this, el);\n    },\n\n    // text detection\n    isText: function(el)\n    {\n        if (typeof el === 'string' && !/^\\s*<(\\w+|!)[^>]*>/.test(el))\n        {\n            return true;\n        }\n\n        var node = $R.dom(el).get();\n        return (node && node.nodeType === 3); //  && !this.selection.getBlock(el)\n    },\n\n    // tag detection\n    isInlineTag: function(tag, extend)\n    {\n        var tags = this._extendTags(this.opts.inlineTags, extend);\n\n        return (this._isTag(tag) && tags.indexOf(tag.toLowerCase()) !== -1);\n    },\n    isBlockTag: function(tag, extend)\n    {\n        var tags = this._extendTags(this.opts.blockTags, extend);\n\n        return (this._isTag(tag) && tags.indexOf(tag.toLowerCase()) !== -1);\n    },\n    isTableCellTag: function(tag)\n    {\n        return (['td', 'th'].indexOf(tag.toLowerCase()) !== -1);\n    },\n    isHeadingTag: function(tag)\n    {\n        return (['h1', 'h2', 'h3', 'h4', 'h5', 'h6'].indexOf(tag.toLowerCase()) !== -1);\n    },\n\n\n    _isTag: function(tag)\n    {\n        return (tag !== undefined && tag);\n    },\n    _extendTags: function(tags, extend)\n    {\n        tags = tags.concat(tags);\n\n        if (extend)\n        {\n            for (var i = 0 ; i < extend.length; i++)\n            {\n                tags.push(extend[i]);\n            }\n        }\n\n        return tags;\n    }\n});\n$R.add('class', 'inspector.parser', {\n    init: function(app, inspector, el)\n    {\n        this.app = app;\n        this.uuid = app.uuid;\n        this.opts = app.opts;\n        this.utils = app.utils;\n        this.editor = app.editor;\n        this.selection = app.selection;\n        this.inspector = inspector;\n\n        // local\n        this.el = el;\n        this.$el = $R.dom(this.el);\n        this.node = this.$el.get();\n        this.$component = this.$el.closest('.redactor-component', '.redactor-in');\n    },\n    // is\n    isEditor: function()\n    {\n        return (this.node === this.editor.getElement().get());\n    },\n    isInEditor: function()\n    {\n        return (this.$el.parents('.redactor-in-' + this.uuid).length !== 0);\n    },\n    isComponent: function()\n    {\n        return (this.$component.length !== 0);\n    },\n    isComponentType: function(type)\n    {\n        return (this.getComponentType() === type);\n    },\n    isComponentActive: function()\n    {\n        return (this.isComponent() && this.$component.hasClass('redactor-component-active'));\n    },\n    isComponentEditable: function()\n    {\n        var types = ['code', 'table'];\n        var type = this.getComponentType();\n\n        return (this.isComponent() && types.indexOf(type) !== -1);\n    },\n    isFigcaption: function()\n    {\n        return this.getFigcaption();\n    },\n    isPre: function()\n    {\n        return this.getPre();\n    },\n    isCode: function()\n    {\n        var $code = this.$el.closest('code');\n        var $parent = $code.parent('pre');\n\n        return ($code.length !== 0 && $parent.length === 0);\n    },\n    isList: function()\n    {\n        return this.getList();\n    },\n    isFirstListItem: function()\n    {\n        return this._getLastOrFirstListItem('first');\n    },\n    isLastListItem: function()\n    {\n        return this._getLastOrFirstListItem('last');\n    },\n    isFirstTableCell: function()\n    {\n        return this._getLastOrFirstTableCell('first');\n    },\n    isLastTableCell: function()\n    {\n        return this._getLastOrFirstTableCell('last');\n    },\n    isTable: function()\n    {\n        return (this.isComponentType('table') || this.getTable());\n    },\n    isHeading: function()\n    {\n        return this.getHeading();\n    },\n    isBlockquote: function()\n    {\n        return this.getBlockquote();\n    },\n    isDl: function()\n    {\n        return this.getDl();\n    },\n    isParagraph: function()\n    {\n        return this.getParagraph();\n    },\n    isLink: function()\n    {\n        return this.getLink();\n    },\n    isFile: function()\n    {\n        return this.getFile();\n    },\n    isText: function()\n    {\n        return this.inspector.isText(this.el);\n    },\n    isInline: function()\n    {\n        var tags = this.opts.inlineTags;\n\n        return (this.isElement()) ? (tags.indexOf(this.node.tagName.toLowerCase()) !== -1) : false;\n    },\n    isBlock: function()\n    {\n        var tags = this.opts.blockTags;\n\n        return (this.isElement()) ? (tags.indexOf(this.node.tagName.toLowerCase()) !== -1) : false;\n    },\n    isElement: function()\n    {\n        return (this.node && this.node.nodeType && this.node.nodeType !== 3);\n    },\n\n    // has\n    hasParent: function(tags)\n    {\n        return (this.$el.closest(tags.join(',')).length !== 0);\n    },\n\n    // get\n    getNode: function()\n    {\n        return this.node;\n    },\n    getTag: function()\n    {\n        return (this.isElement()) ? this.node.tagName.toLowerCase() : false;\n    },\n    getComponent: function()\n    {\n        return (this.isComponent()) ? this.$component.get() : false;\n    },\n    getComponentType: function()\n    {\n        return (this.isComponent()) ? this.$component.attr('data-redactor-type') : false;\n    },\n    getFirstNode: function()\n    {\n        return this.utils.getFirstNode(this.node);\n    },\n    getLastNode: function()\n    {\n        return this.utils.getLastNode(this.node);\n    },\n    getFirstElement: function()\n    {\n        return this.utils.getFirstElement(this.node);\n    },\n    getLastElement: function()\n    {\n        return this.utils.getLastElement(this.node);\n    },\n    getFigcaption: function()\n    {\n        return this._getClosestNode('figcaption');\n    },\n    getPre: function()\n    {\n        return this._getClosestNode('pre');\n    },\n    getCode: function()\n    {\n        return this._getClosestNode('code');\n    },\n    getList: function()\n    {\n        return this._getClosestNode('ul, ol');\n    },\n    getParentList: function()\n    {\n        return this._getClosestUpNode('ul, ol');\n    },\n    getListItem: function()\n    {\n        return this._getClosestNode('li');\n    },\n    getTable: function()\n    {\n        if (this.getComponentType('table'))\n        {\n            return this.$component.find('table').get();\n        }\n        else\n        {\n            return this._getClosestNode('table');\n        }\n    },\n    getTableCell: function()\n    {\n        var $td = this.$el.closest('td, th');\n\n        return ($td.length !== 0) ? $td.get() : false;\n    },\n    getComponentCodeElement: function()\n    {\n        return (this.isComponentType('code')) ? this.$component.find('pre code, pre').last().get() : false;\n    },\n    getImageElement: function()\n    {\n        return (this.isComponentType('image')) ? this.$component.find('img').get() : false;\n    },\n    getParagraph: function()\n    {\n        return this._getClosestNode('p');\n    },\n    getHeading: function()\n    {\n        return this._getClosestNode('h1, h2, h3, h4, h5, h6');\n    },\n    getDl: function()\n    {\n        return this._getClosestNode('dl');\n    },\n    getBlockquote: function()\n    {\n        return this._getClosestNode('blockquote');\n    },\n    getLink: function()\n    {\n        var isComponent = (this.isComponent() && !this.isFigcaption());\n        var isTable = this.isComponentType('table');\n\n        if (isTable || !isComponent)\n        {\n            var $el = this._getClosestElement('a');\n\n            return ($el && !$el.attr('data-file')) ? $el.get() : false;\n        }\n\n        return false;\n    },\n    getFile: function()\n    {\n        var isComponent = this.isComponent();\n        var isTable = this.isComponentType('table');\n\n        if (isTable || !isComponent)\n        {\n            var $el = this._getClosestElement('a');\n\n            return ($el && $el.attr('data-file')) ? $el.get() : false;\n        }\n\n        return false;\n    },\n\n    // find\n    findFirstNode: function(selector)\n    {\n        return this.$el.find(selector).first().get();\n    },\n    findLastNode: function(selector)\n    {\n        return this.$el.find(selector).last().get();\n    },\n\n    // private\n    _getLastOrFirstListItem: function(type)\n    {\n        var list = this.getList();\n        var tag = this.getTag();\n        if (list && tag === 'li')\n        {\n            var item = $R.dom(list).find('li')[type]().get();\n            if (item && this.node === item)\n            {\n                return true;\n            }\n        }\n\n        return false;\n    },\n    _getLastOrFirstTableCell: function(type)\n    {\n        var table = this.getTable();\n        var tag = this.getTag();\n        if (table && (tag === 'td' || tag === 'th'))\n        {\n            var item = $R.dom(table).find('td, th')[type]().get();\n            if (item && this.node === item)\n            {\n                return true;\n            }\n        }\n\n        return false;\n    },\n    _getClosestUpNode: function(selector)\n    {\n        var $el = this.$el.parents(selector, '.redactor-in').last();\n\n        return ($el.length !== 0) ? $el.get() : false;\n    },\n    _getClosestNode: function(selector)\n    {\n        var $el = this.$el.closest(selector, '.redactor-in');\n\n        return ($el.length !== 0) ? $el.get() : false;\n    },\n    _getClosestElement: function(selector)\n    {\n        var $el = this.$el.closest(selector, '.redactor-in');\n\n        return ($el.length !== 0) ? $el : false;\n    }\n});\n$R.add('service', 'marker', {\n    init: function(app)\n    {\n        this.app = app;\n    },\n    build: function(pos, html)\n    {\n        var marker = document.createElement('span');\n\n        marker.id = 'selection-marker-' + this._getPos(pos);\n        marker.className = 'redactor-selection-marker';\n        marker.innerHTML = this.opts.markerChar;\n\n        return (html) ? marker.outerHTML : marker;\n    },\n    buildHtml: function(pos)\n    {\n        return this.build(pos, true);\n    },\n    insert: function(side)\n    {\n        this.remove();\n\n        var atStart = (side !== 'both' && (side === 'start' || this.selection.isCollapsed()));\n\n        if (!this.selection.is()) this.editor.focus();\n\n        var range = this.selection.getRange();\n        if (range)\n        {\n            var start = this.build('start');\n            var end = this.build('end');\n\n            var cloned = range.cloneRange();\n\n            if (!atStart)\n            {\n                cloned.collapse(false);\n                cloned.insertNode(end);\n            }\n\n            cloned.setStart(range.startContainer, range.startOffset);\n            cloned.collapse(true);\n            cloned.insertNode(start);\n\n            range.setStartAfter(start);\n\n            if (!atStart)\n            {\n                range.setEndBefore(end);\n            }\n\n            this.selection.setRange(range);\n\n            return start;\n        }\n    },\n    find: function(pos, $context)\n    {\n        var $editor = this.editor.getElement();\n        var $marker = ($context || $editor).find('span#selection-marker-' + this._getPos(pos));\n\n        return ($marker.length !== 0) ? $marker.get() : false;\n    },\n    restore: function()\n    {\n        var start = this.find('start');\n        var end = this.find('end');\n\n        var range = this.selection.getRange();\n        if (!range || !this.selection.is())\n        {\n            this.editor.focus();\n            range = document.createRange();\n        }\n\n        if (start)\n        {\n            var prev = (end) ? end.previousSibling : false;\n            var next = start.nextSibling;\n            next = (next && next.nodeType === 3 && next.textContent.replace(/[\\n\\t]/g, '') === '') ? false : next;\n\n            if (!end)\n            {\n                if (next)\n                {\n                    range.selectNodeContents(next);\n                    range.collapse(true);\n                }\n                else\n                {\n                    this._restoreInject(range, start);\n                }\n            }\n            else if (next && next.id === 'selection-marker-end')\n            {\n                this._restoreInject(range, start);\n            }\n            else\n            {\n                if (prev && next)\n                {\n                    range.selectNodeContents(prev);\n                    range.collapse(false);\n                    range.setStart(next, 0);\n                }\n                else if (prev && !next)\n                {\n                    range.selectNodeContents(prev);\n                    range.collapse(false);\n                    range.setStartAfter(start);\n                }\n                else\n                {\n                    range.setStartAfter(start);\n                    range.setEndBefore(end);\n                }\n            }\n\n            this.selection.setRange(range);\n\n            if (start) start.parentNode.removeChild(start);\n            if (end) end.parentNode.removeChild(end);\n        }\n    },\n    remove: function()\n    {\n        var start = this.find('start');\n        var end = this.find('end');\n\n        if (start) start.parentNode.removeChild(start);\n        if (end) end.parentNode.removeChild(end);\n    },\n\n    // private\n    _getPos: function(pos)\n    {\n        return (pos === undefined) ? 'start' : pos;\n    },\n    _restoreInject: function(range, start)\n    {\n        var textNode = this.utils.createInvisibleChar();\n        $R.dom(start).after(textNode);\n\n        range.selectNodeContents(textNode);\n        range.collapse(false);\n    }\n});\n$R.add('service', 'component', {\n    init: function(app)\n    {\n        this.app = app;\n\n        // local\n        this.activeClass = 'redactor-component-active';\n    },\n    create: function(type, el)\n    {\n        return $R.create(type + '.component', this.app, el);\n    },\n    build: function(el)\n    {\n        var $el = $R.dom(el);\n        var component;\n        var type = $el.attr('data-redactor-type');\n        if (type)\n        {\n            component = this.create(type, el);\n        }\n\n        return (component) ? component : el;\n    },\n    remove: function(el, caret)\n    {\n        var $component = $R.dom(el).closest('.redactor-component');\n        var type = $component.attr('data-redactor-type');\n        var current = $component.parent();\n        var data = this.inspector.parse(current);\n        var prev = this.utils.findSiblings($component, 'prev');\n        var next = this.utils.findSiblings($component, 'next');\n        var stop = this.app.broadcast(type + '.delete', $component);\n        if (stop !== false)\n        {\n            $component.remove();\n\n            // callback\n            this.app.broadcast(type + '.deleted', $component);\n            this.app.broadcast('contextbar.close');\n            this.app.broadcast('imageresizer.stop');\n\n            if (caret !== false)\n            {\n                var cell = data.getTableCell();\n                if (cell && this.utils.isEmptyHtml(cell.innerHTML))\n                {\n                    this.caret.setStart(cell);\n                }\n                else if (next) this.caret.setStart(next);\n                else if (prev) this.caret.setEnd(prev);\n                else\n                {\n                    this.editor.startFocus();\n                }\n            }\n\n            // is empty\n            if (this.editor.isEmpty())\n            {\n                this.editor.setEmpty();\n                this.editor.startFocus();\n                this.app.broadcast('empty');\n            }\n        }\n    },\n    isNonEditable: function(el)\n    {\n        var data = this.inspector.parse(el);\n        return (data.isComponent() && !data.isComponentEditable());\n    },\n    isActive: function(el)\n    {\n        var $component;\n        if (el)\n        {\n            var data = this.inspector.parse(el);\n            $component = $R.dom(data.getComponent());\n\n            return $component.hasClass(this.activeClass);\n        }\n        else\n        {\n            $component = this._find();\n\n            return ($component.length !== 0);\n        }\n    },\n    getActive: function(dom)\n    {\n        var $component = this._find();\n\n        return ($component.length !== 0) ? ((dom) ? $component : $component.get()) : false;\n    },\n    setActive: function(el)\n    {\n        this.clearActive();\n        this.editor.focus();\n\n        var data = this.inspector.parse(el);\n        var component = data.getComponent();\n        var $component = $R.dom(component);\n\n        if (!data.isFigcaption())\n        {\n            var $caret = $component.find('.redactor-component-caret');\n            if ($caret.length === 0)\n            {\n                $caret = this._buildCaret();\n                $component.prepend($caret);\n            }\n\n            this.caret.setAtStart($caret.get());\n        }\n\n        $component.addClass(this.activeClass);\n    },\n    clearActive: function()\n    {\n        var $component = this._find();\n\n        $component.removeClass(this.activeClass);\n        $component.find('.redactor-component-caret').remove();\n\n        this.app.broadcast('imageresizer.stop');\n    },\n    setOnEvent: function(e, contextmenu)\n    {\n        this.clearActive();\n\n        var data = this.inspector.parse(e.target);\n        if (data.isFigcaption() || data.isComponentEditable())\n        {\n            return;\n        }\n\n        // component\n        if (data.isComponent())\n        {\n            this.setActive(e.target);\n            if (contextmenu !== true) e.preventDefault();\n        }\n    },\n    executeScripts: function()\n    {\n        var $editor = this.editor.getElement();\n        var scripts = $editor.find('[data-redactor-type]').find(\"script\").getAll();\n\n        for (var i = 0; i < scripts.length; i++)\n        {\n            if (scripts[i].src !== '')\n            {\n                var src = scripts[i].src;\n                this.$doc.find('head script[src=\"' + src + '\"]').remove();\n\n                var $script = $R.dom('<script>');\n                $script.attr('src', src);\n                $script.attr('async defer');\n\n                if (src.search('instagram') !== -1) $script.attr('onload', 'window.instgrm.Embeds.process()');\n\n                var head = document.getElementsByTagName('head')[0];\n                if (head) head.appendChild($script.get());\n            }\n            else\n            {\n                eval(scripts[i].innerHTML);\n            }\n        }\n    },\n\n    // private\n    _find: function()\n    {\n        return this.editor.getElement().find('.' + this.activeClass);\n    },\n    _buildCaret: function()\n    {\n        var $caret = $R.dom('<span>');\n        $caret.addClass('redactor-component-caret');\n        $caret.attr('contenteditable', true);\n\n        return $caret;\n    }\n});\n$R.add('service', 'insertion', {\n    init: function(app)\n    {\n        this.app = app;\n    },\n    set: function(html, clean, focus)\n    {\n        html = (clean !== false) ? this.cleaner.input(html) : html;\n        html = (clean !== false) ? this.cleaner.paragraphize(html) : html;\n\n        // set html\n        var $editor = this.editor.getElement();\n        $editor.html(html);\n\n        // set focus at the end\n        if (focus !== false) this.editor.endFocus();\n\n        return html;\n    },\n    insertNode: function(node, caret)\n    {\n        this.editor.focus();\n        var fragment = (this.utils.isFragment(node)) ? node : this.utils.createFragment(node);\n\n        this._collapseSelection();\n        this._insertFragment(fragment);\n        this._setCaret(caret, fragment);\n\n        return this._sendNodes(fragment.nodes);\n    },\n    insertBreakLine: function()\n    {\n        return this.insertNode(document.createElement('br'), 'after');\n    },\n    insertNewline: function()\n    {\n        return this.insertNode(document.createTextNode('\\n'), 'after');\n    },\n    insertText: function(text)\n    {\n        return this.insertHtml(this.cleaner.getFlatText(text));\n    },\n    insertChar: function(charhtml)\n    {\n        return this.insertNode(charhtml, 'after');\n    },\n    insertRaw: function(html)\n    {\n        return this.insertHtml(html, false);\n    },\n    insertToEnd: function(lastNode, type)\n    {\n        if (!lastNode) return;\n        if (lastNode.nodeType === 3 && lastNode.nodeValue.search(/^\\n/) !== -1)\n        {\n            lastNode = lastNode.previousElementSibling;\n        }\n\n        var $lastNode = $R.dom(lastNode);\n        if ($lastNode.attr('data-redactor-type') === type)\n        {\n            var tag = (this.opts.breakline) ? '<br>' : '<p>';\n            var $newNode = $R.dom(tag);\n\n            $lastNode.after($newNode);\n            this.caret.setStart($newNode);\n        }\n    },\n    insertPoint: function(e)\n    {\n        var range, data;\n        var marker = this.marker.build('start');\n        var markerInserted = false;\n        var x = e.clientX, y = e.clientY;\n\n        if (document.caretPositionFromPoint)\n        {\n            var pos = document.caretPositionFromPoint(x, y);\n            var sel = document.getSelection();\n\n            data = this.inspector.parse(pos.offsetNode);\n            if (data.isInEditor())\n            {\n                range = sel.getRangeAt(0);\n                range.setStart(pos.offsetNode, pos.offset);\n                range.collapse(true);\n                range.insertNode(marker);\n                markerInserted = true;\n            }\n        }\n        else if (document.caretRangeFromPoint)\n        {\n            range = document.caretRangeFromPoint(x, y);\n\n            data = this.inspector.parse(range.startContainer);\n            if (data.isInEditor())\n            {\n                range.insertNode(marker);\n                markerInserted = true;\n            }\n        }\n\n        return markerInserted;\n    },\n    insertToPoint: function(e, html, point)\n    {\n        var pointInserted = (point === true) ? true : this.insertPoint(e);\n        if (!pointInserted)\n        {\n            var lastNode = this.editor.getLastNode();\n            $R.dom(lastNode).after(this.marker.build('start'));\n        }\n\n        this.component.clearActive();\n        this.selection.restoreMarkers();\n\n        return this.insertHtml(html);\n    },\n    insertToOffset: function(start, html)\n    {\n        this.offset.set({ start: start, end: start });\n\n        return this.insertHtml(html);\n    },\n    insertHtml: function(html, clean)\n    {\n        if (!this.opts.input) return;\n\n        // parse\n        var parsedInput = this.utils.parseHtml(html);\n\n        // all selection\n        if (this.selection.isAll())\n        {\n            return this._insertToAllSelected(parsedInput);\n        }\n\n        // there is no selection\n        if (!this.selection.is())\n        {\n            var $el = $R.dom('<p>');\n            var $editor = this.editor.getElement();\n\n            $editor.append($el);\n            this.caret.setStart($el);\n        }\n\n        // environment\n        var isCollapsed = this.selection.isCollapsed();\n        var isText = this.selection.isText();\n        var current = this.selection.getCurrent();\n        var dataCurrent = this.inspector.parse(current);\n\n        // collapse air\n        this._collapseSelection();\n\n        // clean\n        parsedInput = this._getCleanedInput(parsedInput, dataCurrent, clean);\n\n        // input is figure or component span\n        var isFigure = this._isFigure(parsedInput.html);\n        var isComponentSpan = this._isComponentSpan(parsedInput.html);\n        var isInsertedText = this.inspector.isText(parsedInput.html);\n        var fragment, except;\n\n        // empty editor\n        if (this.editor.isEmpty())\n        {\n            return this._insertToEmptyEditor(parsedInput.html);\n        }\n        // to component\n        else if (dataCurrent.isComponent() && !dataCurrent.isComponentEditable())\n        {\n            return this._insertToWidget(current, dataCurrent, parsedInput.html);\n        }\n        // component span\n        else if (isComponentSpan)\n        {\n            return this.insertNode(parsedInput.nodes, 'end');\n        }\n        // inserting figure & split node\n        else if (isFigure && !isText && !dataCurrent.isList())\n        {\n            if (dataCurrent.isInline())\n            {\n                return this._insertToInline(current, parsedInput);\n            }\n\n            fragment = this.utils.createFragment(parsedInput.html);\n\n            this.utils.splitNode(current, fragment);\n            this.caret.setEnd(fragment.last);\n\n            return this._sendNodes(fragment.nodes);\n        }\n        // to code\n        else if (dataCurrent.isCode())\n        {\n            return this._insertToCode(parsedInput, current, clean);\n        }\n        // to pre\n        else if (dataCurrent.isPre())\n        {\n            return this._insertToPre(parsedInput, clean);\n        }\n        // to h1-h6 & figcaption\n        else if (dataCurrent.isHeading() || dataCurrent.isFigcaption())\n        {\n            parsedInput.html = (clean !== false) ? this.cleaner.removeTagsExcept(parsedInput.html, ['a']) : parsedInput.html;\n            parsedInput.html = (clean !== false) ? this.cleaner.replaceNbspToSpaces(parsedInput.html) : parsedInput.html;\n\n            fragment = this.utils.createFragment(parsedInput.html);\n\n            return this.insertNode(fragment, 'end');\n        }\n        // text inserting\n        else if (isInsertedText)\n        {\n            if (!isText && this.opts.markup !== 'br' && this._hasBlocksAndImages(parsedInput.nodes))\n            {\n                parsedInput.html = (clean !== false) ? this.cleaner.paragraphize(parsedInput.html) : parsedInput.html;\n\n                fragment = this.utils.createFragment(parsedInput.html);\n\n                this.utils.splitNode(current, fragment);\n                this.caret.setEnd(fragment.last);\n                return this._sendNodes(fragment.nodes);\n            }\n\n            parsedInput.html = (clean !== false) ? parsedInput.html.replace(/\\n/g, '<br>') : parsedInput.html;\n\n            fragment = this.utils.createFragment(parsedInput.html);\n\n            return this.insertNode(fragment.nodes, 'end');\n        }\n        // uncollapsed\n        else if (!isCollapsed && !isFigure)\n        {\n            parsedInput.html = (clean !== false) ? this.cleaner.paragraphize(parsedInput.html) : parsedInput.html;\n\n            fragment = this.utils.createFragment(parsedInput.html);\n\n            return this.insertNode(fragment, 'end');\n        }\n        // to inline tag\n        else if (dataCurrent.isInline() && !this._isPlainHtml(parsedInput.html))\n        {\n            return this._insertToInline(current, parsedInput);\n        }\n        // to blockquote or dt, dd\n        else if (dataCurrent.isBlockquote() || dataCurrent.isDl())\n        {\n            except = this.opts.inlineTags;\n            except.concat(['br']);\n\n            parsedInput.html = (clean !== false) ? this.cleaner.replaceBlocksToBr(parsedInput.html) : parsedInput.html;\n            parsedInput.html = (clean !== false) ? this.cleaner.removeTagsExcept(parsedInput.html, except) : parsedInput.html;\n\n            fragment = this.utils.createFragment(parsedInput.html);\n\n            return this.insertNode(fragment, 'end');\n        }\n        // to p\n        else if (dataCurrent.isParagraph())\n        {\n            if (this._isPlainHtml(parsedInput.html))\n            {\n                return this.insertNode(parsedInput.nodes, 'end');\n            }\n\n            parsedInput.html = (clean !== false) ? this.cleaner.paragraphize(parsedInput.html) : parsedInput.html;\n\n            fragment = this.utils.createFragment(parsedInput.html);\n\n            this.utils.splitNode(current, fragment);\n            this.caret.setEnd(fragment.last);\n\n            return this._sendNodes(fragment.nodes);\n        }\n        // to li\n        else if (dataCurrent.isList())\n        {\n            except = this.opts.inlineTags;\n            except = except.concat(['br', 'li', 'ul', 'ol', 'img']);\n\n            parsedInput.html = (clean !== false) ? this.cleaner.replaceBlocksToBr(parsedInput.html) : parsedInput.html;\n            parsedInput.html = (clean !== false) ? this.cleaner.removeTagsExcept(parsedInput.html, except) : parsedInput.html;\n            parsedInput.html = (clean !== false) ? this.cleaner.removeBrAtEnd(parsedInput.html) : parsedInput.html;\n\n            fragment = this.utils.createFragment(parsedInput.html);\n            parsedInput.nodes = fragment.nodes;\n\n            if (this._containsTags(parsedInput.html, ['ul', 'ol', 'li']))\n            {\n                var element = this.selection.getElement(current);\n                if (element && element.tagName === 'LI' && this.caret.isStart(element))\n                {\n                    parsedInput.nodes = $R.dom(fragment.nodes).unwrap('ul, ol').getAll();\n                    $R.dom(element).before(parsedInput.nodes);\n\n                    var lastNode = parsedInput.nodes[parsedInput.nodes.length-1];\n                    this.caret.setEnd(lastNode);\n\n                    return this._sendNodes(parsedInput.nodes);\n                }\n                else if (this._isPlainHtml(parsedInput.html))\n                {\n                    return this.insertNode(fragment, 'end');\n                }\n                else\n                {\n                    fragment = this._buildList(parsedInput, element, fragment);\n\n                    this.utils.splitNode(current, fragment, true);\n                    this.caret.setEnd(fragment.last);\n\n                    return this._sendNodes(fragment.nodes);\n                }\n            }\n        }\n\n        // other cases\n        return this.insertNode(parsedInput.nodes, 'end');\n    },\n\n    // private\n    _insertToAllSelected: function(parsedInput)\n    {\n        var insertedHtml = this.set(parsedInput.html);\n        var dataInserted = this.utils.parseHtml(insertedHtml);\n\n        return this._sendNodes(dataInserted.nodes);\n    },\n    _insertToEmptyEditor: function(html)\n    {\n        html = this.cleaner.paragraphize(html);\n\n        var fragment = this.utils.createFragment(html);\n        var $editor = this.editor.getElement();\n\n        $editor.html('');\n        $editor.append(fragment.frag);\n\n        this.caret.setEnd(fragment.last);\n\n        return this._sendNodes(fragment.nodes);\n    },\n    _insertToInline: function(current, parsedInput)\n    {\n        var fragment = this.utils.createFragment(parsedInput.html);\n        this.utils.splitNode(current, fragment, false, true);\n        this.caret.setEnd(fragment.last);\n\n        return this._sendNodes(fragment.nodes);\n    },\n    _insertToCode: function(parsedInput, current, clean)\n    {\n        parsedInput.html = (clean !== false) ? this.cleaner.encodeHtml(parsedInput.html) : parsedInput.html;\n        parsedInput.html = (clean !== false) ? this.cleaner.removeNl(parsedInput.html) : parsedInput.html;\n\n        var fragment = this.utils.createFragment(parsedInput.html);\n        var nodes = this.insertNode(fragment, 'end');\n\n        this.utils.normalizeTextNodes(current);\n\n        return nodes;\n    },\n    _insertToPre: function(parsedInput, clean)\n    {\n        parsedInput.html = (clean !== false) ? this.cleaner.encodeHtml(parsedInput.html) : parsedInput.html;\n\n        var fragment = this.utils.createFragment(parsedInput.html);\n\n        return this.insertNode(fragment, 'end');\n    },\n    _insertToWidget: function(current, dataCurrent, html)\n    {\n        html = (this._isComponentSpan(html)) ? html : this.cleaner.paragraphize(html);\n\n        var fragment = this.utils.createFragment(html);\n        var component = dataCurrent.getComponent();\n        var $component = $R.dom(component);\n\n        $component.after(fragment.frag);\n        $component.remove();\n\n        this.caret.setEnd(fragment.last);\n\n        return this._sendNodes(fragment.nodes);\n    },\n    _insertFragment: function(fragment)\n    {\n        var range = this.selection.getRange();\n        if (range)\n        {\n            if (this.selection.isCollapsed())\n            {\n                var startNode = range.startContainer;\n                if (startNode.nodeType !== 3 && startNode.tagName === 'BR')\n                {\n                    this.caret.setAfter(startNode);\n                    startNode.parentNode.removeChild(startNode);\n                }\n            }\n            else\n            {\n                range.deleteContents();\n            }\n\n            range.insertNode(fragment.frag);\n        }\n    },\n    _sendNodes: function(nodes)\n    {\n        for (var i = 0; i < nodes.length; i++)\n        {\n            var el = nodes[i];\n            var type = (el.nodeType !== 3 && typeof el.getAttribute === 'function') ? el.getAttribute('data-redactor-type') : false;\n            if (type)\n            {\n                this.app.broadcast(type + '.inserted', this.component.build(el));\n            }\n        }\n\n        if (this.detector.isIe())\n        {\n            this.editor.getElement().find('[data-redactor-type=table]').attr('contenteditable', true);\n        }\n\n        // callback\n        this.app.broadcast('inserted', nodes);\n\n        // widget's scripts\n        this.component.executeScripts();\n\n        return nodes;\n    },\n    _setCaret: function(caret, fragment)\n    {\n        var isLastInline = this._isLastInline(fragment);\n\n        if (caret)\n        {\n            caret = (isLastInline && caret === 'end') ? 'after' : caret;\n            this.caret['set' + this.utils.ucfirst(caret)](fragment.last);\n        }\n        else if (caret !== false)\n        {\n            if (isLastInline) this.caret.setAfter(fragment.last);\n        }\n    },\n    _isLastInline: function(fragment)\n    {\n        if (fragment.last)\n        {\n            var data = this.inspector.parse(fragment.last);\n\n            return data.isInline();\n        }\n\n        return false;\n    },\n    _getCleanedInput: function(parsedInput, dataCurrent, clean)\n    {\n        var isPreformatted = (dataCurrent.isCode() || dataCurrent.isPre());\n\n        parsedInput.html = parsedInput.html.replace(/&nbsp;/g, ' ');\n        parsedInput.html = (!isPreformatted && clean !== false) ? this.cleaner.input(parsedInput.html) : parsedInput.html;\n        parsedInput = (!isPreformatted && clean !== false) ? this.utils.parseHtml(parsedInput.html) : parsedInput;\n\n        return parsedInput;\n    },\n    _getContainer: function(nodes)\n    {\n        return $R.dom(this.utils.createTmpContainer(nodes));\n    },\n    _buildList: function(parsedInput, list, fragment)\n    {\n        var nodes = parsedInput.nodes;\n        var first = nodes[0];\n\n        if (first && first.nodeType !== 3 && first.tagName === 'li')\n        {\n            var $parent = $R.dom(list);\n            var parentListTag = $parent.get().tagName.toLowerCase();\n            var $list = $R.dom('<' + parentListTag + ' />');\n            $list.append(fragment.nodes);\n\n            return this.utils.createFragment($list.get().outerHTML);\n        }\n\n        return fragment;\n    },\n    _containsTags: function(html, tags)\n    {\n        return (this._getContainer(html).find(tags.join(',')).length !== 0);\n    },\n    _collapseSelection: function()\n    {\n        //if (this.app.isAirToolbar()) this.selection.collapseToEnd();\n    },\n    _hasFigureOrTable: function(nodes)\n    {\n        return (this._getContainer(nodes).find('figure, table').length !== 0);\n    },\n    _hasBlocks: function(nodes)\n    {\n        return (this._getContainer(nodes).find(this.opts.blockTags.join(',')).length !== 0);\n    },\n    _hasBlocksAndImages: function(nodes)\n    {\n        return (this._getContainer(nodes).find(this.opts.blockTags.join(',') + ',img').length !== 0);\n    },\n    _isPlainHtml: function(html)\n    {\n        return (this._getContainer(html).find(this.opts.blockTags.join(',') + ', img').length === 0);\n    },\n    _isFigure: function(html)\n    {\n        if (this._isHtmlString(html))\n        {\n            return ($R.dom(html).closest('figure').length !== 0);\n        }\n    },\n    _isComponentSpan: function(html)\n    {\n        if (this._isHtmlString(html))\n        {\n            return ($R.dom(html).closest('span.redactor-component').length !== 0);\n        }\n    },\n    _isHtmlString: function(html)\n    {\n        return !(typeof html === 'string' && !/^\\s*<(\\w+|!)[^>]*>/.test(html));\n    }\n});\n$R.add('service', 'block', {\n    mixins: ['formatter'],\n    init: function(app)\n    {\n        this.app = app;\n    },\n    // public\n    format: function(args)\n    {\n        // type of applying styles and attributes\n        this.type = (args.type) ? args.type : 'set'; // add, remove, toggle\n\n        // tag\n        this.tag = (typeof args === 'string') ? args : args.tag;\n        this.tag = this._prepareTag(this.tag);\n        this.tag = this.tag.toLowerCase();\n\n        if (typeof args === 'string') this.args = false;\n        else this.buildArgs(args);\n\n        // format\n        return this._format();\n    },\n    getBlocks: function(tags)\n    {\n        return this.selection.getBlocks({ tags: tags || this._getTags(), first: true });\n    },\n    getElements: function(tags)\n    {\n        var block = this.selection.getBlock();\n        if (!this.selection.isCollapsed() && block && (block.tagName === 'TD' || block.tagName === 'TH'))\n        {\n            return this._wrapInsideTable('div');\n        }\n        else\n        {\n            return $R.dom(this.getBlocks(tags));\n        }\n    },\n    clearFormat: function(tags)\n\t{\n\t\tthis.selection.save();\n\n        var $elements = this.getElements(tags || this._getTags());\n        $elements.each(function(node)\n        {\n            while(node.attributes.length > 0)\n            {\n                node.removeAttribute(node.attributes[0].name);\n            }\n        });\n\n\t\tthis.selection.restore();\n\n        return $elements.getAll();\n\t},\n\n    // private\n    _format: function()\n    {\n        this.selection.save();\n        var blocks = this.getBlocks();\n        var block = this.selection.getBlock();\n        var nodes = [];\n        var data, replacedTag, $wrapper, nextBr;\n\n        // div break format\n        if (blocks.length === 1 && blocks[0].tagName === 'DIV')\n        {\n            data = this._getTextNodesData();\n            if (!data || data.nodes.length === 0)\n            {\n                nodes = this._replaceBlocks(blocks);\n                nodes = this._sendNodes(nodes);\n\n                setTimeout(function() { this.selection.restore(); }.bind(this), 0);\n\n                return nodes;\n            }\n\n            replacedTag = this._getReplacedTag('set');\n            $wrapper = $R.dom('<' + replacedTag + '>');\n\n            nextBr = data.last.nextSibling;\n            if (nextBr && nextBr.tagName === 'BR')\n            {\n                $R.dom(nextBr).remove();\n            }\n\n            for (var i = 0; i < data.nodes.length; i++)\n            {\n                $wrapper.append(data.nodes[i]);\n            }\n\n            this.utils.splitNode(blocks[0], [$wrapper.get()]);\n            nodes = this._sendNodes([$wrapper.get()]);\n\n            if (this.utils.isEmptyHtml($wrapper.html()))\n            {\n                this.caret.setStart($wrapper);\n            }\n            else\n            {\n                setTimeout(function() { this.selection.restore(); }.bind(this), 0);\n            }\n\n            return nodes;\n        }\n        // standard format\n        else if (blocks.length > 0)\n        {\n            nodes = this._replaceBlocks(blocks);\n            nodes = this._sendNodes(nodes);\n\n            setTimeout(function() { this.selection.restore(); }.bind(this), 0);\n\n            return nodes;\n        }\n        // td/th format uncollapsed\n        else if (!this.selection.isCollapsed() && block && (block.tagName === 'TD' || block.tagName === 'TH'))\n        {\n            replacedTag = this._getReplacedTag('set');\n\n            $wrapper = this._wrapInsideTable(replacedTag);\n\n            this.selection.setAll($wrapper);\n\n            return this._sendNodes([$wrapper.get()]);\n        }\n        // td/th format collapsed\n        else if (this.selection.isCollapsed() && block && (block.tagName === 'TD' || block.tagName === 'TH'))\n        {\n            var textnodes = this._getChildTextNodes(block);\n\n            replacedTag = this._getReplacedTag('set');\n            var $wrapper = $R.dom('<' + replacedTag + '>');\n\n            $R.dom(textnodes.first).before($wrapper);\n\n            for (var i = 0; i < textnodes.nodes.length; i++)\n            {\n                $wrapper.append(textnodes.nodes[i]);\n            }\n\n            var nextBr = $wrapper.get().nextSibling;\n            if (nextBr && nextBr.tagName === 'BR')\n            {\n                $R.dom(nextBr).remove();\n            }\n\n            return this._sendNodes([$wrapper.get()]);\n        }\n\n        return nodes;\n    },\n    _wrapInsideTable: function(replacedTag)\n    {\n        var data = this._getTextNodesData();\n        var $wrapper = $R.dom('<' + replacedTag + '>');\n\n        $R.dom(data.first).before($wrapper);\n\n        for (var i = 0; i < data.nodes.length; i++)\n        {\n            $wrapper.append(data.nodes[i]);\n        }\n\n        var nextBr = $wrapper.get().nextSibling;\n        if (nextBr && nextBr.tagName === 'BR')\n        {\n            $R.dom(nextBr).remove();\n        }\n\n        return $wrapper;\n    },\n    _prepareTag: function(tag)\n    {\n        return (typeof tag === 'undefined') ? this.opts.markup : tag;\n    },\n    _sendNodes: function(nodes)\n    {\n        if (nodes.length > 0)\n        {\n            // clean & appliyng styles and attributes\n            nodes = this.applyArgs(nodes, false);\n            nodes = this._combinePre(nodes);\n            nodes = this._cleanBlocks(nodes);\n        }\n\n        return nodes;\n    },\n    _getTags: function()\n    {\n        return ['div', 'p', 'blockquote', 'pre', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'];\n    },\n    _replaceBlocks: function(blocks)\n    {\n        var nodes = [];\n        var type = (this._isToggleFormatType(blocks)) ? 'toggle' : 'set';\n        var replacedTag = this._getReplacedTag(type);\n\n        for (var i = 0; i < blocks.length; i++)\n        {\n            var $node = this.utils.replaceToTag(blocks[i], replacedTag);\n            nodes.push($node.get());\n        }\n\n        return nodes;\n    },\n    _getReplacedTag: function(type)\n    {\n        var replacedTag = (type === 'toggle') ? this.opts.markup : this.tag;\n\n        return (this.opts.breakline && replacedTag === 'p') ? 'div' : replacedTag;\n    },\n    _getChildTextNodes: function(el)\n    {\n        var nodes = el.childNodes;\n        var firstNode = nodes[0];\n        var finalNodes = [];\n        for (var i = 0; i <= nodes.length; i++)\n        {\n            var node = nodes[i];\n            if (node && node.nodeType !== 3 && this.inspector.isBlockTag(node.tagName))\n            {\n                break;\n            }\n\n            finalNodes.push(node);\n        }\n\n        return {\n            nodes: finalNodes,\n            first: firstNode\n        };\n    },\n    _getTextNodesData: function()\n    {\n        var nodes = this.selection.getNodes({ textnodes: true, keepbr: true });\n        if (nodes.length === 0) return false;\n\n        var firstNode = nodes[0];\n        var lastNode = nodes[nodes.length-1];\n        var node = lastNode;\n        var stop = false;\n\n        while (!stop)\n        {\n            var inline = this.selection.getInline(node);\n            node = (inline) ? inline.nextSibling : node.nextSibling;\n            if (!node)\n            {\n                stop = true;\n            }\n            else if (node.nodeType !== 3 && (node.tagName === 'BR' || this.inspector.isBlockTag(node.tagName)))\n            {\n                stop = true;\n            }\n            else\n            {\n                nodes.push(node);\n            }\n        }\n\n        return {\n            nodes: nodes,\n            first: firstNode,\n            last: lastNode\n        };\n    },\n    _isToggleFormatType: function(blocks)\n    {\n        var count = 0;\n        var len = blocks.length;\n        for (var i = 0; i < len; i++)\n        {\n            if (blocks[i] && this.tag === blocks[i].tagName.toLowerCase()) count++;\n        }\n\n        return (count === len);\n    },\n    _combinePre: function(nodes)\n    {\n        var combinedNodes = [];\n        for (var i = 0; i < nodes.length; i++)\n        {\n            var next = nodes[i].nextElementSibling;\n            if (next && nodes[i].tagName === 'PRE' && next.tagName === 'PRE')\n            {\n                var $current = $R.dom(nodes[i]);\n                var $next = $R.dom(next);\n                var newline = document.createTextNode('\\n');\n\n                $current.append(newline);\n                $current.append($next);\n                $next.unwrap('pre');\n            }\n\n            combinedNodes.push(nodes[i]);\n        }\n\n        return combinedNodes;\n    },\n    _cleanBlocks: function(nodes)\n    {\n        var headings = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'];\n        var tags = this.opts.inlineTags;\n        for (var i = 0; i < nodes.length; i++)\n        {\n            var tag = nodes[i].tagName.toLowerCase();\n            var $node = $R.dom(nodes[i]);\n\n            if (headings.indexOf(tag) !== - 1)\n            {\n                $node.find('span').not('.redactor-component, .non-editable, .redactor-selection-marker').unwrap();\n            }\n            else if (tag === 'pre')\n            {\n                $node.find(tags.join(',')).not('.redactor-selection-marker').unwrap();\n            }\n\n            // breakline attr\n            if (this.opts.breakline && tag === 'div')\n            {\n                $node.attr('data-redactor-tag', 'br');\n            }\n            else\n            {\n                $node.removeAttr('data-redactor-tag');\n            }\n\n            this.utils.normalizeTextNodes(nodes[i]);\n        }\n\n        return nodes;\n    }\n});\n$R.add('service', 'inline', {\n    mixins: ['formatter'],\n    init: function(app)\n    {\n        this.app = app;\n\n        this.count = 0;\n    },\n    // public\n    format: function(args)\n    {\n        if (!this._isFormat()) return [];\n\n        // type of applying styles and attributes\n        this.type = (args.type) ? args.type : 'set'; // add, remove, toggle\n        // tag\n        this.tag = (typeof args === 'string') ? args : args.tag;\n        this.tag = this.tag.toLowerCase();\n        this.tag = this.arrangeTag(this.tag);\n\n        if (typeof args === 'string') this.args = false;\n        else this.buildArgs(args);\n\n        if (!this.detector.isIe())\n        {\n            this.editor.disableNonEditables();\n        }\n\n        // format\n        var nodes = (this.selection.isCollapsed()) ? this.formatCollapsed() : this.formatUncollapsed();\n\n        if (!this.detector.isIe())\n        {\n            this.editor.enableNonEditables();\n        }\n\n        return nodes;\n    },\n\n    // private\n    _isFormat: function()\n    {\n        var current = this.selection.getCurrent();\n        var data = this.inspector.parse(current);\n        var isComponent = (data.isComponent() && !data.isComponentType('table') && !data.isFigcaption());\n\n        if (current === false && this.selection.isAll())\n        {\n            return true;\n        }\n        else if (!current || data.isPre() || data.isCode() || isComponent)\n        {\n            return false;\n        }\n\n        return true;\n    },\n    arrangeTag: function(tag)\n    {\n        var replaced = this.opts.replaceTags;\n        for (var key in replaced)\n        {\n            if (tag === key) tag = replaced[key];\n        }\n\n        return tag;\n    },\n    formatCollapsed: function()\n    {\n        var nodes = [];\n        var inline = this.selection.getInlineFirst();\n        var inlines = this.selection.getInlines({ all: true });\n        var $inline = $R.dom(inline);\n        var $parent, parent, $secondPart, extractedContent;\n\n        // 1) not inline\n        if (!inline)\n        {\n            nodes = this.insertInline(nodes);\n        }\n        else\n        {\n            var dataInline = this.inspector.parse(inline);\n            var isEmpty = this.utils.isEmptyHtml(inline.innerHTML);\n\n            // 2) inline is empty\n            if (isEmpty)\n            {\n                // 2.1) has same tag\n                if (inline.tagName.toLowerCase() === this.tag)\n                {\n                    // 2.1.1) has same args or hasn't args\n                    if (this.hasSameArgs(inline))\n                    {\n                        this.caret.setAfter(inline);\n                        $inline.remove();\n\n                        var el = this.selection.getElement();\n                        this.utils.normalizeTextNodes(el);\n                    }\n                    // 2.1.2) has different args and it is span tag\n                    else if (this.tag === 'span')\n                    {\n                        nodes = this.applyArgs([inline], false);\n                        this.caret.setStart(inline);\n                    }\n                    // 2.1.3) has different args and it is not span tag\n                    else\n                    {\n                       nodes = this.insertInline(nodes);\n                    }\n\n                }\n                // 2.2) has another tag\n                else\n                {\n                    // 2.2.1) has parent\n                    if (dataInline.hasParent([this.tag]))\n                    {\n                        $parent = $inline.closest(this.tag);\n                        parent = $parent.get();\n                        if (this.hasSameArgs(parent))\n                        {\n                            $parent.unwrap();\n                            this.caret.setStart(inline);\n                        }\n                        else\n                        {\n                            nodes = this.insertInline(nodes);\n                        }\n                    }\n                    // 2.2.2) hasn't parent\n                    else\n                    {\n                        nodes = this.insertInline(nodes);\n                    }\n                }\n            }\n            // 3) inline isn't empty\n            else\n            {\n                // 3.1) has same tag\n                if (inline.tagName.toLowerCase() === this.tag)\n                {\n                    // 3.1.1) has same args or hasn't args\n                    if (this.hasSameArgs(inline))\n                    {\n                        // insert break\n                        extractedContent = this.utils.extractHtmlFromCaret(inline);\n                        $secondPart = $R.dom('<' + this.tag + ' />');\n                        $secondPart = this.utils.cloneAttributes(inline, $secondPart);\n\n                        $inline.after($secondPart.append(extractedContent));\n\n                        this.caret.setAfter(inline);\n                    }\n                    else\n                    {\n                        nodes = this.insertInline(nodes);\n                    }\n                }\n                // 3.2) has another tag\n                else\n                {\n                    // 3.2.1) has parent\n                    if (dataInline.hasParent([this.tag]))\n                    {\n                        $parent = $inline.closest(this.tag);\n                        parent = $parent.get();\n                        if (this.hasSameArgs(parent))\n                        {\n                            // insert break\n                            extractedContent = this.utils.extractHtmlFromCaret(parent, parent);\n                            $secondPart = $R.dom('<' + this.tag + ' />');\n                            $secondPart = this.utils.cloneAttributes(parent, $secondPart);\n\n                            var $breaked, $last;\n                            var z = 0;\n                            inlines = inlines.reverse();\n                            for (var i = 0; i < inlines.length; i++)\n                            {\n                                if (inlines[i] !== parent)\n                                {\n                                    $last = $R.dom('<' + inlines[i].tagName.toLowerCase() + '>');\n                                    if (z === 0)\n                                    {\n                                        $breaked = $last;\n                                    }\n                                    else\n                                    {\n                                        $breaked.append($last);\n                                    }\n\n                                    z++;\n                                }\n                            }\n\n                            $parent.after($secondPart.append(extractedContent));\n                            $parent.after($breaked);\n\n                            this.caret.setStart($last);\n                        }\n                        else\n                        {\n                            nodes = this.insertInline(nodes);\n                        }\n                    }\n                    // 3.2.2) hasn't parent\n                    else\n                    {\n                        nodes = this.insertInline(nodes);\n                    }\n                }\n            }\n        }\n\n        return nodes;\n    },\n    insertInline: function(nodes)\n    {\n        var node = document.createElement(this.tag);\n        nodes = this.insertion.insertNode(node, 'start');\n\n        return this.applyArgs(nodes, false);\n    },\n    hasSameArgs: function(inline)\n    {\n        if (inline.attributes.length === 0 && this.args === false)\n        {\n            return true;\n        }\n        else\n        {\n            var same = true;\n            if (this.args)\n            {\n                var count = 0;\n                for (var key in this.args)\n                {\n                    var $node = $R.dom(inline);\n                    var args = (this.args[key]);\n                    var value = this.utils.toParams(args);\n                    var nodeAttrValue = $node.attr(key);\n\n                    if (args)\n                    {\n                        if (key === 'style')\n                        {\n                            value = value.trim().replace(/;$/, '');\n\n                            var origRules = this.utils.styleToObj($node.attr('style'));\n                            var rules = value.split(';');\n                            var innerCount = 0;\n\n                            for (var i = 0; i < rules.length; i++)\n                            {\n                                var arr = rules[i].split(':');\n                                var ruleName = arr[0].trim();\n                                var ruleValue = arr[1].trim();\n\n                                if (ruleName.search(/color/) !== -1)\n                                {\n                                    var val = $node.css(ruleName);\n                                    if (val && (val === ruleValue || this.utils.rgb2hex(val) === ruleValue))\n                                    {\n                                        innerCount++;\n                                    }\n                                }\n                                else if ($node.css(ruleName) === ruleValue)\n                                {\n                                    innerCount++;\n                                }\n                            }\n\n                            if (innerCount === rules.length && Object.keys(origRules).length === rules.length)\n                            {\n                                count++;\n                            }\n                        }\n                        else\n                        {\n                            if (nodeAttrValue === value)\n                            {\n                                count++;\n                            }\n                        }\n                    }\n                    else\n                    {\n                        if (!nodeAttrValue || nodeAttrValue === '')\n                        {\n                            count++;\n                        }\n                    }\n                }\n\n                same = (count === Object.keys(this.args).length);\n            }\n\n            return same;\n        }\n    },\n    formatUncollapsed: function()\n    {\n        var inlines = this.selection.getInlines({ all: true, inside: true });\n\n        if (this.detector.isIe()) this.selection.saveMarkers();\n        else this.selection.save();\n\n        // convert del / u\n        this._convertTags('u');\n        this._convertTags('del');\n\n        // convert target tags\n        this._convertToStrike(inlines);\n\n        if (this.detector.isIe()) this.selection.restoreMarkers();\n        else this.selection.restore();\n\n        // apply strike\n        document.execCommand('strikethrough');\n\n        // clear decoration\n        this._clearDecoration();\n\n        this.selection.save();\n\n        // revert and set style\n        var nodes = this._revertToInlines();\n        nodes = this.applyArgs(nodes, false);\n\n        // unwrap if attributes was removed\n        for (var i = 0; i < nodes.length; i++)\n        {\n            var node = nodes[i];\n            var tag = node.tagName.toLowerCase();\n            var len = node.attributes.length;\n\n            if (tag === this.tag && len === 0 && this.args)\n            {\n                $R.dom(node).unwrap();\n                nodes.splice(i, 1);\n            }\n        }\n\n        this.selection.restore();\n\n        // clear and normalize\n        this._clearEmptyStyle();\n        nodes = this._normalizeBlocks(nodes);\n\n        return nodes;\n    },\n    _convertTags: function(tag)\n    {\n        if (this.tag !== tag)\n        {\n            var $editor = this.editor.getElement();\n            $editor.find(tag).each(function(node)\n            {\n                var $el = this.utils.replaceToTag(node, 'span');\n                $el.addClass('redactor-convertable-' + tag);\n            }.bind(this));\n        }\n    },\n    _revertTags: function(tag)\n    {\n        var $editor = this.editor.getElement();\n\n        $editor.find('span.redactor-convertable-' + tag).each(function(node)\n        {\n            var $el = this.utils.replaceToTag(node, tag);\n            $el.removeClass('redactor-convertable-' + tag);\n            if (this.utils.removeEmptyAttr($el, 'class')) $el.removeAttr('class');\n\n        }.bind(this));\n    },\n    _convertToStrike: function(inlines)\n    {\n        var selected = this.selection.getText().replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n\n        for (var i = 0; i < inlines.length; i++)\n        {\n            var tag = this.arrangeTag(inlines[i].tagName.toLowerCase());\n            var inline = inlines[i];\n            var $inline = $R.dom(inline);\n            var hasSameArgs = this.hasSameArgs(inline);\n\n            if (tag === this.tag)\n            {\n                if (this.tag === 'span' && this._isTextSelected(inline, selected))\n                {\n                    $inline.addClass('redactor-convertable-apply');\n                }\n                else if (hasSameArgs && this.tag !== 'a')\n                {\n                    this._replaceToStrike($inline);\n                }\n                else if (this.tag === 'span')\n                {\n                    $inline.addClass('redactor-unconvertable-apply');\n                }\n                else if (!hasSameArgs)\n                {\n                    $inline.addClass('redactor-convertable-apply');\n                }\n            }\n        }\n    },\n    _replaceToStrike: function($el)\n    {\n        $el.replaceWith(function()\n        {\n            return $R.dom('<strike>').append($el.contents());\n        });\n    },\n    _revertToInlines: function()\n    {\n        var nodes = [];\n        var $editor = this.editor.getElement();\n\n        if (this.tag !== 'u') $editor.find('u').unwrap();\n\n        // span convertable\n        $editor.find('.redactor-convertable-apply').each(function(node)\n        {\n            var $node = $R.dom(node);\n            $node.find('strike').unwrap();\n\n            this._forceRemoveClass($node, 'redactor-convertable-apply');\n            nodes.push(node);\n\n        }.bind(this));\n\n        // span unconvertable\n        $editor.find('span.redactor-unconvertable-apply').each(function(node)\n        {\n            var $node = $R.dom(node);\n            this._forceRemoveClass($node, 'redactor-unconvertable-apply');\n\n        }.bind(this));\n\n        // strike\n        $editor.find('strike').each(function(node)\n        {\n            var $node = this.utils.replaceToTag(node, this.tag);\n            nodes.push($node.get());\n\n        }.bind(this));\n\n\n        this._revertTags('u');\n        this._revertTags('del');\n\n        return nodes;\n    },\n    _normalizeBlocks: function(nodes)\n    {\n        var tags = this.opts.inlineTags;\n        var blocks = this.selection.getBlocks();\n        if (blocks)\n        {\n            for (var i = 0; i < blocks.length; i++)\n            {\n                if (blocks[i].tagName === 'PRE')\n                {\n                    var $node = $R.dom(blocks[i]);\n                    $node.find(tags.join(',')).not('.redactor-selection-marker').each(function(inline)\n                    {\n                        if (nodes.indexOf(inline) !== -1)\n                        {\n                            nodes = this.utils.removeFromArrayByValue(nodes, inline);\n                        }\n\n                        $R.dom(inline).unwrap();\n                    }.bind(this));\n                }\n            }\n        }\n\n        return nodes;\n    },\n    _clearDecoration: function()\n    {\n        var $editor = this.editor.getElement();\n        $editor.find(this.opts.inlineTags.join(',')).each(function(node)\n        {\n            if (node.style.textDecoration === 'line-through' || node.style.textDecorationLine === 'line-through')\n            {\n                var $el = $R.dom(node);\n                $el.css('textDecorationLine', '');\n                $el.css('textDecoration', '');\n                $el.wrap('<strike>');\n            }\n        });\n    },\n    _clearEmptyStyle: function()\n    {\n        var inlines = this.getInlines();\n        for (var i = 0; i < inlines.length; i++)\n        {\n            this._clearEmptyStyleAttr(inlines[i]);\n\n            var childNodes = inlines[i].childNodes;\n            if (childNodes)\n            {\n                for (var z = 0; z < childNodes.length; z++)\n                {\n                    this._clearEmptyStyleAttr(childNodes[z]);\n                }\n            }\n        }\n    },\n    _clearEmptyStyleAttr: function(node)\n    {\n        if (node.nodeType !== 3 && this.utils.removeEmptyAttr(node, 'style'))\n        {\n            node.removeAttribute('style');\n            node.removeAttribute('data-redactor-style-cache');\n        }\n    },\n    _forceRemoveClass: function($node, classname)\n    {\n        $node.removeClass(classname);\n        if (this.utils.removeEmptyAttr($node, 'class')) $node.removeAttr('class');\n    },\n    _isTextSelected: function(node, selected)\n    {\n        var text = this.utils.removeInvisibleChars(node.textContent);\n\n        return (selected === text || selected.search(new RegExp('^' + this.utils.escapeRegExp(text) + '$')) !== -1);\n    },\n\n    getInlines: function(tags)\n    {\n        return (tags) ? this.selection.getInlines({ tags: tags, all: true }) : this.selection.getInlines({ all: true });\n    },\n    getElements: function(tags)\n    {\n        return $R.dom(this.getInlines(tags));\n    },\n    clearFormat: function()\n    {\n        this.selection.save();\n\n        var nodes = this.selection.getInlines({ all: true });\n        for (var i = 0; i < nodes.length; i++)\n        {\n            var $el = $R.dom(nodes[i]);\n            var inline = this.selection.getInline(nodes[i]);\n            if (inline)\n            {\n                $el.unwrap();\n            }\n        }\n\n        this.selection.restore();\n    }\n});\n$R.add('service', 'autoparser', {\n    init: function(app)\n    {\n        this.app = app;\n    },\n    observe: function()\n    {\n        var $editor = this.editor.getElement();\n        var $objects = $editor.find('.redactor-autoparser-object').each(function(node)\n        {\n           var $node = $R.dom(node);\n           $node.removeClass('redactor-autoparser-object');\n           if ($node.attr('class') === '') $node.removeAttr('class');\n        });\n\n        if ($objects.length > 0)\n        {\n            $objects.each(function(node)\n            {\n                var type;\n                var $object = false;\n                var tag = node.tagName;\n\n                if (tag === 'A') type = 'link';\n                else if (tag === 'IMG') type = 'image';\n                else if (tag === 'IFRAME') type = 'video';\n\n                if (type)\n                {\n                    $object = $R.create(type + '.component', this.app, node);\n                    this.app.broadcast(type + '.inserted', $object);\n                    this.app.broadcast('autoparse', type, $object);\n                }\n\n            }.bind(this));\n        }\n    },\n    format: function(e, key)\n    {\n        if (this._isKey(key))\n        {\n            this._format(key === this.keycodes.ENTER);\n        }\n    },\n    parse: function(html)\n    {\n        var tags = ['figure', 'pre', 'iframe', 'code', 'a', 'img'];\n        var stored = [];\n        var z = 0;\n\n        // encode\n        html = this.cleaner.encodePreCode(html);\n\n        // store tags\n        for (var i = 0; i < tags.length; i++)\n        {\n            var reTags = (tags[i] === 'img') ? '<' + tags[i] + '[^>]*>' : '<' + tags[i] + '([\\\\w\\\\W]*?)</' + tags[i] + '>';\n            var matched = html.match(new RegExp(reTags, 'gi'));\n\n            if (matched !== null)\n            {\n                for (var y = 0; y < matched.length; y++)\n                {\n                    html = html.replace(matched[y], '#####replaceparse' + z + '#####');\n                    stored.push(matched[y]);\n                    z++;\n                }\n            }\n        }\n\n        // images\n        if (this.opts.autoparseImages && html.match(this.opts.regex.imageurl))\n        {\n            var imagesMatches = html.match(this.opts.regex.imageurl);\n            for (var i = 0; i < imagesMatches.length; i++)\n            {\n                html = html.replace(imagesMatches[i], '<img class=\"redactor-autoparser-object\" src=\"' + imagesMatches[i] + '\">');\n            }\n        }\n\n        // video\n        if (this.opts.autoparseVideo && (html.match(this.opts.regex.youtube) || html.match(this.opts.regex.vimeo)))\n        {\n            var iframeStart = '<iframe width=\"500\" height=\"281\" src=\"';\n            var iframeEnd = '\" frameborder=\"0\" allowfullscreen></iframe>';\n\n            var str, re;\n            if (html.match(this.opts.regex.youtube))\n            {\n                str = '//www.youtube.com/embed/$1';\n                re = this.opts.regex.youtube;\n            }\n            else if (html.match(this.opts.regex.vimeo))\n            {\n                str = '//player.vimeo.com/video/$2';\n                re = this.opts.regex.vimeo;\n            }\n\n            var $video = this.component.create('video', iframeStart + str + iframeEnd);\n\n            html = html.replace(re, $video.get().outerHTML);\n        }\n\n        // links\n        if (this.opts.autoparseLinks && html.match(this.opts.regex.url))\n        {\n            html = this._formatLinks(html);\n        }\n\n        // restore\n        html = this._restoreReplaced(stored, html);\n\n        // repeat for nested tags\n        html = this._restoreReplaced(stored, html);\n\n        return html;\n    },\n\n    // private\n    _isKey: function(key)\n    {\n        return (key === this.keycodes.ENTER || key === this.keycodes.SPACE);\n    },\n    _format: function(enter)\n    {\n        var parent = this.selection.getParent();\n        var $parent = $R.dom(parent);\n\n        var isNotFormatted = (parent && $parent.closest('figure, pre, code, img, a, iframe').length !== 0);\n        if (isNotFormatted || !this.selection.isCollapsed())\n        {\n            return;\n        }\n\n        // add split marker\n        var marker = this.utils.createInvisibleChar();\n        var range = this.selection.getRange();\n        range.insertNode(marker);\n\n        var current = this.selection.getCurrent();\n        var data = this.inspector.parse(current);\n        var $current = $R.dom(current);\n\n        // remove split marker\n        marker.parentNode.removeChild(marker);\n\n        if (current && current.nodeType === 3)\n        {\n            var content = current.textContent;\n            var type;\n\n            // images\n            if (this.opts.autoparseImages && content.match(this._convertToRegExp(this.opts.regex.imageurl)))\n            {\n                var isList = data.isList();\n                var matches = content.match(this.opts.regex.imageurl);\n                var el = (isList) ? undefined : '<figure><img></figure>';\n\n                var $img = this.component.create('image', el);\n                $img.setSrc(matches[0]);\n                $img.addClass('redactor-autoparser-object');\n\n                content = content.replace(matches[0], $img.get().outerHTML);\n                type = 'image';\n            }\n            // video\n            else if (this.opts.autoparseVideo && (content.match(this._convertToRegExp(this.opts.regex.youtube)) || content.match(this._convertToRegExp(this.opts.regex.vimeo))))\n            {\n                var iframeStart = '<iframe width=\"500\" height=\"281\" src=\"';\n                var iframeEnd = '\" frameborder=\"0\" allowfullscreen></iframe>';\n                var str, re;\n\n                if (content.match(this.opts.regex.youtube))\n                {\n                    str = '//www.youtube.com/embed/$1';\n                    re = this.opts.regex.youtube;\n                }\n                else if (content.match(this.opts.regex.vimeo))\n                {\n                    str = '//player.vimeo.com/video/$2';\n                    re = this.opts.regex.vimeo;\n                }\n\n                var $video = this.component.create('video', iframeStart + str + iframeEnd);\n                $video.addClass('redactor-autoparser-object');\n\n                content = content.replace(re, $video.get().outerHTML);\n                type = 'video';\n            }\n            // links\n            else if (this.opts.autoparseLinks && content.match(this._convertToRegExp(this.opts.regex.url)))\n            {\n                content = this._formatLinks(content, enter);\n                type = 'link';\n            }\n\n            // replace\n            if (type)\n            {\n                if (enter)\n                {\n                    this.selection.save();\n                    $current.replaceWith(content);\n                    this.selection.restore();\n                }\n                else\n                {\n                    $current.replaceWith(content);\n                }\n\n                // object\n                var $editor = this.editor.getElement();\n                var $object = $editor.find('.redactor-autoparser-object').removeClass('redactor-autoparser-object');\n                $object = (type === 'link') ? $R.create('link.component', this.app, $object) : $object;\n\n                // caret\n                if (type === 'link')\n                {\n                    if (!enter) this.caret.setAfter($object);\n                    this.app.broadcast('link.inserted', $object);\n                }\n                else\n                {\n                    this.caret.setAfter($object);\n\n                    var $cloned = $object.clone();\n                    $object.remove();\n                    $object = this.insertion.insertHtml($cloned);\n                    $object = this.component.build($object);\n                }\n\n                // callback\n                this.app.broadcast('autoparse', type, $object);\n            }\n        }\n    },\n    _formatLinks: function(content, enter)\n    {\n        var matches = content.match(this.opts.regex.url);\n        var obj = {};\n        for (var i = 0; i < matches.length; i++)\n        {\n            if (enter && matches[i].search(/\\.$/) !== -1)\n            {\n                matches[i] = matches[i].replace(/\\.$/, '');\n            }\n\n            var href = matches[i], text = href;\n            var linkProtocol = (href.match(/(https?|ftp):\\/\\//i) !== null) ? '' : 'http://';\n            var regexB = ([\"/\", \"&\", \"=\"].indexOf(href.slice(-1)) !== -1) ? \"\" : \"\\\\b\";\n            var target = (this.opts.pasteLinkTarget !== false) ? ' target=\"' + this.opts.pasteLinkTarget + '\"' : '';\n\n            text = (text.length > this.opts.linkSize) ? text.substring(0, this.opts.linkSize) + '...' : text;\n            text = (text.search('%') === -1) ? decodeURIComponent(text) : text;\n\n            // escaping url\n            var regexp = '(' + href.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\") + regexB + ')';\n            var classstr = ' class=\"redactor-autoparser-object\"';\n\n            obj[regexp] = '<a href=\"' + linkProtocol + href.trim() + '\"' + target + classstr + '>' + text.trim() + '</a>';\n        }\n\n        // replace\n        for (var key in obj)\n        {\n            content = content.replace(new RegExp(key, 'g'), obj[key]);\n        }\n\n        return content;\n    },\n    _restoreReplaced: function(stored, html)\n    {\n        for (var i = 0; i < stored.length; i++)\n        {\n            html = html.replace('#####replaceparse' + i + '#####', stored[i]);\n        }\n\n        return html;\n    },\n    _convertToRegExp: function(str)\n    {\n        return new RegExp(String(str).replace(/^\\//, '').replace(/\\/ig$/, '').replace(/\\/gi$/, '') + '$', 'gi');\n    }\n});\n$R.add('service', 'storage', {\n    init: function(app)\n    {\n        this.app = app;\n\n        // local\n        this.data = [];\n    },\n    // public\n    observeImages: function()\n    {\n        var $editor = this.editor.getElement();\n        var $images = $editor.find('[data-image]');\n\n        $images.each(this._addImage.bind(this));\n    },\n    observeFiles: function()\n    {\n        var $editor = this.editor.getElement();\n        var $files = $editor.find('[data-file]');\n\n\t\t$files.each(this._addFile.bind(this));\n    },\n\tsetStatus: function(url, status)\n\t{\n\t\tthis.data[url].status = status;\n\t},\n    getChanges: function()\n    {\n        var $editor = this.editor.getElement();\n\n        // check status\n        for (var key in this.data)\n\t\t{\n\t\t\tvar data = this.data[key];\n\t\t\tvar $el = $editor.find('[data-' + data.type + '=\"' + data.id + '\"]');\n\n\t\t\tthis.setStatus(data.id, ($el.length === 0) ? false : true);\n\t\t}\n\n        return this.data;\n    },\n\tadd: function(type, node)\n\t{\n        var $node = $R.dom(node);\n        var id = $node.attr('data-' + type);\n\n        this.data[id] = { type: type, status: true, node: $node.get(), id: $node.attr('data-' + type) };\n\t},\n\n    // private\n    _addImage: function(node)\n    {\n        this.add('image', node);\n    },\n    _addFile: function(node)\n    {\n        this.add('file', node);\n    }\n});\n$R.add('service', 'utils', {\n    init: function(app)\n    {\n        this.app = app;\n    },\n    // empty\n    isEmpty: function(el)\n    {\n        var isEmpty = false;\n        el = $R.dom(el).get();\n        if (el)\n        {\n            isEmpty = (el.nodeType === 3) ? (el.textContent.trim().replace(/\\n/, '') === '') : (el.innerHTML === '');\n        }\n\n        return isEmpty;\n    },\n    isEmptyHtml: function(html, keepbr, keeplists)\n    {\n        html = this.removeInvisibleChars(html);\n        html = html.replace(/&nbsp;/gi, '');\n        html = html.replace(/<\\/?br\\s?\\/?>/g, ((keepbr) ? 'br' : ''));\n        html = html.replace(/\\s/g, '');\n        html = html.replace(/^<p>[^\\W\\w\\D\\d]*?<\\/p>$/i, '');\n        html = html.replace(/^<div>[^\\W\\w\\D\\d]*?<\\/div>$/i, '');\n\n        if (keeplists)\n        {\n            html = html.replace(/<ul(.*?[^>])>$/i, 'ul');\n            html = html.replace(/<ol(.*?[^>])>$/i, 'ol');\n        }\n\n        html = html.replace(/<hr(.*?[^>])>$/i, 'hr');\n        html = html.replace(/<iframe(.*?[^>])>$/i, 'iframe');\n        html = html.replace(/<source(.*?[^>])>$/i, 'source');\n\n        // remove empty tags\n        html = html.replace(/<[^\\/>][^>]*><\\/[^>]+>/gi, '');\n        html = html.replace(/<[^\\/>][^>]*><\\/[^>]+>/gi, '');\n\n        // trim\n        html = html.trim();\n\n        return html === '';\n    },\n    trimSpaces: function(html)\n    {\n        return html = this.removeInvisibleChars(html.trim());\n    },\n\n    // invisible chars\n    createInvisibleChar: function()\n    {\n        return document.createTextNode(this.opts.markerChar);\n    },\n    searchInvisibleChars: function(str)\n    {\n        return str.search(/^\\uFEFF$/g);\n    },\n    removeInvisibleChars: function(html)\n    {\n        return html.replace(/\\uFEFF/g, '');\n    },\n    trimInvisibleChars: function(direction)\n    {\n        if (!this.selection.isCollapsed()) return;\n\n        var current = this.selection.getCurrent();\n        var side = (direction === 'left') ? this.selection.getTextBeforeCaret() : this.selection.getTextAfterCaret();\n        var isSpace = (current && current.nodeType === 3 && this.searchInvisibleChars(side) === 0);\n\n        if (isSpace)\n        {\n            if (direction === 'left')\n            {\n                $R.dom(current).replaceWith(current.textContent.trim());\n            }\n            else\n            {\n                var offset = this.offset.get();\n                this.offset.set({ start: offset.start + 1, end: offset.end + 1 });\n            }\n        }\n    },\n\n    // wrapper\n    buildWrapper: function(html)\n    {\n        return $R.dom('<div>').html(html);\n    },\n    getWrapperHtml: function($wrapper)\n    {\n        var html = $wrapper.html();\n        $wrapper.remove();\n\n        return html;\n    },\n\n    // fragment\n    createTmpContainer: function(html)\n    {\n        var $div = $R.dom('<div>');\n\n        if (typeof html === 'string')\n        {\n            $div.html(html);\n        }\n        else\n        {\n            $div.append($R.dom(html).clone(true));\n        }\n\n        return $div.get();\n    },\n    createFragment: function(html)\n    {\n        var el = this.createTmpContainer(html);\n        var frag = document.createDocumentFragment(), node, firstNode, lastNode;\n        var nodes = [];\n        var i = 0;\n        while ((node = el.firstChild))\n        {\n            i++;\n            var n = frag.appendChild(node);\n            if (i === 1) firstNode = n;\n\n            nodes.push(n);\n            lastNode = n;\n        }\n\n        return { frag: frag, first: firstNode, last: lastNode, nodes: nodes };\n    },\n    isFragment: function(obj)\n    {\n        return (typeof obj === 'object' && obj.frag);\n    },\n    parseHtml: function(html)\n    {\n        var div = this.createTmpContainer(html);\n\n        return { html: div.innerHTML, nodes: div.childNodes };\n    },\n\n    splitNode: function(current, nodes, isList, inline)\n    {\n        nodes = (this.isFragment(nodes)) ? nodes.frag : nodes;\n\n        var element;\n        if (inline)\n        {\n            element = (this.inspector.isInlineTag(current.tagName)) ? current : this.selection.getInline(current);\n        }\n        else\n        {\n            element = (this.inspector.isBlockTag(current.tagName)) ? current : this.selection.getBlock(current);\n        }\n\n        var $element = $R.dom(element);\n\n        // replace is empty\n        if (!inline && this.isEmptyHtml(element.innerHTML, true))\n        {\n            $element.after(nodes);\n            $element.remove();\n\n            return nodes;\n        }\n\n        var tag = $element.get().tagName.toLowerCase();\n        var isEnd = this.caret.isEnd(element);\n        var isStart = this.caret.isStart(element);\n\n        if (!isEnd && !isStart)\n        {\n            var extractedContent = this.extractHtmlFromCaret(inline);\n\n            var $secondPart = $R.dom('<' + tag + ' />');\n            $secondPart = this.cloneAttributes(element, $secondPart);\n\n            $element.after($secondPart.append(extractedContent));\n        }\n\n        if (isStart)\n        {\n            return $element.before(nodes);\n        }\n        else\n        {\n            if (isList)\n            {\n                return $element.append(nodes);\n            }\n            else\n            {\n                nodes = $element.after(nodes);\n\n                var html = $element.html();\n                html = this.removeInvisibleChars(html);\n                html = html.replace(/&nbsp;/gi, '');\n\n                if (html === '') $element.remove();\n\n                return nodes;\n            }\n        }\n    },\n    extractHtmlFromCaret: function(inline, element)\n    {\n        var range = this.selection.getRange();\n        if (range)\n        {\n            element = (element) ? element : ((inline) ? this.selection.getInline() : this.selection.getBlock());\n            if (element)\n            {\n                var clonedRange = range.cloneRange();\n                clonedRange.selectNodeContents(element);\n                clonedRange.setStart(range.endContainer, range.endOffset);\n\n                return clonedRange.extractContents();\n            }\n        }\n    },\n    createMarkup: function(el)\n    {\n        var markup = document.createElement(this.opts.markup);\n        if (this.opts.breakline) markup.setAttribute('data-redactor-tag', 'br');\n\n        var $el = $R.dom(el);\n\n        $el.after(markup);\n        this.caret.setStart(markup);\n    },\n    createMarkupBefore: function(el)\n    {\n        var markup = document.createElement(this.opts.markup);\n        if (this.opts.breakline) markup.setAttribute('data-redactor-tag', 'br');\n\n        var $el = $R.dom(el);\n\n        $el.before(markup);\n        this.caret.setEnd(markup);\n    },\n    getNode: function(el)\n    {\n        var node = $R.dom(el).get();\n        var editor = this.editor.getElement().get();\n\n        return (typeof el === 'undefined') ? editor : ((node) ? node : false);\n    },\n    findSiblings: function(node, type)\n    {\n        node = $R.dom(node).get();\n        type = (type === 'next') ? 'nextSibling' : 'previousSibling';\n\n        while (node = node[type])\n        {\n            if ((node.nodeType === 3 && node.textContent.trim() === '') || node.tagName === 'BR')\n            {\n                continue;\n            }\n\n            return node;\n        }\n\n        return false;\n    },\n    getElementsFromHtml: function(html, selector, exclude)\n    {\n        var div = document.createElement(\"div\");\n        div.innerHTML = html;\n\n        var elems = div.querySelectorAll(selector);\n\n        // array map polyfill\n        var mapping = function(callback, thisArg)\n        {\n            if (typeof this.length !== 'number') return;\n            if (typeof callback !== 'function') return;\n\n            var newArr = [];\n            if (typeof this == 'object')\n            {\n                for (var i = 0; i < this.length; i++)\n                {\n                    if (i in this) newArr[i] = callback.call(thisArg || this, this[i], i, this);\n                    else return;\n                }\n            }\n\n            return newArr;\n        };\n\n        return mapping.call(elems, function(el)\n        {\n            var type = el.getAttribute('data-redactor-type');\n            if (exclude && type && type === exclude) {}\n            else return el.outerHTML;\n        });\n    },\n\n    // childnodes\n    getChildNodes: function(el, recursive, elements)\n    {\n        el = (el && el.nodeType && el.nodeType === 11) ? el : $R.dom(el).get();\n\n        var nodes = el.childNodes;\n        var result = [];\n        if (nodes)\n        {\n            for (var i = 0; i < nodes.length; i++)\n            {\n                if (elements === true && nodes[i].nodeType === 3) continue;\n                else if (nodes[i].nodeType === 3 && this.isEmpty(nodes[i])) continue;\n\n                result.push(nodes[i]);\n\n                if (recursive !== false)\n                {\n                    var nestedNodes = this.getChildNodes(nodes[i], elements);\n                    if (nestedNodes.length > 0)\n                    {\n                        result = result.concat(nestedNodes);\n                    }\n                }\n            }\n        }\n\n        return result;\n    },\n    getChildElements: function(el)\n    {\n        return this.getChildNodes(el, true, true);\n    },\n    getFirstNode: function(el)\n    {\n        return this._getFirst(this.getChildNodes(el, false));\n    },\n    getLastNode: function(el)\n    {\n        return this._getLast(this.getChildNodes(el, false));\n    },\n    getFirstElement: function(el)\n    {\n        return this._getFirst(this.getChildNodes(el, false, true));\n    },\n    getLastElement: function(el)\n    {\n        return this._getLast(this.getChildNodes(el, false, true));\n    },\n\n    // replace\n    replaceToTag: function(node, tag)\n    {\n        var $node = $R.dom(node);\n        return $node.replaceWith(function(node)\n        {\n            var $replaced = $R.dom('<' + tag + '>').append($R.dom(node).contents());\n            if (node.attributes)\n            {\n                var attrs = node.attributes;\n                for (var i = 0; i < attrs.length; i++)\n                {\n                    $replaced.attr(attrs[i].nodeName, attrs[i].value);\n                }\n            }\n\n            return $replaced;\n\n        });\n    },\n\n    // string\n    ucfirst: function(str)\n    {\n        return str.charAt(0).toUpperCase() + str.slice(1);\n    },\n\n    // array\n    removeFromArrayByValue: function(arr, value)\n    {\n        var a = arguments, len = a.length, ax;\n        while (len > 1 && arr.length)\n        {\n            value = a[--len];\n            while ((ax= arr.indexOf(value)) !== -1)\n            {\n                arr.splice(ax, 1);\n            }\n        }\n\n        return arr;\n    },\n\n    // attributes\n    removeEmptyAttr: function(el, attr)\n    {\n        var $el = $R.dom(el);\n\n        if (typeof $el.attr(attr) === 'undefined' || $el.attr(attr) === null) return true;\n        else if ($el.attr(attr) === '')\n        {\n            $el.removeAttr(attr);\n            return true;\n        }\n\n        return false;\n    },\n    cloneAttributes: function(elFrom, elTo)\n    {\n        elFrom = $R.dom(elFrom).get();\n        elTo = $R.dom(elTo);\n\n        var attrs = elFrom.attributes;\n        var len = attrs.length;\n        while (len--)\n        {\n            var attr = attrs[len];\n            elTo.attr(attr.name, attr.value);\n        }\n\n        return elTo;\n    },\n\n    // object\n    toParams: function(obj)\n    {\n        if (typeof obj !== 'object') return obj;\n\n        var keys = Object.keys(obj);\n        if (!keys.length) return '';\n        var result = '';\n\n        for (var i = 0; i < keys.length; i++)\n        {\n            var key = keys[i];\n            result += key + ':' + obj[key] + ';';\n        }\n\n        return result;\n    },\n    styleToObj: function(str)\n    {\n        var obj = {};\n\n        if (str)\n        {\n            var style = str.replace(/;$/, '').split(';');\n            for (var i = 0; i < style.length; i++)\n            {\n                var rule = style[i].split(':');\n                obj[rule[0].trim()] = rule[1].trim();\n            }\n        }\n\n        return obj;\n    },\n    checkProperty: function(obj)\n    {\n        var args = (arguments[1] && Array.isArray(arguments[1])) ? arguments[1] : [].slice.call(arguments, 1);\n\n        for (var i = 0; i < args.length; i++)\n        {\n            if (!obj || (typeof obj[args[i]] === 'undefined'))\n            {\n                return false;\n            }\n\n            obj = obj[args[i]];\n        }\n\n        return obj;\n    },\n\n    // data\n    extendData: function(data, obj)\n    {\n        for (var key in obj)\n        {\n            if (key === 'elements')\n            {\n                var $elms = $R.dom(obj[key]);\n                $elms.each(function(node)\n                {\n                    var $node = $R.dom(node);\n                    if (node.tagName === 'FORM')\n                    {\n                        var serializedData = $node.serialize(true);\n                        for (var z in serializedData)\n                        {\n                            data = this._setData(data, z, serializedData[z]);\n                        }\n                    }\n                    else\n                    {\n                        var name = ($node.attr('name')) ? $node.attr('name') : $node.attr('id');\n                        data = this._setData(data, name, $node.val());\n                    }\n                }.bind(this));\n            }\n            else\n            {\n                data = this._setData(data, key, obj[key]);\n            }\n        }\n\n        return data;\n    },\n    _setData: function(data, name, value)\n    {\n        if (data instanceof FormData) data.append(name, value);\n        else data[name] = value;\n\n        return data;\n    },\n\n    // normalize\n    normalizeTextNodes: function(el)\n    {\n        el = $R.dom(el).get();\n        if (el) el.normalize();\n    },\n\n    // color\n    isRgb: function(str)\n    {\n        return (str.search(/^rgb/i) === 0);\n    },\n    rgb2hex: function(rgb)\n    {\n        rgb = rgb.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);\n\n        return (rgb && rgb.length === 4) ? \"#\" +\n        (\"0\" + parseInt(rgb[1],10).toString(16)).slice(-2) +\n        (\"0\" + parseInt(rgb[2],10).toString(16)).slice(-2) +\n        (\"0\" + parseInt(rgb[3],10).toString(16)).slice(-2) : '';\n    },\n    hex2long: function(val)\n    {\n        if (val.search(/^#/) !== -1 && val.length === 4)\n        {\n            val = '#' + val[1] + val[1] + val[2] + val[2] + val[3] + val[3];\n        }\n\n        return val;\n    },\n\n    // escape\n    escapeRegExp: function(s)\n    {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    },\n\n    // random\n    getRandomId: function()\n    {\n        var id = '';\n        var possible = 'abcdefghijklmnopqrstuvwxyz0123456789';\n\n        for (var i = 0; i < 12; i++)\n        {\n            id += possible.charAt(Math.floor(Math.random() * possible.length));\n        }\n\n        return id;\n    },\n\n    // private\n    _getFirst: function(nodes)\n    {\n        return (nodes.length !== 0) ? nodes[0] : false;\n    },\n    _getLast: function(nodes)\n    {\n        return (nodes.length !== 0) ? nodes[nodes.length-1] : false;\n    }\n});\n$R.add('service', 'progress', {\n    init: function(app)\n    {\n        this.app = app;\n\n        // local\n        this.$box = null;\n        this.$bar = null;\n    },\n\n    // public\n    show: function()\n    {\n        if (!this._is()) this._build();\n        this.$box.show();\n    },\n    hide: function()\n    {\n        if (this._is())\n        {\n            this.animate.start(this.$box, 'fadeOut', this._destroy.bind(this));\n        }\n    },\n    update: function(value)\n    {\n        this.show();\n        this.$bar.css('width', value + '%');\n    },\n\n    // private\n    _is: function()\n    {\n        return (this.$box !== null);\n    },\n    _build: function()\n    {\n        this.$bar = $R.dom('<span />');\n        this.$box = $R.dom('<div id=\"redactor-progress\" />');\n\n        this.$box.append(this.$bar);\n        this.$body.append(this.$box);\n    },\n    _destroy: function()\n    {\n        if (this._is()) this.$box.remove();\n\n        this.$box = null;\n        this.$bar = null;\n    }\n});\n$R.add('module', 'starter', {\n    init: function(app)\n    {\n        this.app = app;\n        this.opts = app.opts;\n        this.plugin = app.plugin;\n        this.module = app.module;\n    },\n    // messages\n    onstart: function()\n    {\n        var services = ['element', 'container', 'source', 'editor', 'statusbar', 'toolbar'];\n        var modules = ['element', 'container', 'source', 'editor', 'statusbar', 'contextbar', 'input'];\n\n        this._startStop('start', this.app, services);\n        this._startStop('start', this.module, modules);\n    },\n    onstop: function()\n    {\n        var modules = ['observer', 'element', 'container', 'source', 'editor', 'contextbar'];\n\n        this._startStop('stop', this.module, modules);\n    },\n    onenable: function()\n    {\n        var modules = ['observer', 'toolbar'];\n        var plugins = this.opts.plugins;\n\n        this._startStop('start', this.module, modules);\n        this._startStop('start', this.plugin, plugins);\n    },\n    ondisable: function()\n    {\n        var modules = ['observer', 'toolbar'];\n        var plugins = this.opts.plugins;\n\n        this._startStop('stop', this.module, modules);\n        this._startStop('stop', this.plugin, plugins);\n    },\n\n    // private\n    _startStop: function(type, obj, arr)\n    {\n        for (var i = 0; i < arr.length; i++)\n        {\n            if (typeof obj[arr[i]] !== 'undefined')\n            {\n                this.app.callInstanceMethod(obj[arr[i]], type);\n            }\n        }\n    }\n});\n$R.add('module', 'element', {\n    init: function(app)\n    {\n        this.app = app;\n        this.uuid = app.uuid;\n        this.opts = app.opts;\n        this.namespace = app.namespace;\n        this.element = app.element;\n        this.rootOpts = $R.extend({}, true, $R.options, app.rootOpts);\n    },\n    // public\n    start: function()\n    {\n        this._build();\n        this._buildModes();\n        this._buildMarkup();\n    },\n    stop: function()\n    {\n        var $element = this.element.getElement();\n        $element.removeData(this.namespace + '-uuid');\n    },\n\n    // private\n    _build: function()\n    {\n        var $element = this.element.getElement();\n        $element.data(this.namespace + '-uuid', this.uuid);\n    },\n    _buildModes: function()\n    {\n        var type = this.element.getType();\n\n        if (type === 'inline') this._redefineOptions(this.opts.modes['inline']);\n        if (type === 'div') this._redefineOptions(this.opts.modes['original']);\n\n        if (type !== 'inline')\n        {\n            if (this._isRootOption('styles') && this.rootOpts.styles) this.opts.styles = true;\n            if (this._isRootOption('source') && !this.rootOpts.source) this.opts.showSource = false;\n        }\n    },\n    _buildMarkup: function()\n    {\n        var type = this.element.getType();\n\n        if (type === 'inline')\n        {\n            this.opts.emptyHtml = '';\n        }\n        else if (this.opts.breakline)\n        {\n            this.opts.markup = 'div';\n            this.opts.emptyHtml = '<div data-redactor-tag=\"br\">' + this.opts.markerChar + '</div>';\n        }\n        else\n        {\n            this.opts.emptyHtml = '<' + this.opts.markup + '></' + this.opts.markup + '>';\n        }\n    },\n    _redefineOptions: function(opts)\n    {\n        for (var key in opts)\n        {\n            this.opts[key] = opts[key];\n        }\n    },\n    _isRootOption: function()\n    {\n        return (typeof this.rootOpts['styles'] !== 'undefined');\n    }\n});\n$R.add('module', 'editor', {\n    init: function(app)\n    {\n        this.app = app;\n        this.uuid = app.uuid;\n        this.opts = app.opts;\n        this.editor = app.editor;\n        this.source = app.source;\n        this.element = app.element;\n        this.component = app.component;\n        this.container = app.container;\n        this.inspector = app.inspector;\n        this.autoparser = app.autoparser;\n\n        // local\n        this.placeholder = false;\n        this.events = false;\n    },\n    // messages\n    onenable: function()\n    {\n        this.enable();\n    },\n    ondisable: function()\n    {\n        this.disable();\n    },\n    onenablefocus: function()\n    {\n        this._enableFocus();\n    },\n    oncontextmenu: function(e)\n    {\n        this.component.setOnEvent(e, true);\n    },\n    onclick: function(e)\n    {\n        this.component.setOnEvent(e);\n    },\n    onkeyup: function(e)\n    {\n        var data = this.inspector.parse(e.target);\n        if (!data.isComponent())\n        {\n            this.component.clearActive();\n        }\n    },\n    onenablereadonly: function()\n    {\n        this._enableReadOnly();\n    },\n    ondisablereadonly: function()\n    {\n        this._disableReadOnly();\n    },\n    onautoparseobserve: function()\n    {\n        this.autoparser.observe();\n    },\n    onplaceholder: {\n        build: function()\n        {\n            this._buildPlaceholder();\n        },\n        toggle: function()\n        {\n            this._togglePlacehodler();\n        }\n    },\n\n    // public\n    start: function()\n    {\n        this._build();\n        this._buildEvents();\n        this._buildOptions();\n        this._buildAccesibility();\n    },\n    stop: function()\n    {\n        var $editor = this.editor.getElement();\n        var $container = this.container.getElement();\n\n        var classesEditor = ['redactor-in', 'redactor-in-' + this.uuid, 'redactor-structure', 'redactor-placeholder', 'notranslate', this.opts.stylesClass];\n        var classesContainer = ['redactor-focus', 'redactor-blur', 'redactor-over', 'redactor-styles-on',\n                                'redactor-styles-off', 'redactor-toolbar-on', 'redactor-text-labeled-on', 'redactor-source-view'];\n\n        $editor.removeAttr('spellcheck');\n        $editor.removeAttr('dir');\n        $editor.removeAttr('contenteditable');\n        $editor.removeAttr('placeholder');\n        $editor.removeAttr('data-gramm_editor');\n        $editor.removeClass(classesEditor.join(' '));\n\n        $container.removeClass(classesContainer.join(' '));\n\n        this._destroyEvents();\n\n        if ($editor.get().classList.length === 0) $editor.removeAttr('class');\n    },\n    enable: function()\n    {\n        var $editor = this.editor.getElement();\n        var $container = this.container.getElement();\n\n        $editor.addClass('redactor-in redactor-in-' + this.uuid);\n        $editor.attr({ 'contenteditable': true });\n\n        if (this.opts.structure)\n        {\n            $editor.addClass('redactor-structure');\n        }\n\n        if (this.opts.toolbar && !this.opts.air && !this.opts.toolbarExternal)\n        {\n            $container.addClass('redactor-toolbar-on');\n        }\n\n        // prevent editing\n        this._disableBrowsersEditing();\n    },\n    disable: function()\n    {\n        var $editor = this.editor.getElement();\n        var $container = this.container.getElement();\n\n        $editor.removeClass('redactor-in redactor-in-' + this.uuid);\n        $editor.removeClass('redactor-structure');\n        $editor.removeAttr('contenteditable');\n\n        $container.addClass('redactor-toolbar-on');\n    },\n\n    // private\n    _build: function()\n    {\n        var $editor = this.editor.getElement();\n        var $element = this.element.getElement();\n        var $container = this.container.getElement();\n\n        $container.addClass('redactor-blur');\n\n        if (!this.opts.grammarly)\n        {\n            $editor.attr('data-gramm_editor', false);\n        }\n\n        if (this.opts.notranslate)\n        {\n            $editor.addClass('notranslate');\n        }\n\n        if (this.opts.styles)\n        {\n            $editor.addClass(this.opts.stylesClass);\n            $container.addClass('redactor-styles-on');\n        }\n        else\n        {\n            $container.addClass('redactor-styles-off');\n        }\n\n        if (this.opts.buttonsTextLabeled)\n        {\n            $container.addClass('redactor-text-labeled-on');\n        }\n\n        if (this.element.isType('textarea')) $element.before($editor);\n    },\n    _buildEvents: function()\n    {\n        this.events = $R.create('editor.events', this.app);\n    },\n    _buildOptions: function()\n    {\n        var $editor = this.editor.getElement();\n\n        $editor.attr('dir', this.opts.direction);\n\n        if (this.opts.tabindex)  $editor.attr('tabindex', this.opts.tabindex);\n        if (this.opts.minHeight) $editor.css('min-height', this.opts.minHeight);\n        if (this.opts.maxHeight) $editor.css('max-height', this.opts.maxHeight);\n        if (this.opts.maxWidth)  $editor.css({ 'max-width': this.opts.maxWidth, 'margin': 'auto' });\n    },\n    _buildAccesibility: function()\n    {\n        var $editor = this.editor.getElement();\n\n        $editor.attr({ 'aria-labelledby': 'redactor-voice-' + this.uuid, 'role': 'presentation' });\n    },\n    _buildPlaceholder: function()\n    {\n        this.placeholder = $R.create('editor.placeholder', this.app);\n    },\n    _enableFocus: function()\n    {\n        if (this.opts.showSource) this._enableFocusSource();\n        else this._enableFocusEditor();\n    },\n    _enableFocusSource: function()\n    {\n        var $source = this.source.getElement();\n\n        if (this.opts.focus)\n        {\n            $source.focus();\n            $source.get().setSelectionRange(0, 0);\n        }\n        else if (this.opts.focusEnd)\n        {\n            $source.focus();\n        }\n    },\n    _enableFocusEditor: function()\n    {\n        if (this.opts.focus)\n        {\n            setTimeout(this.editor.startFocus.bind(this.editor), 100);\n        }\n        else if (this.opts.focusEnd)\n        {\n            setTimeout(this.editor.endFocus.bind(this.editor), 100);\n        }\n    },\n    _togglePlacehodler: function()\n    {\n        if (this.placeholder) this.placeholder.toggle();\n    },\n    _disableBrowsersEditing: function()\n    {\n        try {\n            // FF fix\n            document.execCommand('enableObjectResizing', false, false);\n            document.execCommand('enableInlineTableEditing', false, false);\n            // IE prevent converting links\n            document.execCommand(\"AutoUrlDetect\", false, false);\n\n            // IE disable image resizing\n            var $editor = this.editor.getElement();\n            var el = $editor.get();\n            if (el.addEventListener) el.addEventListener('mscontrolselect', function(e) { e.preventDefault(); });\n            else el.attachEvent('oncontrolselect', function(e) { e.returnValue = false; });\n\n        } catch (e) {}\n    },\n    _destroyEvents: function()\n    {\n        if (this.events)\n        {\n            this.events.destroy();\n        }\n    },\n    _enableReadOnly: function()\n    {\n        var $editor = this.editor.getElement();\n\n        this._getEditables($editor).removeAttr('contenteditable');\n        $editor.removeAttr('contenteditable');\n        $editor.addClass('redactor-read-only');\n\n        if (this.events) this.events.destroy();\n    },\n    _disableReadOnly: function()\n    {\n        var $editor = this.editor.getElement();\n\n        this._getEditables($editor).attr({ 'contenteditable': true });\n        $editor.removeClass('redactor-read-only');\n        $editor.attr({ 'contenteditable': true });\n\n        this._buildEvents();\n    },\n    _getEditables: function($editor)\n    {\n        return $editor.find('figcaption, td, th');\n    }\n});\n$R.add('class', 'editor.placeholder', {\n    init: function(app)\n    {\n        this.app = app;\n        this.opts = app.opts;\n        this.editor = app.editor;\n        this.element = app.element;\n\n        // build\n        this.build();\n    },\n    build: function()\n    {\n        var $element = this.element.getElement();\n        var $editor = this.editor.getElement();\n\n        if (this.opts.placeholder !== false || $element.attr('placeholder'))\n        {\n            var text = (this.opts.placeholder !== false) ? this.opts.placeholder : $element.attr('placeholder');\n            $editor.attr('placeholder', text);\n            this.toggle();\n        }\n    },\n    toggle: function()\n    {\n        return (this.editor.isEmpty(true)) ? this.show() : this.hide();\n    },\n    show: function()\n    {\n        var $editor = this.editor.getElement();\n        $editor.addClass('redactor-placeholder');\n    },\n    hide: function()\n    {\n        var $editor = this.editor.getElement();\n        $editor.removeClass('redactor-placeholder');\n    }\n});\n$R.add('class', 'editor.events', {\n    init: function(app)\n    {\n        this.app = app;\n        this.opts = app.opts;\n        this.$doc = app.$doc;\n        this.uuid = app.uuid;\n        this.source = app.source;\n        this.editor = app.editor;\n        this.cleaner = app.cleaner;\n        this.container = app.container;\n        this.insertion = app.insertion;\n        this.inspector = app.inspector;\n        this.selection = app.selection;\n        this.component = app.component;\n\n        // local\n        this.blurNamespace = '.redactor-blur.' + this.uuid;\n        this.eventsList = ['paste', 'click', 'contextmenu', 'keydown', 'keyup', 'mouseup', 'touchstart',\n                           'cut', 'copy', 'dragenter', 'dragstart', 'drop', 'dragover', 'dragleave'];\n\n        // init\n        this._init();\n    },\n    destroy: function()\n    {\n        var $editor = this.editor.getElement();\n\n        $editor.off('.redactor-focus');\n        this.$doc.off('keyup' + this.blurNamespace + ' mousedown' + this.blurNamespace);\n\n        // all events\n        this._loop('off');\n    },\n    focus: function(e)\n    {\n        var $container = this.container.getElement();\n\n        if (this.editor.isPasting() || $container.hasClass('redactor-focus')) return;\n\n        $container.addClass('redactor-focus');\n        $container.removeClass('redactor-blur');\n\n        this.app.broadcast('observe', e);\n        this.app.broadcast('focus', e);\n\n        this.isFocused = true;\n        this.isBlured = false;\n    },\n    blur: function(e)\n    {\n        var $container = this.container.getElement();\n        var $target = $R.dom(e.target);\n        var targets = ['.redactor-in-' + this.uuid,  '.redactor-toolbar', '.redactor-dropdown',\n        '.redactor-context-toolbar', '#redactor-modal', '#redactor-image-resizer'];\n\n        this.app.broadcast('originalblur', e);\n        if (this.app.stopBlur) return;\n\n        if (!this.app.isStarted() || this.editor.isPasting()) return;\n        if ($target.closest(targets.join(',')).length !== 0) return;\n\n        if (!this.isBlured && !$container.hasClass('redactor-blur'))\n        {\n            $container.removeClass('redactor-focus');\n            $container.addClass('redactor-blur');\n            this.app.broadcast('blur', e);\n\n            this.isFocused = false;\n            this.isBlured = true;\n        }\n    },\n    cut: function(e)\n    {\n        var current = this.selection.getCurrent();\n        var data = this.inspector.parse(current);\n\n        this.app.broadcast('state', e);\n\n        if (this.component.isNonEditable(current))\n        {\n            this._passSelectionToClipboard(e, data, true);\n            e.preventDefault();\n        }\n    },\n    copy: function(e)\n    {\n        var current = this.selection.getCurrent();\n        var data = this.inspector.parse(current);\n\n        this.app.broadcast('state', e);\n\n        if (this.component.isNonEditable(current))\n        {\n            this._passSelectionToClipboard(e, data, false);\n            e.preventDefault();\n        }\n    },\n    drop: function(e)\n    {\n        e = e.originalEvent || e;\n        e.stopPropagation();\n        this._removeOverClass();\n\n        if (this.opts.dragUpload === false)\n        {\n            e.preventDefault();\n            return;\n        }\n\n        if (this.app.isDragComponentInside())\n        {\n            var $dragComponent = $R.dom(this.app.getDragComponentInside());\n            var $component = $dragComponent.clone(true);\n            this.insertion.insertToPoint(e, $component);\n\n            $dragComponent.remove();\n\n            this.app.setDragComponentInside(false);\n            this.app.broadcast('state', e);\n            this.app.broadcast('drop', e);\n            this.app.broadcast('image.observe', e);\n\n            e.preventDefault();\n\n            return;\n        }\n        else if (this.app.isDragInside() && this.opts.input)\n        {\n            this.insertion.insertPoint(e);\n\n            var dt = e.dataTransfer;\n            var html = dt.getData('text/html');\n\n            // clear selected\n            var range = this.selection.getRange();\n            if (range)\n            {\n                var blocks = this.selection.getBlocks();\n                range.deleteContents();\n\n                // remove empty blocks\n                for (var i = 0; i < blocks.length; i++)\n                {\n                    if (blocks[i].innerHTML === '') $R.dom(blocks[i]).remove();\n                }\n            }\n\n            // paste\n            $R.create('input.paste', this.app, e, true, html, true);\n\n            this.app.broadcast('state', e);\n            this.app.broadcast('drop', e);\n\n            this.app.setDragInside(false);\n            e.preventDefault();\n\n            return;\n        }\n\n        this.app.broadcast('state', e);\n        this.app.broadcast('paste', e, e.dataTransfer);\n        this.app.broadcast('drop', e);\n\n    },\n    dragenter: function(e)\n    {\n        e.preventDefault();\n    },\n    dragstart: function(e)\n    {\n        this.app.setDragComponentInside(false);\n        this.app.setDragInside(false);\n\n        var data = this.inspector.parse(e.target);\n        if (data.isComponent() && !data.isComponentEditable() && !data.isFigcaption())\n        {\n            this.app.setDragComponentInside(data.getComponent());\n        }\n        else if (this.selection.is() && !this.selection.isCollapsed())\n        {\n            // drag starts inside editor\n            this.app.setDragInside(true);\n            this._setDragData(e);\n        }\n\n        this.app.broadcast('dragstart', e);\n    },\n    dragover: function(e)\n    {\n        this.app.broadcast('dragover', e);\n    },\n    dragleave: function(e)\n    {\n        this.app.broadcast('dragleave', e);\n    },\n    paste: function(e)\n    {\n        this.app.broadcast('paste', e);\n    },\n    contextmenu: function(e)\n    {\n        // chrome crashes fix\n        this.editor.disableNonEditables();\n\n        setTimeout(function()\n        {\n            this.editor.enableNonEditables();\n            this.app.broadcast('contextmenu', e);\n\n        }.bind(this), 0);\n    },\n    click: function(e)\n    {\n        // triple click selection\n        if (e.detail === 3)\n        {\n            e.preventDefault();\n\n            var block = this.selection.getBlock();\n            var range = document.createRange();\n            range.selectNodeContents(block);\n            this.selection.setRange(range)\n        }\n\n        // observe bottom click\n        var $target = $R.dom(e.target);\n        if ($target.hasClass('redactor-in'))\n        {\n            var top = $target.offset().top;\n            var pad = parseFloat($target.css('padding-bottom'));\n            var height = $target.height();\n            var posHeight = top + height - pad*2;\n\n            if (posHeight < e.pageY)\n            {\n                this.app.broadcast('bottomclick', e);\n            }\n        }\n\n        this.app.broadcast('state', e);\n        this.app.broadcast('click', e);\n    },\n    keydown: function(e)\n    {\n        this.app.broadcast('state', e);\n        var stop = this.app.broadcast('keydown', e);\n        if (stop === false)\n        {\n            return e.preventDefault();\n        }\n    },\n    keyup: function(e)\n    {\n        this.app.broadcast('keyup', e);\n    },\n    mouseup: function(e)\n    {\n        this.app.broadcast('observe', e);\n        this.app.broadcast('state', e);\n    },\n    touchstart: function(e)\n    {\n        this.app.broadcast('observe', e);\n        this.app.broadcast('state', e);\n    },\n\n    // private\n    _init: function()\n    {\n        var $editor = this.editor.getElement();\n\n        $editor.on('focus.redactor-focus click.redactor-focus', this.focus.bind(this));\n        this.$doc.on('keyup' + this.blurNamespace + ' mousedown' + this.blurNamespace, this.blur.bind(this));\n\n        // all events\n        this._loop('on');\n    },\n    _removeOverClass: function()\n    {\n        var $editor = this.editor.getElement();\n        $editor.removeClass('over');\n    },\n    _loop: function(func)\n    {\n        var $editor = this.editor.getElement();\n        for (var i = 0; i < this.eventsList.length; i++)\n        {\n            var event = this.eventsList[i] + '.redactor-events';\n            var method = this.eventsList[i];\n\n            $editor[func](event, this[method].bind(this));\n        }\n    },\n    _passAllToClipboard: function(e)\n    {\n        var clipboard = e.clipboardData;\n        var content = this.source.getCode();\n\n        clipboard.setData('text/html', content);\n        clipboard.setData('text/plain', content.toString().replace(/\\n$/, \"\"));\n    },\n    _passSelectionToClipboard: function(e, data, remove)\n    {\n        var clipboard = e.clipboardData;\n        var node = data.getComponent();\n        var $node = $R.dom(node);\n        var $cloned = $node.clone();\n\n        // clean\n        $cloned.find('.redactor-component-caret').remove();\n        $cloned.removeClass('redactor-component-active');\n        $cloned.removeAttr('contenteditable');\n        $cloned.removeAttr('tabindex');\n\n        // html\n        var content = $cloned.get().outerHTML;\n\n        if (remove) this.component.remove(node);\n\n        clipboard.setData('text/html', content);\n        clipboard.setData('text/plain', content.toString().replace(/\\n$/, \"\"));\n    },\n    _setDragData: function(e)\n    {\n        e = e.originalEvent || e;\n\n        var dt = e.dataTransfer;\n        dt.effectAllowed = 'move';\n        dt.setData('text/Html', this.selection.getHtml());\n    }\n});\n$R.add('module', 'container', {\n    init: function(app)\n    {\n        this.app = app;\n        this.uuid = app.uuid;\n        this.opts = app.opts;\n        this.lang = app.lang;\n        this.element = app.element;\n        this.container = app.container;\n    },\n    // public\n    start: function()\n    {\n        this._build();\n        this._buildAccesibility();\n    },\n    stop: function()\n    {\n        var $element = this.element.getElement();\n        var $container = this.container.getElement();\n\n        $container.after($element);\n        $container.remove();\n        $element.show();\n    },\n\n    // private\n    _build: function()\n    {\n        var $element = this.element.getElement();\n        var $container = this.container.getElement();\n\n        $container.addClass('redactor-box');\n        $container.attr('dir', this.opts.direction);\n\n        if (this.element.isType('inline')) $container.addClass('redactor-inline');\n\n        $element.after($container);\n        $container.append($element);\n    },\n    _buildAccesibility: function()\n    {\n        var $container = this.container.getElement();\n        var $label = $R.dom('<span />');\n\n        $label.addClass('redactor-voice-label');\n        $label.attr({ 'id': 'redactor-voice-' + this.uuid, 'aria-hidden': false });\n        $label.html(this.lang.get('accessibility-help-label'));\n\n        $container.prepend($label);\n    }\n});\n$R.add('module', 'source', {\n    init: function(app)\n    {\n        this.app = app;\n        this.uuid = app.uuid;\n        this.opts = app.opts;\n        this.utils = app.utils;\n        this.element = app.element;\n        this.source = app.source;\n        this.editor = app.editor;\n        this.toolbar = app.toolbar;\n        this.cleaner = app.cleaner;\n        this.component = app.component;\n        this.container = app.container;\n        this.autoparser = app.autoparser;\n        this.selection = app.selection;\n\n        // local\n        this.syncedHtml = '';\n    },\n    // messages\n    onstartcode: function()\n    {\n        var sourceContent = this.source.getStartedContent();\n        var $editor = this.editor.getElement();\n        var $source = this.source.getElement();\n\n        // autoparse\n        if (this.opts.autoparse && this.opts.autoparseStart)\n        {\n            sourceContent = this.autoparser.parse(sourceContent);\n        }\n\n        // started content\n        var startContent = this.cleaner.input(sourceContent, true, true);\n        var syncContent = this.cleaner.output(startContent);\n\n        // set content\n        $editor.html(startContent);\n        $source.val(syncContent);\n\n        this.syncedHtml = syncContent;\n        this.app.broadcast('placeholder.build');\n        this.app.broadcast('autoparseobserve');\n\n        // widget's scripts\n        this.component.executeScripts();\n    },\n    onstartcodeshow: function()\n    {\n        this.show();\n    },\n    ontrytosync: function()\n    {\n        this.sync();\n    },\n    onhardsync: function()\n    {\n        var $editor = this.editor.getElement();\n        var html = $editor.html();\n\n        html = this.app.broadcast('syncBefore', html);\n        html = this.cleaner.output(html);\n\n        this._syncing(html);\n    },\n\n    // public\n    start: function()\n    {\n        this._build();\n        this._buildClasses();\n    },\n    stop: function()\n    {\n        var $element = this.element.getElement();\n        var $source = this.source.getElement();\n\n        $element.removeClass('redactor-source redactor-source-open');\n        $source.off('input.redactor-source');\n        $source.removeAttr('data-gramm_editor');\n\n        if ($source.get().classList.length === 0) $source.removeAttr('class');\n        if (!this.source.isNameGenerated()) $element.removeAttr('name');\n        if (!this.element.isType('textarea')) $source.remove();\n\n    },\n    getCode: function()\n    {\n        return this.source.getCode();\n    },\n\n    // public\n    toggle: function()\n    {\n        if (!this.opts.source) return;\n\n        var $source = this.source.getElement();\n\n        return ($source.hasClass('redactor-source-open')) ? this.hide() : this.show();\n    },\n    show: function()\n    {\n        if (!this.opts.source) return;\n\n        var $editor = this.editor.getElement();\n        var $source = this.source.getElement();\n        var $container = this.container.getElement();\n\n        var html = $source.val();\n\n        if (this.app.isStarted()) html = this.app.broadcast('source.open', html);\n\n        // insert markers\n        var sourceSelection = $R.create('source.selection', this.app);\n\n        var editorHtml = sourceSelection.insertMarkersToEditor();\n        editorHtml = this.cleaner.output(editorHtml, false);\n        editorHtml = editorHtml.trim();\n\n        // get height\n        var editorHeight = $editor.height();\n\n        $editor.hide();\n        $source.height(editorHeight);\n        $source.val(html.trim());\n        $source.show();\n        $source.addClass('redactor-source-open');\n        $source.on('input.redactor-source-events', this._onChangedSource.bind(this));\n        $source.on('keydown.redactor-source-events', this._onTabKey.bind(this));\n        $source.on('focus.redactor-source-events', this._onFocus.bind(this));\n\n        $container.addClass('redactor-source-view');\n\n        // offset markers\n        sourceSelection.setSelectionOffsetSource(editorHtml);\n\n        // buttons\n        setTimeout(function()\n        {\n            this._disableButtons();\n            this._setActiveSourceButton();\n\n        }.bind(this), 100);\n\n        if (this.app.isStarted()) this.app.broadcast('source.opened');\n    },\n    hide: function()\n    {\n        if (!this.opts.source) return;\n\n        var $editor = this.editor.getElement();\n        var $source = this.source.getElement();\n        var $container = this.container.getElement();\n\n        var html = $source.val();\n\n        // insert markers\n        var sourceSelection = $R.create('source.selection', this.app);\n        html = sourceSelection.insertMarkersToSource(html);\n\n        // clean\n        html = this.cleaner.input(html, true);\n        html = (this.utils.isEmptyHtml(html)) ? this.opts.emptyHtml : html;\n        html = this.app.broadcast('source.close', html);\n\n        // buttons\n        this._enableButtons();\n        this._setInactiveSourceButton();\n\n        $source.hide();\n        $source.removeClass('redactor-source-open');\n        $source.off('.redactor-source-events');\n        $editor.show();\n        $editor.html(html);\n\n        $container.removeClass('redactor-source-view');\n\n        setTimeout(function()\n        {\n            if (sourceSelection.isOffset()) this.selection.restoreMarkers();\n            else if (sourceSelection.isOffsetEnd()) this.editor.endFocus();\n            else this.editor.startFocus();\n\n            // widget's scripts\n            this.component.executeScripts();\n\n        }.bind(this), 0);\n\n        this.app.broadcast('source.closed');\n    },\n    sync: function()\n    {\n        var self = this;\n        var $editor = this.editor.getElement();\n        var html = $editor.html();\n\n        html = this.app.broadcast('syncBefore', html);\n        html = this.cleaner.output(html);\n\n        if (this._isSync(html))\n        {\n            if (this.timeout) clearTimeout(this.timeout);\n            this.timeout = setTimeout(function() { self._syncing(html); }, 200);\n        }\n    },\n\n    // private\n    _build: function()\n    {\n        var $source = this.source.getElement();\n        var $element = this.element.getElement();\n\n        $source.hide();\n\n        if (!this.opts.grammarly)\n        {\n            $source.attr('data-gramm_editor', false);\n        }\n\n        if (!this.element.isType('textarea'))\n        {\n            $element.after($source);\n        }\n    },\n    _buildClasses: function()\n    {\n        var $source = this.source.getElement();\n\n        $source.addClass('redactor-source');\n    },\n    _syncing: function(html)\n    {\n        html = this.app.broadcast('syncing', html);\n\n        var $source = this.source.getElement();\n        $source.val(html);\n\n        this.app.broadcast('synced', html);\n        this.app.broadcast('changed', html);\n    },\n    _isSync: function(html)\n    {\n        if (this.syncedHtml !== html)\n        {\n            this.syncedHtml = html;\n            return true;\n        }\n\n        return false;\n    },\n    _onChangedSource: function()\n    {\n        var $source = this.source.getElement();\n        var html = $source.val();\n\n        this.app.broadcast('changed', html);\n        this.app.broadcast('source.changed', html);\n    },\n    _onTabKey: function(e)\n    {\n        if (e.keyCode !== 9) return true;\n\n        e.preventDefault();\n\n        var $source = this.source.getElement();\n        var el = $source.get();\n        var start = el.selectionStart;\n\n        $source.val($source.val().substring(0, start) + \"    \" + $source.val().substring(el.selectionEnd));\n        el.selectionStart = el.selectionEnd = start + 4;\n    },\n    _onFocus: function()\n    {\n        this.app.broadcast('sourcefocus');\n    },\n    _disableButtons: function()\n    {\n        this.toolbar.disableButtons();\n    },\n    _enableButtons: function()\n    {\n        this.toolbar.enableButtons();\n    },\n    _setActiveSourceButton: function()\n    {\n        var $btn = this.toolbar.getButton('html');\n        $btn.enable();\n        $btn.setActive();\n    },\n    _setInactiveSourceButton: function()\n    {\n        var $btn = this.toolbar.getButton('html');\n        $btn.setInactive();\n    }\n});\n$R.add('class', 'source.selection', {\n    init: function(app)\n    {\n        this.app = app;\n        this.utils = app.utils;\n        this.source = app.source;\n        this.editor = app.editor;\n        this.marker = app.marker;\n        this.component = app.component;\n        this.selection = app.selection;\n\n        // local\n        this.markersOffset = false;\n        this.markersOffsetEnd = false;\n    },\n    insertMarkersToEditor: function()\n    {\n        var $editor = this.editor.getElement();\n        var start = this.marker.build('start');\n        var end = this.marker.build('end');\n        var component = this.component.getActive();\n        if (component)\n        {\n            this.marker.remove();\n            var $component = $R.dom(component);\n\n            $component.after(end);\n            $component.after(start);\n        }\n        else if (window.getSelection && this.selection.is())\n        {\n            this.marker.insert('both');\n        }\n\n        return this._getHtmlAndRemoveMarkers($editor);\n    },\n    setSelectionOffsetSource: function(editorHtml)\n    {\n        var start = 0;\n        var end = 0;\n        var $source = this.source.getElement();\n        if (editorHtml !== '')\n        {\n            var startMarker = this.utils.removeInvisibleChars(this.marker.buildHtml('start'));\n            var endMarker = this.utils.removeInvisibleChars(this.marker.buildHtml('end'));\n\n            start = this._strpos(editorHtml, startMarker);\n            end = this._strpos(editorHtml, endMarker) - endMarker.toString().length - 2;\n\n            if (start === false)\n            {\n                start = 0;\n                end = 0;\n            }\n        }\n\n        $source.get().setSelectionRange(start, end);\n        $source.get().scrollTop = 0;\n\n        setTimeout(function() { $source.focus(); }.bind(this), 0);\n    },\n    isOffset: function()\n    {\n        return this.markersOffset;\n    },\n    isOffsetEnd: function()\n    {\n        return this.markersOffsetEnd;\n    },\n    insertMarkersToSource: function(html)\n    {\n        var $source = this.source.getElement();\n        var markerStart = this.marker.buildHtml('start');\n        var markerEnd = this.marker.buildHtml('end');\n\n        var markerLength = markerStart.toString().length;\n        var startOffset = this._enlargeOffset(html, $source.get().selectionStart);\n        var endOffset = this._enlargeOffset(html, $source.get().selectionEnd);\n        var sizeOffset = html.length;\n\n        if (startOffset === sizeOffset)\n        {\n            this.markersOffsetEnd = true;\n        }\n        else if (startOffset !== 0 && endOffset !== 0)\n        {\n            this.markersOffset = true;\n\n            html = html.substr(0, startOffset) + markerStart + html.substr(startOffset);\n            html = html.substr(0, endOffset + markerLength) + markerEnd + html.substr(endOffset + markerLength);\n        }\n        else\n        {\n            this.markersOffset = false;\n        }\n\n        return html;\n    },\n\n    // private\n    _getHtmlAndRemoveMarkers: function($editor)\n    {\n        var html = $editor.html();\n        $editor.find('.redactor-selection-marker').remove();\n\n        return html;\n    },\n    _strpos: function(haystack, needle, offset)\n    {\n        var i = haystack.indexOf(needle, offset);\n        return i >= 0 ? i : false;\n    },\n    _enlargeOffset: function(html, offset)\n    {\n        var htmlLength = html.length;\n        var c = 0;\n\n        if (html[offset] === '>')\n        {\n            c++;\n        }\n        else\n        {\n            for(var i = offset; i <= htmlLength; i++)\n            {\n                c++;\n\n                if (html[i] === '>')\n                {\n                    break;\n                }\n                else if (html[i] === '<' || i === htmlLength)\n                {\n                    c = 0;\n                    break;\n                }\n            }\n        }\n\n        return offset + c;\n    }\n});\n$R.add('module', 'observer', {\n    init: function(app)\n    {\n        this.app = app;\n        this.editor = app.editor;\n\n        // local\n        this.observerUnit = false;\n    },\n    // public\n    start: function()\n    {\n        if (window.MutationObserver)\n        {\n            var $editor = this.editor.getElement();\n            var el = $editor.get();\n            this.observerUnit = this._build(el);\n            this.observerUnit.observe(el, {\n                 attributes: true,\n                 subtree: true,\n                 childList: true,\n                 characterData: true,\n                 characterDataOldValue: true\n            });\n        }\n    },\n    stop: function()\n    {\n        if (this.observerUnit) this.observerUnit.disconnect();\n    },\n\n    // private\n    _build: function(el)\n    {\n        var self = this;\n        return new MutationObserver(function(mutations)\n        {\n            self._observe(mutations[mutations.length-1], el);\n        });\n    },\n    _observe: function(mutation, el)\n    {\n        if (this.app.isReadOnly() || (mutation.type === 'attributes' && mutation.target === el))\n        {\n            return;\n        }\n\n        this.app.broadcast('observe');\n        this.app.broadcast('trytosync');\n        this.app.broadcast('placeholder.toggle');\n    }\n});\n$R.add('module', 'clicktoedit', {\n    init: function(app)\n    {\n        this.app = app;\n        this.opts = app.opts;\n        this.source = app.source;\n        this.editor = app.editor;\n        this.container = app.container;\n        this.selection = app.selection;\n    },\n    // messages\n    onstartclicktoedit: function()\n    {\n        this.start();\n    },\n    onenablereadonly: function()\n    {\n        if (!this._isEnabled()) this.stop();\n    },\n    ondisablereadonly: function()\n    {\n        if (!this._isEnabled()) this.start();\n    },\n    onstop: function()\n    {\n        this.stop();\n    },\n\n    // public\n    start: function()\n    {\n        this._build();\n    },\n    stop: function()\n    {\n        if (this.buttonSave) this.buttonSave.stop();\n        if (this.buttonCancel) this.buttonCancel.stop();\n\n        this._destroy();\n        this.app.broadcast('disable');\n    },\n    enable: function()\n    {\n        this.app.broadcast('clickStart');\n\n        var isEmpty = this.editor.isEmpty();\n        if (!isEmpty) this.selection.saveMarkers();\n\n        this._setFocus();\n        this._destroy();\n        this.app.broadcast('enable');\n        this.buttonSave.enable();\n        this.buttonCancel.enable();\n\n        if (!isEmpty) this.selection.restoreMarkers();\n        if (isEmpty) this.editor.focus();\n\n        var $container = this.container.getElement();\n        $container.addClass('redactor-clicktoedit-enabled');\n\n        this.source.rebuildStartedContent();\n\n        this.app.broadcast('startcode');\n        this.app.broadcast('image.observe');\n    },\n    save: function(e)\n    {\n        if (e) e.preventDefault();\n\n        var html = this.source.getCode();\n\n        this.app.broadcast('disable');\n        this.app.broadcast('clickSave', html);\n        this.app.broadcast('clickStop');\n        this._build();\n    },\n    cancel: function(e)\n    {\n        if (e) e.preventDefault();\n\n        var html = this.saved;\n        var $editor = this.editor.getElement();\n        $editor.html(html);\n\n        this.saved = '';\n\n        this.app.broadcast('disable');\n        this.app.broadcast('clickCancel', html);\n        this.app.broadcast('clickStop');\n        this._build();\n    },\n\n    // private\n    _build: function()\n    {\n        // buttons\n        this.buttonSave = $R.create('clicktoedit.button', 'save', this.app, this);\n        this.buttonCancel = $R.create('clicktoedit.button', 'cancel', this.app, this);\n\n        this.buttonSave.stop();\n        this.buttonCancel.stop();\n\n        var $editor = this.editor.getElement();\n        var $container = this.container.getElement();\n\n        $editor.on('click.redactor-click-to-edit mouseup.redactor-click-to-edit', this.enable.bind(this));\n        $container.addClass('redactor-over');\n        $container.removeClass('redactor-clicktoedit-enabled');\n    },\n    _isEnabled: function()\n    {\n        return this.container.getElement().hasClass('redactor-clicktoedit-enabled');\n    },\n    _destroy: function()\n    {\n        var $editor = this.editor.getElement();\n        var $container = this.container.getElement();\n\n        $editor.off('.redactor-click-to-edit');\n        $container.removeClass('redactor-over redactor-clicktoedit-enabled');\n    },\n    _setFocus: function()\n    {\n        this.saved = this.source.getCode();\n\n        this.buttonSave.start();\n        this.buttonCancel.start();\n    }\n});\n$R.add('class', 'clicktoedit.button', {\n    init: function(type, app, context)\n    {\n        this.app = app;\n        this.opts = app.opts;\n        this.toolbar = app.toolbar;\n        this.context = context;\n\n        // local\n        this.type = type;\n        this.name = (type === 'save') ? 'clickToSave' : 'clickToCancel';\n        this.objected = false;\n        this.enabled = false;\n        this.namespace = '.redactor-click-to-edit';\n\n        // build\n        this._build();\n    },\n    enable: function()\n    {\n        if (!this.objected) return;\n\n        var data = this.opts[this.name];\n        data.api = 'module.clicktoedit.' + this.type;\n\n        this.toolbar.addButton(this.type, data);\n        this.enabled = true;\n    },\n    start: function()\n    {\n        if (this.objected) return;\n\n        this.$button.off(this.namespace);\n        this.$button.show();\n        this.$button.on('click' + this.namespace, this.context[this.type].bind(this.context));\n    },\n    stop: function()\n    {\n        if (this.objected || !this.enabled) return;\n\n        this.$button.hide();\n    },\n\n    // private\n    _build: function()\n    {\n        this.objected = (typeof this.opts[this.name] === 'object');\n\n        if (!this.objected)\n        {\n            this.$button = $R.dom(this.opts[this.name]);\n            this.enabled = true;\n        }\n    }\n});\n$R.add('module', 'statusbar', {\n    init: function(app)\n    {\n        this.app = app;\n        this.opts = app.opts;\n        this.element = app.element;\n        this.statusbar = app.statusbar;\n        this.container = app.container;\n    },\n    // public\n    start: function()\n    {\n        if (!this.element.isType('inline'))\n        {\n            var $statusbar = this.statusbar.getElement();\n            var $container = this.container.getElement();\n\n            $statusbar.addClass('redactor-statusbar');\n            $container.append($statusbar);\n        }\n    }\n});\n$R.add('module', 'contextbar', {\n    init: function(app)\n    {\n        this.app = app;\n        this.opts = app.opts;\n        this.uuid = app.uuid;\n        this.$win = app.$win;\n        this.$doc = app.$doc;\n        this.$body = app.$body;\n        this.editor = app.editor;\n        this.toolbar = app.toolbar;\n        this.detector = app.detector;\n\n        // local\n        this.$target = (this.toolbar.isTarget()) ? this.toolbar.getTargetElement() : this.$body;\n    },\n    // messages\n    onenablereadonly: function()\n    {\n        this.stop();\n    },\n    ondisablereadonly: function()\n    {\n        this.start();\n    },\n    oncontextbar: {\n        close: function()\n        {\n            this.close();\n        }\n    },\n\n    // public\n    start: function()\n    {\n        if (this.opts.toolbarContext)\n        {\n            var $editor = this.editor.getElement();\n\n            this._build();\n            $editor.on('click.redactor-context mouseup.redactor-context', this.open.bind(this));\n\n            if (this.opts.scrollTarget)\n            {\n                $R.dom(this.opts.scrollTarget).on('scroll.redactor-context', this.close.bind(this));\n            }\n        }\n    },\n    stop: function()\n    {\n        var $editor = this.editor.getElement();\n        $editor.off('.redactor-context');\n\n        this.$doc.off('.redactor-context');\n        this.$win.off('.redactor-context');\n\n        if (this.$contextbar) this.$contextbar.remove();\n        if (this.opts.scrollTarget)\n        {\n            $R.dom(this.opts.scrollTarget).off('.redactor-context');\n        }\n    },\n    is: function()\n    {\n        return (this.$contextbar && this.$contextbar.hasClass('open'));\n    },\n    set: function(e, node, buttons, position)\n    {\n        this.$contextbar.html('');\n        this.$el = $R.dom(node);\n\n        // buttons\n        for (var key in buttons)\n        {\n            var $btn = $R.create('contextbar.button', this.app, buttons[key]);\n            if ($btn.html() !== '')\n            {\n                this.$contextbar.append($btn);\n            }\n        }\n\n        // show\n        var pos = this._buildPosition(e, this.$el, position);\n\n        this.$contextbar.css(pos);\n        this.$contextbar.show();\n        this.$contextbar.addClass('open');\n        this.$doc.on('click.redactor-context mouseup.redactor-context', this.close.bind(this));\n        this.$win.on('resize.redactor-context', this.close.bind(this));\n    },\n    open: function(e)\n    {\n        setTimeout(function()\n        {\n            this.app.broadcast('contextbar', e, this);\n        }.bind(this), 0);\n    },\n    close: function(e)\n    {\n        if (!this.$contextbar) return;\n        if (e)\n        {\n            var $target = $R.dom(e.target);\n            if (this.$el && $target.closest(this.$el).length !== 0)\n            {\n                return;\n            }\n        }\n\n        this.$contextbar.hide();\n        this.$contextbar.removeClass('open');\n        this.$doc.off('.redactor.context');\n    },\n\n    // private\n    _build: function()\n    {\n        this.$contextbar = $R.dom('<div>');\n        this.$contextbar.attr('id', 'redactor-context-toolbar-' + this.uuid);\n        this.$contextbar.attr('dir', this.opts.direction);\n        this.$contextbar.addClass('redactor-context-toolbar');\n        this.$contextbar.hide();\n\n        this.$target.append(this.$contextbar);\n    },\n    _buildPosition: function(e, $el, position)\n    {\n        var top, left;\n        var isTarget = this.toolbar.isTarget();\n        var offset = (isTarget) ? $el.position() : $el.offset();\n        var width = $el.width();\n        var height = $el.height();\n\n        var barWidth = this.$contextbar.width();\n        var barHeight = this.$contextbar.height();\n        var docScrollTop = (isTarget) ? (this.$target.scrollTop() + this.$doc.scrollTop()) : this.$doc.scrollTop();\n\n        var targetOffset = this.$target.offset();\n        var leftFix = (isTarget) ? targetOffset.left : 0;\n        var topFix = (isTarget) ? targetOffset.top : 0;\n\n        if (!position)\n        {\n            top = (e.clientY + docScrollTop - barHeight);\n            left = (e.clientX - barWidth/2);\n        }\n        else if (position === 'top')\n        {\n            top = (offset.top - barHeight);\n            left = (offset.left + width/2 - barWidth/2);\n        }\n        else if (position === 'bottom')\n        {\n            top = (offset.top + height);\n            left = (offset.left + width/2 - barWidth/2);\n        }\n\n        if (left < 0) left = 0;\n\n        return { top: (top - topFix) + 'px', left: (left - leftFix) + 'px' };\n    }\n});\n$R.add('class', 'contextbar.button', {\n    mixins: ['dom'],\n    init: function(app, obj)\n    {\n        this.app = app;\n\n        // local\n        this.obj = obj;\n\n        // init\n        this._init();\n    },\n    // private\n    _init: function()\n    {\n        this.parse('<a>');\n        this.attr('href', '#');\n\n        this._buildTitle();\n        this._buildMessage();\n    },\n    _buildTitle: function()\n    {\n        this.html(this.obj.title);\n    },\n    _buildMessage: function()\n    {\n        if (typeof this.obj.message !== 'undefined' || typeof this.obj.api !== 'undefined')\n        {\n            this.on('click', this._toggle.bind(this));\n        }\n    },\n    _toggle: function(e)\n    {\n        e.preventDefault();\n\n        if (this.obj.message)\n        {\n            this.app.broadcast(this.obj.message, this.obj.args);\n        }\n        else if (this.obj.api)\n        {\n            this.app.api(this.obj.api, this.obj.args);\n        }\n    }\n});\n$R.add('module', 'toolbar', {\n    init: function(app)\n    {\n        this.app = app;\n        this.uuid = app.uuid;\n        this.opts = app.opts;\n        this.utils = app.utils;\n        this.toolbar = app.toolbar;\n\n        // local\n        this.buttons = [];\n        this.toolbarModule = false;\n    },\n    // messages\n    onsource: {\n        open: function()\n        {\n            if (!this.toolbar.isAir() && this.toolbar.isFixed())\n            {\n                this.toolbarModule.resetPosition();\n            }\n        },\n        opened: function()\n        {\n            if (this.toolbar.isAir() && this.toolbarModule)\n            {\n                this.toolbarModule.createSourceHelper();\n            }\n\n            // hide tooltips\n            setTimeout(function()\n            {\n                $R.dom('.re-button-tooltip-' + this.uuid).remove();\n            }.bind(this), 100)\n\n        },\n        close: function()\n        {\n            if (this.toolbar.isAir() && this.toolbarModule)\n            {\n                this.toolbarModule.destroySourceHelper();\n            }\n        },\n        closed: function()\n        {\n            if (this.toolbar.is() && this.opts.air)\n            {\n                this.toolbarModule.openSelected();\n            }\n        }\n    },\n    onobserve: function()\n    {\n        if (this.toolbar.is())\n        {\n            this.toolbar.observe();\n        }\n    },\n    onfocus: function()\n    {\n        this._setExternalOnFocus();\n    },\n    onsourcefocus: function()\n    {\n        this._setExternalOnFocus();\n    },\n    onempty: function()\n    {\n        if (this.toolbar.isFixed())\n        {\n            this.toolbarModule.resetPosition();\n        }\n    },\n    onenablereadonly: function()\n    {\n        if (this.toolbar.isAir())\n        {\n            this.toolbarModule.close();\n        }\n    },\n\n    // public\n    start: function()\n    {\n        if (this.toolbar.is())\n        {\n            this._buildButtons();\n            this._initToolbar();\n            this._initButtons();\n        }\n    },\n    stop: function()\n    {\n        if (this.toolbarModule)\n        {\n            this.toolbarModule.stop();\n        }\n\n        // stop dropdowns\n        $R.dom('.redactor-dropdown-' + this.uuid).remove();\n    },\n\n    // private\n    _buildButtons: function()\n    {\n        this.buttons = this.opts.buttons.concat();\n\n        this._buildImageButton();\n        this._buildFileButton();\n        this._buildSourceButton();\n        this._buildAdditionalButtons();\n        this._buildHiddenButtons();\n    },\n    _buildImageButton: function()\n    {\n        if (!this.opts.imageUpload) this.utils.removeFromArrayByValue(this.buttons, 'image');\n    },\n    _buildFileButton: function()\n    {\n        if (!this.opts.fileUpload) this.utils.removeFromArrayByValue(this.buttons, 'file');\n    },\n    _buildSourceButton: function()\n    {\n        if (!this.opts.source) this.utils.removeFromArrayByValue(this.buttons, 'html');\n    },\n    _buildAdditionalButtons: function()\n    {\n        // end\n        if (this.opts.buttonsAdd.length !== 0)\n        {\n            this.opts.buttonsAdd = this._removeExistButtons(this.opts.buttonsAdd);\n            this.buttons = this.buttons.concat(this.opts.buttonsAdd);\n        }\n\n        // beginning\n        if (this.opts.buttonsAddFirst.length !== 0)\n        {\n            this.opts.buttonsAddFirst = this._removeExistButtons(this.opts.buttonsAddFirst);\n            this.buttons.unshift(this.opts.buttonsAddFirst);\n        }\n\n        var index, btns;\n\n        // after\n        if (this.opts.buttonsAddAfter !== false)\n        {\n            index = this.buttons.indexOf(this.opts.buttonsAddAfter.after) + 1;\n            btns = this.opts.buttonsAddAfter.buttons;\n            for (var i = 0; i < btns.length; i++)\n            {\n                this.buttons.splice(index+i, 0, btns[i]);\n            }\n        }\n\n        // before\n        if (this.opts.buttonsAddBefore !== false)\n        {\n            index = this.buttons.indexOf(this.opts.buttonsAddBefore.before)+1;\n            btns = this.opts.buttonsAddBefore.buttons;\n            for (var i = 0; i < btns.length; i++)\n            {\n                this.buttons.splice(index-(1-i), 0, btns[i]);\n            }\n        }\n    },\n    _buildHiddenButtons: function()\n    {\n        if (this.opts.buttonsHide.length !== 0)\n        {\n            var buttons = this.opts.buttonsHide;\n            for (var i = 0; i < buttons.length; i++)\n            {\n                this.utils.removeFromArrayByValue(this.buttons, buttons[i]);\n            }\n        }\n    },\n    _removeExistButtons: function(buttons)\n    {\n        for (var i = 0; i < buttons.length; i++)\n        {\n            if (this.opts.buttons.indexOf(buttons[i]) !== -1)\n            {\n                this.utils.removeFromArrayByValue(buttons, buttons[i]);\n            }\n        }\n\n        return buttons;\n    },\n    _setExternalOnFocus: function()\n    {\n        if (!this.opts.air && this.opts.toolbarExternal)\n        {\n            this.toolbarModule.setExternal();\n        }\n    },\n    _initToolbar: function()\n    {\n        this.toolbarModule = (this.opts.air) ? $R.create('toolbar.air', this.app) : $R.create('toolbar.standard', this.app);\n    },\n    _initButtons: function()\n    {\n        this.toolbar.setButtons(this.buttons);\n\n        for (var i = 0; i < this.buttons.length; i++)\n        {\n            var name = this.buttons[i];\n            if ($R.buttons[name])\n            {\n                this.toolbar.addButton(name, $R.buttons[name], false, false, true);\n            }\n        }\n    }\n});\n$R.add('class', 'toolbar.air', {\n    init: function(app)\n    {\n        this.app = app;\n        this.uuid = app.uuid;\n        this.$doc = app.$doc;\n        this.$win = app.$win;\n        this.utils = app.utils;\n        this.editor = app.editor;\n        this.animate = app.animate;\n        this.toolbar = app.toolbar;\n        this.container = app.container;\n        this.inspector = app.inspector;\n        this.selection = app.selection;\n\n        // local\n        this.clicks = 0;\n\n        // init\n        this._init();\n    },\n    // public\n    stop: function()\n    {\n        var $wrapper = this.toolbar.getWrapper();\n        $wrapper.remove();\n\n        var $editor = this.editor.getElement();\n        $editor.off('.redactor-air-trigger-' + this.uuid);\n\n        this.$doc.off('.redactor-air-' + this.uuid);\n        this.$doc.off('.redactor-air-trigger-' + this.uuid);\n\n        this.toolbar.stopObservers();\n    },\n    createSourceHelper: function()\n    {\n        this.$airHelper = $R.dom('<span>');\n        this.$airHelper.addClass('redactor-air-helper');\n        this.$airHelper.html('<i class=\"re-icon-html\"></i>');\n        this.$airHelper.on('click', function(e)\n        {\n            e.preventDefault();\n            this.app.api('module.source.hide');\n\n        }.bind(this));\n\n        var $container = this.container.getElement();\n        $container.append(this.$airHelper);\n    },\n    destroySourceHelper: function()\n    {\n        if (this.$airHelper) this.$airHelper.remove();\n    },\n    openSelected: function()\n    {\n        setTimeout(function()\n        {\n            if (this._isSelection()) this._open(false);\n\n        }.bind(this), 0);\n    },\n    close: function()\n    {\n        this.$doc.off('.redactor-air-' + this.uuid);\n\n        var $toolbar = this.toolbar.getElement();\n        $toolbar.removeClass('open');\n        $toolbar.hide();\n    },\n\n    // private\n    _init: function()\n    {\n        this.toolbar.create();\n\n        var $wrapper = this.toolbar.getWrapper();\n        var $toolbar = this.toolbar.getElement();\n        var $editor = this.editor.getElement();\n        var $container = this.container.getElement();\n\n        $wrapper.addClass('redactor-toolbar-wrapper-air');\n        $toolbar.addClass('redactor-air');\n        //$toolbar.addClass('redactor-animate-hide');\n        $toolbar.hide();\n\n        $wrapper.append($toolbar);\n        $container.prepend($wrapper);\n\n        // open selected\n        this.openSelected();\n\n        // events\n        this.$doc.on('mouseup.redactor-air-trigger-' + this.uuid, this._open.bind(this));\n        $editor.on('keyup.redactor-air-trigger-' + this.uuid, this._openCmd.bind(this));\n    },\n    _isSelection: function()\n    {\n        return (this.selection.is() && !this.selection.isCollapsed());\n    },\n    _isOpened: function()\n    {\n        var $toolbar = this.toolbar.getElement();\n\n        return $toolbar.hasClass('open');\n    },\n    _open: function(e)\n    {\n        var target = (e) ? e.target : false;\n        var $el = (e) ? $R.dom(e.target) : false;\n        var dataTarget = this.inspector.parse(target);\n        var isComponent = (dataTarget.isComponent() && !dataTarget.isComponentType('table'));\n        var isFigcaption = (dataTarget.isFigcaption());\n        var isModalTarget = ($el && $el.closest('.redactor-modal').length !== 0);\n        var isButtonCall = (e && $el.closest('.re-button').length !== 0);\n        var isDropdownCall = (e && $el.closest('.redactor-dropdown').length !== 0);\n\n        if (isDropdownCall || isButtonCall || isModalTarget || isFigcaption || isComponent || this.toolbar.isContextBar() || !this._isSelection())\n        {\n            return;\n        }\n\n        var pos = this.selection.getPosition();\n\n        setTimeout(function()\n        {\n            if (this.app.isReadOnly()) return;\n            if (this._isSelection()) this._doOpen(pos);\n\n        }.bind(this), 1);\n\n    },\n    _openCmd: function()\n    {\n        if (this.selection.isAll())\n        {\n            var $toolbar = this.toolbar.getElement();\n            var pos = this.selection.getPosition();\n\n            pos.top = (pos.top < 20) ? 0 : pos.top - $toolbar.height();\n            pos.height = 0;\n\n            this._doOpen(pos);\n        }\n    },\n    _doOpen: function(pos)\n    {\n        var $wrapper = this.toolbar.getWrapper();\n        var $toolbar = this.toolbar.getElement();\n        var $container = this.container.getElement();\n        var containerOffset = $container.offset();\n        var leftFix = 0;\n        var winWidth = this.$win.width();\n        var toolbarWidth = $toolbar.width();\n\n        if (winWidth < (pos.left + toolbarWidth))\n        {\n            var selPos = this.selection.getPosition();\n            leftFix = toolbarWidth - selPos.width;\n        }\n\n        $wrapper.css({\n            left: (pos.left - containerOffset.left - leftFix) + 'px',\n            top: (pos.top - containerOffset.top + pos.height + this.$doc.scrollTop()) + 'px'\n        });\n\n        this.app.broadcast('airOpen');\n        $toolbar.addClass('open');\n        $toolbar.show();\n\n        this.$doc.on('click.redactor-air-' + this.uuid, this._close.bind(this));\n        this.$doc.on('keydown.redactor-air-' + this.uuid, this._close.bind(this));\n        this.app.broadcast('airOpened');\n    },\n    _close: function(e)\n    {\n        var $el = (e) ? $R.dom(e.target) : false;\n        var isDropdownCall = (e && $el.closest('[data-dropdown], .redactor-dropdown-not-close').length !== 0);\n        var isButtonCall = (!isDropdownCall && e && $el.closest('.re-button').length !== 0);\n\n        if (!isButtonCall && (isDropdownCall || !this._isOpened()))\n        {\n            return;\n        }\n\n        // close\n        this.app.broadcast('airClose');\n\n        this.close();\n        this.app.broadcast('airClosed');\n    }\n});\n$R.add('class', 'toolbar.fixed', {\n    init: function(app)\n    {\n        this.app = app;\n        this.uuid = app.uuid;\n        this.opts = app.opts;\n        this.$doc = app.$doc;\n        this.$win = app.$win;\n        this.editor = app.editor;\n        this.toolbar = app.toolbar;\n        this.detector = app.detector;\n        this.container = app.container;\n\n        // init\n        this._init();\n    },\n    // public\n    stop: function()\n    {\n        this.$fixedTarget.off('.redactor-toolbar-' + this.uuid);\n        this.$win.off('.redactor-toolbar-' + this.uuid);\n    },\n    reset: function()\n    {\n        var $toolbar = this.toolbar.getElement();\n        var $wrapper = this.toolbar.getWrapper();\n\n        $wrapper.css('height', '');\n        $toolbar.removeClass('redactor-toolbar-fixed');\n        $toolbar.css({ position: '', top: '', left: '', width: '' });\n\n        var dropdown = this.toolbar.getDropdown();\n        if (dropdown) dropdown.updatePosition();\n    },\n\n    // private\n    _init: function()\n    {\n        this.$fixedTarget = (this.toolbar.isTarget()) ? this.toolbar.getTargetElement() : this.$win;\n        this._doFixed();\n\n        if (this.toolbar.isTarget())\n        {\n            this.$win.on('scroll.redactor-toolbar-' + this.uuid, this._doFixed.bind(this));\n            this.$win.on('resize.redactor-toolbar-' + this.uuid, this._doFixed.bind(this));\n        }\n\n        this.$fixedTarget.on('scroll.redactor-toolbar-' + this.uuid, this._doFixed.bind(this));\n        this.$fixedTarget.on('resize.redactor-toolbar-' + this.uuid, this._doFixed.bind(this));\n    },\n    _doFixed: function()\n    {\n        var $editor = this.editor.getElement();\n        var $container = this.container.getElement();\n        var $toolbar = this.toolbar.getElement();\n        var $wrapper = this.toolbar.getWrapper();\n\n        if (this.editor.isSourceMode())\n        {\n            return;\n        }\n\n        var $targets = $container.parents().filter(function(node)\n        {\n            return (getComputedStyle(node, null).display === 'none') ? node : false;\n        });\n\n        // has hidden parent\n        if ($targets.length !== 0) return;\n\n        var isHeight = ($editor.height() < 100);\n        var isEmpty = this.editor.isEmpty();\n\n        if (isHeight || isEmpty || this.editor.isSourceMode()) return;\n\n        var toolbarHeight = $toolbar.height();\n        var toleranceEnd = 60;\n        var containerOffset = $container.offset();\n        var boxOffset = containerOffset.top;\n        var boxEnd = boxOffset + $container.height() - toleranceEnd;\n        var scrollOffset = this.$fixedTarget.scrollTop() + this.opts.toolbarFixedTopOffset;\n        var top = (!this.toolbar.isTarget()) ? 0 : this.$fixedTarget.offset().top - this.$win.scrollTop();\n\n        if (scrollOffset > boxOffset && scrollOffset < boxEnd)\n        {\n            var position = (this.detector.isDesktop()) ? 'fixed' : 'absolute';\n            top = (this.detector.isDesktop()) ? top : (scrollOffset - boxOffset + this.opts.toolbarFixedTopOffset);\n\n            if (this.detector.isMobile())\n            {\n                if (this.fixedScrollTimeout)\n                {\n                    clearTimeout(this.fixedScrollTimeout);\n                }\n\n                $toolbar.hide();\n                this.fixedScrollTimeout = setTimeout(function()\n                {\n                    $toolbar.show();\n                }, 250);\n            }\n\n            $wrapper.height(toolbarHeight);\n            $toolbar.addClass('redactor-toolbar-fixed');\n            $toolbar.css({\n                position: position,\n                top: (top + this.opts.toolbarFixedTopOffset) + 'px',\n                width: $container.width() + 'px'\n            });\n\n            var dropdown = this.toolbar.getDropdown();\n            if (dropdown) dropdown.updatePosition();\n\n            this.app.broadcast('toolbar.fixed');\n        }\n        else\n        {\n            this.reset();\n            this.app.broadcast('toolbar.unfixed');\n        }\n    }\n});\n$R.add('class', 'toolbar.standard', {\n    init: function(app)\n    {\n        this.app = app;\n        this.opts = app.opts;\n        this.uuid = app.uuid;\n        this.$body = app.$body;\n        this.toolbar = app.toolbar;\n        this.container = app.container;\n\n        // local\n        this.isExternalMultiple = false;\n        this.toolbarFixed = false;\n\n        // init\n        this._init();\n    },\n    // public\n    stop: function()\n    {\n        var $wrapper = this.toolbar.getWrapper();\n        $wrapper.remove();\n\n        if (this.toolbarFixed) this.toolbarFixed.stop();\n        if (this.opts.toolbarExternal) this._findToolbars();\n\n        this.toolbar.stopObservers();\n        this.$body.find('.re-button-tooltip-' + this.uuid).remove();\n    },\n    setExternal: function()\n    {\n        this._findToolbars();\n        if (this.isExternalMultiple)\n        {\n            this.$toolbars.hide();\n            var $current = this.$external.find('.redactor-toolbar-external-' + this.uuid);\n            $current.show();\n        }\n    },\n    resetPosition: function()\n    {\n        if (this.toolbarFixed) this.toolbarFixed.reset();\n    },\n\n    // private\n    _init: function()\n    {\n        this._build();\n\n        if (this.opts.toolbarExternal)\n        {\n            this._buildExternal();\n        }\n        else\n        {\n            this._buildFixed();\n\n            var $toolbar = this.toolbar.getElement();\n            $toolbar.show();\n        }\n    },\n    _build: function()\n    {\n        this.toolbar.create();\n\n        var $wrapper = this.toolbar.getWrapper();\n        var $toolbar = this.toolbar.getElement();\n\n        $wrapper.addClass('redactor-toolbar-wrapper');\n        $toolbar.addClass('redactor-toolbar');\n        $toolbar.hide();\n        $wrapper.append($toolbar);\n\n        if (!this.opts.toolbarExternal)\n        {\n            var $container = this.container.getElement();\n            $container.prepend($wrapper);\n        }\n    },\n    _buildExternal: function()\n    {\n        this._initExternal();\n        this._findToolbars();\n\n        if (this.isExternalMultiple)\n        {\n            this._hideToolbarsExceptFirst();\n        }\n        else\n        {\n            var $toolbar = this.toolbar.getElement();\n            $toolbar.show();\n        }\n    },\n    _buildFixed: function()\n    {\n        if (this.opts.toolbarFixed)\n        {\n            this.toolbarFixed = $R.create('toolbar.fixed', this.app);\n        }\n    },\n    _initExternal: function()\n    {\n        var $toolbar = this.toolbar.getElement();\n        var $wrapper = this.toolbar.getElement();\n\n        $toolbar.addClass('redactor-toolbar-external redactor-toolbar-external-' + this.uuid);\n\n        this.$external = $R.dom(this.opts.toolbarExternal);\n        this.$external.append($wrapper);\n\n    },\n    _findToolbars: function()\n    {\n        this.$toolbars = this.$external.find('.redactor-toolbar-external');\n        this.isExternalMultiple = (this.$toolbars.length > 1);\n    },\n    _hideToolbarsExceptFirst: function()\n    {\n        this.$toolbars.hide();\n        var $first = this.$toolbars.first();\n        $first.show();\n    }\n});\n$R.add('module', 'line', {\n    init: function(app)\n    {\n        this.app = app;\n        this.lang = app.lang;\n        this.component = app.component;\n        this.inspector = app.inspector;\n        this.insertion = app.insertion;\n    },\n    // messages\n    oncontextbar: function(e, contextbar)\n    {\n        var data = this.inspector.parse(e.target);\n        if (data.isComponentType('line'))\n        {\n            var node = data.getComponent();\n            var buttons = {\n                \"remove\": {\n                    title: this.lang.get('delete'),\n                    api: 'module.line.remove',\n                    args: node\n                }\n            };\n\n            contextbar.set(e, node, buttons, 'bottom');\n        }\n\n    },\n\n    // public\n    insert: function()\n    {\n        var line = this.component.create('line');\n        this.insertion.insertRaw(line);\n    },\n    remove: function(node)\n    {\n        this.component.remove(node);\n    }\n});\n$R.add('class', 'line.component', {\n    mixins: ['dom', 'component'],\n    init: function(app, el)\n    {\n        this.app = app;\n\n        // init\n        return (el && el.cmnt !== undefined) ? el : this._init(el);\n    },\n    // private\n    _init: function(el)\n    {\n        var wrapper, element;\n        if (typeof el !== 'undefined')\n        {\n            var $node = $R.dom(el);\n            var node = $node.get();\n\n            if (node.tagName === 'HR') element = node;\n            else if (node.tagName === 'FIGURE')\n            {\n                wrapper = node;\n                element = $node.find('hr').get();\n            }\n        }\n\n        this._buildWrapper(wrapper);\n        this._buildElement(element);\n        this._initWrapper();\n    },\n    _buildElement: function(node)\n    {\n        if (node)\n        {\n            this.$element = $R.dom(node);\n        }\n        else\n        {\n            this.$element = $R.dom('<hr>');\n            this.append(this.$element);\n        }\n    },\n    _buildWrapper: function(node)\n    {\n        node = node || '<figure>';\n\n        this.parse(node);\n    },\n    _initWrapper: function()\n    {\n        this.addClass('redactor-component');\n        this.attr({\n            'data-redactor-type': 'line',\n            'tabindex': '-1',\n            'contenteditable': false\n        });\n    }\n});\n$R.add('module', 'link', {\n    modals: {\n        'link':\n            '<form action=\"\"> \\\n                <div class=\"form-item\"> \\\n                    <label for=\"modal-link-url\">URL <span class=\"req\">*</span></label> \\\n                    <input type=\"text\" id=\"modal-link-url\" name=\"url\"> \\\n                </div> \\\n                <div class=\"form-item\"> \\\n                    <label for=\"modal-link-text\">## text ##</label> \\\n                    <input type=\"text\" id=\"modal-link-text\" name=\"text\"> \\\n                </div> \\\n                <div class=\"form-item form-item-title\"> \\\n                    <label for=\"modal-link-title\">## title ##</label> \\\n                    <input type=\"text\" id=\"modal-link-title\" name=\"title\"> \\\n                </div> \\\n                <div class=\"form-item form-item-target\"> \\\n                    <label class=\"checkbox\"> \\\n                        <input type=\"checkbox\" name=\"target\"> ## link-in-new-tab ## \\\n                    </label> \\\n                </div> \\\n            </form>'\n    },\n    init: function(app)\n    {\n        this.app = app;\n        this.opts = app.opts;\n        this.lang = app.lang;\n        this.caret = app.caret;\n        this.utils = app.utils;\n        this.inline = app.inline;\n        this.editor = app.editor;\n        this.inspector = app.inspector;\n        this.insertion = app.insertion;\n        this.selection = app.selection;\n\n        // local\n        this.isCurrentLink = false;\n        this.currentText = false;\n    },\n    // messages\n    onmodal: {\n        link: {\n            open: function($modal, $form)\n            {\n                this._setFormData($form, $modal);\n            },\n            opened: function($modal, $form)\n            {\n                this._setFormFocus($form);\n            },\n            update: function($modal, $form)\n            {\n                var data = $form.getData();\n                if (this._validateData($form, data))\n                {\n                    this._update(data);\n                }\n            },\n            insert: function($modal, $form)\n            {\n                var data = $form.getData();\n                if (this._validateData($form, data))\n                {\n                    this._insert(data);\n                }\n            },\n            unlink: function()\n            {\n                this._unlink();\n            }\n        }\n    },\n    onbutton: {\n        link: {\n            observe: function(button)\n            {\n                this._observeButton(button);\n            }\n        }\n    },\n    ondropdown: {\n        link: {\n            observe: function(dropdown)\n            {\n                this._observeUnlink(dropdown);\n                this._observeEdit(dropdown);\n            }\n        }\n    },\n    oncontextbar: function(e, contextbar)\n    {\n        var current = this._getCurrent();\n        var data = this.inspector.parse(current);\n        if (data.isLink())\n        {\n            var node = data.getLink();\n            var $el = $R.dom(node);\n\n            var $point = $R.dom('<a>');\n            var url = $el.attr('href');\n\n            $point.text(this._truncateText(url));\n            $point.attr('href', url);\n            $point.attr('target', '_blank');\n\n            var buttons = {\n                \"link\": {\n                    title: $point\n                },\n                \"edit\": {\n                    title: this.lang.get('edit'),\n                    api: 'module.link.open'\n                },\n                \"unlink\": {\n                    title: this.lang.get('unlink'),\n                    api: 'module.link.unlink'\n                }\n            };\n\n            contextbar.set(e, node, buttons, 'bottom');\n        }\n    },\n\n    // public\n    open: function()\n    {\n        this.$link = this._buildCurrent();\n        this.app.api('module.modal.build', this._getModalData());\n    },\n    insert: function(data)\n    {\n        this._insert(data);\n    },\n    update: function(data)\n    {\n        this._update(data);\n    },\n    unlink: function()\n    {\n        this._unlink();\n    },\n\n    // private\n    _observeButton: function(button)\n    {\n        var current = this.selection.getCurrent();\n        var data = this.inspector.parse(current);\n\n        if (data.isPre() || data.isCode())\n        {\n            button.disable();\n        }\n        else\n        {\n            button.enable();\n        }\n    },\n    _observeUnlink: function(dropdown)\n    {\n        var $item = dropdown.getItem('unlink');\n        var links = this._getLinks();\n\n        if (links.length === 0) $item.disable();\n        else                    $item.enable();\n    },\n    _observeEdit: function(dropdown)\n    {\n        var current = this._getCurrent();\n        var $item = dropdown.getItem('link');\n\n        var data = this.inspector.parse(current);\n        var title = (data.isLink()) ? this.lang.get('link-edit') : this.lang.get('link-insert');\n\n        $item.setTitle(title);\n    },\n    _unlink: function()\n    {\n        this.app.api('module.modal.close');\n\n        var elms = [];\n        var nodes = this._getLinks();\n\n        this.selection.save();\n        for (var i = 0; i < nodes.length; i++)\n        {\n            var $link = $R.create('link.component', this.app, nodes[i]);\n            elms.push(this.selection.getElement(nodes[i]));\n\n            $link.unwrap();\n\n            // callback\n            this.app.broadcast('link.deleted', $link);\n        }\n        this.selection.restore();\n\n        // normalize\n        for (var i = 0; i < elms.length; i++)\n        {\n            var el = (elms[i]) ? elms[i] : this.editor.getElement();\n            this.utils.normalizeTextNodes(el);\n        }\n\n        this._resetCurrent();\n    },\n    _update: function(data)\n    {\n        this.app.api('module.modal.close');\n\n        var nodes = this._getLinks();\n        this._setLinkData(nodes, data, 'updated');\n        this._resetCurrent();\n    },\n    _insert: function(data)\n    {\n        this.app.api('module.modal.close');\n\n        var links = this._getLinks();\n\n        if (!this._insertSingle(links, data))\n        {\n            this._removeInSelection(links);\n            this._insertMultiple(data);\n        }\n\n        this._resetCurrent();\n    },\n    _removeInSelection: function(links)\n    {\n        this.selection.save();\n        for (var i = 0; i < links.length; i++)\n        {\n            var $link = $R.create('link.component', this.app, links[i]);\n            var $clonedLink = $link.clone();\n            $link.unwrap();\n\n            // callback\n            this.app.broadcast('link.deleted', $clonedLink);\n        }\n        this.selection.restore();\n    },\n    _insertMultiple: function(data)\n    {\n        var range = this.selection.getRange();\n        if (range && this._isCurrentTextChanged(data))\n        {\n            this._deleteContents(range);\n        }\n\n        var nodes = this.inline.format({ tag: 'a' });\n\n        this._setLinkData(nodes, data, 'inserted');\n    },\n    _insertSingle: function(links, data)\n    {\n        var inline = this.selection.getInline();\n        if (links.length === 1 && (links[0].textContext === this.selection.getText()) || (inline && inline.tagName === 'A'))\n        {\n            var $link = $R.create('link.component', this.app, links[0]);\n\n            $link.setData(data);\n            this.caret.setAfter($link);\n\n            // callback\n            this.app.broadcast('link.inserted', $link);\n\n            return true;\n        }\n\n        return false;\n    },\n    _setLinkData: function(nodes, data, type)\n    {\n        data.text = (data.text.trim() === '') ? this._truncateText(data.url) : data.text;\n\n        var isTextChanged = (!this.currentText || this.currentText !== data.text);\n\n        this.selection.save();\n        for (var i = 0; i < nodes.length; i++)\n        {\n            var $link = $R.create('link.component', this.app, nodes[i]);\n            var linkData = {};\n\n            if (data.text && isTextChanged) linkData.text = data.text;\n            if (data.url) linkData.url = data.url;\n            if (data.title !== undefined) linkData.title = data.title;\n            if (data.target !== undefined) linkData.target = data.target;\n\n            $link.setData(linkData);\n\n            // callback\n            this.app.broadcast('link.' + type, $link);\n        }\n\n        setTimeout(this.selection.restore.bind(this.selection), 0);\n    },\n    _deleteContents: function(range)\n    {\n        var html = this.selection.getHtml();\n        var parsed = this.utils.parseHtml(html);\n        var first = parsed.nodes[0];\n\n        if (first && first.nodeType !== 3)\n        {\n            var tag = first.tagName.toLowerCase();\n            var container = document.createElement(tag);\n\n            this.insertion.insertNode(container, 'start');\n        }\n        else\n        {\n            range.deleteContents();\n        }\n    },\n    _getModalData: function()\n    {\n        var commands;\n        if (this._isLink())\n        {\n           commands = {\n                update: { title: this.lang.get('save') },\n                unlink: { title: this.lang.get('unlink'), type: 'danger' },\n                cancel: { title: this.lang.get('cancel') }\n            };\n        }\n        else\n        {\n            commands = {\n                insert: { title: this.lang.get('insert') },\n                cancel: { title: this.lang.get('cancel') }\n            };\n        }\n\n        var modalData = {\n            name: 'link',\n            title: (this._isLink()) ? this.lang.get('link-edit') : this.lang.get('link-insert'),\n            handle: (this._isLink()) ? 'update' : 'insert',\n            commands: commands\n        };\n\n\n        return modalData;\n    },\n    _isLink: function()\n    {\n        return this.currentLink;\n    },\n    _isCurrentTextChanged: function(data)\n    {\n        return (this.currentText && this.currentText !== data.text);\n    },\n    _buildCurrent: function()\n    {\n        var current = this._getCurrent();\n        var data = this.inspector.parse(current);\n        var $link;\n\n        if (data.isLink())\n        {\n            this.currentLink = true;\n\n            $link = data.getLink();\n            $link = $R.create('link.component', this.app, $link);\n        }\n        else\n        {\n            this.currentLink = false;\n\n            $link = $R.create('link.component', this.app);\n            var linkData = {\n                text: this.selection.getText()\n            };\n\n            $link.setData(linkData);\n        }\n\n        return $link;\n    },\n    _getCurrent: function()\n    {\n        return this.selection.getInlinesAllSelected({ tags: ['a'] })[0];\n    },\n    _getLinks: function()\n    {\n        var links = this.selection.getInlines({ all: true, tags: ['a'] });\n        var arr = [];\n        for (var i = 0; i < links.length; i++)\n        {\n            var data = this.inspector.parse(links[i]);\n            if (data.isLink())\n            {\n                arr.push(links[i]);\n            }\n        }\n\n        return arr;\n    },\n    _resetCurrent: function()\n    {\n        this.isCurrentLink = false;\n        this.currentText = false;\n    },\n    _truncateText: function(url)\n    {\n        return (url && url.length > this.opts.linkSize) ? url.substring(0, this.opts.linkSize) + '...' : url;\n    },\n    _validateData: function($form, data)\n    {\n        return (data.url.trim() === '') ? $form.setError('url') : true;\n    },\n    _setFormFocus: function($form)\n    {\n        $form.getField('url').focus();\n    },\n    _setFormData: function($form, $modal)\n    {\n        var linkData = this.$link.getData();\n        var data = {\n            url: linkData.url,\n            text: linkData.text,\n            title: linkData.title,\n            target: (this.opts.linkTarget || linkData.target)\n        };\n\n        if (!this.opts.linkNewTab) $modal.find('.form-item-target').hide();\n        if (!this.opts.linkTitle) $modal.find('.form-item-title').hide();\n\n        $form.setData(data);\n        this.currentText = $form.getField('text').val();\n    }\n});\n$R.add('class', 'link.component', {\n    mixins: ['dom', 'component'],\n    init: function(app, el)\n    {\n        this.app = app;\n        this.opts = app.opts;\n\n        // local\n        this.reUrl = /^(?:(?:(?:https?|ftp):)?\\/\\/)?(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i;\n\n        // init\n        return (el && el.cmnt !== undefined) ? el :  this._init(el);\n    },\n\n    // public\n    setData: function(data)\n    {\n        for (var name in data)\n        {\n            this._set(name, data[name]);\n        }\n    },\n    getData: function()\n    {\n        var names = ['url', 'text', 'target', 'title'];\n        var data = {};\n\n        for (var i = 0; i < names.length; i++)\n        {\n            data[names[i]] = this._get(names[i]);\n        }\n\n        return data;\n    },\n\n    // private\n    _init: function(el)\n    {\n        var $el = $R.dom(el);\n        if (el === undefined)\n        {\n            this.parse('<a>');\n        }\n        else\n        {\n            this.parse($el);\n        }\n    },\n    _set: function(name, value)\n    {\n        this['_set_' + name](value);\n    },\n    _get: function(name)\n    {\n        return this['_get_' + name]();\n    },\n    _get_target: function()\n    {\n        return (this.attr('target')) ? this.attr('target') : false;\n    },\n    _get_url: function()\n    {\n        return this.attr('href');\n    },\n    _get_title: function()\n    {\n        return this.attr('title');\n    },\n    _get_text: function()\n    {\n        return this._getContext().text();\n    },\n    _getContext: function()\n    {\n        return this._findDeepestChild(this).element;\n    },\n    _set_target: function(target)\n    {\n        if (target === false) this.removeAttr('target');\n        else if (target)\n        {\n            this.attr('target', (target === true) ? '_blank' : target);\n        }\n    },\n    _set_text: function(text)\n    {\n        this._getContext().html(text);\n    },\n    _set_title: function(title)\n    {\n        if (!title || title === '') this.removeAttr('title');\n        else this.attr('title', title);\n    },\n    _set_url: function(url)\n    {\n        if (this.opts.linkValidation)\n        {\n            url = this._cleanUrl(url);\n\n            if (this._isMailto(url))\n            {\n                url = 'mailto:' + url.replace('mailto:', '');\n            }\n            else if (this._isUrl(url) && url.search(/^(ftp|https?)/i) === -1)\n            {\n                url = 'http://' + url.replace(/(ftp|https?):\\/\\//i, '');\n            }\n        }\n\n        this.attr('href', url);\n    },\n    _isMailto: function(url)\n    {\n        return (url.search('@') !== -1 && /(ftp|https?):\\/\\//i.test(url) === false);\n    },\n    _isUrl: function(url)\n    {\n        return this.reUrl.test(url);\n    },\n    _cleanUrl: function(url)\n    {\n        return url.trim().replace(/[^\\W\\w\\D\\d+&\\'@#/%?=~_|!:,.;\\(\\)]/gi, '');\n    },\n    _findDeepestChild: function(parent)\n    {\n        var result = {depth: 0, element: parent };\n\n        parent.children().each(function(node)\n        {\n            var child = $R.dom(node);\n\n            if (node.outerHTML !== parent.html())\n            {\n                return;\n            }\n            else\n            {\n                var childResult = this._findDeepestChild(child);\n                if (childResult.depth + 1 > result.depth)\n                {\n                    result = {\n                        depth: 1 + childResult.depth,\n                        element: childResult.element\n                    };\n                }\n            }\n        }.bind(this));\n\n        return result;\n    }\n});\n$R.add('module', 'modal', {\n    init: function(app)\n    {\n        this.app = app;\n        this.lang = app.lang;\n        this.$doc = app.$doc;\n        this.$win = app.$win;\n        this.$body = app.$body;\n        this.utils = app.utils;\n        this.editor = app.editor;\n        this.animate = app.animate;\n        this.detector = app.detector;\n        this.selection = app.selection;\n\n        // local\n        this.$box = false;\n        this.$modal = false;\n        this.selectionMarkers = false;\n\n        // defaults\n        this.defaults = {\n            name: false,\n            url: false,\n            title: false,\n            width: '600px',\n            height: false,\n            handle: false,\n            commands: false\n        };\n    },\n    // public\n    build: function(data)\n    {\n        this._open(data);\n    },\n    close: function()\n    {\n        this._close();\n    },\n    stop: function()\n    {\n        if (this.$box)\n        {\n            this.$box.remove();\n            this.$box = false;\n            this.$modal = false;\n\n            this.$doc.off('.redactor.modal');\n            this.$win.off('.redactor.modal');\n        }\n\n        if (this.$overlay)\n        {\n            this.$overlay.remove();\n        }\n    },\n    resize: function()\n    {\n        this.$modal.setWidth(this.p.width);\n        this.$modal.updatePosition();\n    },\n\n    // private\n    _isOpened: function()\n    {\n        return (this.$modal && this.$modal.hasClass('open'));\n    },\n    _open: function(data)\n    {\n        this._buildDefaults(data);\n\n        if (this.p.url) this._openUrl();\n        else this._openTemplate();\n    },\n    _openUrl: function()\n    {\n        $R.ajax.post({\n            url: this.p.url,\n            success: this._doOpen.bind(this)\n        });\n    },\n    _openTemplate: function()\n    {\n        if (typeof $R.modals[this.p.name] !== 'undefined')\n        {\n            var template = this.lang.parse($R.modals[this.p.name]);\n            this._doOpen(template);\n        }\n    },\n    _doOpen: function(template)\n    {\n        this.stop();\n\n        if (this.selection.isCollapsed())\n        {\n            this.selection.save();\n            this.selectionMarkers = false;\n        }\n        else\n        {\n            this.selection.saveMarkers();\n            this.selectionMarkers = true;\n        }\n\n        if (!this.detector.isDesktop())\n        {\n            document.activeElement.blur();\n        }\n\n        this._createModal(template);\n\n        this._buildModalBox();\n        this._buildOverlay();\n        this._buildModal();\n        this._buildModalForm();\n        this._buildModalCommands();\n\n        this._broadcast('open');\n\n        this.$modal.updatePosition();\n        this._buildModalTabs();\n\n        this.animate.start(this.$box, 'fadeIn', this._opened.bind(this));\n        this.animate.start(this.$overlay, 'fadeIn');\n\n    },\n    _opened: function()\n    {\n        this.$modal.addClass('open');\n        this.$box.on('mousedown.redactor.modal', this._close.bind(this));\n        this.$doc.on('keyup.redactor.modal', this._handleEscape.bind(this));\n        this.$win.on('resize.redactor.modal', this.resize.bind(this));\n        this.$modal.getBody().find('input[type=text],input[type=url],input[type=email]').on('keydown.redactor.modal', this._handleEnter.bind(this));\n\n        // fix bootstrap modal focus\n        if (window.jQuery) jQuery(document).off('focusin.modal');\n\n        this._broadcast('opened');\n    },\n    _close: function(e)\n    {\n        if (!this.$box || !this._isOpened()) return;\n\n        if (e)\n        {\n            if (!this._needToClose(e.target))\n            {\n                return;\n            }\n\n            e.stopPropagation();\n            e.preventDefault();\n        }\n\n        if (this.selectionMarkers) this.selection.restoreMarkers();\n        else this.selection.restore();\n\n        this.selectionMarkers = false;\n\n        this._broadcast('close');\n\n        this.animate.start(this.$box, 'fadeOut', this._closed.bind(this));\n        this.animate.start(this.$overlay, 'fadeOut');\n    },\n    _closed: function()\n    {\n        this.$modal.removeClass('open');\n        this.$box.off('.redactor.modal');\n        this.$doc.off('.redactor.modal');\n        this.$win.off('.redactor.modal');\n\n        this._broadcast('closed');\n    },\n    _createModal: function(template)\n    {\n        this.$modal = $R.create('modal.element', this.app, template);\n    },\n    _broadcast: function(message)\n    {\n        this.app.broadcast('modal.' + message, this.$modal, this.$modalForm);\n        this.app.broadcast('modal.' + this.p.name + '.' + message, this.$modal, this.$modalForm);\n    },\n    _buildDefaults: function(data)\n    {\n         this.p = $R.extend({}, this.defaults, data);\n    },\n    _buildModalBox: function()\n    {\n        this.$box = $R.dom('<div>');\n        this.$box.attr('id', 'redactor-modal');\n        this.$box.addClass('redactor-animate-hide');\n        this.$box.html('');\n        this.$body.append(this.$box);\n    },\n    _buildOverlay: function()\n    {\n        this.$overlay = $R.dom('#redactor-overlay');\n        if (this.$overlay.length === 0)\n        {\n            this.$overlay = $R.dom('<div>');\n            this.$overlay.attr('id', 'redactor-overlay');\n            this.$overlay.addClass('redactor-animate-hide');\n            this.$body.prepend(this.$overlay);\n        }\n    },\n    _buildModal: function()\n    {\n        this.$box.append(this.$modal);\n\n        this.$modal.setTitle(this.p.title);\n        this.$modal.setHeight(this.p.height);\n        this.$modal.setWidth(this.p.width);\n    },\n    _buildModalCommands: function()\n    {\n        if (this.p.commands)\n        {\n            var commands = this.p.commands;\n            var $footer = this.$modal.getFooter();\n            for (var key in commands)\n            {\n                var $btn = $R.dom('<button>');\n\n                $btn.html(commands[key].title);\n                $btn.attr('data-command', key);\n\n                // cancel\n                if (key === 'cancel')\n                {\n                    $btn.attr('data-action', 'close');\n                    $btn.addClass('redactor-button-unstyled');\n                }\n\n                // danger\n                if (typeof commands[key].type !== 'undefined' && commands[key].type === 'danger')\n                {\n                    $btn.addClass('redactor-button-danger');\n                }\n\n                $btn.on('click', this._handleCommand.bind(this));\n\n                $footer.append($btn);\n            }\n        }\n    },\n    _buildModalTabs: function()\n    {\n        var $body = this.$modal.getBody();\n        var $tabs = $body.find('.redactor-modal-tab');\n        var $box = $body.find('.redactor-modal-tabs');\n\n        if ($tabs.length > 1)\n        {\n            $box = ($box.length === 0) ? $R.dom('<div>') : $box.html('');\n            $box.addClass('redactor-modal-tabs');\n\n            $tabs.each(function(node, i)\n            {\n                var $node = $R.dom(node);\n                var $item = $R.dom('<a>');\n                $item.attr('href', '#');\n                $item.attr('rel', i);\n                $item.text($node.attr('data-title'));\n                $item.on('click', this._showTab.bind(this));\n\n                if (i === 0)\n                {\n                    $item.addClass('active');\n                }\n\n                $box.append($item);\n\n            }.bind(this));\n\n            $body.prepend($box);\n        }\n    },\n    _buildModalForm: function()\n    {\n        this.$modalForm = $R.create('modal.form', this.app, this.$modal.getForm());\n    },\n    _showTab: function(e)\n    {\n        e.preventDefault();\n\n        var $el = $R.dom(e.target);\n        var index = $el.attr('rel');\n        var $body = this.$modal.getBody();\n        var $tabs = $body.find('.redactor-modal-tab');\n\n        $tabs.hide();\n        $tabs.eq(index).show();\n\n        $body.find('.redactor-modal-tabs a').removeClass('active');\n        $el.addClass('active');\n\n    },\n    _needToClose: function(el)\n    {\n        var $target = $R.dom(el);\n        if ($target.attr('data-action') === 'close' || this.$modal.isCloseNode(el) || $target.closest('.redactor-modal').length === 0)\n        {\n            return true;\n        }\n\n        return false;\n    },\n    _handleCommand: function(e)\n    {\n        var $btn = $R.dom(e.target).closest('button');\n        var command = $btn.attr('data-command');\n\n        if (command !== 'cancel') e.preventDefault();\n\n        this._broadcast(command);\n    },\n    _handleEnter: function(e)\n    {\n        if (e.which === 13)\n        {\n            if (this.p.handle)\n            {\n                e.preventDefault();\n                this._broadcast(this.p.handle);\n            }\n        }\n    },\n    _handleEscape: function(e)\n    {\n        if (e.which === 27) this._close();\n    }\n});\n$R.add('class', 'modal.element', {\n    mixins: ['dom'],\n    init: function(app, template)\n    {\n        this.app = app;\n        this.opts = app.opts;\n        this.$win = app.$win;\n\n        // init\n        this._init(template);\n    },\n\n    // get\n    getForm: function()\n    {\n        return this.find('form');\n    },\n    getHeader: function()\n    {\n        return this.$modalHeader;\n    },\n    getBody: function()\n    {\n        return this.$modalBody;\n    },\n    getFooter: function()\n    {\n        return this.$modalFooter;\n    },\n\n    // set\n    setTitle: function(title)\n    {\n        if (title) this.$modalHeader.html(title);\n    },\n    setWidth: function(width)\n    {\n        width = (parseInt(width) >= this.$win.width()) ? '96%' : width;\n\n        this.css('max-width', width);\n    },\n    setHeight: function(height)\n    {\n        if (height !== false) this.$modalBody.css('height', height);\n    },\n\n    // update\n    updatePosition: function()\n    {\n        var width = this.width();\n        this.css({ 'left': '50%', 'margin-left': '-' + (width/2) + 'px' });\n\n        var windowHeight = this.$win.height();\n        var height = this.height();\n        var marginTop = (windowHeight/2 - height/2);\n\n        if (height < windowHeight && marginTop !== 0)\n        {\n            this.css('margin-top', marginTop + 'px');\n        }\n    },\n\n    // is\n    isCloseNode: function(el)\n    {\n        return (el === this.$modalClose.get());\n    },\n\n    // private\n    _init: function(template)\n    {\n        this._build();\n        this._buildClose();\n        this._buildHeader();\n        this._buildBody();\n        this._buildFooter();\n        this._buildTemplate(template);\n    },\n    _build: function()\n    {\n        this.parse('<div>');\n        this.addClass('redactor-modal');\n        this.attr('dir', this.opts.direction);\n    },\n    _buildClose: function()\n    {\n        this.$modalClose = $R.dom('<span>');\n        this.$modalClose.addClass('redactor-close');\n\n        this.append(this.$modalClose);\n    },\n    _buildHeader: function()\n    {\n        this.$modalHeader = $R.dom('<div>');\n        this.$modalHeader.addClass('redactor-modal-header');\n\n        this.append(this.$modalHeader);\n    },\n    _buildBody: function()\n    {\n        this.$modalBody = $R.dom('<div>');\n        this.$modalBody.addClass('redactor-modal-body');\n\n        this.append(this.$modalBody);\n    },\n    _buildFooter: function()\n    {\n        this.$modalFooter = $R.dom('<div>');\n        this.$modalFooter.addClass('redactor-modal-footer');\n\n        this.append(this.$modalFooter);\n    },\n    _buildTemplate: function(template)\n    {\n        this.$modalBody.html(template);\n    }\n});\n$R.add('class', 'modal.form', {\n    mixins: ['dom'],\n    init: function(app, element)\n    {\n        this.app = app;\n\n        // build\n        this.build(element);\n    },\n\n    // public\n    build: function(element)\n    {\n        this.parse(element);\n    },\n    getData: function()\n    {\n        var data = {};\n        this.find('[name]').each(function(node)\n        {\n            var $node = $R.dom(node);\n            data[$node.attr('name')] = $node.val();\n        });\n\n        return data;\n    },\n    setData: function(data)\n    {\n        this.find('[name]').each(function(node)\n        {\n            var $node = $R.dom(node);\n            var name = $node.attr('name');\n            if (data.hasOwnProperty(name))\n            {\n                if (node.type && node.type === 'checkbox') node.checked = data[name];\n                else $node.val(data[name]);\n            }\n        });\n    },\n    getField: function(name)\n    {\n        return this.find('[name=' + name + ']');\n    },\n    setError: function(name)\n    {\n        var $el = this.getField(name);\n\n        $el.addClass('error');\n        $el.one(this._getFieldEventName($el.get()), this._clearError);\n\n        return false;\n    },\n\n    // private\n    _clearError: function()\n    {\n        return $R.dom(this).removeClass('error');\n    },\n    _getFieldEventName: function(el)\n    {\n        return (el.tagName === 'SELECT' || el.type === 'checkbox' || el.type === 'radio') ? 'change' : 'keyup';\n    }\n});\n$R.add('module', 'block', {\n    init: function(app)\n    {\n        this.app = app;\n        this.block = app.block;\n    },\n    // public\n    format: function(args)\n    {\n        var nodes = this.block.format(args);\n\n        // callback\n        this.app.broadcast('format', 'block', nodes);\n    },\n    clearformat: function()\n    {\n        this.block.clearFormat();\n    },\n    clearstyle: function()\n    {\n        this.block.clearStyle();\n    },\n    clearclass: function()\n    {\n        this.block.clearClass();\n    },\n    clearattr: function()\n    {\n        this.block.clearAttr();\n    },\n    add: function(args, tags)\n    {\n        this.block.add(args, tags);\n    },\n    toggle: function(args, tags)\n    {\n        this.block.toggle(args, tags);\n    },\n    set: function(args, tags)\n    {\n        this.block.set(args, tags);\n    },\n    remove: function(args, tags)\n    {\n        this.block.remove(args, tags);\n    }\n});\n$R.add('module', 'inline', {\n    init: function(app)\n    {\n        this.app = app;\n        this.inline = app.inline;\n    },\n    format: function(args)\n    {\n        var nodes = this.inline.format(args);\n\n        // callback\n        this.app.broadcast('format', 'inline', nodes);\n    },\n    clearformat: function()\n    {\n        this.inline.clearFormat();\n    },\n    clearstyle: function()\n    {\n        this.inline.clearStyle();\n    },\n    clearclass: function()\n    {\n        this.inline.clearClass();\n    },\n    clearattr: function()\n    {\n        this.inline.clearAttr();\n    },\n    add: function(args, tags)\n    {\n        this.inline.add(args, tags);\n    },\n    toggle: function(args, tags)\n    {\n        this.inline.toggle(args, tags);\n    },\n    set: function(args, tags)\n    {\n        this.inline.set(args, tags);\n    },\n    remove: function(args, tags)\n    {\n        this.inline.remove(args, tags);\n    }\n});\n$R.add('module', 'autosave', {\n    init: function(app)\n    {\n        this.app = app;\n        this.opts = app.opts;\n        this.utils = app.utils;\n        this.source = app.source;\n    },\n    // messages\n    onsynced: function()\n    {\n        if (this.opts.autosave)\n        {\n            this._send();\n        }\n    },\n\n    // private\n    _send: function()\n    {\n        var name = (this.opts.autosaveName) ? this.opts.autosaveName : this.source.getName();\n\n        var data = {};\n        data[name] = this.source.getCode();\n        data = this.utils.extendData(data, this.opts.autosaveData);\n\n        $R.ajax.post({\n            url: this.opts.autosave,\n            data: data,\n            success: function(response)\n            {\n                this._complete(response, name, data);\n            }.bind(this)\n        });\n    },\n    _complete: function(response, name, data)\n    {\n        var callback = (response && response.error) ? 'autosaveError' : 'autosave';\n        this.app.broadcast(callback, name, data, response);\n    }\n});\n$R.add('module', 'input', {\n    init: function(app)\n    {\n        this.app = app;\n        this.opts = app.opts;\n        this.utils = app.utils;\n        this.editor = app.editor;\n        this.keycodes = app.keycodes;\n        this.element = app.element;\n        this.selection = app.selection;\n        this.insertion = app.insertion;\n        this.inspector = app.inspector;\n        this.autoparser = app.autoparser;\n\n        // local\n        this.lastShiftKey = false;\n    },\n    // messages\n    onpaste: function(e, dataTransfer)\n    {\n        if (!this.opts.input) return;\n\n        return $R.create('input.paste', this.app, e, dataTransfer);\n    },\n    onkeydown: function(e)\n    {\n        if (!this.opts.input) return;\n\n        // key\n        var key = e.which;\n\n        // shortcuts\n        var shortcut = $R.create('input.shortcut', this.app, e);\n        if (shortcut.is()) return;\n\n        // select all\n        if ((e.ctrlKey || e.metaKey) && !e.altKey && key === 65)\n        {\n            e.preventDefault();\n            return this._selectAll();\n        }\n\n        // set empty if all selected\n        var keys = [this.keycodes.ENTER, this.keycodes.SPACE, this.keycodes.BACKSPACE, this.keycodes.DELETE];\n        var arrowKeys = [this.keycodes.UP, this.keycodes.DOWN, this.keycodes.LEFT, this.keycodes.RIGHT];\n        var isKeys = (keys.indexOf(key) !== -1);\n        var isArrowKeys = (arrowKeys.indexOf(key) !== -1);\n        var isXKey = ((e.ctrlKey || e.metaKey) && key === 88); // x\n        var isAlphaKeys = ((!e.ctrlKey && !e.metaKey) && ((key >= 48 && key <= 57) || (key >= 65 && key <= 90)));\n\n        if (this.selection.isAll() && isArrowKeys && (isXKey || (!e.ctrlKey && !e.metaKey && !e.altKey && !e.shiftKey)))\n        {\n            if (isXKey)\n            {\n                this.editor.disableNonEditables();\n                this.app.broadcast('empty');\n                return;\n            }\n\n            if (this._isArrowKey(key)) return true;\n            if (isKeys) e.preventDefault();\n\n            if (this.element.isType('inline'))\n            {\n                var $editor = this.editor.getElement();\n                $editor.html('');\n\n                this.editor.startFocus();\n            }\n            else\n            {\n                this.insertion.set(this.opts.emptyHtml);\n            }\n\n            if (isKeys) return;\n            else this.app.broadcast('empty');\n        }\n\n        // autoparse\n        if (this.opts.autoparse)\n        {\n            this.autoparser.format(e, key);\n        }\n\n        // a-z, 0-9 - non editable\n        if (isAlphaKeys)\n        {\n            // has non-editable\n            if (this.selection.hasNonEditable())\n            {\n                e.preventDefault();\n                return;\n            }\n        }\n\n        // enter, shift/ctrl + enter\n        if (key === this.keycodes.ENTER)\n        {\n            return $R.create('input.enter', this.app, e, key);\n        }\n        // cmd + [\n        else if (e.metaKey && key === 219)\n        {\n            e.preventDefault();\n            this.app.api('module.list.outdent');\n            return;\n        }\n        // tab or cmd + ]\n        else if (key === this.keycodes.TAB || e.metaKey && key === 221)\n        {\n            return $R.create('input.tab', this.app, e, key);\n        }\n        // space\n        else if (key === this.keycodes.SPACE)\n        {\n            return $R.create('input.space', this.app, e, key, this.lastShiftKey);\n        }\n        // backspace or delete\n        else if (this._isDeleteKey(key))\n        {\n            return $R.create('input.delete', this.app, e, key);\n        }\n        else if (this._isArrowKey(key))\n        {\n            return $R.create('input.arrow', this.app, e, key);\n        }\n    },\n    onkeyup: function(e)\n    {\n        if (!this.opts.input) return;\n\n        // key\n        var key = e.which;\n\n        // shift key\n        this.lastShiftKey = e.shiftKey;\n\n        // hide context toolbar\n        this.app.broadcast('contextbar.close');\n\n        // shortcode\n        var shortcode = $R.create('input.shortcode', this.app, e, key);\n        if (shortcode.is()) return;\n\n        // is empty\n        if (key === this.keycodes.BACKSPACE)\n        {\n            var $editor = this.editor.getElement();\n            var html = this.utils.trimSpaces($editor.html());\n            html = html.replace(/<br\\s?\\/?>/g, '');\n            html = html.replace(/<div><\\/div>/, '');\n\n            if (html === '')\n            {\n                e.preventDefault();\n                this.editor.setEmpty();\n                this.editor.startFocus();\n                return;\n            }\n        }\n\n        if (this.editor.isEmpty())\n        {\n            this.app.broadcast('empty');\n        }\n    },\n\n    // public\n    start: function()\n    {\n        // extend shortcuts\n        if (this.opts.shortcutsAdd)\n        {\n            this.opts.shortcuts = $R.extend({}, true, this.opts.shortcuts, this.opts.shortcutsAdd);\n        }\n    },\n\n    // private\n    _selectAll: function()\n    {\n        var current = this.selection.getCurrent();\n        var data = this.inspector.parse(current);\n        var el;\n\n        if (data.isComponentType('table'))\n        {\n            el = data.getTable();\n            this.selection.setAll(el);\n            return;\n        }\n        else if (data.isComponentType('code'))\n        {\n            el = data.getComponentCodeElement();\n            this.selection.setAll(el);\n            return;\n        }\n\n        this.selection.setAll();\n    },\n    _isArrowKey: function(key)\n    {\n        return ([this.keycodes.UP, this.keycodes.DOWN, this.keycodes.RIGHT, this.keycodes.LEFT].indexOf(key) !== -1);\n    },\n    _isDeleteKey: function(key)\n    {\n        return (key === this.keycodes.BACKSPACE || key === this.keycodes.DELETE);\n    }\n});\n$R.add('class', 'input.arrow', {\n    init: function(app, e, key)\n    {\n        this.app = app;\n        this.opts = app.opts;\n        this.utils = app.utils;\n        this.caret = app.caret;\n        this.offset = app.offset;\n        this.marker = app.marker;\n        this.editor = app.editor;\n        this.keycodes = app.keycodes;\n        this.component = app.component;\n        this.inspector = app.inspector;\n        this.selection = app.selection;\n\n        // local\n        this.key = key;\n\n        // init\n        this._init(e);\n    },\n    // private\n    _init: function(e)\n    {\n        if (this._isRightLeftKey() && this._isExitVariable(e)) return;\n\n        if (this._isRightDownKey())\n        {\n            if (this._isExitOnDownRight(e)) return;\n            if (this._selectComponent(e, 'End', 'next')) return;\n        }\n\n        if (this._isLeftUpKey())\n        {\n            if (this._isExitOnUpLeft(e)) return;\n            if (this._selectComponent(e, 'Start', 'prev')) return;\n        }\n\n        if (this.key === this.keycodes.LEFT) this.utils.trimInvisibleChars('left');\n        else if (this.key === this.keycodes.RIGHT) this.utils.trimInvisibleChars('right');\n\n    },\n    _isRightDownKey: function()\n    {\n        return ([this.keycodes.DOWN, this.keycodes.RIGHT].indexOf(this.key) !== -1);\n    },\n    _isLeftUpKey: function()\n    {\n        return ([this.keycodes.UP, this.keycodes.LEFT].indexOf(this.key) !== -1);\n    },\n    _isRightLeftKey: function()\n    {\n        return ([this.keycodes.RIGHT, this.keycodes.LEFT].indexOf(this.key) !== -1);\n    },\n    _isExitVariable: function(e)\n    {\n        var current = this.selection.getCurrent();\n        var data = this.inspector.parse(current);\n        var component = data.getComponent();\n        if (data.isComponentType('variable') && data.isComponentActive())\n        {\n            e.preventDefault();\n            var func = (this.key === this.keycodes.LEFT) ? 'setBefore' : 'setAfter';\n            this.caret[func](component);\n            return;\n        }\n    },\n    _isExitOnUpLeft: function(e)\n    {\n        var current = this.selection.getCurrent();\n        var block = this.selection.getBlock(current);\n        var data = this.inspector.parse(current);\n        var prev = block.previousElementSibling;\n        var isStart = this.caret.isStart(block);\n\n        // prev table\n        if (isStart && prev && prev.tagName === 'TABLE')\n        {\n            e.preventDefault();\n            this.caret.setEnd(prev);\n            return true;\n        }\n        // figcaption\n        else if (data.isFigcaption())\n        {\n            block = data.getFigcaption();\n            isStart = this.caret.isStart(block);\n\n            var $component = $R.dom(block).closest('.redactor-component');\n            if (isStart && $component.length !== 0)\n            {\n                e.preventDefault();\n                this.caret.setEnd($component);\n                return true;\n            }\n        }\n        // exit table\n        else if (data.isTable() && isStart)\n        {\n            e.preventDefault();\n            this.caret.setEnd(block.previousElementSibling);\n            return true;\n        }\n        // component\n        else if (!data.isComponentEditable() && data.isComponent() && !data.isComponentType('variable'))\n        {\n            var component = data.getComponent();\n            if (!component.previousElementSibling)\n            {\n                e.preventDefault();\n                this.component.clearActive();\n\n                return this._exitPrevElement(e, data.getComponent());\n            }\n            else if (component.previousElementSibling)\n            {\n                e.preventDefault();\n                this.component.clearActive();\n                this.caret.setEnd(component.previousElementSibling);\n                return true;\n            }\n        }\n    },\n    _isExitOnDownRight: function(e)\n    {\n        var $editor = this.editor.getElement();\n        var current = this.selection.getCurrent();\n        var data = this.inspector.parse(current);\n        var isEndEditor = this.caret.isEnd();\n        var block, isEnd;\n\n        // table\n        if (data.isTable())\n        {\n            if (isEnd || isEndEditor)\n            {\n                return this._exitNextElement(e, data.getComponent());\n            }\n        }\n        // figcaption\n        else if (data.isFigcaption())\n        {\n            block = data.getFigcaption();\n            isEnd = this.caret.isEnd(block);\n\n            if (isEnd || isEndEditor)\n            {\n                return this._exitNextElement(e, data.getComponent());\n            }\n        }\n        // figure/code\n        else if (data.isComponentType('code'))\n        {\n            var component = data.getComponent();\n            var pre = $R.dom(data.getComponentCodeElement()).closest('pre');\n\n            isEnd = this.caret.isEnd(block);\n\n            var isNext = (pre && pre.get().nextElementSibling);\n            if (isEnd && !isNext)\n            {\n                return this._exitNextElement(e, component);\n            }\n        }\n        // pre & blockquote & dl\n        else if (data.isPre() || data.isBlockquote() || data.isDl())\n        {\n            if (isEndEditor)\n            {\n                if (data.isPre()) return this._exitNextElement(e, data.getPre());\n                else if (data.isBlockquote()) return this._exitNextElement(e, data.getBlockquote());\n                else if (data.isDl()) return this._exitNextElement(e, data.getDl());\n            }\n        }\n        // li\n        else if (data.isList())\n        {\n            var $list = $R.dom(current).parents('ul, ol', $editor).last();\n            isEnd = this.caret.isEnd($list);\n\n            if (isEnd || isEndEditor)\n            {\n                return this._exitNextElement(e, $list.get());\n            }\n        }\n        // component\n        else if (data.isComponent() && !data.isComponentType('variable') && data.getTag() !== 'span')\n        {\n            this.component.clearActive();\n            return this._exitNextElement(e, data.getComponent());\n        }\n    },\n    _exitPrevElement: function(e, node)\n    {\n        e.preventDefault();\n\n        if (node.previousElementSibling) this.caret.setEnd(node.previousElementSibling);\n        else this.utils.createMarkupBefore(node);\n\n        return true;\n    },\n    _exitNextElement: function(e, node)\n    {\n        e.preventDefault();\n\n        if (node.nextElementSibling) this.caret.setStart(node.nextElementSibling);\n        else this.utils.createMarkup(node);\n\n        return true;\n    },\n    _selectComponent: function(e, caret, type)\n    {\n        var current = this.selection.getCurrent();\n        var block = this.selection.getBlock(current);\n        var sibling = this.utils.findSiblings(current, type);\n        var siblingBlock = this.utils.findSiblings(block, type);\n\n        if (sibling && this.caret['is' + caret](current))\n        {\n            this._selectComponentItem(e, sibling, caret);\n        }\n        else if (siblingBlock && this.caret['is' + caret](block))\n        {\n            this._selectComponentItem(e, siblingBlock, caret);\n        }\n    },\n    _selectComponentItem: function(e, item, caret)\n    {\n        if (this.component.isNonEditable(item))\n        {\n            e.preventDefault();\n            this.caret['set' + caret](item);\n            return true;\n        }\n    }\n});\n$R.add('class', 'input.delete', {\n    init: function(app, e, key)\n    {\n        this.app = app;\n        this.opts = app.opts;\n        this.caret = app.caret;\n        this.utils = app.utils;\n        this.editor = app.editor;\n        this.marker = app.marker;\n        this.keycodes = app.keycodes;\n        this.component = app.component;\n        this.inspector = app.inspector;\n        this.selection = app.selection;\n\n        // local\n        this.key = key;\n\n        // init\n        this._init(e);\n    },\n    // private\n    _init: function(e)\n    {\n        if (this._removeActiveComponent(e)) return;\n        if (this._removeAllSelectedTable(e)) return;\n\n        // is empty\n        if (this.key === this.keycodes.BACKSPACE)\n        {\n            var $editor = this.editor.getElement();\n            var html = this.utils.trimSpaces($editor.html());\n\n            if (html === this.opts.emptyHtml)\n            {\n                e.preventDefault();\n                return;\n            }\n        }\n\n        // variable or non editable prev/next or selection\n        if (this._detectVariableOrNonEditable() || this.selection.hasNonEditable())\n        {\n            e.preventDefault();\n            return;\n        }\n\n        // collapsed\n        if (this.selection.isCollapsed())\n        {\n            // next / prev\n            if (this.key === this.keycodes.BACKSPACE) this._traverseBackspace(e);\n            else if (this.key === this.keycodes.DELETE) this._traverseDelete(e);\n        }\n\n        if (this.key === this.keycodes.BACKSPACE) this.utils.trimInvisibleChars('left');\n\n        this._removeUnwantedStyles();\n        this._removeEmptySpans();\n        this._removeSpanTagsInHeadings();\n        this._removeInlineTagsInPre();\n    },\n    _detectVariableOrNonEditable: function()\n    {\n        var block = this.selection.getBlock();\n        var isBlockStart = this.caret.isStart(block);\n        var isBlockEnd = this.caret.isEnd(block);\n        var el;\n\n        // backspace\n        if (this.key === this.keycodes.BACKSPACE && isBlockStart)\n        {\n            el = block.previousSibling;\n            if (this._isNonEditable(el)) return true;\n        }\n        // delete\n        else if (this.key === this.keycodes.DELETE && isBlockEnd)\n        {\n            el = block.nextSibling;\n            if (this._isNonEditable(el)) return true;\n        }\n\n        var current = this.selection.getCurrent();\n        var isCurrentStart = this.caret.isStart(current);\n        var isCurrentEnd = this.caret.isEnd(current);\n        var isCurrentStartSpace = (this.selection.getTextBeforeCaret().trim() === '');\n        var isCurrentEndSpace = (this.selection.getTextAfterCaret().trim() === '');\n\n        // backspace\n        if (this.key === this.keycodes.BACKSPACE && isCurrentStart && !isCurrentStartSpace)\n        {\n            el = current.previousSibling;\n            if (this._isVariable(el))\n            {\n                this.caret.setEnd(el);\n                return true;\n            }\n            else if (this._isNonEditable(el)) return true;\n        }\n        // delete\n        else if (this.key === this.keycodes.DELETE && isCurrentEnd && !isCurrentEndSpace)\n        {\n            el = current.nextSibling;\n            if (this._isVariable(el))\n            {\n                this.caret.setStart(el);\n                return true;\n            }\n            else if (this._isNonEditable(el)) return true;\n        }\n    },\n    _isVariable: function(node)\n    {\n        return ($R.dom(node).closest('[data-redactor-type=\"variable\"]').length !== 0);\n    },\n    _isNonEditable: function(node)\n    {\n        return ($R.dom(node).closest('.non-editable').length !== 0);\n    },\n    _getBlock: function()\n    {\n        var $editor = this.editor.getElement();\n        var block = this.selection.getBlock();\n        var data = this.inspector.parse(block);\n\n        block = (data.isList()) ? $R.dom(block).parents('ul, ol', $editor).last().get() : block;\n        block = (data.isDl()) ? data.getDl() : block;\n        block = (data.isTable()) ? data.getTable() : block;\n\n        return block;\n    },\n    _traverseDelete: function(e)\n    {\n        var current = this.selection.getCurrent();\n        var data = this.inspector.parse(current);\n        var block, isEnd, $next;\n\n        // figcaption\n        if (data.isFigcaption())\n        {\n            block = data.getFigcaption();\n            isEnd = this.caret.isEnd(block);\n\n            if (isEnd)\n            {\n                e.preventDefault();\n                return;\n            }\n        }\n        // figure/code\n        else if (data.isComponentType('code'))\n        {\n            block = data.getComponent();\n            isEnd = this.caret.isEnd(block);\n\n            if (isEnd)\n            {\n                e.preventDefault();\n                return;\n            }\n        }\n\n        // next\n        block = this._getBlock();\n        var next = this.utils.findSiblings(block, 'next');\n        if (!next) return;\n\n        isEnd = this.caret.isEnd(block);\n        var dataNext = this.inspector.parse(next);\n        var isNextBlock = (next.tagName === 'P' || next.tagName === 'DIV');\n\n        // figure/code or table\n        if (isEnd && dataNext.isComponentEditable())\n        {\n            e.preventDefault();\n            this.component.remove(next, false);\n            return;\n        }\n        // component\n        else if (isEnd && dataNext.isComponent())\n        {\n            e.preventDefault();\n\n            // select component\n            this.caret.setStart(next);\n\n            // remove current if empty\n            if (this.utils.isEmptyHtml(block.innerHTML))\n            {\n                $R.dom(block).remove();\n            }\n\n            return;\n        }\n        // combine list\n        else if (isEnd && dataNext.isList())\n        {\n            var $currentList = $R.dom(block);\n            $next = $R.dom(next);\n\n            // current list\n            if (data.isList())\n            {\n                e.preventDefault();\n\n                $currentList.append($next);\n                $next.unwrap();\n\n                return;\n            }\n            else\n            {\n                var $first = $next.children('li').first();\n                var $lists = $first.find('ul, ol');\n\n                if ($lists.length !== 0)\n                {\n                    e.preventDefault();\n\n                    $next.prepend($lists);\n                    $lists.unwrap();\n\n                    $currentList.append($first);\n                    $first.unwrap();\n\n                    return;\n                }\n            }\n        }\n        // block\n        else if (isEnd && !data.isList() && !data.isTable() && isNextBlock && !this.utils.isEmptyHtml(block.innerHTML))\n        {\n            e.preventDefault();\n\n            var $current = $R.dom(block);\n            $next = $R.dom(next);\n\n            $current.append($next);\n            $next.unwrap();\n\n            return;\n        }\n    },\n    _traverseBackspace: function(e)\n    {\n        var current = this.selection.getCurrent();\n        var data = this.inspector.parse(current);\n        var block, isStart, $prev, $currentList;\n\n        // figcaption\n        if (data.isFigcaption())\n        {\n            block = data.getFigcaption();\n            isStart = this.caret.isStart(block);\n\n            if (isStart)\n            {\n                e.preventDefault();\n                return;\n            }\n        }\n        // figure/code\n        else if (data.isComponentType('code'))\n        {\n            block = data.getComponent();\n            isStart = this.caret.isStart(block);\n\n            if (isStart && block.previousElementSibling)\n            {\n                e.preventDefault();\n                this.caret.setEnd(block.previousElementSibling);\n                return true;\n            }\n        }\n\n        // prev\n        block = this._getBlock();\n        var prev = this.utils.findSiblings(block, 'prev');\n\n        if (!prev)\n        {\n            setTimeout(this._replaceBlock.bind(this), 1);\n            return;\n        }\n\n        isStart = this.caret.isStart(block);\n        var dataPrev = this.inspector.parse(prev);\n        var isPrevBlock = (prev.tagName === 'P' || prev.tagName === 'DIV');\n\n        // figure/code or table\n        if (isStart && dataPrev.isComponentEditable())\n        {\n            e.preventDefault();\n            this.component.remove(prev, false);\n            return;\n        }\n        // component\n        else if (isStart && dataPrev.isComponent())\n        {\n            e.preventDefault();\n\n            // select component\n            this.caret.setStart(prev);\n\n            // remove current if empty\n            if (this.utils.isEmptyHtml(block.innerHTML))\n            {\n                $R.dom(block).remove();\n            }\n\n            return;\n        }\n        // lists\n        else if (isStart && data.isList())\n        {\n            e.preventDefault();\n\n            $currentList = $R.dom(block);\n            $prev = $R.dom(prev);\n\n            if (dataPrev.isList())\n            {\n                $currentList.children('li').first().prepend(this.marker.build('start'));\n                $prev.append($currentList);\n                $currentList.unwrap();\n\n                this.selection.restoreMarkers();\n            }\n            else\n            {\n                var $first = $currentList.children('li').first();\n                var first = $first.get();\n                var $lists = $first.find('ul, ol');\n\n                var $newnode = this.utils.replaceToTag(first, this.opts.markup);\n                if (this.opts.breakline) $newnode.attr('data-redactor-tag', 'br');\n                $currentList.before($newnode);\n                this.caret.setStart($newnode);\n\n                if ($lists.length !== 0)\n                {\n                    $currentList.prepend($lists);\n                    $lists.unwrap();\n                }\n            }\n\n            return;\n        }\n        // block\n        else if (isStart && isPrevBlock)\n        {\n            e.preventDefault();\n\n            var textNode = this.utils.createInvisibleChar();\n            var $current = $R.dom(block);\n            $prev = $R.dom(prev);\n\n            this.caret.setEnd($prev);\n\n            $current.prepend(textNode);\n            $prev.append($current.contents());\n            $current.remove();\n\n            return;\n        }\n    },\n    _replaceBlock: function()\n    {\n        var block = this.selection.getBlock();\n        var $block = $R.dom(block);\n\n        if (this.opts.markup === 'p' && block && this._isNeedToReplaceBlock(block))\n        {\n            var markup = document.createElement(this.opts.markup);\n\n            $block.replaceWith(markup);\n            this.caret.setStart(markup);\n        }\n\n        if (this.opts.breakline && block && block.tagName === 'DIV')\n        {\n            $block.attr('data-redactor-tag', 'br');\n        }\n    },\n    _isNeedToReplaceBlock: function(block)\n    {\n        return (block.tagName === 'DIV' && this.utils.isEmptyHtml(block.innerHTML));\n    },\n    _removeActiveComponent: function(e)\n    {\n        var current = this.selection.getCurrent();\n        var data = this.inspector.parse(current);\n        var component = data.getComponent();\n        if (data.isComponent() && this.component.isActive(component))\n        {\n            e.preventDefault();\n            this.component.remove(component);\n            return true;\n        }\n    },\n    _removeAllSelectedTable: function(e)\n    {\n        var current = this.selection.getCurrent();\n        var data = this.inspector.parse(current);\n        var table = data.getTable();\n        if (table && this.selection.isAll(table))\n        {\n            e.preventDefault();\n            this.component.remove(table);\n            return true;\n        }\n    },\n    _removeUnwantedStyles: function()\n    {\n        var $editor = this.editor.getElement();\n\n        setTimeout(function()\n        {\n            var $tags = $editor.find('*[style]');\n            $tags.not('img, figure, iframe, [data-redactor-style-cache], [data-redactor-span]').removeAttr('style');\n\n        }, 0);\n    },\n    _removeEmptySpans: function()\n    {\n        var $editor = this.editor.getElement();\n\n        setTimeout(function()\n        {\n            $editor.find('span').each(function(node)\n            {\n                if (node.attributes.length === 0)\n                {\n                    $R.dom(node).replaceWith(node.childNodes);\n                }\n            });\n\n        }, 0);\n    },\n    _removeSpanTagsInHeadings: function()\n    {\n        var $editor = this.editor.getElement();\n\n        setTimeout(function()\n        {\n            $editor.find('h1, h2, h3, h4, h5, h6').each(function(node)\n            {\n                var $node = $R.dom(node);\n                if ($node.closest('figure').length === 0)\n                {\n                    $node.find('span').not('.redactor-component, .non-editable, .redactor-selection-marker, [data-redactor-style-cache], [data-redactor-span]').unwrap();\n                }\n            });\n\n        }, 1);\n    },\n    _removeInlineTagsInPre: function()\n    {\n        var $editor = this.editor.getElement();\n        var tags = this.opts.inlineTags;\n\n        setTimeout(function()\n        {\n            $editor.find('pre').each(function(node)\n            {\n                var $node = $R.dom(node);\n                if ($node.closest('figure').length === 0)\n                {\n                    $node.find(tags.join(',')).not('code, .redactor-selection-marker').unwrap();\n                }\n            });\n\n        }, 1);\n    }\n});\n$R.add('class', 'input.enter', {\n    init: function(app, e)\n    {\n        this.app = app;\n        this.opts = app.opts;\n        this.utils = app.utils;\n        this.caret = app.caret;\n        this.editor = app.editor;\n        this.insertion = app.insertion;\n        this.selection = app.selection;\n        this.inspector = app.inspector;\n\n        // init\n        this._init(e);\n    },\n    // private\n    _init: function(e)\n    {\n        // turn off\n        if (!this.opts.enterKey) return this._disable(e);\n\n        // callback\n        var stop = this.app.broadcast('enter', e);\n        if (stop === false) return e.preventDefault();\n\n        // has non-editable\n        if (this.selection.hasNonEditable())\n        {\n            e.preventDefault();\n            return;\n        }\n\n        // shift enter\n        if (e.ctrlKey || e.shiftKey) return this._insertBreak(e);\n\n        // enter & exit\n        if (this._isExit(e)) return;\n\n        // traverse\n        this._traverse(e);\n    },\n    _disable: function(e)\n    {\n        e.preventDefault();\n        var range = this.selection.getRange();\n        if (range && !range.collapsed) range.deleteContents();\n    },\n    _insertBreak: function(e)\n    {\n        e.preventDefault();\n\n        var current = this.selection.getCurrent();\n        var data = this.inspector.parse(current);\n\n        if ((data.isComponent() && !data.isComponentEditable()) || data.isCode()) return;\n        else if (data.isPre()) this.insertion.insertNewline();\n        else this.insertion.insertBreakLine();\n    },\n    _isExit: function(e)\n    {\n        var $editor = this.editor.getElement();\n        var block = this.selection.getBlock();\n        var data = this.inspector.parse(block);\n        var isEnd = this.caret.isEnd(block);\n        var current = this.selection.getCurrent();\n        var prev = current.previousSibling;\n\n        // blockquote\n        if (data.isBlockquote())\n        {\n            var isParagraphExit = (isEnd && this._isExitableBlock(block, 'P'));\n            var isBreaklineExit = (isEnd && this._isExitableDblBreak(prev));\n\n            if (isParagraphExit || isBreaklineExit)\n            {\n                return this._exitFromElement(e, ((isBreaklineExit) ? prev : block), data.getBlockquote());\n            }\n        }\n        // pre\n        else if (!data.isComponentType('code') && data.isPre())\n        {\n            if (isEnd)\n            {\n                var html = block.innerHTML;\n                html = this.utils.removeInvisibleChars(html);\n                if (html.match(/(\\n\\n\\n)$/) !== null)\n                {\n                    $R.dom(prev.previousSibling.previousSibling).remove();\n                    return this._exitFromElement(e, prev, block);\n                }\n            }\n        }\n        // dl\n        else if (data.isDl())\n        {\n            if (isEnd && this._isExitableBlock(block, 'DT'))\n            {\n                return this._exitFromElement(e, block, data.getDl());\n            }\n        }\n        // li\n        else if (data.isList())\n        {\n            var list = $R.dom(current).parents('ul, ol', $editor).last();\n\n            isEnd = this.caret.isEnd(list);\n            if (isEnd && this._isExitableBlock(block, 'LI'))\n            {\n                return this._exitFromElement(e, block, list);\n            }\n        }\n        else if (data.isComponent() && data.isComponentActive() && !data.isFigcaption() && !data.isComponentEditable())\n        {\n            return this._exitFromElement(e, false, data.getComponent());\n        }\n    },\n    _isExitableDblBreak: function(prev)\n    {\n        var next = (prev) ? prev.nextSibling : false;\n        if (next)\n        {\n            var text = this.utils.removeInvisibleChars(next.textContent);\n\n            return (next.nodeType === 3 && text.trim() === '');\n        }\n    },\n    _isExitableBlock: function(block, tag)\n    {\n        return (block && block.tagName === tag && this.utils.isEmptyHtml(block.innerHTML));\n    },\n    _exitFromElement: function(e, prev, el)\n    {\n        e.preventDefault();\n        if (prev) $R.dom(prev).remove();\n        this.utils.createMarkup(el);\n\n        return true;\n    },\n    _exitNextElement: function(e, node)\n    {\n        e.preventDefault();\n\n        if (node.nextSibling) this.caret.setStart(node.nextSibling);\n        else this.utils.createMarkup(node);\n\n        return true;\n    },\n    _traverse: function(e)\n    {\n        var current = this.selection.getCurrent();\n        var isText = this.selection.isText();\n        var block = this.selection.getBlock();\n        var data = this.inspector.parse(current);\n        var blockTag = (block) ? block.tagName.toLowerCase() : false;\n\n        // pre\n        if (data.isPre())\n        {\n            e.preventDefault();\n            return this.insertion.insertNewline();\n        }\n        // blockquote\n        else if (data.isBlockquote())\n        {\n            block = this.selection.getBlock(current);\n            if (block && block.tagName === 'BLOCKQUOTE')\n            {\n                e.preventDefault();\n                return this.insertion.insertBreakLine();\n            }\n        }\n        // figcaption\n        else if (data.isFigcaption())\n        {\n            block = data.getFigcaption();\n            var isEnd = this.caret.isEnd(block);\n            var isEndEditor = this.caret.isEnd();\n            if (isEnd || isEndEditor)\n            {\n                return this._exitNextElement(e, data.getComponent());\n            }\n            else\n            {\n                e.preventDefault();\n                return;\n            }\n        }\n        // dl\n        else if (data.isDl())\n        {\n            e.preventDefault();\n            return this._traverseDl(current);\n        }\n        // text\n        else if (isText || (this.opts.breakline && blockTag === 'div'))\n        {\n            e.preventDefault();\n            return this.insertion.insertBreakLine();\n        }\n        // div / p\n        else\n        {\n            setTimeout(this._replaceBlock.bind(this), 1);\n            return;\n        }\n    },\n    _traverseDl: function(current)\n    {\n        var block = this.selection.getBlock(current);\n        var data = this.inspector.parse(block);\n        var tag = data.getTag();\n        var $el = $R.dom(block);\n        var next = $el.get().nextSibling || false;\n        var $next = $R.dom(next);\n        var nextDd = (next && $next.is('dd'));\n        var nextDt = (next && $next.is('dt'));\n        var isEnd = this.caret.isEnd(block);\n\n        if (tag === 'dt' && !nextDd && isEnd)\n        {\n            var dd = document.createElement('dd');\n            $el.after(dd);\n\n            this.caret.setStart(dd);\n            return;\n        }\n        else if (tag === 'dd' && !nextDt && isEnd)\n        {\n            var dt = document.createElement('dt');\n            $el.after(dt);\n\n            this.caret.setStart(dt);\n            return;\n        }\n\n        return this.insertion.insertBreakLine();\n    },\n    _replaceBlock: function()\n    {\n        var block = this.selection.getBlock();\n        var $block = $R.dom(block);\n\n        if (this.opts.markup === 'p' && block && this._isNeedToReplaceBlock(block))\n        {\n            var markup = document.createElement(this.opts.markup);\n\n            $block.replaceWith(markup);\n            this.caret.setStart(markup);\n        }\n        else\n        {\n            if (block)\n            {\n                if (this.utils.isEmptyHtml(block.innerHTML))\n                {\n                    this._clearBlock($block, block);\n                }\n                else\n                {\n                    var first = this.utils.getFirstNode(block);\n                    if (first && first.tagName === 'BR')\n                    {\n                        $R.dom(first).remove();\n                        this.caret.setStart(block);\n                    }\n                }\n            }\n        }\n\n        if (block && this._isNeedToCleanBlockStyle(block) && this.opts.cleanOnEnter)\n        {\n            $block.removeAttr('class style');\n        }\n\n        if (this.opts.breakline && block && block.tagName === 'DIV')\n        {\n            $block.attr('data-redactor-tag', 'br');\n        }\n    },\n    _clearBlock: function($block, block)\n    {\n        if (this.opts.cleanInlineOnEnter || block.innerHTML === '<br>')\n        {\n            $block.html('');\n        }\n\n        this.caret.setStart(block);\n    },\n    _isNeedToReplaceBlock: function(block)\n    {\n        return (block.tagName === 'DIV' && this.utils.isEmptyHtml(block.innerHTML));\n    },\n    _isNeedToCleanBlockStyle: function(block)\n    {\n        return (block.tagName === 'P' && this.utils.isEmptyHtml(block.innerHTML));\n    }\n});\n$R.add('class', 'input.paste', {\n    init: function(app, e, dataTransfer, html, point)\n    {\n        this.app = app;\n        this.opts = app.opts;\n        this.editor = app.editor;\n        this.cleaner = app.cleaner;\n        this.container = app.container;\n        this.inspector = app.inspector;\n        this.insertion = app.insertion;\n        this.selection = app.selection;\n        this.autoparser = app.autoparser;\n\n        // local\n        this.pasteHtml = html;\n        this.pointInserted = point;\n        this.dataTransfer = dataTransfer;\n\n        // init\n        this._init(e);\n    },\n    // private\n    _init: function(e)\n    {\n        var clipboard = this.dataTransfer || e.clipboardData;\n        var current = this.selection.getCurrent();\n        var dataCurrent = this.inspector.parse(current);\n\n        this.dropPasted = this.dataTransfer;\n        this.isRawCode = (dataCurrent.isPre() || dataCurrent.isCode());\n\n        this.editor.enablePasting();\n        this.editor.saveScroll();\n\n        if (!this.dropPasted)\n        {\n            this.selection.saveMarkers();\n        }\n\n        if (this.isRawCode || !clipboard)\n        {\n            var text;\n            if (!this.isRawCode && !clipboard && window.clipboardData)\n            {\n                text = window.clipboardData.getData(\"text\");\n            }\n            else\n            {\n                text = clipboard.getData(\"text/plain\");\n            }\n\n            e.preventDefault();\n            this._insert(e, text);\n            return;\n        }\n        else if (this.pasteHtml)\n        {\n            e.preventDefault();\n            this._insert(e, this.pasteHtml);\n        }\n        else\n        {\n            // html / text\n            var url = clipboard.getData('URL');\n            var html = (this._isPlainText(clipboard)) ? clipboard.getData(\"text/plain\") : clipboard.getData(\"text/html\");\n\n            // safari anchor links\n            html = (!url || url === '') ? html : url;\n\n            // file\n            if (clipboard.files !== null && clipboard.files.length > 0 && html === '')\n            {\n                var files = [];\n                for (var i = 0; i < clipboard.files.length; i++)\n                {\n                    var file = clipboard.files[i] || clipboard.items[i].getAsFile();\n                    if (file) files.push(file);\n                }\n\n                if (files.length > 0)\n                {\n                    e.preventDefault();\n                    this._insertFiles(e, files);\n                    return;\n                }\n            }\n\n\n            e.preventDefault();\n            this._insert(e, html);\n        }\n    },\n    _isPlainText: function(clipboard)\n    {\n        var text = clipboard.getData(\"text/plain\");\n        var html = clipboard.getData(\"text/html\");\n\n        if (text && html)\n        {\n            var element = document.createElement(\"div\");\n            element.innerHTML = html;\n\n            if (element.textContent === text)\n            {\n                return !element.querySelector(\":not(meta)\");\n            }\n        }\n        else\n        {\n            return (text !== null);\n        }\n    },\n    _restoreSelection: function()\n    {\n        this.editor.restoreScroll();\n        this.editor.disablePasting();\n        if (!this.dropPasted)\n        {\n            this.selection.restoreMarkers();\n        }\n    },\n    _insert: function(e, html)\n    {\n        // pasteBefore callback\n        var returned = this.app.broadcast('pasteBefore', html);\n        html = (returned === undefined) ? html : returned;\n\n        // clean\n        html = (this.isRawCode) ? html : this.cleaner.paste(html);\n        html = (this.isRawCode) ? this.cleaner.encodePhpCode(html) : html;\n\n        // paste callback\n        returned = this.app.broadcast('pasting', html);\n        html = (returned === undefined) ? html : returned;\n\n        this._restoreSelection();\n\n        // stop input\n        if (!this.opts.input) return;\n\n        // autoparse\n        if (this.opts.autoparse && this.opts.autoparsePaste)\n        {\n            html = this.autoparser.parse(html);\n        }\n\n        var nodes = (this.dropPasted) ? this.insertion.insertToPoint(e, html, this.pointInserted) : this.insertion.insertHtml(html);\n\n        // pasted callback\n        this.app.broadcast('pasted', nodes);\n        this.app.broadcast('autoparseobserve');\n    },\n    _insertFiles: function(e, files)\n    {\n        this._restoreSelection();\n\n        // drop or clipboard\n        var isImage = (this.opts.imageTypes.indexOf(files[0].type) !== -1);\n        var isClipboard = (typeof this.dropPasted === 'undefined');\n\n        if (isImage) this.app.broadcast('dropimage', e, files, isClipboard);\n        else this.app.broadcast('dropfile', e, files, isClipboard);\n    }\n});\n$R.add('class', 'input.shortcode', {\n    init: function(app, e, key)\n    {\n        this.app = app;\n        this.opts = app.opts;\n        this.utils = app.utils;\n        this.marker = app.marker;\n        this.keycodes = app.keycodes;\n        this.selection = app.selection;\n\n        // local\n        this.worked = false;\n\n        // init\n        if (key === this.keycodes.SPACE) this._init();\n    },\n    // public\n    is: function()\n    {\n        return this.worked;\n    },\n    // private\n    _init: function()\n    {\n        var current = this.selection.getCurrent();\n        if (current && current.nodeType === 3)\n        {\n            var text = this.utils.removeInvisibleChars(current.textContent);\n            var shortcodes = this.opts.shortcodes;\n            for (var name in shortcodes)\n            {\n                var re = new RegExp('^' + this.utils.escapeRegExp(name));\n                var match = text.match(re);\n                if (match !== null)\n                {\n                    if (typeof shortcodes[name].format !== 'undefined')\n                    {\n                        return this._format(shortcodes[name].format, current, re);\n                    }\n                }\n            }\n        }\n    },\n    _format: function(tag, current, re)\n    {\n        var marker = this.marker.insert('start');\n        current = marker.previousSibling;\n\n        var text = current.textContent;\n        text = this.utils.trimSpaces(text);\n        text = text.replace(re, '');\n        current.textContent = text;\n\n        var api = (tag === 'ul' || tag === 'ol') ? 'module.list.toggle' : 'module.block.format';\n\n        this.app.api(api, tag);\n        this.selection.restoreMarkers();\n\n        this.worked = true;\n    }\n});\n$R.add('class', 'input.shortcut', {\n    init: function(app, e)\n    {\n        this.app = app;\n        this.opts = app.opts;\n\n        // local\n        this.worked = false;\n\n        // based on https://github.com/jeresig/jquery.hotkeys\n        this.hotkeys = {\n            8: \"backspace\", 9: \"tab\", 10: \"return\", 13: \"return\", 16: \"shift\", 17: \"ctrl\", 18: \"alt\", 19: \"pause\",\n            20: \"capslock\", 27: \"esc\", 32: \"space\", 33: \"pageup\", 34: \"pagedown\", 35: \"end\", 36: \"home\",\n            37: \"left\", 38: \"up\", 39: \"right\", 40: \"down\", 45: \"insert\", 46: \"del\", 59: \";\", 61: \"=\",\n            96: \"0\", 97: \"1\", 98: \"2\", 99: \"3\", 100: \"4\", 101: \"5\", 102: \"6\", 103: \"7\",\n            104: \"8\", 105: \"9\", 106: \"*\", 107: \"+\", 109: \"-\", 110: \".\", 111 : \"/\",\n            112: \"f1\", 113: \"f2\", 114: \"f3\", 115: \"f4\", 116: \"f5\", 117: \"f6\", 118: \"f7\", 119: \"f8\",\n            120: \"f9\", 121: \"f10\", 122: \"f11\", 123: \"f12\", 144: \"numlock\", 145: \"scroll\", 173: \"-\", 186: \";\", 187: \"=\",\n            188: \",\", 189: \"-\", 190: \".\", 191: \"/\", 192: \"`\", 219: \"[\", 220: \"\\\\\", 221: \"]\", 222: \"'\"\n        };\n\n        this.hotkeysShiftNums = {\n            \"`\": \"~\", \"1\": \"!\", \"2\": \"@\", \"3\": \"#\", \"4\": \"$\", \"5\": \"%\", \"6\": \"^\", \"7\": \"&\",\n            \"8\": \"*\", \"9\": \"(\", \"0\": \")\", \"-\": \"_\", \"=\": \"+\", \";\": \": \", \"'\": \"\\\"\", \",\": \"<\",\n            \".\": \">\",  \"/\": \"?\",  \"\\\\\": \"|\"\n        };\n\n        // init\n        this._init(e);\n    },\n    // public\n    is: function()\n    {\n        return this.worked;\n    },\n    // private\n    _init: function(e)\n    {\n        // disable browser's hot keys for bold and italic if shortcuts off\n        if (this.opts.shortcuts === false)\n        {\n            if ((e.ctrlKey || e.metaKey) && (e.which === 66 || e.which === 73)) e.preventDefault();\n            return;\n        }\n\n        // build\n        for (var key in this.opts.shortcuts)\n        {\n            this._build(e, key, this.opts.shortcuts[key]);\n        }\n    },\n    _build: function(e, str, command)\n    {\n        var keys = str.split(',');\n        var len = keys.length;\n        for (var i = 0; i < len; i++)\n        {\n            if (typeof keys[i] === 'string')\n            {\n                this._handler(e, keys[i].trim(), command);\n            }\n        }\n    },\n    _handler: function(e, keys, command)\n    {\n        keys = keys.toLowerCase().split(\" \");\n\n        var special = this.hotkeys[e.keyCode];\n        var character = String.fromCharCode(e.which).toLowerCase();\n        var modif = \"\", possible = {};\n        var cmdKeys = [\"meta\", \"ctrl\", \"alt\", \"shift\"];\n\n        for (var i = 0; i < cmdKeys.length; i++)\n        {\n            var specialKey = cmdKeys[i];\n            if (e[specialKey + 'Key'] && special !== specialKey)\n            {\n                modif += specialKey + '+';\n            }\n        }\n\n        if (special) possible[modif + special] = true;\n        if (character)\n        {\n            possible[modif + character] = true;\n            possible[modif + this.hotkeysShiftNums[character]] = true;\n\n            // \"$\" can be triggered as \"Shift+4\" or \"Shift+$\" or just \"$\"\n            if (modif === \"shift+\")\n            {\n                possible[this.hotkeysShiftNums[character]] = true;\n            }\n        }\n\n        var len = keys.length;\n        for (var i = 0; i < len; i++)\n        {\n            if (possible[keys[i]])\n            {\n\n                e.preventDefault();\n                this.worked = true;\n\n                if (command.message)\n                {\n                    this.app.broadcast(command.message, command.args);\n                    this.app.broadcast('buffer.trigger');\n                }\n                else if (command.api)\n                {\n                    this.app.api(command.api, command.args);\n                    this.app.broadcast('buffer.trigger');\n                }\n\n                return;\n            }\n        }\n    }\n});\n$R.add('class', 'input.space', {\n    init: function(app, e, key, lastShiftKey)\n    {\n        this.app = app;\n        this.keycodes = app.keycodes;\n        this.insertion = app.insertion;\n        this.selection = app.selection;\n\n        // local\n        this.key = key;\n        this.lastShiftKey = lastShiftKey;\n\n        // init\n        this._init(e);\n    },\n    // private\n    _init: function(e)\n    {\n        // has non-editable\n        if (this.selection.hasNonEditable())\n        {\n            e.preventDefault();\n            return;\n        }\n\n        // shift/ctrl + space\n        if (!this.lastShiftKey && this.key === this.keycodes.SPACE && (e.ctrlKey || e.shiftKey) && !e.metaKey)\n        {\n            e.preventDefault();\n            this.insertion.insertChar('&nbsp;');\n            return;\n        }\n    }\n});\n$R.add('class', 'input.tab', {\n    init: function(app, e)\n    {\n        this.app = app;\n        this.opts = app.opts;\n        this.inspector = app.inspector;\n        this.insertion = app.insertion;\n        this.selection = app.selection;\n\n        // init\n        this._init(e);\n    },\n    // private\n    _init: function(e)\n    {\n        // turn off tab\n        if (!this.opts.tabKey) return;\n\n        // callback\n        var stop = this.app.broadcast('tab', e);\n        if (stop === false) return e.preventDefault();\n\n        // traverse\n        this._traverse(e);\n    },\n    _traverse: function(e)\n    {\n        var current = this.selection.getCurrent();\n        var data = this.inspector.parse(current);\n\n        // hard tab\n        if (!data.isComponent() && e.shiftKey)\n        {\n            return this._insertHardTab(e, 4);\n        }\n\n        // list\n        if (data.isList())\n        {\n            e.preventDefault();\n            return this.app.api('module.list.indent');\n        }\n        // pre\n        if (data.isPre() || (data.isComponentType('code') && !data.isFigcaption()))\n        {\n            return this._tabCode(e);\n        }\n\n        // tab as spaces\n        if (this.opts.tabAsSpaces !== false)\n        {\n            return this._insertHardTab(e, this.opts.tabAsSpaces);\n        }\n    },\n    _insertHardTab: function(e, num)\n    {\n        e.preventDefault();\n        var node = document.createTextNode(Array(num + 1).join('\\u00a0'));\n        return this.insertion.insertNode(node, 'end');\n    },\n    _tabCode: function(e)\n    {\n        e.preventDefault();\n\n        var node = (this.opts.preSpaces) ? document.createTextNode(Array(this.opts.preSpaces + 1).join('\\u00a0')) : document.createTextNode('\\t');\n\n        return this.insertion.insertNode(node, 'end');\n    }\n});\n$R.add('module', 'upload', {\n    init: function(app)\n    {\n        this.app = app;\n        this.opts = app.opts;\n        this.lang = app.lang;\n        this.utils = app.utils;\n        this.editor = app.editor;\n        this.progress = app.progress;\n\n        // local\n        this.defaults = {\n            event: false,\n            element: false,\n            name: false,\n            files: false,\n            url: false,\n            data: false,\n            paramName: false\n        };\n    },\n    // public\n    build: function(options)\n    {\n        this.p = $R.extend(this.defaults, options);\n        this.$el = $R.dom(this.p.element);\n\n        if (this.$el.get().tagName === 'INPUT') this._buildInput();\n        else                                    this._buildBox();\n    },\n    send: function(options)\n    {\n        this.p = $R.extend(this.defaults, options);\n        this.$uploadbox = this.editor.getElement();\n        this._send(this.p.event, this.p.files);\n    },\n    complete: function(response, e)\n    {\n        this._complete(response, e);\n    },\n\n    // private\n    _buildInput: function()\n    {\n        this.box = false;\n        this.prefix = '';\n\n        this.$uploadbox = $R.dom('<div class=\"upload-redactor-box\" />');\n\n        this.$el.hide();\n        this.$el.after(this.$uploadbox);\n\n        if (this.opts.multipleUpload) this.$el.attr('multiple', 'multiple');\n        else this.$el.removeAttr('multiple');\n\n        this._buildPlaceholder();\n        this._buildEvents();\n    },\n    _buildBox: function()\n    {\n        this.box = true;\n        this.prefix = 'box-';\n\n        this.$uploadbox = this.$el;\n        this.$uploadbox.attr('ondragstart', 'return false;');\n\n        // events\n        this.$uploadbox.on('drop.redactor.upload', this._onDropBox.bind(this));\n        this.$uploadbox.on('dragover.redactor.upload', this._onDragOver.bind(this));\n        this.$uploadbox.on('dragleave.redactor.upload', this._onDragLeave.bind(this));\n    },\n    _buildPlaceholder: function()\n    {\n        this.$placeholder = $R.dom('<div class=\"upload-redactor-placeholder\" />');\n        this.$placeholder.html(this.lang.get('upload-label'));\n        this.$uploadbox.append(this.$placeholder);\n    },\n    _buildEvents: function()\n    {\n        this.$el.on('change.redactor.upload', this._onChange.bind(this));\n        this.$uploadbox.on('click.redactor.upload', this._onClick.bind(this));\n        this.$uploadbox.on('drop.redactor.upload', this._onDrop.bind(this));\n        this.$uploadbox.on('dragover.redactor.upload', this._onDragOver.bind(this));\n        this.$uploadbox.on('dragleave.redactor.upload', this._onDragLeave.bind(this));\n    },\n    _onClick: function(e)\n    {\n        e.preventDefault();\n        this.$el.click();\n    },\n    _onChange: function(e)\n    {\n        this._send(e, this.$el.get().files);\n    },\n    _onDrop: function(e)\n    {\n        e.preventDefault();\n\n        this._clear();\n        this._setStatusDrop();\n        this._send(e);\n    },\n    _onDragOver: function(e)\n    {\n        e.preventDefault();\n        this._setStatusHover();\n\n        return false;\n    },\n    _onDragLeave: function(e)\n    {\n        e.preventDefault();\n        this._removeStatusHover();\n\n        return false;\n    },\n    _onDropBox: function(e)\n    {\n        e.preventDefault();\n\n        this._clear();\n        this._setStatusDrop();\n        this._send(e);\n    },\n    _removeStatusHover: function()\n    {\n        this.$uploadbox.removeClass('upload-redactor-' + this.prefix + 'hover');\n    },\n    _setStatusDrop: function()\n    {\n        this.$uploadbox.addClass('upload-redactor-' + this.prefix + 'drop');\n    },\n    _setStatusHover: function()\n    {\n        this.$uploadbox.addClass('upload-redactor-' + this.prefix + 'hover');\n    },\n    _setStatusError: function()\n    {\n        this.$uploadbox.addClass('upload-redactor-' + this.prefix + 'error');\n    },\n    _setStatusSuccess: function()\n    {\n        this.$uploadbox.addClass('upload-redactor-' + this.prefix + 'success');\n    },\n    _clear: function()\n    {\n        var classes = ['drop', 'hover', 'error', 'success'];\n        for (var i = 0; i < classes.length; i++)\n        {\n            this.$uploadbox.removeClass('upload-redactor-' + this.prefix + classes[i]);\n        }\n\n        this.$uploadbox.removeAttr('ondragstart');\n    },\n    _send: function(e, files)\n    {\n        e = e.originalEvent || e;\n\n        files = (files) ? files : e.dataTransfer.files;\n\n        var data = new FormData();\n        var name = this._getUploadParam();\n\n        data = this._buildData(name, files, data);\n        data = this.utils.extendData(data, this.p.data);\n\n        var stop = this.app.broadcast('upload.start', e, data, files);\n        if (stop !== false)\n        {\n            this._sendData(data, files, e);\n        }\n    },\n    _sendData: function(data, files, e)\n    {\n        this.progress.show();\n        if (typeof this.p.url === 'function')\n        {\n            var res = this.p.url(data, files, e, this);\n            if (!(res instanceof Promise))\n            {\n                this._complete(res, e);\n            }\n        }\n        else\n        {\n            $R.ajax.post({\n                url: this.p.url,\n                data: data,\n                before: function(xhr)\n                {\n                    return this.app.broadcast('upload.beforeSend', xhr);\n\n                }.bind(this),\n                success: function(response)\n                {\n                    this._complete(response, e);\n                }.bind(this)\n            });\n        }\n    },\n    _getUploadParam: function()\n    {\n        return (this.p.paramName) ? this.p.paramName : 'file';\n    },\n    _buildData: function(name, files, data)\n    {\n        if (files.length === 1)\n        {\n            data.append(name + '[]', files[0]);\n        }\n        else if (files.length > 1 && this.opts.multipleUpload !== false)\n        {\n            for (var i = 0; i < files.length; i++)\n            {\n                data.append(name + '[]', files[i]);\n            }\n        }\n\n        return data;\n    },\n    _complete: function(response, e)\n    {\n        this._clear();\n        this.progress.hide();\n\n        if (response && response.error)\n        {\n            this._setStatusError();\n\n            this.app.broadcast('upload.' + this.p.name + '.error', response, e);\n            this.app.broadcast('upload.error', response);\n        }\n        else\n        {\n            this._setStatusSuccess();\n\n            this.app.broadcast('upload.' + this.p.name + '.complete', response, e);\n            this.app.broadcast('upload.complete', response);\n\n            setTimeout(this._clear.bind(this), 500);\n        }\n    }\n});\n$R.add('class', 'code.component', {\n    mixins: ['dom', 'component'],\n    init: function(app, el)\n    {\n        this.app = app;\n\n        // init\n        return (el && el.cmnt !== undefined) ? el : this._init(el);\n    },\n\n    // private\n   _init: function(el)\n    {\n        var $pre;\n        if (typeof el !== 'undefined')\n        {\n            var $node = $R.dom(el);\n            var $wrapper = $node.closest('figure');\n            if ($wrapper.length !== 0)\n            {\n                this.parse($wrapper);\n            }\n            else\n            {\n                this.parse('<figure>');\n                this.append(el);\n            }\n\n            $pre = this.find('pre code, pre').last();\n        }\n        else\n        {\n            $pre = $R.dom('<pre>');\n\n            this.parse('<figure>');\n            this.append($pre);\n        }\n\n        this._initElement($pre);\n        this._initWrapper();\n    },\n    _initElement: function($pre)\n    {\n        $pre.attr({\n            'tabindex': '-1',\n            'contenteditable': true\n        });\n    },\n    _initWrapper: function()\n    {\n        this.addClass('redactor-component');\n        this.attr({\n            'data-redactor-type': 'code',\n            'tabindex': '-1',\n            'contenteditable': false\n        });\n    }\n});\n$R.add('module', 'form', {\n    init: function(app)\n    {\n        this.app = app;\n        this.lang = app.lang;\n        this.component = app.component;\n        this.inspector = app.inspector;\n    },\n    // messages\n    onform: {\n        remove: function(node)\n        {\n            this._remove(node);\n        }\n    },\n    oncontextbar: function(e, contextbar)\n    {\n        var data = this.inspector.parse(e.target);\n        if (data.isComponentType('form'))\n        {\n            var node = data.getComponent();\n            var buttons = {\n                \"remove\": {\n                    title: this.lang.get('delete'),\n                    api: 'module.form.remove',\n                    args: node\n                }\n            };\n\n            contextbar.set(e, node, buttons, 'top');\n        }\n\n    },\n\n    // private\n    _remove: function(node)\n    {\n        this.component.remove(node);\n    }\n});\n$R.add('class', 'form.component', {\n    mixins: ['dom', 'component'],\n    init: function(app, el)\n    {\n        this.app = app;\n        this.utils = app.utils;\n\n        // init\n        return (el && el.cmnt !== undefined) ? el : this._init(el);\n    },\n    // private\n    _init: function(el)\n    {\n        if (typeof el !== 'undefined')\n        {\n            var $node = $R.dom(el);\n            var $wrapper = $node.closest('form');\n            if ($wrapper.length !== 0)\n            {\n                var $figure = this.utils.replaceToTag(el, 'figure');\n                this.parse($figure);\n            }\n            else\n            {\n                this.parse('<figure>');\n                this.append(el);\n            }\n        }\n        else\n        {\n            this.parse('<figure>');\n        }\n\n        this._initWrapper();\n    },\n    _initWrapper: function()\n    {\n        this.addClass('redactor-component');\n        this.attr({\n            'data-redactor-type': 'form',\n            'tabindex': '-1',\n            'contenteditable': false\n        });\n    }\n});\n$R.add('module', 'image', {\n    modals: {\n        'image':\n            '<div class=\"redactor-modal-tab\" data-title=\"## upload ##\"><form action=\"\"> \\\n                <input type=\"file\" name=\"file\"> \\\n            </form></div>',\n        'imageedit':\n            '<div class=\"redactor-modal-group\"> \\\n                <div id=\"redactor-modal-image-preview\" class=\"redactor-modal-side\"></div> \\\n                <form action=\"\" class=\"redactor-modal-area\"> \\\n                    <div class=\"form-item\"> \\\n                        <label for=\"modal-image-title\"> ## title ##</label> \\\n                        <input type=\"text\" id=\"modal-image-title\" name=\"title\" /> \\\n                    </div> \\\n                    <div class=\"form-item form-item-caption\"> \\\n                        <label for=\"modal-image-caption\">## caption ##</label> \\\n                        <input type=\"text\" id=\"modal-image-caption\" name=\"caption\" aria-label=\"## caption ##\" /> \\\n                    </div> \\\n                    <div class=\"form-item form-item-align\"> \\\n                        <label>## image-position ##</label> \\\n                        <select name=\"align\" aria-label=\"## image-position ##\"> \\\n                            <option value=\"none\">## none ##</option> \\\n                            <option value=\"left\">## left ##</option> \\\n                            <option value=\"center\">## center ##</option> \\\n                            <option value=\"right\">## right ##</option> \\\n                        </select> \\\n                    </div> \\\n                    <div class=\"form-item form-item-link\"> \\\n                        <label for=\"modal-image-url\">## link ##</label> \\\n                        <input type=\"text\" id=\"modal-image-url\" name=\"url\" aria-label=\"## link ##\" /> \\\n                    </div> \\\n                    <div class=\"form-item form-item-link\"> \\\n                        <label class=\"checkbox\"><input type=\"checkbox\" name=\"target\" aria-label=\"## link-in-new-tab ##\"> ## link-in-new-tab ##</label> \\\n                    </div> \\\n                </form> \\\n            </div>'\n    },\n    init: function(app)\n    {\n        this.app = app;\n        this.opts = app.opts;\n        this.lang = app.lang;\n        this.caret = app.caret;\n        this.utils = app.utils;\n        this.editor = app.editor;\n        this.storage = app.storage;\n        this.component = app.component;\n        this.inspector = app.inspector;\n        this.insertion = app.insertion;\n        this.selection = app.selection;\n\n        // local\n        this.justResized = false;\n    },\n    // messages\n    oninsert: function()\n    {\n        this._observeImages();\n    },\n    onstarted: function()\n    {\n        // storage observe\n        this.storage.observeImages();\n\n        // resize\n        if (this.opts.imageResizable)\n        {\n            this.resizer = $R.create('image.resize', this.app);\n        }\n\n        // observe\n        this._observeImages();\n    },\n    ondropimage: function(e, files, clipboard)\n    {\n        if (!this.opts.imageUpload) return;\n\n        var options = {\n            url: this.opts.imageUpload,\n            event: (clipboard) ? false : e,\n            files: files,\n            name: 'imagedrop',\n            data: this.opts.imageData,\n            paramName: this.opts.imageUploadParam\n        };\n\n        this.app.api('module.upload.send', options);\n    },\n    onstop: function()\n    {\n        if (this.resizer) this.resizer.stop();\n    },\n    onbottomclick: function()\n    {\n        this.insertion.insertToEnd(this.editor.getLastNode(), 'image');\n    },\n    onimageresizer: {\n        stop: function()\n        {\n            if (this.resizer) this.resizer.hide();\n        }\n    },\n    onsource: {\n        open: function()\n        {\n            if (this.resizer) this.resizer.hide();\n        },\n        closed: function()\n        {\n            this._observeImages();\n            if (this.resizer) this.resizer.rebuild();\n        }\n    },\n    onupload: {\n        complete: function()\n        {\n            this._observeImages();\n        },\n        image: {\n            complete: function(response)\n            {\n                this._insert(response);\n            },\n            error: function(response)\n            {\n                this._uploadError(response);\n            }\n        },\n        imageedit: {\n            complete: function(response)\n            {\n                this._change(response);\n            },\n            error: function(response)\n            {\n                this._uploadError(response);\n            }\n        },\n        imagedrop: {\n            complete: function(response, e)\n            {\n                this._insert(response, e);\n            },\n            error: function(response)\n            {\n                this._uploadError(response);\n            }\n        },\n        imagereplace: {\n            complete: function(response)\n            {\n                this._change(response, false);\n            },\n            error: function(response)\n            {\n                this._uploadError(response);\n            }\n        }\n    },\n    onmodal: {\n        image: {\n            open: function($modal, $form)\n            {\n                this._setUpload($form);\n            }\n        },\n        imageedit: {\n            open: function($modal, $form)\n            {\n                this._setFormData($modal, $form);\n            },\n            opened: function($modal, $form)\n            {\n                this._setFormFocus($form);\n            },\n            remove: function()\n            {\n                this._remove(this.$image);\n            },\n            save: function($modal, $form)\n            {\n                this._save($modal, $form);\n            }\n        }\n    },\n    onimage: {\n        observe: function()\n        {\n            this._observeImages();\n        },\n        resized: function()\n        {\n            this.justResized = true;\n        }\n    },\n    oncontextbar: function(e, contextbar)\n    {\n        if (this.justResized)\n        {\n            this.justResized = false;\n            return;\n        }\n\n        var current = this.selection.getCurrent();\n        var data = this.inspector.parse(current);\n\n        if (!data.isFigcaption() && data.isComponentType('image'))\n        {\n            var node = data.getComponent();\n            var buttons = {\n                \"edit\": {\n                    title: this.lang.get('edit'),\n                    api: 'module.image.open'\n                },\n                \"remove\": {\n                    title: this.lang.get('delete'),\n                    api: 'module.image.remove',\n                    args: node\n                }\n            };\n\n            contextbar.set(e, node, buttons);\n        }\n    },\n\n    // public\n    open: function()\n    {\n        this.$image = this._getCurrent();\n        this.app.api('module.modal.build', this._getModalData());\n    },\n    insert: function(data)\n    {\n        this._insert(data);\n    },\n    remove: function(node)\n    {\n        this._remove(node);\n    },\n\n    // private\n    _getModalData: function()\n    {\n        var modalData;\n        if (this._isImage() && this.opts.imageEditable)\n        {\n            modalData = {\n                name: 'imageedit',\n                width: '800px',\n                title: this.lang.get('edit'),\n                handle: 'save',\n                commands: {\n                    save: { title: this.lang.get('save') },\n                    remove: { title: this.lang.get('delete'), type: 'danger' },\n                    cancel: { title: this.lang.get('cancel') }\n                }\n            };\n        }\n        else\n        {\n            modalData = {\n                name: 'image',\n                title: this.lang.get('image')\n            };\n        }\n\n        return modalData;\n    },\n    _isImage: function()\n    {\n        return this.$image;\n    },\n    _getCurrent: function()\n    {\n        var current = this.selection.getCurrent();\n        var data = this.inspector.parse(current);\n\n        return (data.isComponentType('image') && data.isComponentActive()) ? this.component.create('image', data.getComponent()) : false;\n    },\n    _insert: function(response, e)\n    {\n        this.app.api('module.modal.close');\n\n        if (Array.isArray(response))\n        {\n            var obj = {};\n            for (var i = 0; i < response.length; i++)\n            {\n                obj = $R.extend(obj, response[i]);\n            }\n\n            response = obj;\n        }\n        else if (typeof response === 'string')\n        {\n            response = { \"file\": { url: response }};\n        }\n\n        if (typeof response === 'object')\n        {\n\n            var multiple = 0;\n            for (var key in response)\n            {\n                if (typeof response[key] === 'object') multiple++;\n            }\n\n            if (multiple > 1)\n            {\n                this._insertMultiple(response, e);\n            }\n            else\n            {\n                this._insertSingle(response, e);\n            }\n        }\n    },\n    _insertSingle: function(response, e)\n    {\n        for (var key in response)\n        {\n            if (typeof response[key] === 'object')\n            {\n                var $img = this._createImageAndStore(response[key]);\n                var inserted = (e) ? this.insertion.insertToPoint(e, $img) : this.insertion.insertHtml($img);\n\n                this._removeSpaceBeforeFigure(inserted[0]);\n\n                // set is active\n                this.component.setActive(inserted[0]);\n                this.app.broadcast('image.uploaded', inserted[0], response);\n            }\n        }\n    },\n    _insertMultiple: function(response, e)\n    {\n        var z = 0;\n        var inserted = [];\n        var last;\n        for (var key in response)\n        {\n            if (typeof response[key] === 'object')\n            {\n                z++;\n\n                var $img = this._createImageAndStore(response[key]);\n\n                if (z === 1)\n                {\n                    inserted = (e) ? this.insertion.insertToPoint(e, $img) : this.insertion.insertHtml($img);\n                }\n                else\n                {\n                    var $inserted = $R.dom(inserted[0]);\n                    $inserted.after($img);\n                    inserted = [$img.get()];\n\n                    this.app.broadcast('image.inserted', $img);\n                }\n\n                last = inserted[0];\n\n                this._removeSpaceBeforeFigure(inserted[0]);\n                this.app.broadcast('image.uploaded', inserted[0], response);\n            }\n        }\n\n        // set last is active\n        this.component.setActive(last);\n    },\n    _createImageAndStore: function(item)\n    {\n        var $img = this.component.create('image');\n\n        $img.addClass('redactor-uploaded-figure');\n        $img.setData({\n            src: item.url,\n            id: (item.id) ? item.id : this.utils.getRandomId()\n        });\n\n        // add to storage\n        this.storage.add('image', $img.getElement());\n\n        return $img;\n    },\n    _removeSpaceBeforeFigure: function(img)\n    {\n        if (!img) return;\n\n        var prev = img.previousSibling;\n        if (prev)\n        {\n            this._removeInvisibleSpace(prev);\n            this._removeInvisibleSpace(prev.previousSibling);\n        }\n    },\n    _removeInvisibleSpace: function(el)\n    {\n        if (el && el.nodeType === 3 && this.utils.searchInvisibleChars(el.textContent) !== -1)\n        {\n            el.parentNode.removeChild(el);\n        }\n    },\n    _save: function($modal, $form)\n    {\n        var data = $form.getData();\n        var imageData = {\n            title: data.title\n        };\n\n        if (this.opts.imageLink) imageData.link = { url: data.url, target: data.target };\n        if (this.opts.imageCaption) imageData.caption = data.caption;\n        if (this.opts.imagePosition) imageData.align = data.align;\n\n        this.$image.setData(imageData);\n        if (this.resizer) this.resizer.rebuild();\n\n        this.app.broadcast('image.changed', this.$image);\n        this.app.api('module.modal.close');\n    },\n    _change: function(response, modal)\n    {\n        if (typeof response === 'string')\n        {\n            response = { \"file\": { url: response }};\n        }\n\n        if (typeof response === 'object')\n        {\n            var $img;\n            for (var key in response)\n            {\n                if (typeof response[key] === 'object')\n                {\n                    $img = $R.dom('<img>');\n                    $img.attr('src', response[key].url);\n\n                    this.$image.changeImage(response[key]);\n\n                    this.app.broadcast('image.changed', this.$image, response);\n                    this.app.broadcast('image.uploaded', this.$image, response);\n\n                    this.app.broadcast('hardsync');\n\n                    break;\n                }\n            }\n\n            if (modal !== false)\n            {\n                $img.on('load', function() { this.$previewBox.html($img); }.bind(this));\n            }\n        }\n    },\n    _uploadError: function(response)\n    {\n        this.app.broadcast('image.uploadError', response);\n    },\n    _remove: function(node)\n    {\n        this.app.api('module.modal.close');\n        this.component.remove(node);\n    },\n    _observeImages: function()\n    {\n        var $editor = this.editor.getElement();\n        var self = this;\n        $editor.find('img').each(function(node)\n        {\n            var $node = $R.dom(node);\n\n            $node.off('.drop-to-replace');\n            $node.on('dragover.drop-to-replace dragenter.drop-to-replace', function(e)\n            {\n                e.preventDefault();\n                return;\n            });\n\n            $node.on('drop.drop-to-replace', function(e)\n            {\n                if (!self.app.isDragComponentInside())\n                {\n                    return self._setReplaceUpload(e, $node);\n                }\n            });\n        });\n    },\n    _setFormData: function($modal, $form)\n    {\n        this._buildPreview();\n        this._buildPreviewUpload();\n\n        var imageData = this.$image.getData();\n        var data = {\n            title: imageData.title\n        };\n\n        // caption\n        if (this.opts.imageCaption) data.caption = imageData.caption;\n        else $modal.find('.form-item-caption').hide();\n\n        // position\n        if (this.opts.imagePosition) data.align = imageData.align;\n        else $modal.find('.form-item-align').hide();\n\n        // link\n        if (this.opts.imageLink)\n        {\n            if (imageData.link)\n            {\n                data.url = imageData.link.url;\n                if (imageData.link.target) data.target = true;\n            }\n        }\n        else $modal.find('.form-item-link').hide();\n\n        $form.setData(data);\n    },\n    _setFormFocus: function($form)\n    {\n        $form.getField('title').focus();\n    },\n    _setReplaceUpload: function(e, $node)\n    {\n        e = e.originalEvent || e;\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (!this.opts.imageUpload) return;\n\n        this.$image = this.component.create('image', $node);\n\n        var options = {\n            url: this.opts.imageUpload,\n            files: e.dataTransfer.files,\n            name: 'imagereplace',\n            data: this.opts.imageData,\n            paramName: this.opts.imageUploadParam\n        };\n\n        this.app.api('module.upload.send', options);\n\n        return;\n    },\n    _setUpload: function($form)\n    {\n        var options = {\n            url: this.opts.imageUpload,\n            element: $form.getField('file'),\n            name: 'image',\n            data: this.opts.imageData,\n            paramName: this.opts.imageUploadParam\n        };\n\n        this.app.api('module.upload.build', options);\n    },\n    _buildPreview: function()\n    {\n        this.$preview = $R.dom('#redactor-modal-image-preview');\n\n        var imageData = this.$image.getData();\n        var $previewImg = $R.dom('<img>');\n        $previewImg.attr('src', imageData.src);\n\n        this.$previewBox = $R.dom('<div>');\n        this.$previewBox.append($previewImg);\n\n        this.$preview.html('');\n        this.$preview.append(this.$previewBox);\n    },\n    _buildPreviewUpload: function()\n    {\n        if (!this.opts.imageUpload) return;\n\n        var $desc = $R.dom('<div class=\"desc\">');\n        $desc.html(this.lang.get('upload-change-label'));\n\n        this.$preview.append($desc);\n\n        var options = {\n            url: this.opts.imageUpload,\n            element: this.$previewBox,\n            name: 'imageedit',\n            paramName: this.opts.imageUploadParam\n        };\n\n        this.app.api('module.upload.build', options);\n    }\n});\n$R.add('class', 'image.component', {\n    mixins: ['dom', 'component'],\n    init: function(app, el)\n    {\n        this.app = app;\n        this.opts = app.opts;\n        this.selection = app.selection;\n\n        // init\n        return (el && el.cmnt !== undefined) ? el : this._init(el);\n    },\n    setData: function(data)\n    {\n        for (var name in data)\n        {\n            this._set(name, data[name]);\n        }\n    },\n    getData: function()\n    {\n        var names = ['src', 'title', 'caption', 'align', 'link', 'id'];\n        var data = {};\n\n        for (var i = 0; i < names.length; i++)\n        {\n            data[names[i]] = this._get(names[i]);\n        }\n\n        return data;\n    },\n    getElement: function()\n    {\n        return this.$element;\n    },\n    changeImage: function(data)\n    {\n        this.$element.attr('src', data.url);\n    },\n\n\n    // private\n    _init: function(el)\n    {\n        var $el = $R.dom(el);\n        var $figure = $el.closest('figure');\n\n        if (el === undefined)\n        {\n            this.$element = $R.dom('<img>');\n            this.parse('<figure>');\n            this.append(this.$element);\n        }\n        else if ($figure.length === 0)\n        {\n            this.parse('<figure>');\n            this.$element = $el;\n            this.$element.wrap(this);\n        }\n        else\n        {\n            this.parse($figure);\n            this.$element = this.find('img');\n        }\n\n        this._initWrapper();\n    },\n    _set: function(name, value)\n    {\n        this['_set_' + name](value);\n    },\n    _get: function(name)\n    {\n        return this['_get_' + name]();\n    },\n    _set_src: function(src)\n    {\n       this.$element.attr('src', src);\n    },\n    _set_id: function(id)\n    {\n       this.$element.attr('data-image', id);\n    },\n    _set_title: function(title)\n    {\n        title = title.trim().replace(/(<([^>]+)>)/ig,\"\");\n\n        if (title === '')\n        {\n            this.$element.removeAttr('alt');\n            this.$element.removeAttr('title');\n        }\n        else\n        {\n            this.$element.attr('alt', title);\n            this.$element.attr('title', title);\n        }\n\n    },\n    _set_caption: function(caption)\n    {\n        var $figcaption = this.find('figcaption');\n        if ($figcaption.length === 0)\n        {\n            $figcaption = $R.dom('<figcaption>');\n            $figcaption.attr('contenteditable', 'true');\n\n            this.append($figcaption);\n        }\n\n        if (caption === '') $figcaption.remove();\n        else $figcaption.html(caption);\n\n        return $figcaption;\n    },\n    _set_align: function(align)\n    {\n        var imageFloat = '';\n        var imageMargin = '';\n        var textAlign = '';\n        var $el = this;\n        var $figcaption = this.find('figcaption');\n\n        if (typeof this.opts.imagePosition === 'object')\n        {\n            var positions = this.opts.imagePosition;\n            for (var key in positions)\n            {\n                $el.removeClass(positions[key]);\n            }\n\n            var alignClass = (typeof positions[align] !== 'undefined') ? positions[align] : false;\n            if (alignClass)\n            {\n                $el.addClass(alignClass);\n            }\n        }\n        else\n        {\n            switch (align)\n            {\n                case 'left':\n                    imageFloat = 'left';\n                    imageMargin = '0 ' + this.opts.imageFloatMargin + ' ' + this.opts.imageFloatMargin + ' 0';\n                break;\n                case 'right':\n                    imageFloat = 'right';\n                    imageMargin = '0 0 ' + this.opts.imageFloatMargin + ' ' + this.opts.imageFloatMargin;\n                break;\n                case 'center':\n                    textAlign = 'center';\n                break;\n            }\n\n            $el.css({ 'float': imageFloat, 'margin': imageMargin, 'text-align': textAlign });\n            $el.attr('rel', $el.attr('style'));\n\n            if (align === 'center')\n            {\n                $figcaption.css('text-align', 'center');\n            }\n            else\n            {\n                $figcaption.css('text-align', '');\n            }\n        }\n    },\n    _set_link: function(data)\n    {\n        var $link = this._findLink();\n        if (data.url === '')\n        {\n            if ($link) $link.unwrap();\n\n            return;\n        }\n\n        if (!$link)\n        {\n            $link = $R.dom('<a>');\n            this.$element.wrap($link);\n        }\n\n        $link.attr('href', data.url);\n\n        if (data.target) $link.attr('target', (data.target === true) ? '_blank' : data.target);\n        else $link.removeAttr('target');\n\n        return $link;\n    },\n    _get_src: function()\n    {\n        return this.$element.attr('src');\n    },\n    _get_id: function()\n    {\n        return this.$element.attr('data-image');\n    },\n    _get_title: function()\n    {\n        var alt = this.$element.attr('alt');\n        var title = this.$element.attr('title');\n\n        if (alt) return alt;\n        else if (title) return title;\n        else return '';\n    },\n    _get_caption: function()\n    {\n        var $figcaption = this.find('figcaption');\n\n        if ($figcaption.length === 0)\n        {\n            return '';\n        }\n        else\n        {\n            return $figcaption.html();\n        }\n    },\n    _get_align: function()\n    {\n        var align = '';\n        if (typeof this.opts.imagePosition === 'object')\n        {\n            align = 'none';\n            var positions = this.opts.imagePosition;\n            for (var key in positions)\n            {\n                if (this.hasClass(positions[key]))\n                {\n                    align = key;\n                    break;\n                }\n            }\n        }\n        else\n        {\n            align = (this.css('text-align') === 'center') ? 'center' : this.css('float');\n        }\n\n        return align;\n    },\n    _get_link: function()\n    {\n        var $link = this._findLink();\n        if ($link)\n        {\n            var target = ($link.attr('target')) ? true : false;\n\n            return {\n                url: $link.attr('href'),\n                target: target\n            };\n        }\n    },\n    _initWrapper: function()\n    {\n        this.addClass('redactor-component');\n        this.attr({\n            'data-redactor-type': 'image',\n            'tabindex': '-1',\n            'contenteditable': false\n        });\n    },\n    _findLink: function()\n    {\n        var $link = this.find('a').filter(function(node)\n        {\n            return ($R.dom(node).closest('figcaption').length === 0);\n        });\n\n        if ($link.length !== 0)\n        {\n            return $link;\n        }\n\n        return false;\n    }\n});\n$R.add('class', 'image.resize', {\n    init: function(app)\n    {\n        this.app = app;\n        this.$doc = app.$doc;\n        this.$win = app.$win;\n        this.$body = app.$body;\n        this.editor = app.editor;\n        this.toolbar = app.toolbar;\n        this.inspector = app.inspector;\n\n        // init\n        this.$target = (this.toolbar.isTarget()) ? this.toolbar.getTargetElement() : this.$body;\n        this._init();\n    },\n    // public\n    rebuild: function()\n    {\n        this._setResizerPosition();\n    },\n    hide: function()\n    {\n        this.$target.find('#redactor-image-resizer').remove();\n    },\n    stop: function()\n    {\n        var $editor = this.editor.getElement();\n        $editor.off('.redactor.image-resize');\n\n        this.$doc.off('.redactor.image-resize');\n        this.$win.off('resize.redactor.image-resize');\n        this.hide();\n    },\n\n    // private\n    _init: function()\n    {\n        var $editor = this.editor.getElement();\n        $editor.on('click.redactor.image-resize', this._build.bind(this));\n\n        this.$win.on('resize.redactor.image-resize', this._setResizerPosition.bind(this));\n    },\n    _build: function(e)\n    {\n        this.$target.find('#redactor-image-resizer').remove();\n\n        var data = this.inspector.parse(e.target);\n        var $editor = this.editor.getElement();\n\n        if (data.isComponentType('image'))\n        {\n            this.$resizableBox = $editor;\n            this.$resizableImage = $R.dom(data.getImageElement());\n\n            this.$resizer = $R.dom('<span>');\n            this.$resizer.attr('id', 'redactor-image-resizer');\n\n            this.$target.append(this.$resizer);\n\n            this._setResizerPosition();\n            this.$resizer.on('mousedown touchstart', this._set.bind(this));\n        }\n    },\n    _setResizerPosition: function()\n    {\n        if (this.$resizer)\n        {\n            var isTarget = this.toolbar.isTarget();\n            var targetOffset = this.$target.offset();\n            var offsetFix = 7;\n            var topOffset = (isTarget) ? (offsetFix - targetOffset.top + this.$target.scrollTop()) : offsetFix;\n            var leftOffset = (isTarget) ? (offsetFix - targetOffset.left) : offsetFix;\n            var pos = this.$resizableImage.offset();\n            var width = this.$resizableImage.width();\n            var height = this.$resizableImage.height();\n            var resizerWidth =  this.$resizer.width();\n            var resizerHeight =  this.$resizer.height();\n\n            this.$resizer.css({ top: (pos.top + height - resizerHeight + topOffset) + 'px', left: (pos.left + width - resizerWidth + leftOffset) + 'px' });\n        }\n    },\n    _set: function(e)\n    {\n        e.preventDefault();\n\n        this.resizeHandle = {\n            x : e.pageX,\n            y : e.pageY,\n            el : this.$resizableImage,\n            ratio: this.$resizableImage.width() / this.$resizableImage.height(),\n            h: this.$resizableImage.height()\n        };\n\n        e = e.originalEvent || e;\n\n        if (e.targetTouches)\n        {\n             this.resizeHandle.x = e.targetTouches[0].pageX;\n             this.resizeHandle.y = e.targetTouches[0].pageY;\n        }\n\n        this.app.broadcast('contextbar.close');\n        this.app.broadcast('image.resize', this.$resizableImage);\n        this._start();\n    },\n    _start: function()\n    {\n        this.$doc.on('mousemove.redactor.image-resize touchmove.redactor.image-resize', this._move.bind(this));\n        this.$doc.on('mouseup.redactor.image-resize touchend.redactor.image-resize', this._stop.bind(this));\n    },\n    _stop: function()\n    {\n        this.$doc.off('.redactor.image-resize');\n        this.app.broadcast('image.resized', this.$resizableImage);\n    },\n    _move: function(e)\n    {\n        e.preventDefault();\n\n        e = e.originalEvent || e;\n\n        var height = this.resizeHandle.h;\n\n        if (e.targetTouches) height += (e.targetTouches[0].pageY -  this.resizeHandle.y);\n        else height += (e.pageY -  this.resizeHandle.y);\n\n        var width = height * this.resizeHandle.ratio;\n\n        if (height < 20 || width < 100) return;\n        if (this._getResizableBoxWidth() <= width) return;\n\n        this.resizeHandle.el.attr({width: width, height: height});\n        this.resizeHandle.el.width(width);\n        this.resizeHandle.el.height(height);\n        this._setResizerPosition();\n    },\n    _getResizableBoxWidth: function()\n    {\n        var width = this.$resizableBox.width();\n        return width - parseInt(this.$resizableBox.css('padding-left')) - parseInt(this.$resizableBox.css('padding-right'));\n    }\n});\n$R.add('module', 'file', {\n    modals: {\n        'file':\n            '<div class=\"redactor-modal-tab\" data-title=\"## upload ##\"><form action=\"\"> \\\n                <div class=\"form-item form-item-title\"> \\\n                    <label for=\"modal-file-title\"> ## filename ## <span class=\"desc\">(## optional ##)</span></label> \\\n                    <input type=\"text\" id=\"modal-file-title\" name=\"title\" /> \\\n                </div> \\\n                <input type=\"file\" name=\"file\"> \\\n            </form></div>'\n    },\n    init: function(app)\n    {\n        this.app = app;\n        this.opts = app.opts;\n        this.lang = app.lang;\n        this.caret = app.caret;\n        this.utils = app.utils;\n        this.storage = app.storage;\n        this.component = app.component;\n        this.inspector = app.inspector;\n        this.insertion = app.insertion;\n        this.selection = app.selection;\n    },\n    // messages\n    onstarted: function()\n    {\n        // storage observe\n        this.storage.observeFiles();\n    },\n    ondropfile: function(e, files, clipboard)\n    {\n        if (!this.opts.fileUpload) return;\n\n        var options = {\n            url: this.opts.fileUpload,\n            event: (clipboard) ? false : e,\n            files: files,\n            name: 'filedrop',\n            data: this.opts.fileData\n        };\n\n        this.app.api('module.upload.send', options);\n    },\n    onmodal: {\n        file: {\n            open: function($modal, $form)\n            {\n                this._setFormData($modal, $form);\n                this._setUpload($form);\n            },\n            opened: function($modal, $form)\n            {\n                this._setFormFocus($form);\n\n                this.$form = $form;\n            }\n        }\n    },\n    onupload: {\n        file: {\n            complete: function(response)\n            {\n                this._insert(response);\n            },\n            error: function(response)\n            {\n                this._uploadError(response);\n            }\n        },\n        filedrop: {\n            complete: function(response, e)\n            {\n                this._insert(response, e);\n            },\n            error: function(response)\n            {\n                this._uploadError(response);\n            }\n        }\n    },\n    oncontextbar: function(e, contextbar)\n    {\n        var current = this.selection.getCurrent();\n        var data = this.inspector.parse(current);\n        if (data.isFile())\n        {\n            var node = data.getFile();\n            var buttons = {\n                \"remove\": {\n                    title: this.lang.get('delete'),\n                    api: 'module.file.remove',\n                    args: node\n                }\n            };\n\n            contextbar.set(e, node, buttons, 'bottom');\n        }\n\n    },\n\n    // public\n    open: function()\n    {\n        this._open();\n    },\n    insert: function(data)\n    {\n        this._insert(data);\n    },\n    remove: function(node)\n    {\n        this._remove(node);\n    },\n\n    // private\n    _open: function()\n    {\n        this.app.api('module.modal.build', this._getModalData());\n    },\n    _getModalData: function()\n    {\n        var modalData = {\n            name: 'file',\n            title: this.lang.get('file')\n        };\n\n        return modalData;\n    },\n    _insert: function(response, e)\n    {\n        this.app.api('module.modal.close');\n        if (typeof response !== 'object') return;\n\n        if (Array.isArray(response))\n        {\n            var obj = {};\n            for (var i = 0; i < response.length; i++)\n            {\n                obj = $R.extend(obj, response[i]);\n            }\n\n            response = obj;\n        }\n\n        var multiple = (Object.keys(response).length  > 1);\n\n        if (multiple)\n        {\n            this._insertMultiple(response, e);\n        }\n        else\n        {\n            this._insertSingle(response, e);\n        }\n\n        this.$form = false;\n    },\n    _insertSingle: function(response, e)\n    {\n        var inserted = [];\n        for (var key in response)\n        {\n            var $file = this._createFileAndStore(response[key]);\n\n            if (this.opts.fileAttachment)\n            {\n                inserted = this._insertAsAttachment($file);\n            }\n            else\n            {\n                inserted = (e) ? this.insertion.insertToPoint(e, $file) : this.insertion.insertRaw($file);\n            }\n\n            this.app.broadcast('file.uploaded', inserted[0], response);\n        }\n    },\n    _insertMultiple: function(response, e)\n    {\n        var z = 0;\n        var inserted = [];\n        var $last;\n        for (var key in response)\n        {\n            z++;\n\n            var $file = this._createFileAndStore(response[key]);\n\n            if (this.opts.fileAttachment)\n            {\n                inserted = this._insertAsAttachment($file, response);\n            }\n            else\n            {\n                if (z === 1)\n                {\n                    inserted = (e) ? this.insertion.insertToPoint(e, $file) : this.insertion.insertRaw($file);\n                }\n                else\n                {\n                    var $inserted = $R.dom(inserted[0]);\n                    $inserted.after($file).after(' ');\n                    inserted = [$file.get()];\n\n                    this.app.broadcast('file.inserted', $file);\n                }\n            }\n\n            $last = $file;\n            this.app.broadcast('file.uploaded', inserted[0], response);\n        }\n\n        // set caret after last\n        if (!this.opts.fileAttachment)\n        {\n            this.caret.setAfter($last);\n        }\n    },\n    _insertAsAttachment: function($file, response)\n    {\n        var $box = $R.dom(this.opts.fileAttachment);\n        var $wrapper = $file.wrapAttachment();\n        $box.append($wrapper);\n\n        var inserted = [$wrapper.get()];\n        this.app.broadcast('file.appended', inserted[0], response);\n\n        return inserted;\n    },\n    _createFileAndStore: function(item)\n    {\n        var modalFormData = (this.$form) ? this.$form.getData() : false;\n        var name = (item.name) ? item.name : item.url;\n        var title = (!this.opts.fileAttachment && modalFormData && modalFormData.title !== '') ? modalFormData.title : this._truncateUrl(name);\n\n        var $file = this.component.create('file');\n        $file.attr('href', item.url);\n        $file.attr('data-file', (item.id) ? item.id : this.utils.getRandomId());\n        $file.attr('data-name', item.name);\n        $file.html(title);\n\n        // add to storage\n        this.storage.add('file', $file);\n\n        return $file;\n    },\n    _remove: function(node)\n    {\n        this.selection.save();\n\n        var $file = this.component.create('file', node);\n        var stop = this.app.broadcast('file.delete', $file);\n        if (stop !== false)\n        {\n            $file.unwrap();\n\n            this.selection.restore();\n\n            // callback\n            this.app.broadcast('file.deleted', $file);\n        }\n        else\n        {\n            this.selection.restore();\n        }\n    },\n    _truncateUrl: function(url)\n    {\n        return (url.search(/^http/) !== -1 && url.length > 20) ? url.substring(0, 20) + '...' : url;\n    },\n    _setUpload: function($form)\n    {\n        var options = {\n            url: this.opts.fileUpload,\n            element: $form.getField('file'),\n            name: 'file',\n            data: this.opts.fileData,\n            paramName: this.opts.fileUploadParam\n        };\n\n        this.app.api('module.upload.build', options);\n    },\n    _setFormData: function($modal, $form)\n    {\n        if (this.opts.fileAttachment)\n        {\n            $modal.find('.form-item-title').hide();\n        }\n        else\n        {\n            $form.setData({ title: this.selection.getText() });\n        }\n    },\n    _setFormFocus: function($form)\n    {\n        $form.getField('title').focus();\n    },\n    _uploadError: function(response)\n    {\n        this.app.broadcast('file.uploadError', response);\n    }\n});\n$R.add('class', 'file.component', {\n    mixins: ['dom', 'component'],\n    init: function(app, el)\n    {\n        this.app = app;\n        this.opts = app.opts;\n\n        // init\n        return (el && el.cmnt !== undefined) ? el : this._init(el);\n    },\n    wrapAttachment: function()\n    {\n        this.$wrapper = $R.dom('<span class=\"redactor-file-item\">');\n        this.$remover = $R.dom('<span class=\"redactor-file-remover\">');\n        this.$remover.html('&times;');\n        this.$remover.on('click', this.removeAttachment.bind(this));\n\n        this.$wrapper.append(this);\n        this.$wrapper.append(this.$remover);\n\n        return this.$wrapper;\n    },\n    removeAttachment: function(e)\n    {\n        e.preventDefault();\n\n        var stop = this.app.broadcast('file.delete', this, this.$wrapper);\n        if (stop !== false)\n        {\n            this.$wrapper.remove();\n            this.app.broadcast('file.deleted', this);\n            this.app.broadcast('file.removeAttachment', this);\n        }\n    },\n\n    // private\n    _init: function(el)\n    {\n        if (el === undefined)\n        {\n            this.parse('<a>');\n        }\n        else\n        {\n            var $a = $R.dom(el).closest('a');\n            this.parse($a);\n        }\n    }\n});\n$R.add('module', 'buffer', {\n    init: function(app)\n    {\n        this.app = app;\n        this.opts = app.opts;\n        this.editor = app.editor;\n        this.offset = app.offset;\n        this.keycodes = app.keycodes;\n        this.selection = app.selection;\n\n        // local\n        this.state = false;\n        this.passed = false;\n        this.keyPressed = false;\n        this.savedHtml = false;\n        this.savedOffset = false;\n        this.undoStorage = [];\n        this.redoStorage = [];\n    },\n    // messages\n    onkeydown: function(e)\n    {\n        this._listen(e);\n    },\n    onsyncing: function()\n    {\n        if (!this.keyPressed)\n        {\n            this.trigger();\n        }\n\n        this.keyPressed = false;\n    },\n    onbuffer: {\n        trigger: function()\n        {\n            this.trigger();\n        }\n    },\n    onstate: function(e, html, offset)\n    {\n        if ((e && (e.ctrlKey || e.metaKey)) || (e && (this._isUndo(e) || this._isRedo(e))))\n        {\n            return;\n        }\n\n        this.passed = false;\n        this._saveState(html, offset);\n    },\n    onenable: function()\n    {\n        this.clear();\n    },\n\n    // public\n    clear: function()\n    {\n        this.state = false;\n        this.undoStorage = [];\n        this.redoStorage = [];\n    },\n    undo: function()\n    {\n        this._getUndo();\n    },\n    redo: function()\n    {\n        this._getRedo();\n    },\n    trigger: function()\n    {\n        if (this.state && this.passed === false) this._setUndo();\n    },\n\n    // private\n    _saveState: function(html, offset)\n    {\n        var $editor = this.editor.getElement();\n\n        this.state = {\n            html: html || $editor.html(),\n            offset: offset || this.offset.get()\n        };\n    },\n    _listen: function(e)\n    {\n        var key = e.which;\n        var ctrl = e.ctrlKey || e.metaKey;\n        var cmd = ctrl || e.shiftKey || e.altKey;\n        var keys = [this.keycodes.SPACE, this.keycodes.ENTER, this.keycodes.BACKSPACE, this.keycodes.DELETE, this.keycodes.TAB,\n                    this.keycodes.LEFT, this.keycodes.RIGHT, this.keycodes.UP, this.keycodes.DOWN];\n        // undo\n        if (this._isUndo(e)) // z key\n        {\n            e.preventDefault();\n            this.undo();\n            return;\n        }\n        // redo\n        else if (this._isRedo(e))\n        {\n            e.preventDefault();\n            this.redo();\n            return;\n        }\n        // spec keys\n        else if (!ctrl && keys.indexOf(key) !== -1)\n        {\n            cmd = true;\n            this.trigger();\n        }\n        // cut & copy\n        else if (ctrl && (key === 88 || key === 67))\n        {\n            cmd = true;\n            this.trigger();\n        }\n\n\n        // empty buffer\n        if (!cmd && !this._hasUndo())\n        {\n            this.trigger();\n        }\n\n        this.keyPressed = true;\n    },\n    _isUndo: function(e)\n    {\n        var key = e.which;\n        var ctrl = e.ctrlKey || e.metaKey;\n\n        return (ctrl && key === 90 && !e.shiftKey && !e.altKey);\n    },\n    _isRedo: function(e)\n    {\n        var key = e.which;\n        var ctrl = e.ctrlKey || e.metaKey;\n\n        return (ctrl && (key === 90 && e.shiftKey || key === 89 && !e.shiftKey) && !e.altKey);\n    },\n    _setUndo: function()\n    {\n        var last = this.undoStorage[this.undoStorage.length-1];\n        if (typeof last === 'undefined' || last[0] !== this.state.html)\n        {\n            this.undoStorage.push([this.state.html, this.state.offset]);\n            this._removeOverStorage();\n        }\n    },\n    _setRedo: function()\n    {\n        var $editor = this.editor.getElement();\n        var offset = this.offset.get();\n        var html = $editor.html();\n\n        this.redoStorage.push([html, offset]);\n        this.redoStorage = this.redoStorage.slice(0, this.opts.bufferLimit);\n    },\n    _getUndo: function()\n    {\n        if (!this._hasUndo()) return;\n\n        this.passed = true;\n\n        var $editor = this.editor.getElement();\n        var buffer = this.undoStorage.pop();\n\n        this._setRedo();\n\n        $editor.html(buffer[0]);\n        this.offset.set(buffer[1]);\n        this.selection.restore();\n\n        this.app.broadcast('undo', buffer[0], buffer[1]);\n\n    },\n    _getRedo: function()\n    {\n        if (!this._hasRedo()) return;\n\n        this.passed = true;\n\n        var $editor = this.editor.getElement();\n        var buffer = this.redoStorage.pop();\n\n        this._setUndo();\n        $editor.html(buffer[0]);\n        this.offset.set(buffer[1]);\n\n        this.app.broadcast('redo', buffer[0], buffer[1]);\n    },\n    _removeOverStorage: function()\n    {\n        if (this.undoStorage.length > this.opts.bufferLimit)\n        {\n            this.undoStorage = this.undoStorage.slice(0, (this.undoStorage.length - this.opts.bufferLimit));\n        }\n    },\n    _hasUndo: function()\n    {\n        return (this.undoStorage.length !== 0);\n    },\n    _hasRedo: function()\n    {\n        return (this.redoStorage.length !== 0);\n    }\n});\n$R.add('module', 'list', {\n    init: function(app)\n    {\n        this.app = app;\n        this.opts = app.opts;\n        this.utils = app.utils;\n        this.block = app.block;\n        this.toolbar = app.toolbar;\n        this.inspector = app.inspector;\n        this.selection = app.selection;\n    },\n    // messages\n    onbutton: {\n        list: {\n            observe: function(button)\n            {\n                this._observeButton(button);\n            }\n        }\n    },\n    ondropdown: {\n        list: {\n            observe: function(dropdown)\n            {\n                this._observeDropdown(dropdown);\n            }\n        }\n    },\n\n    // public\n    toggle: function(type)\n    {\n        var nodes = this._getBlocks();\n        var block = this.selection.getBlock();\n        var $list = $R.dom(block).parents('ul, ol',  '.redactor-in').last();\n        if (nodes.length === 0 && $list.length !== 0)\n        {\n            nodes = [$list.get()];\n        }\n\n        if (block && (block.tagName === 'TD' || block.tagName === 'TH'))\n        {\n            nodes = this.block.format('div');\n        }\n\n        this.selection.saveMarkers();\n\n        nodes = (nodes.length !== 0 && this._isUnformat(type, nodes)) ? this._unformat(type, nodes) : this._format(type, nodes);\n\n        this.selection.restoreMarkers();\n\n        return nodes;\n    },\n    indent: function()\n    {\n        var isCollapsed = this.selection.isCollapsed();\n        var current = this.selection.getCurrent();\n        var data = this.inspector.parse(current);\n        var item = (data.isList()) ? data.getListItem() : false;\n        var $item = $R.dom(item);\n        var $prev = $item.prevElement();\n        var prev = $prev.get();\n        var isIndent = (isCollapsed && item && prev && prev.tagName === 'LI');\n\n        if (isIndent)\n        {\n            this.selection.saveMarkers();\n\n            $prev = $R.dom(prev);\n            var $prevChild = $prev.children('ul, ol');\n            var $list = $item.closest('ul, ol');\n\n            if ($prevChild.length !== 0)\n            {\n                $prevChild.append($item);\n            }\n            else\n            {\n                var listTag = $list.get().tagName.toLowerCase();\n                var $newList = $R.dom('<' + listTag + '>');\n\n                $newList.append($item);\n                $prev.append($newList);\n            }\n\n            this.selection.restoreMarkers();\n        }\n    },\n    outdent: function()\n    {\n        var isCollapsed = this.selection.isCollapsed();\n        var current = this.selection.getCurrent();\n        var data = this.inspector.parse(current);\n        var item = (data.isList()) ? data.getListItem() : false;\n        var $item = $R.dom(item);\n\n        if (isCollapsed && item)\n        {\n\n            var $listItem = $item.parent();\n            var $liItem = $listItem.closest('li', '.redactor-in');\n            var $prev = $item.prevElement();\n            var $next = $item.nextElement();\n            var prev = $prev.get();\n            var next = $next.get();\n            var nextItems, nextList, $newList, $nextList;\n            var isTop = (prev === false);\n            var isMiddle = (prev !== false && next !== false);\n            var isBottom = (!isTop && next === false);\n\n            this.selection.saveMarkers();\n\n            // out\n            if ($liItem.length !== 0)\n            {\n                if (isMiddle)\n                {\n                    nextItems = this._getAllNext($item.get());\n                    $newList = $R.dom('<' + $listItem.get().tagName.toLowerCase() + '>');\n\n                    for (var i = 0; i < nextItems.length; i++)\n                    {\n                        $newList.append(nextItems[i]);\n                    }\n\n                    $liItem.after($item);\n                    $item.append($newList);\n                }\n                else\n                {\n                    $liItem.after($item);\n\n                    if ($listItem.children().length === 0)\n                    {\n                        $listItem.remove();\n                    }\n                    else\n                    {\n                        if (isTop) $item.append($listItem);\n                    }\n                }\n            }\n            // unformat\n            else\n            {\n                var $container =  this._createUnformatContainer($item);\n                var $childList = $container.find('ul, ol').first();\n\n                if (isTop) $listItem.before($container);\n                else if (isBottom) $listItem.after($container);\n                else if (isMiddle)\n                {\n                    $newList = $R.dom('<' + $listItem.get().tagName.toLowerCase() + '>');\n                    nextItems = this._getAllNext($item.get());\n\n                    for (var i = 0; i < nextItems.length; i++)\n                    {\n                        $newList.append(nextItems[i]);\n                    }\n\n                    $listItem.after($container);\n                    $container.after($newList);\n                }\n\n                if ($childList.length !== 0)\n                {\n                    $nextList = $container.nextElement();\n                    nextList = $nextList.get();\n                    if (nextList && nextList.tagName === $listItem.get().tagName)\n                    {\n                        $R.dom(nextList).prepend($childList);\n                        $childList.unwrap();\n                    }\n                    else\n                    {\n                        $container.after($childList);\n                    }\n                }\n\n                $item.remove();\n            }\n\n            this.selection.restoreMarkers();\n        }\n    },\n\n    // private\n    _getAllNext: function(next)\n    {\n        var nodes = [];\n\n        while (next)\n        {\n            var $next = $R.dom(next).nextElement();\n            next = $next.get();\n\n            if (next) nodes.push(next);\n            else return nodes;\n        }\n\n        return nodes;\n    },\n    _isUnformat: function(type, nodes)\n    {\n        var countLists = 0;\n        for (var i = 0; i < nodes.length; i++)\n        {\n            if (nodes[i].nodeType !== 3)\n            {\n                var tag = nodes[i].tagName.toLowerCase();\n                if (tag === type || tag === 'figure')\n                {\n                    countLists++;\n                }\n            }\n        }\n\n        return (countLists === nodes.length);\n    },\n    _format: function(type, nodes)\n    {\n        var tags = ['p', 'div', 'blockquote', 'pre', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'ul', 'ol'];\n        var blocks = this._uniteBlocks(nodes, tags);\n        var lists = [];\n\n        for (var key in blocks)\n        {\n            var items = blocks[key];\n            var $list = this._createList(type, blocks[key]);\n\n            for (var i = 0; i < items.length; i++)\n            {\n                var $item;\n\n                // lists\n                if (items[i].nodeType !== 3 && (items[i].tagName === 'UL' || items[i].tagName === 'OL'))\n                {\n                    var $oldList = $R.dom(items[i]);\n\n                    $item = $oldList.contents();\n                    $list.append($item);\n\n                    // old is empty\n                    if (this.utils.isEmpty($oldList)) $oldList.remove();\n                }\n                // other blocks or texts\n                else\n                {\n                    $item = this._createListItem(items[i]);\n                    this.utils.normalizeTextNodes($item);\n                    $list.append($item);\n                }\n            }\n\n            lists.push($list.get());\n        }\n\n        return lists;\n    },\n    _uniteBlocks: function(nodes, tags)\n    {\n        var z = 0;\n        var blocks = { 0: [] };\n        var lastcell = false;\n        for (var i = 0; i < nodes.length; i++)\n        {\n            var $node = $R.dom(nodes[i]);\n            var $cell = $node.closest('th, td');\n\n            if ($cell.length !== 0)\n            {\n                if ($cell.get() !== lastcell)\n                {\n                    // create block\n                    z++;\n                    blocks[z] = [];\n                }\n\n                if (this._isUniteBlock(nodes[i], tags))\n                {\n                    blocks[z].push(nodes[i]);\n                }\n            }\n            else\n            {\n                if (this._isUniteBlock(nodes[i], tags))\n                {\n                    blocks[z].push(nodes[i]);\n                }\n                else\n                {\n                    // create block\n                    z++;\n                    blocks[z] = [];\n                }\n            }\n\n            lastcell = $cell.get();\n        }\n\n        return blocks;\n    },\n    _isUniteBlock: function(node, tags)\n    {\n        return (node.nodeType === 3 || tags.indexOf(node.tagName.toLowerCase()) !== -1);\n    },\n    _createList: function(type, blocks)\n    {\n        var last = blocks[blocks.length-1];\n        var $last = $R.dom(last);\n        var $list = $R.dom('<' + type + '>');\n        $last.after($list);\n\n        return $list;\n    },\n    _createListItem: function(item)\n    {\n        var $item = $R.dom('<li>');\n        if (item.nodeType === 3)\n        {\n            $item.append(item);\n        }\n        else\n        {\n            var $el = $R.dom(item);\n            $item.append($el.contents());\n            $el.remove();\n        }\n\n        return $item;\n    },\n    _unformat: function(type, nodes)\n    {\n        if (nodes.length === 1)\n        {\n            // one list\n            var $list = $R.dom(nodes[0]);\n            var $items = $list.find('li');\n\n            var selectedItems = this.selection.getNodes({ tags: ['li'] });\n            var block = this.selection.getBlock();\n            var $li = $R.dom(block).closest('li');\n            if (selectedItems.length === 0 && $li.length !== 0)\n            {\n                selectedItems = [$li.get()];\n            }\n\n\n            // 1) entire\n            if (selectedItems.length === $items.length)\n            {\n                return this._unformatEntire(nodes[0]);\n            }\n\n            var pos = this._getItemsPosition($items, selectedItems);\n\n            // 2) top\n            if (pos === 'Top')\n            {\n                return this._unformatAtSide('before', selectedItems, $list);\n            }\n\n            // 3) bottom\n            else if (pos === 'Bottom')\n            {\n                selectedItems.reverse();\n                return this._unformatAtSide('after', selectedItems, $list);\n            }\n\n            // 4) middle\n            else if (pos === 'Middle')\n            {\n                var $last = $R.dom(selectedItems[selectedItems.length-1]);\n\n                var ci = false;\n\n                var $parent = false;\n                var $secondList = $R.dom('<' + $list.get().tagName.toLowerCase() + '>');\n                $items.each(function(node)\n                {\n                    if (ci)\n                    {\n                        var $node = $R.dom(node);\n                        if ($node.closest('.redactor-split-item').length === 0 && ($parent === false || $node.closest($parent).length === 0))\n                        {\n                            $node.addClass('redactor-split-item');\n                        }\n\n                        $parent = $node;\n                    }\n\n                    if (node === $last.get())\n                    {\n                        ci = true;\n                    }\n                });\n\n                $items.filter('.redactor-split-item').each(function(node)\n                {\n                    var $node = $R.dom(node);\n                    $node.removeClass('redactor-split-item');\n                    $secondList.append(node);\n                });\n\n                $list.after($secondList);\n\n                selectedItems.reverse();\n                for (var i = 0; i < selectedItems.length; i++)\n                {\n                    var $item = $R.dom(selectedItems[i]);\n                    var $container = this._createUnformatContainer($item);\n\n                    $list.after($container);\n                    $container.find('ul, ol').remove();\n                    $item.remove();\n                }\n\n\n                return;\n            }\n\n        }\n        else\n        {\n            // unformat all\n            for (var i = 0; i < nodes.length; i++)\n            {\n                if (nodes[i].nodeType !== 3 && nodes[i].tagName.toLowerCase() === type)\n                {\n                    this._unformatEntire(nodes[i]);\n                }\n            }\n        }\n    },\n    _unformatEntire: function(list)\n    {\n        var $list = $R.dom(list);\n        var $items = $list.find('li');\n        $items.each(function(node)\n        {\n            var $item = $R.dom(node);\n            var $container = this._createUnformatContainer($item);\n\n            $item.remove();\n            $list.before($container);\n\n        }.bind(this));\n\n        $list.remove();\n    },\n    _unformatAtSide: function(type, selectedItems, $list)\n    {\n        for (var i = 0; i < selectedItems.length; i++)\n        {\n            var $item = $R.dom(selectedItems[i]);\n            var $container = this._createUnformatContainer($item);\n\n            $list[type]($container);\n\n            var $innerLists = $container.find('ul, ol').first();\n            $item.append($innerLists);\n\n            $innerLists.each(function(node)\n            {\n                var $node = $R.dom(node);\n                var $parent = $node.closest('li');\n\n                if ($parent.get() === selectedItems[i])\n                {\n                    $node.unwrap();\n                    $parent.addClass('r-unwrapped');\n                }\n\n            });\n\n            if (this.utils.isEmptyHtml($item.html())) $item.remove();\n        }\n\n        // clear empty\n        $list.find('.r-unwrapped').each(function(node)\n        {\n            var $node = $R.dom(node);\n            if ($node.html().trim() === '') $node.remove();\n            else $node.removeClass('r-unwrapped');\n        });\n    },\n    _getItemsPosition: function($items, selectedItems)\n    {\n        var pos = 'Middle';\n\n        var sFirst = selectedItems[0];\n        var sLast = selectedItems[selectedItems.length-1];\n\n        var first = $items.first().get();\n        var last = $items.last().get();\n\n        if (first === sFirst && last !== sLast)\n        {\n            pos = 'Top';\n        }\n        else if (first !== sFirst && last === sLast)\n        {\n            pos = 'Bottom';\n        }\n\n        return pos;\n    },\n    _createUnformatContainer: function($item)\n    {\n        var $container = $R.dom('<' + this.opts.markup + '>');\n        if (this.opts.breakline) $container.attr('data-redactor-tag', 'br');\n\n        $container.append($item.contents());\n\n        return $container;\n    },\n    _getBlocks: function()\n    {\n        return this.selection.getBlocks({ first: true });\n    },\n    _observeButton: function()\n    {\n        var current = this.selection.getCurrent();\n        var data = this.inspector.parse(current);\n        var isDisabled = (data.isPre() || data.isCode() || data.isFigcaption());\n\n        this._observeButtonsList(isDisabled, ['lists', 'ul', 'ol', 'outdent', 'indent']);\n\n        var itemOutdent = this.toolbar.getButton('outdent');\n        var itemIndent = this.toolbar.getButton('indent');\n\n        this._observeIndent(itemIndent, itemOutdent);\n    },\n    _observeDropdown: function(dropdown)\n    {\n        var itemOutdent = dropdown.getItem('outdent');\n        var itemIndent = dropdown.getItem('indent');\n\n        this._observeIndent(itemIndent, itemOutdent);\n    },\n    _observeIndent: function(itemIndent, itemOutdent)\n    {\n        var isCollapsed = this.selection.isCollapsed();\n        var current = this.selection.getCurrent();\n        var data = this.inspector.parse(current);\n        var item = (data.isList()) ? data.getListItem() : false;\n        var $item = $R.dom(item);\n        var $prev = $item.prevElement();\n        var prev = $prev.get();\n        var isIndent = (isCollapsed && item && prev && prev.tagName === 'LI');\n\n        if (itemOutdent)\n        {\n            if (item && isCollapsed) itemOutdent.enable();\n            else itemOutdent.disable();\n        }\n\n        if (itemIndent)\n        {\n            if (item && isIndent) itemIndent.enable();\n            else itemIndent.disable();\n        }\n    },\n    _observeButtonsList: function(param, buttons)\n    {\n        for (var i = 0; i < buttons.length; i++)\n        {\n            var button = this.toolbar.getButton(buttons[i]);\n            if (button)\n            {\n                if (param) button.disable();\n                else button.enable();\n            }\n        }\n    }\n});\n$R.add('class', 'video.component', {\n    mixins: ['dom', 'component'],\n    init: function(app, el)\n    {\n        this.app = app;\n\n        // init\n        return (el && el.cmnt !== undefined) ? el : this._init(el);\n    },\n\n    // private\n    _init: function(el)\n    {\n        if (typeof el !== 'undefined')\n        {\n            var $node = $R.dom(el);\n            var $wrapper = $node.closest('figure');\n            if ($wrapper.length !== 0)\n            {\n                this.parse($wrapper);\n            }\n            else\n            {\n                this.parse('<figure>');\n                this.append(el);\n            }\n        }\n        else\n        {\n            this.parse('<figure>');\n        }\n\n\n        this._initWrapper();\n    },\n    _initWrapper: function()\n    {\n        this.addClass('redactor-component');\n        this.attr({\n            'data-redactor-type': 'video',\n            'tabindex': '-1',\n            'contenteditable': false\n        });\n    }\n});\n\n\n    window.Redactor = window.$R = $R;\n\n    // Data attribute load\n    window.addEventListener('load', function()\n    {\n        $R('[data-redactor]');\n    });\n\n}());","(function($R)\n{\n    $R.lang['sv'] = {\n        \"format\": \"Format\",\n        \"image\": \"Bild\",\n        \"file\": \"Fil\",\n        \"link\": \"Länk\",\n        \"bold\": \"Fet\",\n        \"italic\": \"Kursiv\",\n        \"deleted\": \"Överstruken\",\n        \"underline\": \"Understruken\",\n        \"superscript\": \"Upphöjd\",\n        \"subscript\": \"Nedsänkt\",\n        \"bold-abbr\": \"B\",\n        \"italic-abbr\": \"I\",\n        \"deleted-abbr\": \"S\",\n        \"underline-abbr\": \"U\",\n        \"superscript-abbr\": \"Sup\",\n        \"subscript-abbr\": \"Sub\",\n        \"lists\": \"Lista\",\n        \"link-insert\": \"Infoga länk\",\n        \"link-edit\": \"Redigera länk\",\n        \"link-in-new-tab\": \"Öppna länk i nytt fönster\",\n        \"unlink\": \"Radera länk\",\n        \"cancel\": \"Avbryt\",\n        \"close\": \"Stäng\",\n        \"insert\": \"Infoga\",\n        \"save\": \"Spara\",\n        \"delete\": \"Radera\",\n        \"text\": \"Text\",\n        \"edit\": \"Redigera\",\n        \"title\": \"Titel\",\n        \"paragraph\": \"Normal text\",\n        \"quote\": \"Citat\",\n        \"code\": \"Kod\",\n        \"heading1\": \"Titel 1\",\n        \"heading2\": \"Titel 2\",\n        \"heading3\": \"Titel 3\",\n        \"heading4\": \"Titel 4\",\n        \"heading5\": \"Titel 5\",\n        \"heading6\": \"Titel 6\",\n        \"filename\": \"Namn\",\n        \"optional\": \"valfritt\",\n        \"unorderedlist\": \"Osorterad lista\",\n        \"orderedlist\": \"Sorterad lista\",\n        \"outdent\": \"Minska utdrag\",\n        \"indent\": \"Öka utdrag\",\n        \"horizontalrule\": \"Linje\",\n        \"upload\": \"Upload\",\n        \"upload-label\": \"Släpp filer här eller klicka för att ladda upp\",\n        \"upload-change-label\": \"Drop a new image to change\",\n        \"accessibility-help-label\": \"Textredigerare\",\n        \"caption\": \"Undertext\",\n        \"bulletslist\": \"Punkter\",\n        \"numberslist\": \"Nummer\",\n        \"image-position\": \"Position\",\n        \"none\": \"Ingen\",\n        \"left\": \"Vänster\",\n        \"right\": \"Höger\",\n        \"center\": \"Centrerad\",\n        \"undo\": \"Ångra\",\n        \"redo\": \"Gör om\",\n\n        /* Table plugin */\n        \"table\": \"Tabell\",\n        \"insert-table\": \"Infoga tabell\",\n        \"insert-row-above\": \"Infoga rad ovanför\",\n        \"insert-row-below\": \"Infoga rad undertill\",\n        \"insert-column-left\": \"Infoga kolumn till vänster\",\n        \"insert-column-right\": \"Infoga kolumn till höger\",\n        \"add-head\": \"Lägg till rubrikrad\",\n        \"delete-head\": \"Ta bort rubrikrad\",\n        \"delete-column\": \"Ta bort kolumn\",\n        \"delete-row\": \"Ta bort rad\",\n        \"delete-table\": \"Ta bort tabell\",\n\n        /* Fullscreen plugin */\n        \"fullscreen\": \"Fullskärm\",\n\n        /* Font color plugin */\n        \"fontcolor\": \"Textfärg\",\n        \"highlight\": \"Färgöverstrykning\",\n\n        /* Font family plugin */\n        \"fontfamily\": \"Typsnitt\",\n        \"remove-font-family\": \"Återställ typsnitt\",\n\n        /* Font size plugin */\n        \"size\": \"Storlek\",\n        \"remove-size\":  \"Återställ textstorlek\"\n    };\n})(Redactor);","import oneOf from 'Global/Assets/oneOf';\n\nexport default function isOneOf(comparate, comparates) {\n  return Boolean(oneOf(comparate, comparates));\n}\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n"],"sourceRoot":""}